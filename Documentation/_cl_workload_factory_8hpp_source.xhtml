<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/cl/ClWorkloadFactory.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_workload_factory_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClWorkloadFactory.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_workload_factory_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_runtime_8hpp.xhtml">armnn/IRuntime.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_optional_8hpp.xhtml">armnn/Optional.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_workload_factory_base_8hpp.xhtml">backendsCommon/WorkloadFactoryBase.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_base_memory_manager_8hpp.xhtml">aclCommon/BaseMemoryManager.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">// ARM Compute OpenCL workload factory.</span></div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_workload_factory.xhtml">   17</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">ClWorkloadFactory</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml">WorkloadFactoryBase</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#af0771a8e672812c03f064847a2072f7e">ClWorkloadFactory</a>(<span class="keyword">const</span> std::shared_ptr&lt;ClMemoryManager&gt;&amp; memoryManager);</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#ae2cd7e29596b68884bfaade25f8f0dc0">GetBackendId</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a9992ea7c353e8597fbd8ae426f4612ae">IsLayerSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>&amp; layer,</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;DataType&gt;</a> dataType,</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                                 std::string&amp; outReasonIfUnsupported);</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_workload_factory.xhtml#aed0a782f32856bde72bc10d9381dc11e">   28</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#aed0a782f32856bde72bc10d9381dc11e">SupportsSubTensors</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#abefb9df9d7a54cf2f82047ea350d0388">CreateSubTensorHandle</a>(<a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a>&amp; parent,</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                                                         <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> <span class="keyword">const</span>&amp; subTensorShape,</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                                                         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <span class="keyword">const</span>* subTensorOrigin) <span class="keyword">const override</span>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a7239477811c44d4398f0c2d291d9ea76">CreateTensorHandle</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; tensorInfo,</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                                                      <span class="keyword">const</span> <span class="keywordtype">bool</span> IsMemoryManaged = <span class="keyword">true</span>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a7239477811c44d4398f0c2d291d9ea76">CreateTensorHandle</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; tensorInfo,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                                                      <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> dataLayout,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                                      <span class="keyword">const</span> <span class="keywordtype">bool</span> IsMemoryManaged = <span class="keyword">true</span>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use CreateElementwiseUnary instead&quot;</span>)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a902422ffa1b0076458972c3be051e44d">CreateAbs</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_abs_queue_descriptor.xhtml">AbsQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#af5f7b0f6273c838b6b7d7de8447524f9">CreateActivation</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_activation_queue_descriptor.xhtml">ActivationQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a9da9a34fb99114f9d1fb705171a9a6ee">CreateAddition</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_addition_queue_descriptor.xhtml">AdditionQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a3fffcec3624e83671b4623e22ca623e5">CreateArgMinMax</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_arg_min_max_queue_descriptor.xhtml">ArgMinMaxQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a9cce78b879d26312fd515270afc1e66a">CreateBatchNormalization</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml">BatchNormalizationQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a455fcb54444e8286dbb3714310e4998b">CreateBatchToSpaceNd</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_to_space_nd_queue_descriptor.xhtml">BatchToSpaceNdQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a2d8ef97ae45e9a37d096f14b0a40136c">CreateComparison</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_comparison_queue_descriptor.xhtml">ComparisonQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a1f89ceb71ffc990170fe834cddb697fa">CreateConcat</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_concat_queue_descriptor.xhtml">ConcatQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#aa6ef3324f715ccf62d235aa54118d174">CreateConstant</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_constant_queue_descriptor.xhtml">ConstantQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#aefe6a68cb6d7ba517d7988195680c831">CreateConvertFp16ToFp32</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor.xhtml">ConvertFp16ToFp32QueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a33b291201b6716e295afb17c1eb0864e">CreateConvertFp32ToFp16</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor.xhtml">ConvertFp32ToFp16QueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a661b8b943d4a28ef6c8fd19bf223c61e">CreateConvolution2d</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml">Convolution2dQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#aca1333805c6665111154f10cc72c8234">CreateDebug</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml">DebugQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#af77fb45622aedb3f2ee36b412fea8735">CreateDepthToSpace</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depth_to_space_queue_descriptor.xhtml">DepthToSpaceQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a48ebe514c1ca3e41edccdd7682bf38ca">CreateDepthwiseConvolution2d</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml">DepthwiseConvolution2dQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#ab345edf481dd64a3ced4c0808d4ee844">CreateDequantize</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_dequantize_queue_descriptor.xhtml">DequantizeQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a3a2d9b8e1156605172ada1472e9460cd">CreateDetectionPostProcess</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml">DetectionPostProcessQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a11cb76f59b65109b8557d43b3cb1bc06">CreateDivision</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_division_queue_descriptor.xhtml">DivisionQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#ae9de0dcd1cd7bc40deb74c6926361401">CreateElementwiseUnary</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_elementwise_unary_queue_descriptor.xhtml">ElementwiseUnaryQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                                      <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#aa31f52c6b8c2092a41acb4890b910d2b">CreateEqual</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_equal_queue_descriptor.xhtml">EqualQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#aac4c7cd17cf3dc3a23fd4a21933c60cb">CreateFloor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_floor_queue_descriptor.xhtml">FloorQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a1fdd5dfd04433d84de96c71664cce5a9">CreateFullyConnected</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml">FullyConnectedQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a674b6d6de1db47959ad36831976ca3aa">CreateGather</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_gather_queue_descriptor.xhtml">GatherQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a0b7d11f98c9c17dd23a94666fe35f226">CreateGreater</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_greater_queue_descriptor.xhtml">GreaterQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a7b06edab4eef1822445e4201a1262635">CreateInput</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">InputQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a5c2f4f703e07407e70c30cc770d02d6b">CreateInstanceNormalization</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_instance_normalization_queue_descriptor.xhtml">InstanceNormalizationQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a1c511b4b70bc0b6cccbef2285ba292bc">CreateL2Normalization</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_l2_normalization_queue_descriptor.xhtml">L2NormalizationQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                                     <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a0dce100ea0fc5c44798736a4d879bd4d">CreateLstm</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml">LstmQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#ae2c6c12059f9cde37ff6bb8f682e9ceb">CreateMaximum</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_maximum_queue_descriptor.xhtml">MaximumQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#aba5032787777bf0074ce70e2c2423d49">CreateMean</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mean_queue_descriptor.xhtml">MeanQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; <a class="code" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3da4059b0251f66a18cb56f544728796875">Info</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a7cbe2f3dee6fad6a92a384455676fa63">CreateMemCopy</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">MemCopyQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a44d5ee8d1c0bd414bf1dfb60d94a62d8">CreateMemImport</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mem_import_queue_descriptor.xhtml">MemImportQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use CreateConcat instead&quot;</span>)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#ad4b8b34cc736f9d7778c6a2ab4fba25e">CreateMerger</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_concat_queue_descriptor.xhtml">MergerQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a39927b6e1faae50d9f804b435430bbf2">CreateMinimum</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_minimum_queue_descriptor.xhtml">MinimumQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a247e81465a607359f63756d13c417e70">CreateMultiplication</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">MultiplicationQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#aca46fe4cdc107d912d822a7618d4d2db">CreateNormalization</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_normalization_queue_descriptor.xhtml">NormalizationQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a5d463f116733f47ce2bab08e430d1ba2">CreateOutput</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">OutputQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a8fb2b01fe17e49e997fe59d86e4d5c9a">CreatePad</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pad_queue_descriptor.xhtml">PadQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a7b6ac4b2de1550174ad661fa76ec3d2d">CreatePermute</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_permute_queue_descriptor.xhtml">PermuteQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#ae22c3b8013c1ee7a5459016c0595d444">CreatePooling2d</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling2d_queue_descriptor.xhtml">Pooling2dQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a3f21c47a41cbbcfe7d74becd76766c80">CreatePreCompiled</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml">PreCompiledQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#ac4739f640f68405d2e5a4e4b716c3c59">CreatePrelu</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_prelu_queue_descriptor.xhtml">PreluQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a1782959d8ba043acbc72d6a06c00a7f4">CreateQuantize</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantize_queue_descriptor.xhtml">QuantizeQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a166569e6ac31c22484612c77690c3eff">CreateQuantizedLstm</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">QuantizedLstmQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a85d2e898648c795f462a15f5c03a67ac">CreateReshape</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reshape_queue_descriptor.xhtml">ReshapeQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a3f15b1b391dd86de376ce541eadca3fa">CreateResize</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_resize_queue_descriptor.xhtml">ResizeQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use CreateResize instead&quot;</span>)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#ae0895b3c5782c6094ce839e07cc17d58">CreateResizeBilinear</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_resize_bilinear_queue_descriptor.xhtml">ResizeBilinearQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use CreateElementwiseUnary instead&quot;</span>)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#afddaf1bce21f092a34d877cffac411a3">CreateRsqrt</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_rsqrt_queue_descriptor.xhtml">RsqrtQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#abda2c9b7c5fe4ca092d2224ba9679a06">CreateSlice</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_slice_queue_descriptor.xhtml">SliceQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a457c416483289cc7c8a8511a67d95816">CreateSoftmax</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_queue_descriptor.xhtml">SoftmaxQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a1d1feb2b5c6a4c6701a3dee01e65bee4">CreateSpaceToBatchNd</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_batch_nd_queue_descriptor.xhtml">SpaceToBatchNdQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a2318d942f9615dff92fe75688bdd8c48">CreateSpaceToDepth</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_queue_descriptor.xhtml">SpaceToDepthQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#aa98def0f9b9ff714a013f8083bbadf82">CreateSplitter</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_splitter_queue_descriptor.xhtml">SplitterQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a4d5371f67eabb04a38c69e97e67f1d35">CreateStack</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stack_queue_descriptor.xhtml">StackQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a5c46866e2a0d83e350ff70c12d9613bf">CreateStridedSlice</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_strided_slice_queue_descriptor.xhtml">StridedSliceQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a26563dd3de8f08475d30c8c8389f1ddc">CreateSubtraction</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">SubtractionQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#ac302ae63e103b22d6ce4fef0f5513899">CreateTranspose</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_queue_descriptor.xhtml">TransposeQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml#a29e02d375261a32c39635d6833a49333">CreateTransposeConvolution2d</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml">TransposeConvolution2dQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> <a class="code" href="namespacearmnn.xhtml#abaedcfd0ae08790c03bfe8ba7586dd84">FloatWorkload</a>, <span class="keyword">typename</span> <a class="code" href="namespacearmnn.xhtml#ad4d53881107428c301d43b5aad16bfe0">Uint8Workload</a>, <span class="keyword">typename</span> QueueDescriptorType, <span class="keyword">typename</span>... Args&gt;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keyword">static</span> std::unique_ptr&lt;IWorkload&gt; MakeWorkload(<span class="keyword">const</span> QueueDescriptorType&amp; descriptor,</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info,</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                                                   Args&amp;&amp;... args);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Workload, <span class="keyword">typename</span> QueueDescriptorType, <span class="keyword">typename</span>... Args&gt;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keyword">static</span> std::unique_ptr&lt;IWorkload&gt; MakeWorkload(<span class="keyword">const</span> QueueDescriptorType&amp; descriptor,</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info,</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                                   Args&amp;&amp;... args);</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keyword">mutable</span> std::shared_ptr&lt;ClMemoryManager&gt; m_MemoryManager;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;};</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="structarmnn_1_1_multiplication_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">armnn::MultiplicationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00222">WorkloadData.hpp:222</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8hpp_source.xhtml#l00017">ClWorkloadFactory.hpp:17</a></div></div>
<div class="ttc" id="structarmnn_1_1_instance_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_instance_normalization_queue_descriptor.xhtml">armnn::InstanceNormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00311">WorkloadData.hpp:311</a></div></div>
<div class="ttc" id="structarmnn_1_1_permute_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_permute_queue_descriptor.xhtml">armnn::PermuteQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00156">WorkloadData.hpp:156</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a3a2d9b8e1156605172ada1472e9460cd"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a3a2d9b8e1156605172ada1472e9460cd">armnn::ClWorkloadFactory::CreateDetectionPostProcess</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateDetectionPostProcess(const DetectionPostProcessQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00244">ClWorkloadFactory.cpp:244</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_abefb9df9d7a54cf2f82047ea350d0388"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#abefb9df9d7a54cf2f82047ea350d0388">armnn::ClWorkloadFactory::CreateSubTensorHandle</a></div><div class="ttdeci">std::unique_ptr&lt; ITensorHandle &gt; CreateSubTensorHandle(ITensorHandle &amp;parent, TensorShape const &amp;subTensorShape, unsigned int const *subTensorOrigin) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00106">ClWorkloadFactory.cpp:106</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a2d8ef97ae45e9a37d096f14b0a40136c"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a2d8ef97ae45e9a37d096f14b0a40136c">armnn::ClWorkloadFactory::CreateComparison</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateComparison(const ComparisonQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00173">ClWorkloadFactory.cpp:173</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a674b6d6de1db47959ad36831976ca3aa"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a674b6d6de1db47959ad36831976ca3aa">armnn::ClWorkloadFactory::CreateGather</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateGather(const GatherQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00302">ClWorkloadFactory.cpp:302</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_af0771a8e672812c03f064847a2072f7e"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#af0771a8e672812c03f064847a2072f7e">armnn::ClWorkloadFactory::ClWorkloadFactory</a></div><div class="ttdeci">ClWorkloadFactory(const std::shared_ptr&lt; ClMemoryManager &gt; &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00080">ClWorkloadFactory.cpp:80</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantize_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantize_queue_descriptor.xhtml">armnn::QuantizeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00257">WorkloadData.hpp:257</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_aca1333805c6665111154f10cc72c8234"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#aca1333805c6665111154f10cc72c8234">armnn::ClWorkloadFactory::CreateDebug</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateDebug(const DebugQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00219">ClWorkloadFactory.cpp:219</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00049">Types.hpp:49</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a85d2e898648c795f462a15f5c03a67ac"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a85d2e898648c795f462a15f5c03a67ac">armnn::ClWorkloadFactory::CreateReshape</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateReshape(const ReshapeQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00450">ClWorkloadFactory.cpp:450</a></div></div>
<div class="ttc" id="structarmnn_1_1_maximum_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_maximum_queue_descriptor.xhtml">armnn::MaximumQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00240">WorkloadData.hpp:240</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml">armnn::DetectionPostProcessQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00197">WorkloadData.hpp:197</a></div></div>
<div class="ttc" id="structarmnn_1_1_gather_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_gather_queue_descriptor.xhtml">armnn::GatherQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00457">WorkloadData.hpp:457</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="structarmnn_1_1_splitter_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_splitter_queue_descriptor.xhtml">armnn::SplitterQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00083">WorkloadData.hpp:83</a></div></div>
<div class="ttc" id="structarmnn_1_1_constant_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_constant_queue_descriptor.xhtml">armnn::ConstantQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00326">WorkloadData.hpp:326</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a33b291201b6716e295afb17c1eb0864e"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a33b291201b6716e295afb17c1eb0864e">armnn::ClWorkloadFactory::CreateConvertFp32ToFp16</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateConvertFp32ToFp16(const ConvertFp32ToFp16QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00206">ClWorkloadFactory.cpp:206</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">armnn::QuantizedLstmQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00512">WorkloadData.hpp:512</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a1d1feb2b5c6a4c6701a3dee01e65bee4"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a1d1feb2b5c6a4c6701a3dee01e65bee4">armnn::ClWorkloadFactory::CreateSpaceToBatchNd</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateSpaceToBatchNd(const SpaceToBatchNdQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00501">ClWorkloadFactory.cpp:501</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00053">Tensor.hpp:53</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a11cb76f59b65109b8557d43b3cb1bc06"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a11cb76f59b65109b8557d43b3cb1bc06">armnn::ClWorkloadFactory::CreateDivision</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateDivision(const DivisionQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00251">ClWorkloadFactory.cpp:251</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a5c46866e2a0d83e350ff70c12d9613bf"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a5c46866e2a0d83e350ff70c12d9613bf">armnn::ClWorkloadFactory::CreateStridedSlice</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateStridedSlice(const StridedSliceQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00525">ClWorkloadFactory.cpp:525</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_aefe6a68cb6d7ba517d7988195680c831"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#aefe6a68cb6d7ba517d7988195680c831">armnn::ClWorkloadFactory::CreateConvertFp16ToFp32</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateConvertFp16ToFp32(const ConvertFp16ToFp32QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00199">ClWorkloadFactory.cpp:199</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a1782959d8ba043acbc72d6a06c00a7f4"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a1782959d8ba043acbc72d6a06c00a7f4">armnn::ClWorkloadFactory::CreateQuantize</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateQuantize(const QuantizeQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00438">ClWorkloadFactory.cpp:438</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a7b06edab4eef1822445e4201a1262635"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a7b06edab4eef1822445e4201a1262635">armnn::ClWorkloadFactory::CreateInput</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateInput(const InputQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00319">ClWorkloadFactory.cpp:319</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a4d5371f67eabb04a38c69e97e67f1d35"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a4d5371f67eabb04a38c69e97e67f1d35">armnn::ClWorkloadFactory::CreateStack</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateStack(const StackQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00519">ClWorkloadFactory.cpp:519</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a1fdd5dfd04433d84de96c71664cce5a9"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a1fdd5dfd04433d84de96c71664cce5a9">armnn::ClWorkloadFactory::CreateFullyConnected</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateFullyConnected(const FullyConnectedQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00296">ClWorkloadFactory.cpp:296</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_abda2c9b7c5fe4ca092d2224ba9679a06"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#abda2c9b7c5fe4ca092d2224ba9679a06">armnn::ClWorkloadFactory::CreateSlice</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateSlice(const SliceQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00488">ClWorkloadFactory.cpp:488</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a7239477811c44d4398f0c2d291d9ea76"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a7239477811c44d4398f0c2d291d9ea76">armnn::ClWorkloadFactory::CreateTensorHandle</a></div><div class="ttdeci">std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo, const bool IsMemoryManaged=true) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00085">ClWorkloadFactory.cpp:85</a></div></div>
<div class="ttc" id="_i_runtime_8hpp_xhtml"><div class="ttname"><a href="_i_runtime_8hpp.xhtml">IRuntime.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a166569e6ac31c22484612c77690c3eff"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a166569e6ac31c22484612c77690c3eff">armnn::ClWorkloadFactory::CreateQuantizedLstm</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateQuantizedLstm(const QuantizedLstmQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00444">ClWorkloadFactory.cpp:444</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_ae2cd7e29596b68884bfaade25f8f0dc0"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#ae2cd7e29596b68884bfaade25f8f0dc0">armnn::ClWorkloadFactory::GetBackendId</a></div><div class="ttdeci">const BackendId &amp; GetBackendId() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00045">ClWorkloadFactory.cpp:45</a></div></div>
<div class="ttc" id="structarmnn_1_1_stack_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stack_queue_descriptor.xhtml">armnn::StackQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00124">WorkloadData.hpp:124</a></div></div>
<div class="ttc" id="structarmnn_1_1_rsqrt_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_rsqrt_queue_descriptor.xhtml">armnn::RsqrtQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00452">WorkloadData.hpp:452</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_aed0a782f32856bde72bc10d9381dc11e"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#aed0a782f32856bde72bc10d9381dc11e">armnn::ClWorkloadFactory::SupportsSubTensors</a></div><div class="ttdeci">bool SupportsSubTensors() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8hpp_source.xhtml#l00028">ClWorkloadFactory.hpp:28</a></div></div>
<div class="ttc" id="structarmnn_1_1_addition_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_addition_queue_descriptor.xhtml">armnn::AdditionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00216">WorkloadData.hpp:216</a></div></div>
<div class="ttc" id="structarmnn_1_1_minimum_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_minimum_queue_descriptor.xhtml">armnn::MinimumQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00431">WorkloadData.hpp:431</a></div></div>
<div class="ttc" id="_base_memory_manager_8hpp_xhtml"><div class="ttname"><a href="_base_memory_manager_8hpp.xhtml">BaseMemoryManager.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2020 ARM Limited. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00025">00_introduction.dox:25</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml">armnn::FullyConnectedQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00141">WorkloadData.hpp:141</a></div></div>
<div class="ttc" id="structarmnn_1_1_prelu_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_prelu_queue_descriptor.xhtml">armnn::PreluQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00489">WorkloadData.hpp:489</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_abaedcfd0ae08790c03bfe8ba7586dd84"><div class="ttname"><a href="namespacearmnn.xhtml#abaedcfd0ae08790c03bfe8ba7586dd84">armnn::FloatWorkload</a></div><div class="ttdeci">TypedWorkload&lt; QueueDescriptor, armnn::DataType::Float16, armnn::DataType::Float32 &gt; FloatWorkload</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8hpp_source.xhtml#l00155">Workload.hpp:155</a></div></div>
<div class="ttc" id="structarmnn_1_1_equal_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_equal_queue_descriptor.xhtml">armnn::EqualQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00263">WorkloadData.hpp:263</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_to_space_nd_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_to_space_nd_queue_descriptor.xhtml">armnn::BatchToSpaceNdQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00420">WorkloadData.hpp:420</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_queue_descriptor.xhtml">armnn::SoftmaxQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00077">WorkloadData.hpp:77</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a902422ffa1b0076458972c3be051e44d"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a902422ffa1b0076458972c3be051e44d">armnn::ClWorkloadFactory::CreateAbs</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateAbs(const AbsQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00131">ClWorkloadFactory.cpp:131</a></div></div>
<div class="ttc" id="structarmnn_1_1_division_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_division_queue_descriptor.xhtml">armnn::DivisionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00228">WorkloadData.hpp:228</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a0dce100ea0fc5c44798736a4d879bd4d"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a0dce100ea0fc5c44798736a4d879bd4d">armnn::ClWorkloadFactory::CreateLstm</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateLstm(const LstmQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00338">ClWorkloadFactory.cpp:338</a></div></div>
<div class="ttc" id="structarmnn_1_1_subtraction_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">armnn::SubtractionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00234">WorkloadData.hpp:234</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00252">WorkloadData.hpp:252</a></div></div>
<div class="ttc" id="structarmnn_1_1_concat_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_concat_queue_descriptor.xhtml">armnn::ConcatQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00102">WorkloadData.hpp:102</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a93a3ba385cad27c4774e5fe64c025d3da4059b0251f66a18cb56f544728796875"><div class="ttname"><a href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3da4059b0251f66a18cb56f544728796875">armnn::LogSeverity::Info</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_depth_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_depth_queue_descriptor.xhtml">armnn::SpaceToDepthQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00348">WorkloadData.hpp:348</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_aba5032787777bf0074ce70e2c2423d49"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#aba5032787777bf0074ce70e2c2423d49">armnn::ClWorkloadFactory::CreateMean</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMean(const MeanQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;Info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00350">ClWorkloadFactory.cpp:350</a></div></div>
<div class="ttc" id="structarmnn_1_1_abs_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_abs_queue_descriptor.xhtml">armnn::AbsQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00549">WorkloadData.hpp:549</a></div></div>
<div class="ttc" id="structarmnn_1_1_resize_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_queue_descriptor.xhtml">armnn::ResizeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00292">WorkloadData.hpp:292</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a39927b6e1faae50d9f804b435430bbf2"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a39927b6e1faae50d9f804b435430bbf2">armnn::ClWorkloadFactory::CreateMinimum</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMinimum(const MinimumQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00384">ClWorkloadFactory.cpp:384</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a29e02d375261a32c39635d6833a49333"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a29e02d375261a32c39635d6833a49333">armnn::ClWorkloadFactory::CreateTransposeConvolution2d</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateTransposeConvolution2d(const TransposeConvolution2dQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00543">ClWorkloadFactory.cpp:543</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_batch_nd_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_batch_nd_queue_descriptor.xhtml">armnn::SpaceToBatchNdQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00343">WorkloadData.hpp:343</a></div></div>
<div class="ttc" id="structarmnn_1_1_floor_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_floor_queue_descriptor.xhtml">armnn::FloorQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00353">WorkloadData.hpp:353</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a9992ea7c353e8597fbd8ae426f4612ae"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a9992ea7c353e8597fbd8ae426f4612ae">armnn::ClWorkloadFactory::IsLayerSupported</a></div><div class="ttdeci">static bool IsLayerSupported(const Layer &amp;layer, Optional&lt; DataType &gt; dataType, std::string &amp;outReasonIfUnsupported)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00038">ClWorkloadFactory.cpp:38</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a48ebe514c1ca3e41edccdd7682bf38ca"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a48ebe514c1ca3e41edccdd7682bf38ca">armnn::ClWorkloadFactory::CreateDepthwiseConvolution2d</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateDepthwiseConvolution2d(const DepthwiseConvolution2dQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00231">ClWorkloadFactory.cpp:231</a></div></div>
<div class="ttc" id="structarmnn_1_1_resize_bilinear_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_bilinear_queue_descriptor.xhtml">armnn::ResizeBilinearQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00287">WorkloadData.hpp:287</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_af77fb45622aedb3f2ee36b412fea8735"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#af77fb45622aedb3f2ee36b412fea8735">armnn::ClWorkloadFactory::CreateDepthToSpace</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateDepthToSpace(const DepthToSpaceQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00225">ClWorkloadFactory.cpp:225</a></div></div>
<div class="ttc" id="_optional_8hpp_xhtml"><div class="ttname"><a href="_optional_8hpp.xhtml">Optional.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml">armnn::LstmQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00358">WorkloadData.hpp:358</a></div></div>
<div class="ttc" id="structarmnn_1_1_greater_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_greater_queue_descriptor.xhtml">armnn::GreaterQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00436">WorkloadData.hpp:436</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml">armnn::ITensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml#l00015">ITensorHandle.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a3f15b1b391dd86de376ce541eadca3fa"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a3f15b1b391dd86de376ce541eadca3fa">armnn::ClWorkloadFactory::CreateResize</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateResize(const ResizeQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00456">ClWorkloadFactory.cpp:456</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a7b6ac4b2de1550174ad661fa76ec3d2d"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a7b6ac4b2de1550174ad661fa76ec3d2d">armnn::ClWorkloadFactory::CreatePermute</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreatePermute(const PermuteQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00414">ClWorkloadFactory.cpp:414</a></div></div>
<div class="ttc" id="structarmnn_1_1_comparison_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_comparison_queue_descriptor.xhtml">armnn::ComparisonQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00564">WorkloadData.hpp:564</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a7cbe2f3dee6fad6a92a384455676fa63"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a7cbe2f3dee6fad6a92a384455676fa63">armnn::ClWorkloadFactory::CreateMemCopy</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMemCopy(const MemCopyQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00356">ClWorkloadFactory.cpp:356</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a455fcb54444e8286dbb3714310e4998b"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a455fcb54444e8286dbb3714310e4998b">armnn::ClWorkloadFactory::CreateBatchToSpaceNd</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateBatchToSpaceNd(const BatchToSpaceNdQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00167">ClWorkloadFactory.cpp:167</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a457c416483289cc7c8a8511a67d95816"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a457c416483289cc7c8a8511a67d95816">armnn::ClWorkloadFactory::CreateSoftmax</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateSoftmax(const SoftmaxQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00494">ClWorkloadFactory.cpp:494</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_ae2c6c12059f9cde37ff6bb8f682e9ceb"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#ae2c6c12059f9cde37ff6bb8f682e9ceb">armnn::ClWorkloadFactory::CreateMaximum</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMaximum(const MaximumQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00344">ClWorkloadFactory.cpp:344</a></div></div>
<div class="ttc" id="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor.xhtml">armnn::ConvertFp16ToFp32QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00410">WorkloadData.hpp:410</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_aa31f52c6b8c2092a41acb4890b910d2b"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#aa31f52c6b8c2092a41acb4890b910d2b">armnn::ClWorkloadFactory::CreateEqual</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateEqual(const EqualQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00279">ClWorkloadFactory.cpp:279</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_ae9de0dcd1cd7bc40deb74c6926361401"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#ae9de0dcd1cd7bc40deb74c6926361401">armnn::ClWorkloadFactory::CreateElementwiseUnary</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateElementwiseUnary(const ElementwiseUnaryQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00257">ClWorkloadFactory.cpp:257</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_aac4c7cd17cf3dc3a23fd4a21933c60cb"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#aac4c7cd17cf3dc3a23fd4a21933c60cb">armnn::ClWorkloadFactory::CreateFloor</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateFloor(const FloorQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00290">ClWorkloadFactory.cpp:290</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a3f21c47a41cbbcfe7d74becd76766c80"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a3f21c47a41cbbcfe7d74becd76766c80">armnn::ClWorkloadFactory::CreatePreCompiled</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreatePreCompiled(const PreCompiledQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00426">ClWorkloadFactory.cpp:426</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a26563dd3de8f08475d30c8c8389f1ddc"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a26563dd3de8f08475d30c8c8389f1ddc">armnn::ClWorkloadFactory::CreateSubtraction</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateSubtraction(const SubtractionQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00531">ClWorkloadFactory.cpp:531</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a247e81465a607359f63756d13c417e70"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a247e81465a607359f63756d13c417e70">armnn::ClWorkloadFactory::CreateMultiplication</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMultiplication(const MultiplicationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00390">ClWorkloadFactory.cpp:390</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a9da9a34fb99114f9d1fb705171a9a6ee"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a9da9a34fb99114f9d1fb705171a9a6ee">armnn::ClWorkloadFactory::CreateAddition</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateAddition(const AdditionQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00148">ClWorkloadFactory.cpp:148</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_ae22c3b8013c1ee7a5459016c0595d444"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#ae22c3b8013c1ee7a5459016c0595d444">armnn::ClWorkloadFactory::CreatePooling2d</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreatePooling2d(const Pooling2dQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00420">ClWorkloadFactory.cpp:420</a></div></div>
<div class="ttc" id="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor.xhtml">armnn::ConvertFp32ToFp16QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00415">WorkloadData.hpp:415</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_ad4b8b34cc736f9d7778c6a2ab4fba25e"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#ad4b8b34cc736f9d7778c6a2ab4fba25e">armnn::ClWorkloadFactory::CreateMerger</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMerger(const MergerQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00378">ClWorkloadFactory.cpp:378</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml">armnn::TransposeConvolution2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00494">WorkloadData.hpp:494</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml">armnn::Convolution2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00168">WorkloadData.hpp:168</a></div></div>
<div class="ttc" id="structarmnn_1_1_mem_copy_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">armnn::MemCopyQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00058">WorkloadData.hpp:58</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad4d53881107428c301d43b5aad16bfe0"><div class="ttname"><a href="namespacearmnn.xhtml#ad4d53881107428c301d43b5aad16bfe0">armnn::Uint8Workload</a></div><div class="ttdeci">TypedWorkload&lt; QueueDescriptor, armnn::DataType::QAsymmU8 &gt; Uint8Workload</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8hpp_source.xhtml#l00161">Workload.hpp:161</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_afddaf1bce21f092a34d877cffac411a3"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#afddaf1bce21f092a34d877cffac411a3">armnn::ClWorkloadFactory::CreateRsqrt</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateRsqrt(const RsqrtQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00477">ClWorkloadFactory.cpp:477</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_aa98def0f9b9ff714a013f8083bbadf82"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#aa98def0f9b9ff714a013f8083bbadf82">armnn::ClWorkloadFactory::CreateSplitter</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateSplitter(const SplitterQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00513">ClWorkloadFactory.cpp:513</a></div></div>
<div class="ttc" id="structarmnn_1_1_slice_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_slice_queue_descriptor.xhtml">armnn::SliceQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00554">WorkloadData.hpp:554</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a0b7d11f98c9c17dd23a94666fe35f226"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a0b7d11f98c9c17dd23a94666fe35f226">armnn::ClWorkloadFactory::CreateGreater</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateGreater(const GreaterQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00308">ClWorkloadFactory.cpp:308</a></div></div>
<div class="ttc" id="structarmnn_1_1_depth_to_space_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depth_to_space_queue_descriptor.xhtml">armnn::DepthToSpaceQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00559">WorkloadData.hpp:559</a></div></div>
<div class="ttc" id="structarmnn_1_1_l2_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_l2_normalization_queue_descriptor.xhtml">armnn::L2NormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00316">WorkloadData.hpp:316</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a1c511b4b70bc0b6cccbef2285ba292bc"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a1c511b4b70bc0b6cccbef2285ba292bc">armnn::ClWorkloadFactory::CreateL2Normalization</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateL2Normalization(const L2NormalizationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00332">ClWorkloadFactory.cpp:332</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_af5f7b0f6273c838b6b7d7de8447524f9"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#af5f7b0f6273c838b6b7d7de8447524f9">armnn::ClWorkloadFactory::CreateActivation</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateActivation(const ActivationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00142">ClWorkloadFactory.cpp:142</a></div></div>
<div class="ttc" id="_workload_factory_base_8hpp_xhtml"><div class="ttname"><a href="_workload_factory_base_8hpp.xhtml">WorkloadFactoryBase.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_queue_descriptor.xhtml">armnn::TransposeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00507">WorkloadData.hpp:507</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a8fb2b01fe17e49e997fe59d86e4d5c9a"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a8fb2b01fe17e49e997fe59d86e4d5c9a">armnn::ClWorkloadFactory::CreatePad</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreatePad(const PadQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00408">ClWorkloadFactory.cpp:408</a></div></div>
<div class="ttc" id="structarmnn_1_1_strided_slice_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_strided_slice_queue_descriptor.xhtml">armnn::StridedSliceQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00425">WorkloadData.hpp:425</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="structarmnn_1_1_arg_min_max_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_arg_min_max_queue_descriptor.xhtml">armnn::ArgMinMaxQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00135">WorkloadData.hpp:135</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml">armnn::BatchNormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00269">WorkloadData.hpp:269</a></div></div>
<div class="ttc" id="structarmnn_1_1_mem_import_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mem_import_queue_descriptor.xhtml">armnn::MemImportQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00066">WorkloadData.hpp:66</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a2318d942f9615dff92fe75688bdd8c48"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a2318d942f9615dff92fe75688bdd8c48">armnn::ClWorkloadFactory::CreateSpaceToDepth</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateSpaceToDepth(const SpaceToDepthQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00507">ClWorkloadFactory.cpp:507</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_aca46fe4cdc107d912d822a7618d4d2db"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#aca46fe4cdc107d912d822a7618d4d2db">armnn::ClWorkloadFactory::CreateNormalization</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateNormalization(const NormalizationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00396">ClWorkloadFactory.cpp:396</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a5c2f4f703e07407e70c30cc770d02d6b"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a5c2f4f703e07407e70c30cc770d02d6b">armnn::ClWorkloadFactory::CreateInstanceNormalization</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateInstanceNormalization(const InstanceNormalizationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00325">ClWorkloadFactory.cpp:325</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_ac302ae63e103b22d6ce4fef0f5513899"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#ac302ae63e103b22d6ce4fef0f5513899">armnn::ClWorkloadFactory::CreateTranspose</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateTranspose(const TransposeQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00537">ClWorkloadFactory.cpp:537</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about inputs and outputs to a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_a76fb13a018f8e01087a7ae0eb23509e1"><div class="ttname"><a href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a></div><div class="ttdeci">#define ARMNN_DEPRECATED_MSG(message)</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00043">Deprecated.hpp:43</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a9cce78b879d26312fd515270afc1e66a"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a9cce78b879d26312fd515270afc1e66a">armnn::ClWorkloadFactory::CreateBatchNormalization</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateBatchNormalization(const BatchNormalizationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00160">ClWorkloadFactory.cpp:160</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a1f89ceb71ffc990170fe834cddb697fa"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a1f89ceb71ffc990170fe834cddb697fa">armnn::ClWorkloadFactory::CreateConcat</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateConcat(const ConcatQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00187">ClWorkloadFactory.cpp:187</a></div></div>
<div class="ttc" id="structarmnn_1_1_pre_compiled_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml">armnn::PreCompiledQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00462">WorkloadData.hpp:462</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml">armnn::WorkloadFactoryBase</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00013">WorkloadFactoryBase.hpp:13</a></div></div>
<div class="ttc" id="structarmnn_1_1_dequantize_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_dequantize_queue_descriptor.xhtml">armnn::DequantizeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00474">WorkloadData.hpp:474</a></div></div>
<div class="ttc" id="structarmnn_1_1_pooling2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_queue_descriptor.xhtml">armnn::Pooling2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00162">WorkloadData.hpp:162</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a44d5ee8d1c0bd414bf1dfb60d94a62d8"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a44d5ee8d1c0bd414bf1dfb60d94a62d8">armnn::ClWorkloadFactory::CreateMemImport</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMemImport(const MemImportQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00367">ClWorkloadFactory.cpp:367</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_ae0895b3c5782c6094ce839e07cc17d58"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#ae0895b3c5782c6094ce839e07cc17d58">armnn::ClWorkloadFactory::CreateResizeBilinear</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateResizeBilinear(const ResizeBilinearQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00462">ClWorkloadFactory.cpp:462</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_ac4739f640f68405d2e5a4e4b716c3c59"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#ac4739f640f68405d2e5a4e4b716c3c59">armnn::ClWorkloadFactory::CreatePrelu</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreatePrelu(const PreluQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00432">ClWorkloadFactory.cpp:432</a></div></div>
<div class="ttc" id="structarmnn_1_1_mean_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mean_queue_descriptor.xhtml">armnn::MeanQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00246">WorkloadData.hpp:246</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_ab345edf481dd64a3ced4c0808d4ee844"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#ab345edf481dd64a3ced4c0808d4ee844">armnn::ClWorkloadFactory::CreateDequantize</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateDequantize(const DequantizeQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00238">ClWorkloadFactory.cpp:238</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_aa6ef3324f715ccf62d235aa54118d174"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#aa6ef3324f715ccf62d235aa54118d174">armnn::ClWorkloadFactory::CreateConstant</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateConstant(const ConstantQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00193">ClWorkloadFactory.cpp:193</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a661b8b943d4a28ef6c8fd19bf223c61e"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a661b8b943d4a28ef6c8fd19bf223c61e">armnn::ClWorkloadFactory::CreateConvolution2d</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateConvolution2d(const Convolution2dQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00213">ClWorkloadFactory.cpp:213</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a3fffcec3624e83671b4623e22ca623e5"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a3fffcec3624e83671b4623e22ca623e5">armnn::ClWorkloadFactory::CreateArgMinMax</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateArgMinMax(const ArgMinMaxQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00154">ClWorkloadFactory.cpp:154</a></div></div>
<div class="ttc" id="structarmnn_1_1_reshape_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reshape_queue_descriptor.xhtml">armnn::ReshapeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00338">WorkloadData.hpp:338</a></div></div>
<div class="ttc" id="structarmnn_1_1_debug_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_debug_queue_descriptor.xhtml">armnn::DebugQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00441">WorkloadData.hpp:441</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_unary_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_queue_descriptor.xhtml">armnn::ElementwiseUnaryQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00569">WorkloadData.hpp:569</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00209">Layer.hpp:209</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml">armnn::DepthwiseConvolution2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00183">WorkloadData.hpp:183</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_queue_descriptor.xhtml">armnn::ActivationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00130">WorkloadData.hpp:130</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml_a5d463f116733f47ce2bab08e430d1ba2"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml#a5d463f116733f47ce2bab08e430d1ba2">armnn::ClWorkloadFactory::CreateOutput</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateOutput(const OutputQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8cpp_source.xhtml#l00402">ClWorkloadFactory.cpp:402</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
<div class="ttc" id="structarmnn_1_1_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_queue_descriptor.xhtml">armnn::NormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00210">WorkloadData.hpp:210</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_1ad86c6d39ab715a831555571b9e98a5.xhtml">cl</a></li><li class="navelem"><a class="el" href="_cl_workload_factory_8hpp.xhtml">ClWorkloadFactory.hpp</a></li>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:11 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
