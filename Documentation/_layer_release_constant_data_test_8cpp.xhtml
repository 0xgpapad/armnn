<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/LayerReleaseConstantDataTest.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_layer_release_constant_data_test_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">LayerReleaseConstantDataTest.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_common_test_utils_8hpp_source.xhtml">CommonTestUtils.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="_graph_8hpp_source.xhtml">Graph.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cpu_tensor_handle_8hpp_source.xhtml">backendsCommon/CpuTensorHandle.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_workload_data_8hpp_source.xhtml">backendsCommon/WorkloadData.hpp</a>&gt;</code><br />
<code>#include &lt;boost/cast.hpp&gt;</code><br />
<code>#include &lt;boost/test/unit_test.hpp&gt;</code><br />
<code>#include &lt;utility&gt;</code><br />
</div>
<p><a href="_layer_release_constant_data_test_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aee3821ff85a903d278148142db9e7f69"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_layer_release_constant_data_test_8cpp.xhtml#aee3821ff85a903d278148142db9e7f69">BOOST_AUTO_TEST_CASE</a> (ReleaseBatchNormalizationLayerConstantDataTest)</td></tr>
<tr class="separator:aee3821ff85a903d278148142db9e7f69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2733618103ee4525089ef9476ff20892"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_layer_release_constant_data_test_8cpp.xhtml#a2733618103ee4525089ef9476ff20892">BOOST_AUTO_TEST_CASE</a> (ReleaseConvolution2dLayerConstantDataTest)</td></tr>
<tr class="separator:a2733618103ee4525089ef9476ff20892"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae587bfb42916b2feb32eada9b385e0ea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_layer_release_constant_data_test_8cpp.xhtml#ae587bfb42916b2feb32eada9b385e0ea">BOOST_AUTO_TEST_CASE</a> (ReleaseDepthwiseConvolution2dLayerConstantDataTest)</td></tr>
<tr class="separator:ae587bfb42916b2feb32eada9b385e0ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4086f4540f611d58a412ab43dd794535"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_layer_release_constant_data_test_8cpp.xhtml#a4086f4540f611d58a412ab43dd794535">BOOST_AUTO_TEST_CASE</a> (ReleaseFullyConnectedLayerConstantDataTest)</td></tr>
<tr class="separator:a4086f4540f611d58a412ab43dd794535"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="aee3821ff85a903d278148142db9e7f69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee3821ff85a903d278148142db9e7f69">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">ReleaseBatchNormalizationLayerConstantDataTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_release_constant_data_test_8cpp_source.xhtml#l00029">29</a> of file <a class="el" href="_layer_release_constant_data_test_8cpp_source.xhtml">LayerReleaseConstantDataTest.cpp</a>.</p>

<p class="reference">References <a class="el" href="_graph_8hpp_source.xhtml#l00397">Graph::AddLayer()</a>, <a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK()</a>, <a class="el" href="_test_utils_8cpp_source.xhtml#l00012">Connect()</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_batch_normalization_layer_8hpp_source.xhtml#l00023">BatchNormalizationLayer::m_Beta</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00623">BatchNormalizationDescriptor::m_Eps</a>, <a class="el" href="_batch_normalization_layer_8hpp_source.xhtml#l00025">BatchNormalizationLayer::m_Gamma</a>, <a class="el" href="_batch_normalization_layer_8hpp_source.xhtml#l00019">BatchNormalizationLayer::m_Mean</a>, <a class="el" href="_batch_normalization_layer_8hpp_source.xhtml#l00021">BatchNormalizationLayer::m_Variance</a>, and <a class="el" href="_layer_8cpp_source.xhtml#l00264">Layer::ReleaseConstantData()</a>.</p>
<div class="fragment"><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a> graph;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="comment">// create the layer we&#39;re testing</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a> layerDesc;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    layerDesc.<a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml#a11c821c7524251004a72ed13c510853c">m_Eps</a> = 0.05f;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a>* <span class="keyword">const</span> layer = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a>&gt;(layerDesc, <span class="stringliteral">&quot;layer&quot;</span>);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> weightInfo({3}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">m_Mean</a>     = std::make_unique&lt;ScopedCpuTensorHandle&gt;(weightInfo);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aa5685ee78433980cf535d745d1fcab55">m_Variance</a> = std::make_unique&lt;ScopedCpuTensorHandle&gt;(weightInfo);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a77c30d191e7ee8917e2c0ff5e97f5640">m_Beta</a>     = std::make_unique&lt;ScopedCpuTensorHandle&gt;(weightInfo);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aec22bddf14a932c4a72796c30669066b">m_Gamma</a>    = std::make_unique&lt;ScopedCpuTensorHandle&gt;(weightInfo);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">m_Mean</a>-&gt;Allocate();</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aa5685ee78433980cf535d745d1fcab55">m_Variance</a>-&gt;Allocate();</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a77c30d191e7ee8917e2c0ff5e97f5640">m_Beta</a>-&gt;Allocate();</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aec22bddf14a932c4a72796c30669066b">m_Gamma</a>-&gt;Allocate();</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="comment">// create extra layers</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>* <span class="keyword">const</span> input = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_input_layer.xhtml">InputLayer</a>&gt;(0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>* <span class="keyword">const</span> output = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_output_layer.xhtml">OutputLayer</a>&gt;(0, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">// connect up</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> tensorInfo({2, 3, 1, 1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="_test_utils_8cpp.xhtml#a0b295acb179f15eb3fb862b32008f782">Connect</a>(input, layer, tensorInfo);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="_test_utils_8cpp.xhtml#a0b295acb179f15eb3fb862b32008f782">Connect</a>(layer, output, tensorInfo);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="comment">// check the constants that they are not NULL</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">m_Mean</a> != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aa5685ee78433980cf535d745d1fcab55">m_Variance</a> != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a77c30d191e7ee8917e2c0ff5e97f5640">m_Beta</a> != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aec22bddf14a932c4a72796c30669066b">m_Gamma</a> != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment">// free up the constants..</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a339bef86bc340c3d1393ed83950fe8af">ReleaseConstantData</a>();</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="comment">// check the constants that they are NULL now</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">m_Mean</a> == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aa5685ee78433980cf535d745d1fcab55">m_Variance</a> == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a77c30d191e7ee8917e2c0ff5e97f5640">m_Beta</a> == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aec22bddf14a932c4a72796c30669066b">m_Gamma</a> == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; }</div><div class="ttc" id="classarmnn_1_1_layer_xhtml_a339bef86bc340c3d1393ed83950fe8af"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a339bef86bc340c3d1393ed83950fe8af">armnn::Layer::ReleaseConstantData</a></div><div class="ttdeci">virtual void ReleaseConstantData()</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00264">Layer.cpp:264</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml">armnn::BatchNormalizationLayer</a></div><div class="ttdoc">This layer represents a batch normalization operation. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00015">BatchNormalizationLayer.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00053">Tensor.hpp:53</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_a7563c5b899e7d0ada08fd0fdb202f205"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">armnn::Graph::AddLayer</a></div><div class="ttdeci">LayerT * AddLayer(Args &amp;&amp;... args)</div><div class="ttdoc">Adds a new layer, of type LayerType, to the graph constructed with the arguments passed. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00397">Graph.hpp:397</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_descriptor_xhtml_a11c821c7524251004a72ed13c510853c"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml#a11c821c7524251004a72ed13c510853c">armnn::BatchNormalizationDescriptor::m_Eps</a></div><div class="ttdeci">float m_Eps</div><div class="ttdoc">Value to add to the variance. Used to avoid dividing by zero. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00623">Descriptors.hpp:623</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_aec22bddf14a932c4a72796c30669066b"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#aec22bddf14a932c4a72796c30669066b">armnn::BatchNormalizationLayer::m_Gamma</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Gamma</div><div class="ttdoc">A unique pointer to store Gamma values. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00025">BatchNormalizationLayer.hpp:25</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_aa5685ee78433980cf535d745d1fcab55"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#aa5685ee78433980cf535d745d1fcab55">armnn::BatchNormalizationLayer::m_Variance</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Variance</div><div class="ttdoc">A unique pointer to store Variance values. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00021">BatchNormalizationLayer.hpp:21</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a0c262ba6f6c189a2d092d127c1b7627b"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a></div><div class="ttdeci">BOOST_CHECK(profilingService.GetCurrentState()==ProfilingState::WaitingForAck)</div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_a77c30d191e7ee8917e2c0ff5e97f5640"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#a77c30d191e7ee8917e2c0ff5e97f5640">armnn::BatchNormalizationLayer::m_Beta</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Beta</div><div class="ttdoc">A unique pointer to store Beta values. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00023">BatchNormalizationLayer.hpp:23</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_output_layer_8hpp_source.xhtml#l00013">OutputLayer.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_a3540afac8fad99bbe68b3f7b57590160"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">armnn::BatchNormalizationLayer::m_Mean</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Mean</div><div class="ttdoc">A unique pointer to store Mean values. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00019">BatchNormalizationLayer.hpp:19</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00029">Graph.hpp:29</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_input_layer_8hpp_source.xhtml#l00013">InputLayer.hpp:13</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="_test_utils_8cpp_xhtml_a0b295acb179f15eb3fb862b32008f782"><div class="ttname"><a href="_test_utils_8cpp.xhtml#a0b295acb179f15eb3fb862b32008f782">Connect</a></div><div class="ttdeci">void Connect(armnn::IConnectableLayer *from, armnn::IConnectableLayer *to, const armnn::TensorInfo &amp;tensorInfo, unsigned int fromIndex, unsigned int toIndex)</div><div class="ttdef"><b>Definition:</b> <a href="_test_utils_8cpp_source.xhtml#l00012">TestUtils.cpp:12</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00209">Layer.hpp:209</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00610">Descriptors.hpp:610</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2733618103ee4525089ef9476ff20892"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2733618103ee4525089ef9476ff20892">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">ReleaseConvolution2dLayerConstantDataTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_release_constant_data_test_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="_layer_release_constant_data_test_8cpp_source.xhtml">LayerReleaseConstantDataTest.cpp</a>.</p>

<p class="reference">References <a class="el" href="_graph_8hpp_source.xhtml#l00397">Graph::AddLayer()</a>, <a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK()</a>, <a class="el" href="_test_utils_8cpp_source.xhtml#l00012">Connect()</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00025">armnn::GetBiasDataType()</a>, <a class="el" href="_convolution2d_layer_8hpp_source.xhtml#l00022">Convolution2dLayer::m_Bias</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00438">Convolution2dDescriptor::m_BiasEnabled</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00428">Convolution2dDescriptor::m_PadBottom</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00422">Convolution2dDescriptor::m_PadLeft</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00424">Convolution2dDescriptor::m_PadRight</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00426">Convolution2dDescriptor::m_PadTop</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00430">Convolution2dDescriptor::m_StrideX</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00432">Convolution2dDescriptor::m_StrideY</a>, <a class="el" href="_convolution2d_layer_8hpp_source.xhtml#l00020">Convolution2dLayer::m_Weight</a>, and <a class="el" href="_layer_8cpp_source.xhtml#l00264">Layer::ReleaseConstantData()</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;     <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a> graph;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;     <span class="comment">// create the layer we&#39;re testing</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;     <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> layerDesc;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;     layerDesc.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#ac18546ebbebbb32fe0a03baa9bf2c600">m_PadLeft</a> = 3;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;     layerDesc.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#a002bc30e590d78cbb4f4d12171055ca7">m_PadRight</a> = 3;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;     layerDesc.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#a56b51f56cef50cdfa554258eecdab046">m_PadTop</a> = 1;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;     layerDesc.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#aa9e49717ebdb741e8c767741647fc618">m_PadBottom</a> = 1;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;     layerDesc.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">m_StrideX</a> = 2;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;     layerDesc.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#ac1fe174bbadfb39a2b636940c2e647c8">m_StrideY</a> = 4;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;     layerDesc.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">m_BiasEnabled</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;     <a class="code" href="classarmnn_1_1_convolution2d_layer.xhtml">Convolution2dLayer</a>* <span class="keyword">const</span> layer = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_convolution2d_layer.xhtml">Convolution2dLayer</a>&gt;(layerDesc, <span class="stringliteral">&quot;layer&quot;</span>);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;     layer-&gt;<a class="code" href="classarmnn_1_1_convolution2d_layer.xhtml#a2664044e28e69309ea08ef385fe53903">m_Weight</a> = std::make_unique&lt;ScopedCpuTensorHandle&gt;(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({2, 3, 5, 3},</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                                                          <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;     layer-&gt;<a class="code" href="classarmnn_1_1_convolution2d_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">m_Bias</a>   = std::make_unique&lt;ScopedCpuTensorHandle&gt;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;             (<a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({2}, <a class="code" href="namespacearmnn.xhtml#a872803f5667392efc3c8e5607bd453ad">GetBiasDataType</a>(<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>)));</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;     layer-&gt;<a class="code" href="classarmnn_1_1_convolution2d_layer.xhtml#a2664044e28e69309ea08ef385fe53903">m_Weight</a>-&gt;Allocate();</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;     layer-&gt;<a class="code" href="classarmnn_1_1_convolution2d_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">m_Bias</a>-&gt;Allocate();</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;     <span class="comment">// create extra layers</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;     <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>* <span class="keyword">const</span> input = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_input_layer.xhtml">InputLayer</a>&gt;(0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;     <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>* <span class="keyword">const</span> output = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_output_layer.xhtml">OutputLayer</a>&gt;(0, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;     <span class="comment">// connect up</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;     <a class="code" href="_test_utils_8cpp.xhtml#a0b295acb179f15eb3fb862b32008f782">Connect</a>(input, layer, <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({2, 3, 8, 16}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;     <a class="code" href="_test_utils_8cpp.xhtml#a0b295acb179f15eb3fb862b32008f782">Connect</a>(layer, output, <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({2, 2, 2, 10}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;     <span class="comment">// check the constants that they are not NULL</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;     <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_convolution2d_layer.xhtml#a2664044e28e69309ea08ef385fe53903">m_Weight</a> != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;     <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_convolution2d_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">m_Bias</a> != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;     <span class="comment">// free up the constants..</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;     layer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a339bef86bc340c3d1393ed83950fe8af">ReleaseConstantData</a>();</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;     <span class="comment">// check the constants that they are NULL now</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;     <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_convolution2d_layer.xhtml#a2664044e28e69309ea08ef385fe53903">m_Weight</a> == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;     <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_convolution2d_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">m_Bias</a> == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_layer_xhtml_a339bef86bc340c3d1393ed83950fe8af"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a339bef86bc340c3d1393ed83950fe8af">armnn::Layer::ReleaseConstantData</a></div><div class="ttdeci">virtual void ReleaseConstantData()</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00264">Layer.cpp:264</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_aa9e49717ebdb741e8c767741647fc618"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#aa9e49717ebdb741e8c767741647fc618">armnn::Convolution2dDescriptor::m_PadBottom</a></div><div class="ttdeci">uint32_t m_PadBottom</div><div class="ttdoc">Padding bottom value in the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00428">Descriptors.hpp:428</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_aea202e14d8874cefd9a0f778022b7e25"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">armnn::Convolution2dDescriptor::m_BiasEnabled</a></div><div class="ttdeci">bool m_BiasEnabled</div><div class="ttdoc">Enable/disable bias. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00438">Descriptors.hpp:438</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00053">Tensor.hpp:53</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_a7563c5b899e7d0ada08fd0fdb202f205"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">armnn::Graph::AddLayer</a></div><div class="ttdeci">LayerT * AddLayer(Args &amp;&amp;... args)</div><div class="ttdoc">Adds a new layer, of type LayerType, to the graph constructed with the arguments passed. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00397">Graph.hpp:397</a></div></div>
<div class="ttc" id="classarmnn_1_1_convolution2d_layer_xhtml_a39925bc24d3afcfb322a46a5884fadb9"><div class="ttname"><a href="classarmnn_1_1_convolution2d_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">armnn::Convolution2dLayer::m_Bias</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Bias</div><div class="ttdoc">A unique pointer to store Bias values. </div><div class="ttdef"><b>Definition:</b> <a href="_convolution2d_layer_8hpp_source.xhtml#l00022">Convolution2dLayer.hpp:22</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00392">Descriptors.hpp:392</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_a002bc30e590d78cbb4f4d12171055ca7"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#a002bc30e590d78cbb4f4d12171055ca7">armnn::Convolution2dDescriptor::m_PadRight</a></div><div class="ttdeci">uint32_t m_PadRight</div><div class="ttdoc">Padding right value in the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00424">Descriptors.hpp:424</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a0c262ba6f6c189a2d092d127c1b7627b"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a></div><div class="ttdeci">BOOST_CHECK(profilingService.GetCurrentState()==ProfilingState::WaitingForAck)</div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_a56b51f56cef50cdfa554258eecdab046"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#a56b51f56cef50cdfa554258eecdab046">armnn::Convolution2dDescriptor::m_PadTop</a></div><div class="ttdeci">uint32_t m_PadTop</div><div class="ttdoc">Padding top value in the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00426">Descriptors.hpp:426</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_afe6a3377c4531315354def9023c8fdda"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">armnn::Convolution2dDescriptor::m_StrideX</a></div><div class="ttdeci">uint32_t m_StrideX</div><div class="ttdoc">Stride value when proceeding through input for the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00430">Descriptors.hpp:430</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_output_layer_8hpp_source.xhtml#l00013">OutputLayer.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_convolution2d_layer_xhtml_a2664044e28e69309ea08ef385fe53903"><div class="ttname"><a href="classarmnn_1_1_convolution2d_layer.xhtml#a2664044e28e69309ea08ef385fe53903">armnn::Convolution2dLayer::m_Weight</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Weight</div><div class="ttdoc">A unique pointer to store Weight values. </div><div class="ttdef"><b>Definition:</b> <a href="_convolution2d_layer_8hpp_source.xhtml#l00020">Convolution2dLayer.hpp:20</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_ac1fe174bbadfb39a2b636940c2e647c8"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#ac1fe174bbadfb39a2b636940c2e647c8">armnn::Convolution2dDescriptor::m_StrideY</a></div><div class="ttdeci">uint32_t m_StrideY</div><div class="ttdoc">Stride value when proceeding through input for the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00432">Descriptors.hpp:432</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00029">Graph.hpp:29</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a872803f5667392efc3c8e5607bd453ad"><div class="ttname"><a href="namespacearmnn.xhtml#a872803f5667392efc3c8e5607bd453ad">armnn::GetBiasDataType</a></div><div class="ttdeci">DataType GetBiasDataType(DataType inputDataType)</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8cpp_source.xhtml#l00025">WorkloadData.cpp:25</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_input_layer_8hpp_source.xhtml#l00013">InputLayer.hpp:13</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="classarmnn_1_1_convolution2d_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_convolution2d_layer.xhtml">armnn::Convolution2dLayer</a></div><div class="ttdoc">This layer represents a convolution 2d operation. </div><div class="ttdef"><b>Definition:</b> <a href="_convolution2d_layer_8hpp_source.xhtml#l00015">Convolution2dLayer.hpp:15</a></div></div>
<div class="ttc" id="_test_utils_8cpp_xhtml_a0b295acb179f15eb3fb862b32008f782"><div class="ttname"><a href="_test_utils_8cpp.xhtml#a0b295acb179f15eb3fb862b32008f782">Connect</a></div><div class="ttdeci">void Connect(armnn::IConnectableLayer *from, armnn::IConnectableLayer *to, const armnn::TensorInfo &amp;tensorInfo, unsigned int fromIndex, unsigned int toIndex)</div><div class="ttdef"><b>Definition:</b> <a href="_test_utils_8cpp_source.xhtml#l00012">TestUtils.cpp:12</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00209">Layer.hpp:209</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_ac18546ebbebbb32fe0a03baa9bf2c600"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#ac18546ebbebbb32fe0a03baa9bf2c600">armnn::Convolution2dDescriptor::m_PadLeft</a></div><div class="ttdeci">uint32_t m_PadLeft</div><div class="ttdoc">Padding left value in the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00422">Descriptors.hpp:422</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae587bfb42916b2feb32eada9b385e0ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae587bfb42916b2feb32eada9b385e0ea">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">ReleaseDepthwiseConvolution2dLayerConstantDataTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_release_constant_data_test_8cpp_source.xhtml#l00119">119</a> of file <a class="el" href="_layer_release_constant_data_test_8cpp_source.xhtml">LayerReleaseConstantDataTest.cpp</a>.</p>

<p class="reference">References <a class="el" href="_graph_8hpp_source.xhtml#l00397">Graph::AddLayer()</a>, <a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK()</a>, <a class="el" href="_test_utils_8cpp_source.xhtml#l00012">Connect()</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_depthwise_convolution2d_layer_8hpp_source.xhtml#l00021">DepthwiseConvolution2dLayer::m_Bias</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00490">DepthwiseConvolution2dDescriptor::m_BiasEnabled</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00480">DepthwiseConvolution2dDescriptor::m_PadBottom</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00474">DepthwiseConvolution2dDescriptor::m_PadLeft</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00476">DepthwiseConvolution2dDescriptor::m_PadRight</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00478">DepthwiseConvolution2dDescriptor::m_PadTop</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00482">DepthwiseConvolution2dDescriptor::m_StrideX</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00484">DepthwiseConvolution2dDescriptor::m_StrideY</a>, <a class="el" href="_depthwise_convolution2d_layer_8hpp_source.xhtml#l00019">DepthwiseConvolution2dLayer::m_Weight</a>, and <a class="el" href="_layer_8cpp_source.xhtml#l00264">Layer::ReleaseConstantData()</a>.</p>
<div class="fragment"><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a> graph;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// create the layer we&#39;re testing</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> layerDesc;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    layerDesc.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#ac18546ebbebbb32fe0a03baa9bf2c600">m_PadLeft</a>         = 3;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    layerDesc.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#a002bc30e590d78cbb4f4d12171055ca7">m_PadRight</a>        = 3;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    layerDesc.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#a56b51f56cef50cdfa554258eecdab046">m_PadTop</a>          = 1;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    layerDesc.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#aa9e49717ebdb741e8c767741647fc618">m_PadBottom</a>       = 1;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    layerDesc.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">m_StrideX</a>         = 2;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    layerDesc.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#ac1fe174bbadfb39a2b636940c2e647c8">m_StrideY</a>         = 4;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    layerDesc.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">m_BiasEnabled</a>     = <span class="keyword">true</span>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml">DepthwiseConvolution2dLayer</a>* <span class="keyword">const</span> layer = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml">DepthwiseConvolution2dLayer</a>&gt;(layerDesc, <span class="stringliteral">&quot;layer&quot;</span>);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml#a2664044e28e69309ea08ef385fe53903">m_Weight</a> = std::make_unique&lt;ScopedCpuTensorHandle&gt;(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({3, 3, 5, 3}, DataType::Float32));</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">m_Bias</a>   = std::make_unique&lt;ScopedCpuTensorHandle&gt;(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({9}, DataType::Float32));</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml#a2664044e28e69309ea08ef385fe53903">m_Weight</a>-&gt;Allocate();</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">m_Bias</a>-&gt;Allocate();</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="comment">// create extra layers</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>* <span class="keyword">const</span> input = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_input_layer.xhtml">InputLayer</a>&gt;(0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>* <span class="keyword">const</span> output = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_output_layer.xhtml">OutputLayer</a>&gt;(0, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="comment">// connect up</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="_test_utils_8cpp.xhtml#a0b295acb179f15eb3fb862b32008f782">Connect</a>(input, layer, <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({2, 3, 8, 16}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="_test_utils_8cpp.xhtml#a0b295acb179f15eb3fb862b32008f782">Connect</a>(layer, output, <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({2, 9, 2, 10}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="comment">// check the constants that they are not NULL</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml#a2664044e28e69309ea08ef385fe53903">m_Weight</a> != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">m_Bias</a> != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="comment">// free up the constants..</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a339bef86bc340c3d1393ed83950fe8af">ReleaseConstantData</a>();</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment">// check the constants that they are NULL now</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml#a2664044e28e69309ea08ef385fe53903">m_Weight</a> == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">m_Bias</a> == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_layer_xhtml_a339bef86bc340c3d1393ed83950fe8af"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a339bef86bc340c3d1393ed83950fe8af">armnn::Layer::ReleaseConstantData</a></div><div class="ttdeci">virtual void ReleaseConstantData()</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00264">Layer.cpp:264</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_aea202e14d8874cefd9a0f778022b7e25"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">armnn::DepthwiseConvolution2dDescriptor::m_BiasEnabled</a></div><div class="ttdeci">bool m_BiasEnabled</div><div class="ttdoc">Enable/disable bias. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00490">Descriptors.hpp:490</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_aa9e49717ebdb741e8c767741647fc618"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#aa9e49717ebdb741e8c767741647fc618">armnn::DepthwiseConvolution2dDescriptor::m_PadBottom</a></div><div class="ttdeci">uint32_t m_PadBottom</div><div class="ttdoc">Padding bottom value in the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00480">Descriptors.hpp:480</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00053">Tensor.hpp:53</a></div></div>
<div class="ttc" id="classarmnn_1_1_depthwise_convolution2d_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml">armnn::DepthwiseConvolution2dLayer</a></div><div class="ttdoc">This layer represents a depthwise convolution 2d operation. </div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_convolution2d_layer_8hpp_source.xhtml#l00015">DepthwiseConvolution2dLayer.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_depthwise_convolution2d_layer_xhtml_a39925bc24d3afcfb322a46a5884fadb9"><div class="ttname"><a href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">armnn::DepthwiseConvolution2dLayer::m_Bias</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Bias</div><div class="ttdoc">A unique pointer to store Bias values. </div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_convolution2d_layer_8hpp_source.xhtml#l00021">DepthwiseConvolution2dLayer.hpp:21</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_a7563c5b899e7d0ada08fd0fdb202f205"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">armnn::Graph::AddLayer</a></div><div class="ttdeci">LayerT * AddLayer(Args &amp;&amp;... args)</div><div class="ttdoc">Adds a new layer, of type LayerType, to the graph constructed with the arguments passed. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00397">Graph.hpp:397</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_ac18546ebbebbb32fe0a03baa9bf2c600"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#ac18546ebbebbb32fe0a03baa9bf2c600">armnn::DepthwiseConvolution2dDescriptor::m_PadLeft</a></div><div class="ttdeci">uint32_t m_PadLeft</div><div class="ttdoc">Padding left value in the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00474">Descriptors.hpp:474</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a0c262ba6f6c189a2d092d127c1b7627b"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a></div><div class="ttdeci">BOOST_CHECK(profilingService.GetCurrentState()==ProfilingState::WaitingForAck)</div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_afe6a3377c4531315354def9023c8fdda"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">armnn::DepthwiseConvolution2dDescriptor::m_StrideX</a></div><div class="ttdeci">uint32_t m_StrideX</div><div class="ttdoc">Stride value when proceeding through input for the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00482">Descriptors.hpp:482</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_output_layer_8hpp_source.xhtml#l00013">OutputLayer.hpp:13</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_a56b51f56cef50cdfa554258eecdab046"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#a56b51f56cef50cdfa554258eecdab046">armnn::DepthwiseConvolution2dDescriptor::m_PadTop</a></div><div class="ttdeci">uint32_t m_PadTop</div><div class="ttdoc">Padding top value in the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00478">Descriptors.hpp:478</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00029">Graph.hpp:29</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_ac1fe174bbadfb39a2b636940c2e647c8"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#ac1fe174bbadfb39a2b636940c2e647c8">armnn::DepthwiseConvolution2dDescriptor::m_StrideY</a></div><div class="ttdeci">uint32_t m_StrideY</div><div class="ttdoc">Stride value when proceeding through input for the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00484">Descriptors.hpp:484</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_input_layer_8hpp_source.xhtml#l00013">InputLayer.hpp:13</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="_test_utils_8cpp_xhtml_a0b295acb179f15eb3fb862b32008f782"><div class="ttname"><a href="_test_utils_8cpp.xhtml#a0b295acb179f15eb3fb862b32008f782">Connect</a></div><div class="ttdeci">void Connect(armnn::IConnectableLayer *from, armnn::IConnectableLayer *to, const armnn::TensorInfo &amp;tensorInfo, unsigned int fromIndex, unsigned int toIndex)</div><div class="ttdef"><b>Definition:</b> <a href="_test_utils_8cpp_source.xhtml#l00012">TestUtils.cpp:12</a></div></div>
<div class="ttc" id="classarmnn_1_1_depthwise_convolution2d_layer_xhtml_a2664044e28e69309ea08ef385fe53903"><div class="ttname"><a href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml#a2664044e28e69309ea08ef385fe53903">armnn::DepthwiseConvolution2dLayer::m_Weight</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Weight</div><div class="ttdoc">A unique pointer to store Weight values. </div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_convolution2d_layer_8hpp_source.xhtml#l00019">DepthwiseConvolution2dLayer.hpp:19</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00444">Descriptors.hpp:444</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00209">Layer.hpp:209</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_a002bc30e590d78cbb4f4d12171055ca7"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#a002bc30e590d78cbb4f4d12171055ca7">armnn::DepthwiseConvolution2dDescriptor::m_PadRight</a></div><div class="ttdeci">uint32_t m_PadRight</div><div class="ttdoc">Padding right value in the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00476">Descriptors.hpp:476</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4086f4540f611d58a412ab43dd794535"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4086f4540f611d58a412ab43dd794535">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">ReleaseFullyConnectedLayerConstantDataTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_release_constant_data_test_8cpp_source.xhtml#l00160">160</a> of file <a class="el" href="_layer_release_constant_data_test_8cpp_source.xhtml">LayerReleaseConstantDataTest.cpp</a>.</p>

<p class="reference">References <a class="el" href="_graph_8hpp_source.xhtml#l00397">Graph::AddLayer()</a>, <a class="el" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END()</a>, <a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK()</a>, <a class="el" href="_test_utils_8cpp_source.xhtml#l00012">Connect()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00025">armnn::GetBiasDataType()</a>, <a class="el" href="_fully_connected_layer_8hpp_source.xhtml#l00021">FullyConnectedLayer::m_Bias</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00386">FullyConnectedDescriptor::m_BiasEnabled</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00388">FullyConnectedDescriptor::m_TransposeWeightMatrix</a>, <a class="el" href="_fully_connected_layer_8hpp_source.xhtml#l00019">FullyConnectedLayer::m_Weight</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="_layer_8cpp_source.xhtml#l00264">Layer::ReleaseConstantData()</a>.</p>
<div class="fragment"><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;{</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a> graph;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">// create the layer we&#39;re testing</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a> layerDesc;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    layerDesc.<a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">m_BiasEnabled</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    layerDesc.<a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml#a281fcaec86e17c97f7b8402633f6b55a">m_TransposeWeightMatrix</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="classarmnn_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a>* <span class="keyword">const</span> layer = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a>&gt;(layerDesc, <span class="stringliteral">&quot;layer&quot;</span>);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordtype">float</span> inputsQScale = 1.0f;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordtype">float</span> outputQScale = 2.0f;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_fully_connected_layer.xhtml#a2664044e28e69309ea08ef385fe53903">m_Weight</a> = std::make_unique&lt;ScopedCpuTensorHandle&gt;(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({7, 20},</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                                                          DataType::QAsymmU8, inputsQScale, 0));</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_fully_connected_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">m_Bias</a>   = std::make_unique&lt;ScopedCpuTensorHandle&gt;(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({7},</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                                          <a class="code" href="namespacearmnn.xhtml#a872803f5667392efc3c8e5607bd453ad">GetBiasDataType</a>(DataType::QAsymmU8), inputsQScale));</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_fully_connected_layer.xhtml#a2664044e28e69309ea08ef385fe53903">m_Weight</a>-&gt;Allocate();</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_fully_connected_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">m_Bias</a>-&gt;Allocate();</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="comment">// create extra layers</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>* <span class="keyword">const</span> input = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_input_layer.xhtml">InputLayer</a>&gt;(0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>* <span class="keyword">const</span> output = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_output_layer.xhtml">OutputLayer</a>&gt;(0, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="comment">// connect up</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="_test_utils_8cpp.xhtml#a0b295acb179f15eb3fb862b32008f782">Connect</a>(input, layer, <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({3, 1, 4, 5}, DataType::QAsymmU8, inputsQScale));</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="_test_utils_8cpp.xhtml#a0b295acb179f15eb3fb862b32008f782">Connect</a>(layer, output, <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({3, 7}, DataType::QAsymmU8, outputQScale));</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="comment">// check the constants that they are not NULL</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_fully_connected_layer.xhtml#a2664044e28e69309ea08ef385fe53903">m_Weight</a> != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_fully_connected_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">m_Bias</a> != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="comment">// free up the constants..</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a339bef86bc340c3d1393ed83950fe8af">ReleaseConstantData</a>();</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="comment">// check the constants that they are NULL now</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_fully_connected_layer.xhtml#a2664044e28e69309ea08ef385fe53903">m_Weight</a> == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(layer-&gt;<a class="code" href="classarmnn_1_1_fully_connected_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">m_Bias</a> == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_layer_xhtml_a339bef86bc340c3d1393ed83950fe8af"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a339bef86bc340c3d1393ed83950fe8af">armnn::Layer::ReleaseConstantData</a></div><div class="ttdeci">virtual void ReleaseConstantData()</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00264">Layer.cpp:264</a></div></div>
<div class="ttc" id="classarmnn_1_1_fully_connected_layer_xhtml_a2664044e28e69309ea08ef385fe53903"><div class="ttname"><a href="classarmnn_1_1_fully_connected_layer.xhtml#a2664044e28e69309ea08ef385fe53903">armnn::FullyConnectedLayer::m_Weight</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Weight</div><div class="ttdoc">A unique pointer to store Weight values. </div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_8hpp_source.xhtml#l00019">FullyConnectedLayer.hpp:19</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00053">Tensor.hpp:53</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_a7563c5b899e7d0ada08fd0fdb202f205"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">armnn::Graph::AddLayer</a></div><div class="ttdeci">LayerT * AddLayer(Args &amp;&amp;... args)</div><div class="ttdoc">Adds a new layer, of type LayerType, to the graph constructed with the arguments passed. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00397">Graph.hpp:397</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_descriptor_xhtml_a281fcaec86e17c97f7b8402633f6b55a"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml#a281fcaec86e17c97f7b8402633f6b55a">armnn::FullyConnectedDescriptor::m_TransposeWeightMatrix</a></div><div class="ttdeci">bool m_TransposeWeightMatrix</div><div class="ttdoc">Enable/disable transpose weight matrix. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00388">Descriptors.hpp:388</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a0c262ba6f6c189a2d092d127c1b7627b"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a></div><div class="ttdeci">BOOST_CHECK(profilingService.GetCurrentState()==ProfilingState::WaitingForAck)</div></div>
<div class="ttc" id="classarmnn_1_1_output_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_output_layer_8hpp_source.xhtml#l00013">OutputLayer.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_fully_connected_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_fully_connected_layer.xhtml">armnn::FullyConnectedLayer</a></div><div class="ttdoc">This layer represents a fully connected operation. </div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_8hpp_source.xhtml#l00015">FullyConnectedLayer.hpp:15</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00373">Descriptors.hpp:373</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_descriptor_xhtml_aea202e14d8874cefd9a0f778022b7e25"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">armnn::FullyConnectedDescriptor::m_BiasEnabled</a></div><div class="ttdeci">bool m_BiasEnabled</div><div class="ttdoc">Enable/disable bias. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00386">Descriptors.hpp:386</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00029">Graph.hpp:29</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a872803f5667392efc3c8e5607bd453ad"><div class="ttname"><a href="namespacearmnn.xhtml#a872803f5667392efc3c8e5607bd453ad">armnn::GetBiasDataType</a></div><div class="ttdeci">DataType GetBiasDataType(DataType inputDataType)</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8cpp_source.xhtml#l00025">WorkloadData.cpp:25</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_input_layer_8hpp_source.xhtml#l00013">InputLayer.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_fully_connected_layer_xhtml_a39925bc24d3afcfb322a46a5884fadb9"><div class="ttname"><a href="classarmnn_1_1_fully_connected_layer.xhtml#a39925bc24d3afcfb322a46a5884fadb9">armnn::FullyConnectedLayer::m_Bias</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Bias</div><div class="ttdoc">A unique pointer to store Bias values. </div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_8hpp_source.xhtml#l00021">FullyConnectedLayer.hpp:21</a></div></div>
<div class="ttc" id="_test_utils_8cpp_xhtml_a0b295acb179f15eb3fb862b32008f782"><div class="ttname"><a href="_test_utils_8cpp.xhtml#a0b295acb179f15eb3fb862b32008f782">Connect</a></div><div class="ttdeci">void Connect(armnn::IConnectableLayer *from, armnn::IConnectableLayer *to, const armnn::TensorInfo &amp;tensorInfo, unsigned int fromIndex, unsigned int toIndex)</div><div class="ttdef"><b>Definition:</b> <a href="_test_utils_8cpp_source.xhtml#l00012">TestUtils.cpp:12</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00209">Layer.hpp:209</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="_layer_release_constant_data_test_8cpp.xhtml">LayerReleaseConstantDataTest.cpp</a></li>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:14 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
