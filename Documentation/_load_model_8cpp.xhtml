<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnnTfLiteParser/test/LoadModel.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_load_model_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">LoadModel.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;boost/test/unit_test.hpp&gt;</code><br />
<code>#include &quot;<a class="el" href="_parser_flatbuffers_fixture_8hpp_source.xhtml">ParserFlatbuffersFixture.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_tf_lite_parser_8hpp_source.xhtml">../TfLiteParser.hpp</a>&quot;</code><br />
</div>
<p><a href="_load_model_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ab8262a23f76732432e30196fa09a5d4d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_load_model_8cpp.xhtml#ab8262a23f76732432e30196fa09a5d4d">ModelPtr</a> = TfLiteParser::ModelPtr</td></tr>
<tr class="separator:ab8262a23f76732432e30196fa09a5d4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4ad5c0bbec93520b8210fd6d8e2051c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_load_model_8cpp.xhtml#ab4ad5c0bbec93520b8210fd6d8e2051c">SubgraphPtr</a> = TfLiteParser::SubgraphPtr</td></tr>
<tr class="separator:ab4ad5c0bbec93520b8210fd6d8e2051c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3f6f44d7fdab7f4c61f59e4154dd696"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_load_model_8cpp.xhtml#af3f6f44d7fdab7f4c61f59e4154dd696">OperatorPtr</a> = TfLiteParser::OperatorPtr</td></tr>
<tr class="separator:af3f6f44d7fdab7f4c61f59e4154dd696"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a95a7c926cb96a1c57de39a72a8209c94"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_load_model_8cpp.xhtml#a95a7c926cb96a1c57de39a72a8209c94">BOOST_FIXTURE_TEST_CASE</a> (LoadModelFromBinary, LoadModelFixture)</td></tr>
<tr class="separator:a95a7c926cb96a1c57de39a72a8209c94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a757da23bc4ad3305fe973413be85015f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_load_model_8cpp.xhtml#a757da23bc4ad3305fe973413be85015f">BOOST_FIXTURE_TEST_CASE</a> (LoadModelFromFile, LoadModelFixture)</td></tr>
<tr class="separator:a757da23bc4ad3305fe973413be85015f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78183790dc7c28aa493485715480bc39"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_load_model_8cpp.xhtml#a78183790dc7c28aa493485715480bc39">BOOST_AUTO_TEST_CASE</a> (LoadNullBinary)</td></tr>
<tr class="separator:a78183790dc7c28aa493485715480bc39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3496184393204134fcf4cdeeedc21cf6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_load_model_8cpp.xhtml#a3496184393204134fcf4cdeeedc21cf6">BOOST_AUTO_TEST_CASE</a> (LoadInvalidBinary)</td></tr>
<tr class="separator:a3496184393204134fcf4cdeeedc21cf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8afd4e4f33c8c5ea6ed0fcc2c8db1620"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_load_model_8cpp.xhtml#a8afd4e4f33c8c5ea6ed0fcc2c8db1620">BOOST_AUTO_TEST_CASE</a> (LoadFileNotFound)</td></tr>
<tr class="separator:a8afd4e4f33c8c5ea6ed0fcc2c8db1620"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecebec3130e12fbe592fac5113b01c6f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_load_model_8cpp.xhtml#aecebec3130e12fbe592fac5113b01c6f">BOOST_AUTO_TEST_CASE</a> (LoadNullPtrFile)</td></tr>
<tr class="separator:aecebec3130e12fbe592fac5113b01c6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ab8262a23f76732432e30196fa09a5d4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8262a23f76732432e30196fa09a5d4d">&#9670;&nbsp;</a></span>ModelPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">ModelPtr</a> =  TfLiteParser::ModelPtr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_load_model_8cpp_source.xhtml#l00010">10</a> of file <a class="el" href="_load_model_8cpp_source.xhtml">LoadModel.cpp</a>.</p>

</div>
</div>
<a id="af3f6f44d7fdab7f4c61f59e4154dd696"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3f6f44d7fdab7f4c61f59e4154dd696">&#9670;&nbsp;</a></span>OperatorPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_load_model_8cpp.xhtml#af3f6f44d7fdab7f4c61f59e4154dd696">OperatorPtr</a> =  TfLiteParser::OperatorPtr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_load_model_8cpp_source.xhtml#l00012">12</a> of file <a class="el" href="_load_model_8cpp_source.xhtml">LoadModel.cpp</a>.</p>

</div>
</div>
<a id="ab4ad5c0bbec93520b8210fd6d8e2051c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4ad5c0bbec93520b8210fd6d8e2051c">&#9670;&nbsp;</a></span>SubgraphPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_load_model_8cpp.xhtml#ab4ad5c0bbec93520b8210fd6d8e2051c">SubgraphPtr</a> =  TfLiteParser::SubgraphPtr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_load_model_8cpp_source.xhtml#l00011">11</a> of file <a class="el" href="_load_model_8cpp_source.xhtml">LoadModel.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a78183790dc7c28aa493485715480bc39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78183790dc7c28aa493485715480bc39">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">LoadNullBinary&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_load_model_8cpp_source.xhtml#l00218">218</a> of file <a class="el" href="_load_model_8cpp_source.xhtml">LoadModel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;{</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    BOOST_CHECK_THROW(TfLiteParser::LoadModelFromBinary(<span class="keyword">nullptr</span>, 0), <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3496184393204134fcf4cdeeedc21cf6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3496184393204134fcf4cdeeedc21cf6">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">LoadInvalidBinary&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_load_model_8cpp_source.xhtml#l00223">223</a> of file <a class="el" href="_load_model_8cpp_source.xhtml">LoadModel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;{</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    std::string testData = <span class="stringliteral">&quot;invalid data&quot;</span>;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    BOOST_CHECK_THROW(TfLiteParser::LoadModelFromBinary(reinterpret_cast&lt;const uint8_t*&gt;(&amp;testData),</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                                        testData.length()), <a class="code" href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a>);</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_parse_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00092">Exceptions.hpp:92</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8afd4e4f33c8c5ea6ed0fcc2c8db1620"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8afd4e4f33c8c5ea6ed0fcc2c8db1620">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">LoadFileNotFound&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_load_model_8cpp_source.xhtml#l00230">230</a> of file <a class="el" href="_load_model_8cpp_source.xhtml">LoadModel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;{</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    BOOST_CHECK_THROW(TfLiteParser::LoadModelFromFile(<span class="stringliteral">&quot;invalidfile.tflite&quot;</span>), <a class="code" href="classarmnn_1_1_file_not_found_exception.xhtml">armnn::FileNotFoundException</a>);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_file_not_found_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_file_not_found_exception.xhtml">armnn::FileNotFoundException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00086">Exceptions.hpp:86</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aecebec3130e12fbe592fac5113b01c6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aecebec3130e12fbe592fac5113b01c6f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">LoadNullPtrFile&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_load_model_8cpp_source.xhtml#l00235">235</a> of file <a class="el" href="_load_model_8cpp_source.xhtml">LoadModel.cpp</a>.</p>

<p class="reference">References <a class="el" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END()</a>.</p>
<div class="fragment"><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;{</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    BOOST_CHECK_THROW(TfLiteParser::LoadModelFromFile(<span class="keyword">nullptr</span>), <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a95a7c926cb96a1c57de39a72a8209c94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95a7c926cb96a1c57de39a72a8209c94">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">LoadModelFromBinary&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LoadModelFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_load_model_8cpp_source.xhtml#l00184">184</a> of file <a class="el" href="_load_model_8cpp_source.xhtml">LoadModel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;{</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="_load_model_8cpp.xhtml#ab8262a23f76732432e30196fa09a5d4d">TfLiteParser::ModelPtr</a> model = TfLiteParser::LoadModelFromBinary(m_GraphBinary.data(), m_GraphBinary.size());</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    CheckModel(model, 3, 2, { tflite::BuiltinOperator_AVERAGE_POOL_2D, tflite::BuiltinOperator_CONV_2D },</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;               2, <span class="stringliteral">&quot;Test loading a model&quot;</span>, 2);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    CheckSubgraph(model-&gt;subgraphs[0], 2, { 1 }, { 0 }, 1, <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    CheckSubgraph(model-&gt;subgraphs[1], 3, { 0 }, { 1 }, 1, <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    CheckOperator(model-&gt;subgraphs[0]-&gt;operators[0], 0, { 1 }, { 0 }, tflite::BuiltinOptions_Pool2DOptions,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                  tflite::CustomOptionsFormat_FLEXBUFFERS);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    CheckOperator(model-&gt;subgraphs[1]-&gt;operators[0], 1, { 0, 2 }, { 1 }, tflite::BuiltinOptions_Conv2DOptions,</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                  tflite::CustomOptionsFormat_FLEXBUFFERS);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;}</div><div class="ttc" id="_load_model_8cpp_xhtml_ab8262a23f76732432e30196fa09a5d4d"><div class="ttname"><a href="_load_model_8cpp.xhtml#ab8262a23f76732432e30196fa09a5d4d">ModelPtr</a></div><div class="ttdeci">TfLiteParser::ModelPtr ModelPtr</div><div class="ttdef"><b>Definition:</b> <a href="_load_model_8cpp_source.xhtml#l00010">LoadModel.cpp:10</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a757da23bc4ad3305fe973413be85015f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a757da23bc4ad3305fe973413be85015f">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">LoadModelFromFile&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LoadModelFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_load_model_8cpp_source.xhtml#l00197">197</a> of file <a class="el" href="_load_model_8cpp_source.xhtml">LoadModel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;{</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keyword">using namespace </span>boost::filesystem;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    std::string fname = unique_path(temp_directory_path() / <span class="stringliteral">&quot;%%%%-%%%%-%%%%.tflite&quot;</span>).string();</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordtype">bool</span> saved = flatbuffers::SaveFile(fname.c_str(),</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                       <span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(m_GraphBinary.data()),</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                                       m_GraphBinary.size(), <span class="keyword">true</span>);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    BOOST_CHECK_MESSAGE(saved, <span class="stringliteral">&quot;Cannot save test file&quot;</span>);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <a class="code" href="_load_model_8cpp.xhtml#ab8262a23f76732432e30196fa09a5d4d">TfLiteParser::ModelPtr</a> model = TfLiteParser::LoadModelFromFile(fname.c_str());</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    CheckModel(model, 3, 2, { tflite::BuiltinOperator_AVERAGE_POOL_2D, tflite::BuiltinOperator_CONV_2D },</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;               2, <span class="stringliteral">&quot;Test loading a model&quot;</span>, 2);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    CheckSubgraph(model-&gt;subgraphs[0], 2, { 1 }, { 0 }, 1, <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    CheckSubgraph(model-&gt;subgraphs[1], 3, { 0 }, { 1 }, 1, <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    CheckOperator(model-&gt;subgraphs[0]-&gt;operators[0], 0, { 1 }, { 0 }, tflite::BuiltinOptions_Pool2DOptions,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                  tflite::CustomOptionsFormat_FLEXBUFFERS);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    CheckOperator(model-&gt;subgraphs[1]-&gt;operators[0], 1, { 0, 2 }, { 1 }, tflite::BuiltinOptions_Conv2DOptions,</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                  tflite::CustomOptionsFormat_FLEXBUFFERS);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keyword">remove</span>(fname);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;}</div><div class="ttc" id="_load_model_8cpp_xhtml_ab8262a23f76732432e30196fa09a5d4d"><div class="ttname"><a href="_load_model_8cpp.xhtml#ab8262a23f76732432e30196fa09a5d4d">ModelPtr</a></div><div class="ttdeci">TfLiteParser::ModelPtr ModelPtr</div><div class="ttdef"><b>Definition:</b> <a href="_load_model_8cpp_source.xhtml#l00010">LoadModel.cpp:10</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_510324e450b9df55f9aac2d01fae83d8.xhtml">armnnTfLiteParser</a></li><li class="navelem"><a class="el" href="dir_6d8d07609c57029a35488d2120e28fbd.xhtml">test</a></li><li class="navelem"><a class="el" href="_load_model_8cpp.xhtml">LoadModel.cpp</a></li>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:14 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
