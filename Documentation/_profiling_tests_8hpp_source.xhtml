<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/profiling/test/ProfilingTests.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_profiling_tests_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ProfilingTests.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_profiling_tests_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2019 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_profiling_mocks_8hpp.xhtml">ProfilingMocks.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_logging_8hpp.xhtml">armnn/Logging.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_command_handler_functor_8hpp.xhtml">CommandHandlerFunctor.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_profiling_connection_8hpp.xhtml">IProfilingConnection.hpp</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_profiling_service_8hpp.xhtml">ProfilingService.hpp</a>&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;boost/polymorphic_cast.hpp&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;boost/test/unit_test.hpp&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;chrono&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;thread&gt;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">namespace </span>profiling</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_log_level_swapper.xhtml">   28</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1profiling_1_1_log_level_swapper.xhtml">LogLevelSwapper</a></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_log_level_swapper.xhtml#aca94feddb34e235385f38e73a21c57c1">   31</a></span>&#160;    <a class="code" href="structarmnn_1_1profiling_1_1_log_level_swapper.xhtml#aca94feddb34e235385f38e73a21c57c1">LogLevelSwapper</a>(<a class="code" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> severity)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="comment">// Set the new log level</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <a class="code" href="namespacearmnn.xhtml#aa59f7a819c3e29d10ffc41e5c0616872">armnn::ConfigureLogging</a>(<span class="keyword">true</span>, <span class="keyword">true</span>, severity);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    }</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_log_level_swapper.xhtml#aa1071a3676d3655cd75a41491a27d95a">   36</a></span>&#160;    <a class="code" href="structarmnn_1_1profiling_1_1_log_level_swapper.xhtml#aa1071a3676d3655cd75a41491a27d95a">~LogLevelSwapper</a>()</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="comment">// The default log level for unit tests is &quot;Fatal&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <a class="code" href="namespacearmnn.xhtml#aa59f7a819c3e29d10ffc41e5c0616872">armnn::ConfigureLogging</a>(<span class="keyword">true</span>, <span class="keyword">true</span>, <a class="code" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3da882384ec38ce8d9582b57e70861730e4">armnn::LogSeverity::Fatal</a>);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    }</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;};</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_stream_redirector.xhtml">   43</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1profiling_1_1_stream_redirector.xhtml">StreamRedirector</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_stream_redirector.xhtml#a4665cd416148c6226a0214a14980cf8e">   46</a></span>&#160;    <a class="code" href="structarmnn_1_1profiling_1_1_stream_redirector.xhtml#a4665cd416148c6226a0214a14980cf8e">StreamRedirector</a>(std::ostream&amp; stream, std::streambuf* newStreamBuffer)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        : m_Stream(stream)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        , m_BackupBuffer(m_Stream.rdbuf(newStreamBuffer))</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    {}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_stream_redirector.xhtml#a33f1ac84f2d52a4b268fa8926d7a75bd">   51</a></span>&#160;    <a class="code" href="structarmnn_1_1profiling_1_1_stream_redirector.xhtml#a33f1ac84f2d52a4b268fa8926d7a75bd">~StreamRedirector</a>() { CancelRedirect(); }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_stream_redirector.xhtml#adc27fcb4c488ac39dc401a966315c24d">   53</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structarmnn_1_1profiling_1_1_stream_redirector.xhtml#adc27fcb4c488ac39dc401a966315c24d">CancelRedirect</a>()</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="comment">// Only cancel the redirect once.</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordflow">if</span> (m_BackupBuffer != <span class="keyword">nullptr</span> )</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            m_Stream.rdbuf(m_BackupBuffer);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            m_BackupBuffer = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    std::ostream&amp; m_Stream;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    std::streambuf* m_BackupBuffer;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;};</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml">   68</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml">TestProfilingConnectionBase</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml">IProfilingConnection</a></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml">TestProfilingConnectionBase</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    ~<a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml">TestProfilingConnectionBase</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a91bdc9d5497d47f5d707418beb83b140">   74</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a91bdc9d5497d47f5d707418beb83b140">IsOpen</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a0f9aecd570c4e5e6d41337f0e2f1adf5">   76</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a0f9aecd570c4e5e6d41337f0e2f1adf5">Close</a>()<span class="keyword"> override </span>{}</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a42eb542b5a1d73d00c4ce474140bb78c">   78</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a42eb542b5a1d73d00c4ce474140bb78c">WritePacket</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer, uint32_t length)<span class="keyword"> override</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(buffer, length);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a1adbda8257d3a74a0566e0d8407ff458">   85</a></span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_packet.xhtml">Packet</a> <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a1adbda8257d3a74a0566e0d8407ff458">ReadPacket</a>(uint32_t timeout)<span class="keyword"> override</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="comment">// First time we&#39;re called return a connection ack packet. After that always timeout.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">if</span> (m_FirstCall)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            m_FirstCall = <span class="keyword">false</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="comment">// Return connection acknowledged packet</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1profiling_1_1_packet.xhtml">Packet</a>(65536);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            std::this_thread::sleep_for(std::chrono::milliseconds(timeout));</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_timeout_exception.xhtml">armnn::TimeoutException</a>(<span class="stringliteral">&quot;Simulate a timeout error\n&quot;</span>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a4d3bb34842f24c4f16e09dad7fee71e8">  101</a></span>&#160;    <span class="keywordtype">bool</span> m_FirstCall = <span class="keyword">true</span>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;};</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error.xhtml">  104</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error.xhtml">TestProfilingConnectionTimeoutError</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml">TestProfilingConnectionBase</a></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error.xhtml#a18f0288913ca61defcaa34c8d0a40e8c">  107</a></span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error.xhtml#a18f0288913ca61defcaa34c8d0a40e8c">TestProfilingConnectionTimeoutError</a>()</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        : m_ReadRequests(0)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {}</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error.xhtml#a1adbda8257d3a74a0566e0d8407ff458">  111</a></span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_packet.xhtml">Packet</a> <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error.xhtml#a1adbda8257d3a74a0566e0d8407ff458">ReadPacket</a>(uint32_t timeout)<span class="keyword"> override</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="comment">// Return connection acknowledged packet after three timeouts</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">if</span> (m_ReadRequests % 3 == 0)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            std::this_thread::sleep_for(std::chrono::milliseconds(timeout));</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            ++m_ReadRequests;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_timeout_exception.xhtml">armnn::TimeoutException</a>(<span class="stringliteral">&quot;Simulate a timeout error\n&quot;</span>);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1profiling_1_1_packet.xhtml">Packet</a>(65536);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error.xhtml#afb1d388dbb6bed7623ef1d3fb52fb52b">  124</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error.xhtml#afb1d388dbb6bed7623ef1d3fb52fb52b">ReadCalledCount</a>()</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">return</span> m_ReadRequests.load();</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    std::atomic&lt;int&gt; m_ReadRequests;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;};</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error.xhtml">  133</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error.xhtml">TestProfilingConnectionArmnnError</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml">TestProfilingConnectionBase</a></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error.xhtml#ac78cdd7a5d1ea251e57140b6935aec01">  136</a></span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error.xhtml#ac78cdd7a5d1ea251e57140b6935aec01">TestProfilingConnectionArmnnError</a>()</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        : m_ReadRequests(0)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    {}</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error.xhtml#a1adbda8257d3a74a0566e0d8407ff458">  140</a></span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_packet.xhtml">Packet</a> <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error.xhtml#a1adbda8257d3a74a0566e0d8407ff458">ReadPacket</a>(uint32_t timeout)<span class="keyword"> override</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(timeout);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        ++m_ReadRequests;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_exception.xhtml">armnn::Exception</a>(<span class="stringliteral">&quot;Simulate a non-timeout error&quot;</span>);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error.xhtml#afb1d388dbb6bed7623ef1d3fb52fb52b">  147</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error.xhtml#afb1d388dbb6bed7623ef1d3fb52fb52b">ReadCalledCount</a>()</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">return</span> m_ReadRequests.load();</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    }</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    std::atomic&lt;int&gt; m_ReadRequests;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;};</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_bad_ack_packet.xhtml">  156</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_bad_ack_packet.xhtml">TestProfilingConnectionBadAckPacket</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml">TestProfilingConnectionBase</a></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;{</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_profiling_connection_bad_ack_packet.xhtml#a1adbda8257d3a74a0566e0d8407ff458">  159</a></span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_packet.xhtml">Packet</a> <a class="code" href="classarmnn_1_1profiling_1_1_test_profiling_connection_bad_ack_packet.xhtml#a1adbda8257d3a74a0566e0d8407ff458">ReadPacket</a>(uint32_t timeout)<span class="keyword"> override</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(timeout);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="comment">// Connection Acknowledged Packet header (word 0, word 1 is always zero):</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="comment">// 26:31 [6]  packet_family: Control Packet Family, value 0b000000</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="comment">// 16:25 [10] packet_id: Packet identifier, value 0b0000000001</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="comment">// 8:15  [8]  reserved: Reserved, value 0b00000000</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="comment">// 0:7   [8]  reserved: Reserved, value 0b00000000</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        uint32_t packetFamily = 0;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        uint32_t packetId     = 37;    <span class="comment">// Wrong packet id!!!</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        uint32_t header       = ((packetFamily &amp; 0x0000003F) &lt;&lt; 26) | ((packetId &amp; 0x000003FF) &lt;&lt; 16);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1profiling_1_1_packet.xhtml">Packet</a>(header);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;};</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_functor_a.xhtml">  175</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1profiling_1_1_test_functor_a.xhtml">TestFunctorA</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1profiling_1_1_command_handler_functor.xhtml">CommandHandlerFunctor</a></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;{</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1profiling_1_1_command_handler_functor.xhtml#ad88cf21899e5a0ee2d803eabf3f5dd04">CommandHandlerFunctor::CommandHandlerFunctor</a>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_functor_a.xhtml#a9cbf98c17d6b7027e60c59fb8ad69a85">  180</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_functor_a.xhtml#a9cbf98c17d6b7027e60c59fb8ad69a85">GetCount</a>() { <span class="keywordflow">return</span> m_Count; }</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_functor_a.xhtml#a0a4b0531c573c4474c241b778c5f5897">  182</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_functor_a.xhtml#a0a4b0531c573c4474c241b778c5f5897">operator()</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1profiling_1_1_packet.xhtml">Packet</a>&amp; packet)<span class="keyword"> override</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(packet);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        m_Count++;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    }</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordtype">int</span> m_Count = 0;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;};</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_functor_b.xhtml">  192</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1profiling_1_1_test_functor_b.xhtml">TestFunctorB</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_functor_a.xhtml">TestFunctorA</a></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keyword">using</span> TestFunctorA::TestFunctorA;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;};</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_functor_c.xhtml">  197</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1profiling_1_1_test_functor_c.xhtml">TestFunctorC</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_functor_a.xhtml">TestFunctorA</a></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;{</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keyword">using</span> TestFunctorA::TestFunctorA;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;};</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml">  202</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml">SwapProfilingConnectionFactoryHelper</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">ProfilingService</a></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;{</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a2c1ea69edf1cdf5889be8844757342e9">  205</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a2c1ea69edf1cdf5889be8844757342e9">MockProfilingConnectionFactoryPtr</a> = std::unique_ptr&lt;MockProfilingConnectionFactory&gt;;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a25f1d8209e813c26c5b8ca11a36c18b8">  207</a></span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a25f1d8209e813c26c5b8ca11a36c18b8">SwapProfilingConnectionFactoryHelper</a>()</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        : <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">ProfilingService</a>()</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        , m_MockProfilingConnectionFactory(new <a class="code" href="classarmnn_1_1profiling_1_1_mock_profiling_connection_factory.xhtml">MockProfilingConnectionFactory</a>())</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        , m_BackupProfilingConnectionFactory(nullptr)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(m_MockProfilingConnectionFactory);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        SwapProfilingConnectionFactory(<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a6d016886de3596fe67dbabf107168f97">ProfilingService::Instance</a>(),</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                       m_MockProfilingConnectionFactory.get(),</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                                       m_BackupProfilingConnectionFactory);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(m_BackupProfilingConnectionFactory);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    }</div><div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#ac74652db3008db9cf64f785f2ae0de81">  218</a></span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#ac74652db3008db9cf64f785f2ae0de81">~SwapProfilingConnectionFactoryHelper</a>()</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    {</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(m_BackupProfilingConnectionFactory);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <a class="code" href="classarmnn_1_1profiling_1_1_i_profiling_connection_factory.xhtml">IProfilingConnectionFactory</a>* temp = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        SwapProfilingConnectionFactory(<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a6d016886de3596fe67dbabf107168f97">ProfilingService::Instance</a>(),</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                                       m_BackupProfilingConnectionFactory,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                       temp);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    }</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a8ccd73b0bb970c18b05a0bc63fcd0279">  227</a></span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_mock_profiling_connection.xhtml">MockProfilingConnection</a>* <a class="code" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a8ccd73b0bb970c18b05a0bc63fcd0279">GetMockProfilingConnection</a>()</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <a class="code" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml">IProfilingConnection</a>* profilingConnection = GetProfilingConnection(<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a6d016886de3596fe67dbabf107168f97">ProfilingService::Instance</a>());</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">return</span> boost::polymorphic_downcast&lt;MockProfilingConnection*&gt;(profilingConnection);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a03f72b1ccbef21ab7caafb037ce2144c">  233</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a03f72b1ccbef21ab7caafb037ce2144c">ForceTransitionToState</a>(<a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806">ProfilingState</a> newState)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        TransitionToState(<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a6d016886de3596fe67dbabf107168f97">ProfilingService::Instance</a>(), newState);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    }</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a19cea020509e009eb4661618eecf3cf3">  238</a></span>&#160;    <span class="keywordtype">long</span> <a class="code" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a19cea020509e009eb4661618eecf3cf3">WaitForPacketsSent</a>(<a class="code" href="classarmnn_1_1profiling_1_1_mock_profiling_connection.xhtml">MockProfilingConnection</a>* mockProfilingConnection,</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                            <a class="code" href="classarmnn_1_1profiling_1_1_mock_profiling_connection.xhtml#a0a80a7bc045affcf10846075b88cbca0">MockProfilingConnection::PacketType</a> packetType,</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                            uint32_t length = 0,</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                            uint32_t timeout  = 1000)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordtype">long</span> <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ae92a562353e3e0f6db4b9c6f4c573587">packetCount</a> = mockProfilingConnection-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_mock_profiling_connection.xhtml#a1de32cbfa025fc6e4eb2ff7a4fd16d6b">CheckForPacket</a>({packetType, length});</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="comment">// The first packet we receive may not be the one we are looking for, so keep looping until till we find it,</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="comment">// or until WaitForPacketsSent times out</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">while</span>(packetCount == 0 &amp;&amp; timeout != 0)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <span class="comment">// Wait for a notification from the send thread</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#adc4b29d0bfe41252ef520acfa5bc897c">ProfilingService::WaitForPacketSent</a>(<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a6d016886de3596fe67dbabf107168f97">ProfilingService::Instance</a>(), timeout);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            <span class="comment">// We need to make sure the timeout does not reset each time we call WaitForPacketsSent</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            uint32_t elapsedTime = <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                    std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(end - start).count());</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            packetCount = mockProfilingConnection-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_mock_profiling_connection.xhtml#a1de32cbfa025fc6e4eb2ff7a4fd16d6b">CheckForPacket</a>({packetType, length});</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            <span class="keywordflow">if</span> (elapsedTime &gt; timeout)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            {</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            }</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            timeout -= elapsedTime;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ae92a562353e3e0f6db4b9c6f4c573587">packetCount</a>;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    }</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a2c1ea69edf1cdf5889be8844757342e9">MockProfilingConnectionFactoryPtr</a> m_MockProfilingConnectionFactory;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_i_profiling_connection_factory.xhtml">IProfilingConnectionFactory</a>* m_BackupProfilingConnectionFactory;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;};</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;} <span class="comment">// namespace profiling</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_base_xhtml_a1adbda8257d3a74a0566e0d8407ff458"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a1adbda8257d3a74a0566e0d8407ff458">armnn::profiling::TestProfilingConnectionBase::ReadPacket</a></div><div class="ttdeci">Packet ReadPacket(uint32_t timeout) override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00085">ProfilingTests.hpp:85</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_log_level_swapper_xhtml_aca94feddb34e235385f38e73a21c57c1"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_log_level_swapper.xhtml#aca94feddb34e235385f38e73a21c57c1">armnn::profiling::LogLevelSwapper::LogLevelSwapper</a></div><div class="ttdeci">LogLevelSwapper(armnn::LogSeverity severity)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00031">ProfilingTests.hpp:31</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_stream_redirector_xhtml_a33f1ac84f2d52a4b268fa8926d7a75bd"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_stream_redirector.xhtml#a33f1ac84f2d52a4b268fa8926d7a75bd">armnn::profiling::StreamRedirector::~StreamRedirector</a></div><div class="ttdeci">~StreamRedirector()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00051">ProfilingTests.hpp:51</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_a6d016886de3596fe67dbabf107168f97"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a6d016886de3596fe67dbabf107168f97">armnn::profiling::ProfilingService::Instance</a></div><div class="ttdeci">static ProfilingService &amp; Instance()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8hpp_source.xhtml#l00052">ProfilingService.hpp:52</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper_xhtml_a19cea020509e009eb4661618eecf3cf3"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a19cea020509e009eb4661618eecf3cf3">armnn::profiling::SwapProfilingConnectionFactoryHelper::WaitForPacketsSent</a></div><div class="ttdeci">long WaitForPacketsSent(MockProfilingConnection *mockProfilingConnection, MockProfilingConnection::PacketType packetType, uint32_t length=0, uint32_t timeout=1000)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00238">ProfilingTests.hpp:238</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_mock_profiling_connection_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_mock_profiling_connection_factory.xhtml">armnn::profiling::MockProfilingConnectionFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_mocks_8hpp_source.xhtml#l00160">ProfilingMocks.hpp:160</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error.xhtml">armnn::profiling::TestProfilingConnectionTimeoutError</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00104">ProfilingTests.hpp:104</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_functor_a_xhtml_a0a4b0531c573c4474c241b778c5f5897"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_functor_a.xhtml#a0a4b0531c573c4474c241b778c5f5897">armnn::profiling::TestFunctorA::operator()</a></div><div class="ttdeci">void operator()(const Packet &amp;packet) override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00182">ProfilingTests.hpp:182</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_ae92a562353e3e0f6db4b9c6f4c573587"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#ae92a562353e3e0f6db4b9c6f4c573587">packetCount</a></div><div class="ttdeci">uint32_t packetCount</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00068">FileOnlyProfilingDecoratorTests.cpp:68</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_stream_redirector_xhtml_a4665cd416148c6226a0214a14980cf8e"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_stream_redirector.xhtml#a4665cd416148c6226a0214a14980cf8e">armnn::profiling::StreamRedirector::StreamRedirector</a></div><div class="ttdeci">StreamRedirector(std::ostream &amp;stream, std::streambuf *newStreamBuffer)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00046">ProfilingTests.hpp:46</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_aa59f7a819c3e29d10ffc41e5c0616872"><div class="ttname"><a href="namespacearmnn.xhtml#aa59f7a819c3e29d10ffc41e5c0616872">armnn::ConfigureLogging</a></div><div class="ttdeci">void ConfigureLogging(bool printToStandardOutput, bool printToDebugOutput, LogSeverity severity)</div><div class="ttdoc">Configures the logging behaviour of the ARMNN library. </div><div class="ttdef"><b>Definition:</b> <a href="_utils_8cpp_source.xhtml#l00010">Utils.cpp:10</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper_xhtml_a03f72b1ccbef21ab7caafb037ce2144c"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a03f72b1ccbef21ab7caafb037ce2144c">armnn::profiling::SwapProfilingConnectionFactoryHelper::ForceTransitionToState</a></div><div class="ttdeci">void ForceTransitionToState(ProfilingState newState)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00233">ProfilingTests.hpp:233</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_bad_ack_packet_xhtml_a1adbda8257d3a74a0566e0d8407ff458"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_bad_ack_packet.xhtml#a1adbda8257d3a74a0566e0d8407ff458">armnn::profiling::TestProfilingConnectionBadAckPacket::ReadPacket</a></div><div class="ttdeci">Packet ReadPacket(uint32_t timeout) override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00159">ProfilingTests.hpp:159</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a93a3ba385cad27c4774e5fe64c025d3da882384ec38ce8d9582b57e70861730e4"><div class="ttname"><a href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3da882384ec38ce8d9582b57e70861730e4">armnn::LogSeverity::Fatal</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_base_xhtml_a0f9aecd570c4e5e6d41337f0e2f1adf5"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a0f9aecd570c4e5e6d41337f0e2f1adf5">armnn::profiling::TestProfilingConnectionBase::Close</a></div><div class="ttdeci">void Close() override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00076">ProfilingTests.hpp:76</a></div></div>
<div class="ttc" id="_command_handler_functor_8hpp_xhtml"><div class="ttname"><a href="_command_handler_functor_8hpp.xhtml">CommandHandlerFunctor.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_stream_redirector_xhtml"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_stream_redirector.xhtml">armnn::profiling::StreamRedirector</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00043">ProfilingTests.hpp:43</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_bad_ack_packet_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_bad_ack_packet.xhtml">armnn::profiling::TestProfilingConnectionBadAckPacket</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00156">ProfilingTests.hpp:156</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_profiling_connection_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_profiling_connection_factory.xhtml">armnn::profiling::IProfilingConnectionFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_profiling_connection_factory_8hpp_source.xhtml#l00020">IProfilingConnectionFactory.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2020 ARM Limited. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00025">00_introduction.dox:25</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a0c262ba6f6c189a2d092d127c1b7627b"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a></div><div class="ttdeci">BOOST_CHECK(profilingService.GetCurrentState()==ProfilingState::WaitingForAck)</div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml">armnn::profiling::SwapProfilingConnectionFactoryHelper</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00202">ProfilingTests.hpp:202</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_functor_a_xhtml_a9cbf98c17d6b7027e60c59fb8ad69a85"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_functor_a.xhtml#a9cbf98c17d6b7027e60c59fb8ad69a85">armnn::profiling::TestFunctorA::GetCount</a></div><div class="ttdeci">int GetCount()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00180">ProfilingTests.hpp:180</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_adc4b29d0bfe41252ef520acfa5bc897c"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#adc4b29d0bfe41252ef520acfa5bc897c">armnn::profiling::ProfilingService::WaitForPacketSent</a></div><div class="ttdeci">bool WaitForPacketSent(ProfilingService &amp;instance, uint32_t timeout=1000)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8hpp_source.xhtml#l00244">ProfilingService.hpp:244</a></div></div>
<div class="ttc" id="classarmnn_1_1_timeout_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_timeout_exception.xhtml">armnn::TimeoutException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00135">Exceptions.hpp:135</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_base_xhtml_a91bdc9d5497d47f5d707418beb83b140"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a91bdc9d5497d47f5d707418beb83b140">armnn::profiling::TestProfilingConnectionBase::IsOpen</a></div><div class="ttdeci">bool IsOpen() const override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00074">ProfilingTests.hpp:74</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_functor_b_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_functor_b.xhtml">armnn::profiling::TestFunctorB</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00192">ProfilingTests.hpp:192</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_mock_profiling_connection_xhtml_a0a80a7bc045affcf10846075b88cbca0"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_mock_profiling_connection.xhtml#a0a80a7bc045affcf10846075b88cbca0">armnn::profiling::MockProfilingConnection::PacketType</a></div><div class="ttdeci">PacketType</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_mocks_8hpp_source.xhtml#l00044">ProfilingMocks.hpp:44</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_command_handler_functor_xhtml_ad88cf21899e5a0ee2d803eabf3f5dd04"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_command_handler_functor.xhtml#ad88cf21899e5a0ee2d803eabf3f5dd04">armnn::profiling::CommandHandlerFunctor::CommandHandlerFunctor</a></div><div class="ttdeci">CommandHandlerFunctor(uint32_t familyId, uint32_t packetId, uint32_t version)</div><div class="ttdef"><b>Definition:</b> <a href="_command_handler_functor_8hpp_source.xhtml#l00023">CommandHandlerFunctor.hpp:23</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error_xhtml_ac78cdd7a5d1ea251e57140b6935aec01"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error.xhtml#ac78cdd7a5d1ea251e57140b6935aec01">armnn::profiling::TestProfilingConnectionArmnnError::TestProfilingConnectionArmnnError</a></div><div class="ttdeci">TestProfilingConnectionArmnnError()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00136">ProfilingTests.hpp:136</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_packet_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_packet.xhtml">armnn::profiling::Packet</a></div><div class="ttdef"><b>Definition:</b> <a href="_packet_8hpp_source.xhtml#l00018">Packet.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error_xhtml_a18f0288913ca61defcaa34c8d0a40e8c"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error.xhtml#a18f0288913ca61defcaa34c8d0a40e8c">armnn::profiling::TestProfilingConnectionTimeoutError::TestProfilingConnectionTimeoutError</a></div><div class="ttdeci">TestProfilingConnectionTimeoutError()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00107">ProfilingTests.hpp:107</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error_xhtml_afb1d388dbb6bed7623ef1d3fb52fb52b"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error.xhtml#afb1d388dbb6bed7623ef1d3fb52fb52b">armnn::profiling::TestProfilingConnectionTimeoutError::ReadCalledCount</a></div><div class="ttdeci">int ReadCalledCount()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00124">ProfilingTests.hpp:124</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_base_xhtml_a42eb542b5a1d73d00c4ce474140bb78c"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml#a42eb542b5a1d73d00c4ce474140bb78c">armnn::profiling::TestProfilingConnectionBase::WritePacket</a></div><div class="ttdeci">bool WritePacket(const unsigned char *buffer, uint32_t length) override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00078">ProfilingTests.hpp:78</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_command_handler_functor_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_command_handler_functor.xhtml">armnn::profiling::CommandHandlerFunctor</a></div><div class="ttdef"><b>Definition:</b> <a href="_command_handler_functor_8hpp_source.xhtml#l00020">CommandHandlerFunctor.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error_xhtml_a1adbda8257d3a74a0566e0d8407ff458"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_timeout_error.xhtml#a1adbda8257d3a74a0566e0d8407ff458">armnn::profiling::TestProfilingConnectionTimeoutError::ReadPacket</a></div><div class="ttdeci">Packet ReadPacket(uint32_t timeout) override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00111">ProfilingTests.hpp:111</a></div></div>
<div class="ttc" id="_logging_8hpp_xhtml"><div class="ttname"><a href="_logging_8hpp.xhtml">Logging.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_mock_profiling_connection_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_mock_profiling_connection.xhtml">armnn::profiling::MockProfilingConnection</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_mocks_8hpp_source.xhtml#l00035">ProfilingMocks.hpp:35</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper_xhtml_a8ccd73b0bb970c18b05a0bc63fcd0279"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a8ccd73b0bb970c18b05a0bc63fcd0279">armnn::profiling::SwapProfilingConnectionFactoryHelper::GetMockProfilingConnection</a></div><div class="ttdeci">MockProfilingConnection * GetMockProfilingConnection()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00227">ProfilingTests.hpp:227</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">armnn::profiling::ProfilingService</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8hpp_source.xhtml#l00042">ProfilingService.hpp:42</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_log_level_swapper_xhtml"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_log_level_swapper.xhtml">armnn::profiling::LogLevelSwapper</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00028">ProfilingTests.hpp:28</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_profiling_connection_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml">armnn::profiling::IProfilingConnection</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_profiling_connection_8hpp_source.xhtml#l00018">IProfilingConnection.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml">armnn::Exception</a></div><div class="ttdoc">Base class for all ArmNN exceptions so that users can filter to just those. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00046">Exceptions.hpp:46</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper_xhtml_ac74652db3008db9cf64f785f2ae0de81"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#ac74652db3008db9cf64f785f2ae0de81">armnn::profiling::SwapProfilingConnectionFactoryHelper::~SwapProfilingConnectionFactoryHelper</a></div><div class="ttdeci">~SwapProfilingConnectionFactoryHelper()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00218">ProfilingTests.hpp:218</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper_xhtml_a25f1d8209e813c26c5b8ca11a36c18b8"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a25f1d8209e813c26c5b8ca11a36c18b8">armnn::profiling::SwapProfilingConnectionFactoryHelper::SwapProfilingConnectionFactoryHelper</a></div><div class="ttdeci">SwapProfilingConnectionFactoryHelper()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00207">ProfilingTests.hpp:207</a></div></div>
<div class="ttc" id="_i_profiling_connection_8hpp_xhtml"><div class="ttname"><a href="_i_profiling_connection_8hpp.xhtml">IProfilingConnection.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acb0c054138599582d5a5f537e9798806"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806">armnn::profiling::ProfilingState</a></div><div class="ttdeci">ProfilingState</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_state_machine_8hpp_source.xhtml#l00018">ProfilingStateMachine.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error.xhtml">armnn::profiling::TestProfilingConnectionArmnnError</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00133">ProfilingTests.hpp:133</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_mock_profiling_connection_xhtml_a1de32cbfa025fc6e4eb2ff7a4fd16d6b"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_mock_profiling_connection.xhtml#a1de32cbfa025fc6e4eb2ff7a4fd16d6b">armnn::profiling::MockProfilingConnection::CheckForPacket</a></div><div class="ttdeci">long CheckForPacket(const std::pair&lt; PacketType, uint32_t &gt; packetInfo)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_mocks_8hpp_source.xhtml#l00106">ProfilingMocks.hpp:106</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error_xhtml_a1adbda8257d3a74a0566e0d8407ff458"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error.xhtml#a1adbda8257d3a74a0566e0d8407ff458">armnn::profiling::TestProfilingConnectionArmnnError::ReadPacket</a></div><div class="ttdeci">Packet ReadPacket(uint32_t timeout) override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00140">ProfilingTests.hpp:140</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_functor_c_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_functor_c.xhtml">armnn::profiling::TestFunctorC</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00197">ProfilingTests.hpp:197</a></div></div>
<div class="ttc" id="_profiling_mocks_8hpp_xhtml"><div class="ttname"><a href="_profiling_mocks_8hpp.xhtml">ProfilingMocks.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_base_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_base.xhtml">armnn::profiling::TestProfilingConnectionBase</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00068">ProfilingTests.hpp:68</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a93a3ba385cad27c4774e5fe64c025d3d"><div class="ttname"><a href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a></div><div class="ttdeci">LogSeverity</div><div class="ttdef"><b>Definition:</b> <a href="_utils_8hpp_source.xhtml#l00012">Utils.hpp:12</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error_xhtml_afb1d388dbb6bed7623ef1d3fb52fb52b"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_profiling_connection_armnn_error.xhtml#afb1d388dbb6bed7623ef1d3fb52fb52b">armnn::profiling::TestProfilingConnectionArmnnError::ReadCalledCount</a></div><div class="ttdeci">int ReadCalledCount()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00147">ProfilingTests.hpp:147</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_functor_a_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_functor_a.xhtml">armnn::profiling::TestFunctorA</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00175">ProfilingTests.hpp:175</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_log_level_swapper_xhtml_aa1071a3676d3655cd75a41491a27d95a"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_log_level_swapper.xhtml#aa1071a3676d3655cd75a41491a27d95a">armnn::profiling::LogLevelSwapper::~LogLevelSwapper</a></div><div class="ttdeci">~LogLevelSwapper()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00036">ProfilingTests.hpp:36</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper_xhtml_a2c1ea69edf1cdf5889be8844757342e9"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_swap_profiling_connection_factory_helper.xhtml#a2c1ea69edf1cdf5889be8844757342e9">armnn::profiling::SwapProfilingConnectionFactoryHelper::MockProfilingConnectionFactoryPtr</a></div><div class="ttdeci">std::unique_ptr&lt; MockProfilingConnectionFactory &gt; MockProfilingConnectionFactoryPtr</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00205">ProfilingTests.hpp:205</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_stream_redirector_xhtml_adc27fcb4c488ac39dc401a966315c24d"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_stream_redirector.xhtml#adc27fcb4c488ac39dc401a966315c24d">armnn::profiling::StreamRedirector::CancelRedirect</a></div><div class="ttdeci">void CancelRedirect()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_tests_8hpp_source.xhtml#l00053">ProfilingTests.hpp:53</a></div></div>
<div class="ttc" id="_profiling_service_8hpp_xhtml"><div class="ttname"><a href="_profiling_service_8hpp.xhtml">ProfilingService.hpp</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_637c692f14729569dd2eac0c18e2a54a.xhtml">profiling</a></li><li class="navelem"><a class="el" href="dir_6b1198f6e738611120ec65b09506d2f8.xhtml">test</a></li><li class="navelem"><a class="el" href="_profiling_tests_8hpp.xhtml">ProfilingTests.hpp</a></li>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:13 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
