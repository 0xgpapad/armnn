<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_neon_workload_factory.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NeonWorkloadFactory Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a902422ffa1b0076458972c3be051e44d">CreateAbs</a>(const AbsQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#af5f7b0f6273c838b6b7d7de8447524f9">CreateActivation</a>(const ActivationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a46e1398968d2f4951ce1fd2b9b70fc5b">CreateAddition</a>(const AdditionQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a3fffcec3624e83671b4623e22ca623e5">CreateArgMinMax</a>(const ArgMinMaxQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a3e5a5e967dfd56b9b1d55ec2739f2edd">CreateBatchNormalization</a>(const BatchNormalizationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a1d54b5c774bdac45f22d1ec57d0a9f3f">CreateBatchToSpaceNd</a>(const BatchToSpaceNdQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;Info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a3d6501ad29a91db467a01ed0e36a96d2">CreateComparison</a>(const ComparisonQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;Info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a6c8caa2fb12f36f83fde85da03a87c42">CreateConcat</a>(const ConcatQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#aa6ef3324f715ccf62d235aa54118d174">CreateConstant</a>(const ConstantQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#aefe6a68cb6d7ba517d7988195680c831">CreateConvertFp16ToFp32</a>(const ConvertFp16ToFp32QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a33b291201b6716e295afb17c1eb0864e">CreateConvertFp32ToFp16</a>(const ConvertFp32ToFp16QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a004cfce1311cd19d48b6705f4d80aa6c">CreateConvolution2d</a>(const Convolution2dQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#aca1333805c6665111154f10cc72c8234">CreateDebug</a>(const DebugQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#af77fb45622aedb3f2ee36b412fea8735">CreateDepthToSpace</a>(const DepthToSpaceQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a48ebe514c1ca3e41edccdd7682bf38ca">CreateDepthwiseConvolution2d</a>(const DepthwiseConvolution2dQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#ab345edf481dd64a3ced4c0808d4ee844">CreateDequantize</a>(const DequantizeQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a3a2d9b8e1156605172ada1472e9460cd">CreateDetectionPostProcess</a>(const DetectionPostProcessQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a94a90252763f05b6c957f68f84e65c66">CreateDivision</a>(const DivisionQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a447013b9d70a1d74196449d1a3f56acc">CreateElementwiseUnary</a>(const ElementwiseUnaryQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;Info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#aa31f52c6b8c2092a41acb4890b910d2b">CreateEqual</a>(const EqualQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_workload_factory_base.xhtml#a5ebad711e7e91ca3fd60eed73686a482">CreateFakeQuantization</a>(const FakeQuantizationQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_workload_factory_base.xhtml">WorkloadFactoryBase</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#aac4c7cd17cf3dc3a23fd4a21933c60cb">CreateFloor</a>(const FloorQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a3b1e84836871f27a15add7f08736f139">CreateFullyConnected</a>(const FullyConnectedQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a674b6d6de1db47959ad36831976ca3aa">CreateGather</a>(const GatherQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a0b7d11f98c9c17dd23a94666fe35f226">CreateGreater</a>(const GreaterQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a7b06edab4eef1822445e4201a1262635">CreateInput</a>(const InputQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a5c2f4f703e07407e70c30cc770d02d6b">CreateInstanceNormalization</a>(const InstanceNormalizationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a1c511b4b70bc0b6cccbef2285ba292bc">CreateL2Normalization</a>(const L2NormalizationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_workload_factory_base.xhtml#a04a3ae3944eb63e7e94c6e9676815864">CreateLogSoftmax</a>(const LogSoftmaxQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_workload_factory_base.xhtml">WorkloadFactoryBase</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a0dce100ea0fc5c44798736a4d879bd4d">CreateLstm</a>(const LstmQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#ae2c6c12059f9cde37ff6bb8f682e9ceb">CreateMaximum</a>(const MaximumQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#aba5032787777bf0074ce70e2c2423d49">CreateMean</a>(const MeanQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;Info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#aa07df85c33d6e3ea4891b5f344df6964">CreateMemCopy</a>(const MemCopyQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a1786f52370ba933427837a2179305773">CreateMemImport</a>(const MemImportQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_workload_factory_base.xhtml#ac05fd4710da8c304db555fb5f597d614">CreateMerge</a>(const MergeQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_workload_factory_base.xhtml">WorkloadFactoryBase</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a9f6500bc4fc71e20292c5d229afee4eb">CreateMerger</a>(const MergerQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a39927b6e1faae50d9f804b435430bbf2">CreateMinimum</a>(const MinimumQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#af7ba09a42932a341c966f1ba1f596861">CreateMultiplication</a>(const MultiplicationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a3334b1fbbf87863e3b40a6194b9e0199">CreateNormalization</a>(const NormalizationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a5d463f116733f47ce2bab08e430d1ba2">CreateOutput</a>(const OutputQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a8fb2b01fe17e49e997fe59d86e4d5c9a">CreatePad</a>(const PadQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a59399d21babdc3a17df004dfa64617ea">CreatePermute</a>(const PermuteQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a6e05a05ea7ea2c384c94d6568f032614">CreatePooling2d</a>(const Pooling2dQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a3f21c47a41cbbcfe7d74becd76766c80">CreatePreCompiled</a>(const PreCompiledQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#aca8d797b1e48d693de73e868b3aa41ec">CreatePrelu</a>(const PreluQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a6a58a15e291291722dc9a4517d2974eb">CreateQuantize</a>(const QuantizeQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a166569e6ac31c22484612c77690c3eff">CreateQuantizedLstm</a>(const QuantizedLstmQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a85d2e898648c795f462a15f5c03a67ac">CreateReshape</a>(const ReshapeQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a3f15b1b391dd86de376ce541eadca3fa">CreateResize</a>(const ResizeQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a12b5d302d3707fbbc0275a4683c59349">CreateResizeBilinear</a>(const ResizeBilinearQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#afddaf1bce21f092a34d877cffac411a3">CreateRsqrt</a>(const RsqrtQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#abda2c9b7c5fe4ca092d2224ba9679a06">CreateSlice</a>(const SliceQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a457c416483289cc7c8a8511a67d95816">CreateSoftmax</a>(const SoftmaxQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a1d1feb2b5c6a4c6701a3dee01e65bee4">CreateSpaceToBatchNd</a>(const SpaceToBatchNdQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a2318d942f9615dff92fe75688bdd8c48">CreateSpaceToDepth</a>(const SpaceToDepthQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#aa98def0f9b9ff714a013f8083bbadf82">CreateSplitter</a>(const SplitterQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a4d5371f67eabb04a38c69e97e67f1d35">CreateStack</a>(const StackQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a5c46866e2a0d83e350ff70c12d9613bf">CreateStridedSlice</a>(const StridedSliceQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#abefb9df9d7a54cf2f82047ea350d0388">CreateSubTensorHandle</a>(ITensorHandle &amp;parent, TensorShape const &amp;subTensorShape, unsigned int const *subTensorOrigin) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a61d64ca308b8af42b422e13382329021">CreateSubtraction</a>(const SubtractionQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_workload_factory_base.xhtml#a032cba0444de559937381f17bcbe48f5">CreateSwitch</a>(const SwitchQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_workload_factory_base.xhtml">WorkloadFactoryBase</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a7239477811c44d4398f0c2d291d9ea76">CreateTensorHandle</a>(const TensorInfo &amp;tensorInfo, const bool IsMemoryManaged=true) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#aaed323bbcbaded57334783e4732ee3ed">CreateTensorHandle</a>(const TensorInfo &amp;tensorInfo, DataLayout dataLayout, const bool IsMemoryManaged=true) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#aac9d1b722bcd5b59cc6760ca2607ef8e">CreateTranspose</a>(const TransposeQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a29e02d375261a32c39635d6833a49333">CreateTransposeConvolution2d</a>(const TransposeConvolution2dQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#ae2cd7e29596b68884bfaade25f8f0dc0">GetBackendId</a>() const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a9992ea7c353e8597fbd8ae426f4612ae">IsLayerSupported</a>(const Layer &amp;layer, Optional&lt; DataType &gt; dataType, std::string &amp;outReasonIfUnsupported)</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml#a74dc9ec1a223eab8b072368b2dacee87">armnn::WorkloadFactoryBase::IsLayerSupported</a>(const BackendId &amp;backendId, const IConnectableLayer &amp;layer, Optional&lt; DataType &gt; dataType, std::string &amp;outReasonIfUnsupported)</td><td class="entry"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">IWorkloadFactory</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml#a7d94ea841143b76fe08ccb308839bfd7">armnn::WorkloadFactoryBase::IsLayerSupported</a>(const IConnectableLayer &amp;layer, Optional&lt; DataType &gt; dataType, std::string &amp;outReasonIfUnsupported)</td><td class="entry"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">IWorkloadFactory</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#a19a681524fa55169540fcccb9dcefaa6">NeonWorkloadFactory</a>(const std::shared_ptr&lt; NeonMemoryManager &gt; &amp;memoryManager)</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml#aed0a782f32856bde72bc10d9381dc11e">SupportsSubTensors</a>() const override</td><td class="entry"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml#aab62208f96483015c29ad58549efedd8">~IWorkloadFactory</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">IWorkloadFactory</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:19 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
