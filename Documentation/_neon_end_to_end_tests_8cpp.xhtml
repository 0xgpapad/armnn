<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/neon/test/NeonEndToEndTests.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_neon_end_to_end_tests_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">NeonEndToEndTests.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/EndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_arg_min_max_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/ArgMinMaxEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_comparison_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/ComparisonEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_concat_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/ConcatEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_depth_to_space_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/DepthToSpaceEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_dequantize_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/DequantizeEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_detection_post_process_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/DetectionPostProcessEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_elementwise_unary_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/ElementwiseUnaryEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_instance_normalization_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/InstanceNormalizationEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_prelu_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/PreluEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_quantized_lstm_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/QuantizedLstmEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_space_to_depth_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/SpaceToDepthEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_splitter_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/SplitterEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_transpose_convolution2d_end_to_end_test_impl_8hpp_source.xhtml">backendsCommon/test/TransposeConvolution2dEndToEndTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;boost/test/unit_test.hpp&gt;</code><br />
</div>
<p><a href="_neon_end_to_end_tests_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a1bca53809b6d4022cb7f994c5c4e64aa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a1bca53809b6d4022cb7f994c5c4e64aa">BOOST_AUTO_TEST_CASE</a> (NeonAbsEndToEndTestFloat32)</td></tr>
<tr class="separator:a1bca53809b6d4022cb7f994c5c4e64aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c80ce683482e071b23ad8c366ec2200"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a8c80ce683482e071b23ad8c366ec2200">BOOST_AUTO_TEST_CASE</a> (ConstantUsage_Neon_Float32)</td></tr>
<tr class="separator:a8c80ce683482e071b23ad8c366ec2200"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08f6c3e931e3a82a80e275447a7cb31e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a08f6c3e931e3a82a80e275447a7cb31e">BOOST_AUTO_TEST_CASE</a> (NeonGreaterSimpleEndToEndTest)</td></tr>
<tr class="separator:a08f6c3e931e3a82a80e275447a7cb31e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14452124d5ae504d8875382c3634eb74"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a14452124d5ae504d8875382c3634eb74">BOOST_AUTO_TEST_CASE</a> (NeonGreaterSimpleEndToEndUint8Test)</td></tr>
<tr class="separator:a14452124d5ae504d8875382c3634eb74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf342e51b788bf8e2bf070d18bedae96"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#abf342e51b788bf8e2bf070d18bedae96">BOOST_AUTO_TEST_CASE</a> (NeonGreaterBroadcastEndToEndTest)</td></tr>
<tr class="separator:abf342e51b788bf8e2bf070d18bedae96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32c60cefb795ce7d0a0d67eea23311ad"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a32c60cefb795ce7d0a0d67eea23311ad">BOOST_AUTO_TEST_CASE</a> (NeonGreaterBroadcastEndToEndUint8Test)</td></tr>
<tr class="separator:a32c60cefb795ce7d0a0d67eea23311ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa77db7cb5a8cdabc3f3f560258f4f21c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#aa77db7cb5a8cdabc3f3f560258f4f21c">BOOST_AUTO_TEST_CASE</a> (NeonConcatEndToEndDim0Test)</td></tr>
<tr class="separator:aa77db7cb5a8cdabc3f3f560258f4f21c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d3555adb8d3f83d5733f4ac8354b77c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a9d3555adb8d3f83d5733f4ac8354b77c">BOOST_AUTO_TEST_CASE</a> (NeonConcatEndToEndDim0Uint8Test)</td></tr>
<tr class="separator:a9d3555adb8d3f83d5733f4ac8354b77c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9daf87e1460f9304964fcc4f402fb259"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a9daf87e1460f9304964fcc4f402fb259">BOOST_AUTO_TEST_CASE</a> (NeonConcatEndToEndDim1Test)</td></tr>
<tr class="separator:a9daf87e1460f9304964fcc4f402fb259"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a1f2d3bb6bb5dfae6042ba3bf0be92e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a6a1f2d3bb6bb5dfae6042ba3bf0be92e">BOOST_AUTO_TEST_CASE</a> (NeonConcatEndToEndDim1Uint8Test)</td></tr>
<tr class="separator:a6a1f2d3bb6bb5dfae6042ba3bf0be92e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53dfedd8cce454accdd7b637c4f8343a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a53dfedd8cce454accdd7b637c4f8343a">BOOST_AUTO_TEST_CASE</a> (NeonConcatEndToEndDim3Test)</td></tr>
<tr class="separator:a53dfedd8cce454accdd7b637c4f8343a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ead8cf58c0c1bbd12cc5e6acfc08338"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a4ead8cf58c0c1bbd12cc5e6acfc08338">BOOST_AUTO_TEST_CASE</a> (NeonConcatEndToEndDim3Uint8Test)</td></tr>
<tr class="separator:a4ead8cf58c0c1bbd12cc5e6acfc08338"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27a746f7bc22538b810be0d5e945b26a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a27a746f7bc22538b810be0d5e945b26a">BOOST_AUTO_TEST_CASE</a> (DephtToSpaceEndToEndNchwFloat32)</td></tr>
<tr class="separator:a27a746f7bc22538b810be0d5e945b26a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cf4601d23d9558a0c8b9a5a330ae854"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a7cf4601d23d9558a0c8b9a5a330ae854">BOOST_AUTO_TEST_CASE</a> (DephtToSpaceEndToEndNchwFloat16)</td></tr>
<tr class="separator:a7cf4601d23d9558a0c8b9a5a330ae854"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca41e6b9e1bda61b09b635c5857aee91"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#aca41e6b9e1bda61b09b635c5857aee91">BOOST_AUTO_TEST_CASE</a> (DephtToSpaceEndToEndNchwUint8)</td></tr>
<tr class="separator:aca41e6b9e1bda61b09b635c5857aee91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66bf08ef789c18b8a63d0fceaefbeea1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a66bf08ef789c18b8a63d0fceaefbeea1">BOOST_AUTO_TEST_CASE</a> (DephtToSpaceEndToEndNchwInt16)</td></tr>
<tr class="separator:a66bf08ef789c18b8a63d0fceaefbeea1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a138933084e2ddb38faaa03ea6c435365"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a138933084e2ddb38faaa03ea6c435365">BOOST_AUTO_TEST_CASE</a> (DephtToSpaceEndToEndNhwcFloat32)</td></tr>
<tr class="separator:a138933084e2ddb38faaa03ea6c435365"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae15bf71385d1355cc0d85af4d61a008e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ae15bf71385d1355cc0d85af4d61a008e">BOOST_AUTO_TEST_CASE</a> (DephtToSpaceEndToEndNhwcFloat16)</td></tr>
<tr class="separator:ae15bf71385d1355cc0d85af4d61a008e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a015b7b281e1718199b6ad08352840823"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a015b7b281e1718199b6ad08352840823">BOOST_AUTO_TEST_CASE</a> (DephtToSpaceEndToEndNhwcUint8)</td></tr>
<tr class="separator:a015b7b281e1718199b6ad08352840823"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a756295623f8ac16a2beb184a3030e3aa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a756295623f8ac16a2beb184a3030e3aa">BOOST_AUTO_TEST_CASE</a> (DephtToSpaceEndToEndNhwcInt16)</td></tr>
<tr class="separator:a756295623f8ac16a2beb184a3030e3aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cd60c9b4ecad211eecbf7804799ae95"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a3cd60c9b4ecad211eecbf7804799ae95">BOOST_AUTO_TEST_CASE</a> (DequantizeEndToEndSimpleTest)</td></tr>
<tr class="separator:a3cd60c9b4ecad211eecbf7804799ae95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3804af7f4121ef26a388c1c9f81e06b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad3804af7f4121ef26a388c1c9f81e06b">BOOST_AUTO_TEST_CASE</a> (DequantizeEndToEndOffsetTest)</td></tr>
<tr class="separator:ad3804af7f4121ef26a388c1c9f81e06b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cf0bfeae35f405a5dc67ed57affd9d9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a6cf0bfeae35f405a5dc67ed57affd9d9">BOOST_AUTO_TEST_CASE</a> (NeonPreluEndToEndFloat32Test)</td></tr>
<tr class="separator:a6cf0bfeae35f405a5dc67ed57affd9d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3c8acea06815a62e228bb9319ddcc60"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ab3c8acea06815a62e228bb9319ddcc60">BOOST_AUTO_TEST_CASE</a> (NeonPreluEndToEndTestUint8Test)</td></tr>
<tr class="separator:ab3c8acea06815a62e228bb9319ddcc60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4dcafa0cac6f73ce4bd9fffa692280d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ae4dcafa0cac6f73ce4bd9fffa692280d">BOOST_AUTO_TEST_CASE</a> (NeonSpaceToDepthNhwcEndToEndTest1)</td></tr>
<tr class="separator:ae4dcafa0cac6f73ce4bd9fffa692280d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3b1a1d76c1d2d0cb3578af2472d5786"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#aa3b1a1d76c1d2d0cb3578af2472d5786">BOOST_AUTO_TEST_CASE</a> (NeonSpaceToDepthNchwEndToEndTest1)</td></tr>
<tr class="separator:aa3b1a1d76c1d2d0cb3578af2472d5786"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab921327fa50673c42e5d19699a8d7296"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ab921327fa50673c42e5d19699a8d7296">BOOST_AUTO_TEST_CASE</a> (NeonSpaceToDepthNhwcEndToEndTest2)</td></tr>
<tr class="separator:ab921327fa50673c42e5d19699a8d7296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac58542c104ba70a65e4e125e12a801fa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ac58542c104ba70a65e4e125e12a801fa">BOOST_AUTO_TEST_CASE</a> (NeonSpaceToDepthNchwEndToEndTest2)</td></tr>
<tr class="separator:ac58542c104ba70a65e4e125e12a801fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3f31806f100cfeb7ea2ae529df55e34"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad3f31806f100cfeb7ea2ae529df55e34">BOOST_AUTO_TEST_CASE</a> (NeonSplitter1dEndToEndTest)</td></tr>
<tr class="separator:ad3f31806f100cfeb7ea2ae529df55e34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa71a3ef46b213ce5d270e60b0ecc8557"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#aa71a3ef46b213ce5d270e60b0ecc8557">BOOST_AUTO_TEST_CASE</a> (NeonSplitter1dEndToEndUint8Test)</td></tr>
<tr class="separator:aa71a3ef46b213ce5d270e60b0ecc8557"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bf6ca74dabc25f0c014e6966be3956b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a5bf6ca74dabc25f0c014e6966be3956b">BOOST_AUTO_TEST_CASE</a> (NeonSplitter2dDim0EndToEndTest)</td></tr>
<tr class="separator:a5bf6ca74dabc25f0c014e6966be3956b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f327ea14c666c031452bc317ab55023"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a9f327ea14c666c031452bc317ab55023">BOOST_AUTO_TEST_CASE</a> (NeonSplitter2dDim1EndToEndTest)</td></tr>
<tr class="separator:a9f327ea14c666c031452bc317ab55023"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1404f851fb9559ae9b3a403d21b7b6a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad1404f851fb9559ae9b3a403d21b7b6a">BOOST_AUTO_TEST_CASE</a> (NeonSplitter2dDim0EndToEndUint8Test)</td></tr>
<tr class="separator:ad1404f851fb9559ae9b3a403d21b7b6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a157ac52b020368f4e4a086011b3cf7c4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a157ac52b020368f4e4a086011b3cf7c4">BOOST_AUTO_TEST_CASE</a> (NeonSplitter2dDim1EndToEndUint8Test)</td></tr>
<tr class="separator:a157ac52b020368f4e4a086011b3cf7c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa69384e2c2aa50739b8fb8e9b2fffaec"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#aa69384e2c2aa50739b8fb8e9b2fffaec">BOOST_AUTO_TEST_CASE</a> (NeonSplitter3dDim0EndToEndTest)</td></tr>
<tr class="separator:aa69384e2c2aa50739b8fb8e9b2fffaec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab481307a1087080d658579c421ccae14"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ab481307a1087080d658579c421ccae14">BOOST_AUTO_TEST_CASE</a> (NeonSplitter3dDim1EndToEndTest)</td></tr>
<tr class="separator:ab481307a1087080d658579c421ccae14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab80e6a797df04fbd1dadf34b5288effd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ab80e6a797df04fbd1dadf34b5288effd">BOOST_AUTO_TEST_CASE</a> (NeonSplitter3dDim2EndToEndTest)</td></tr>
<tr class="separator:ab80e6a797df04fbd1dadf34b5288effd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abed8aefee4420b00529b765385109a07"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#abed8aefee4420b00529b765385109a07">BOOST_AUTO_TEST_CASE</a> (NeonSplitter3dDim0EndToEndUint8Test)</td></tr>
<tr class="separator:abed8aefee4420b00529b765385109a07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54af9f6f8541f7b1aa36b68909c5a454"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a54af9f6f8541f7b1aa36b68909c5a454">BOOST_AUTO_TEST_CASE</a> (NeonSplitter3dDim1EndToEndUint8Test)</td></tr>
<tr class="separator:a54af9f6f8541f7b1aa36b68909c5a454"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad03398894656de4577c25a38ebcacfc5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad03398894656de4577c25a38ebcacfc5">BOOST_AUTO_TEST_CASE</a> (NeonSplitter3dDim2EndToEndUint8Test)</td></tr>
<tr class="separator:ad03398894656de4577c25a38ebcacfc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b905de12806c3480d59907178cf5bc1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a2b905de12806c3480d59907178cf5bc1">BOOST_AUTO_TEST_CASE</a> (NeonSplitter4dDim0EndToEndTest)</td></tr>
<tr class="separator:a2b905de12806c3480d59907178cf5bc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad52602d8dc02485735ac085c0b8dbe0f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad52602d8dc02485735ac085c0b8dbe0f">BOOST_AUTO_TEST_CASE</a> (NeonSplitter4dDim1EndToEndTest)</td></tr>
<tr class="separator:ad52602d8dc02485735ac085c0b8dbe0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a579a7f2b91a1d20355c5c23a628bb531"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a579a7f2b91a1d20355c5c23a628bb531">BOOST_AUTO_TEST_CASE</a> (NeonSplitter4dDim2EndToEndTest)</td></tr>
<tr class="separator:a579a7f2b91a1d20355c5c23a628bb531"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb0e1534489f21f7fe9e5055c3d15cf0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#afb0e1534489f21f7fe9e5055c3d15cf0">BOOST_AUTO_TEST_CASE</a> (NeonSplitter4dDim3EndToEndTest)</td></tr>
<tr class="separator:afb0e1534489f21f7fe9e5055c3d15cf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a519174862e574b4c5b16d854e9703a07"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a519174862e574b4c5b16d854e9703a07">BOOST_AUTO_TEST_CASE</a> (NeonSplitter4dDim0EndToEndUint8Test)</td></tr>
<tr class="separator:a519174862e574b4c5b16d854e9703a07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0832f9950ef62c1f45ae765072238d9e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a0832f9950ef62c1f45ae765072238d9e">BOOST_AUTO_TEST_CASE</a> (NeonSplitter4dDim1EndToEndUint8Test)</td></tr>
<tr class="separator:a0832f9950ef62c1f45ae765072238d9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dc2c199ff4fa47a459e170886d1fee2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a8dc2c199ff4fa47a459e170886d1fee2">BOOST_AUTO_TEST_CASE</a> (NeonSplitter4dDim2EndToEndUint8Test)</td></tr>
<tr class="separator:a8dc2c199ff4fa47a459e170886d1fee2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6befe939868d35975b47bce59eaa8b73"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a6befe939868d35975b47bce59eaa8b73">BOOST_AUTO_TEST_CASE</a> (NeonSplitter4dDim3EndToEndUint8Test)</td></tr>
<tr class="separator:a6befe939868d35975b47bce59eaa8b73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e13f191eb837fdbb3390336154c8fc6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a8e13f191eb837fdbb3390336154c8fc6">BOOST_AUTO_TEST_CASE</a> (NeonQuantizedLstmEndToEndTest)</td></tr>
<tr class="separator:a8e13f191eb837fdbb3390336154c8fc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86faac93dccd9c6833273fbd7d1f3beb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a86faac93dccd9c6833273fbd7d1f3beb">BOOST_AUTO_TEST_CASE</a> (NeonTransposeConvolution2dEndToEndFloatNchwTest)</td></tr>
<tr class="separator:a86faac93dccd9c6833273fbd7d1f3beb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7afa245d3002692d0c5a51dae551f906"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a7afa245d3002692d0c5a51dae551f906">BOOST_AUTO_TEST_CASE</a> (NeonTransposeConvolution2dEndToEndUint8NchwTest)</td></tr>
<tr class="separator:a7afa245d3002692d0c5a51dae551f906"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7941253beab47fec145e4ba5d7b94b76"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a7941253beab47fec145e4ba5d7b94b76">BOOST_AUTO_TEST_CASE</a> (NeonTransposeConvolution2dEndToEndFloatNhwcTest)</td></tr>
<tr class="separator:a7941253beab47fec145e4ba5d7b94b76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3a453b6efdbf75df7f7b602ee83f1b6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ae3a453b6efdbf75df7f7b602ee83f1b6">BOOST_AUTO_TEST_CASE</a> (NeonTransposeConvolution2dEndToEndUint8NhwcTest)</td></tr>
<tr class="separator:ae3a453b6efdbf75df7f7b602ee83f1b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa17c111024b09c13383792b5ed933ab9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#aa17c111024b09c13383792b5ed933ab9">BOOST_AUTO_TEST_CASE</a> (NeonImportNonAlignedInputPointerTest)</td></tr>
<tr class="separator:aa17c111024b09c13383792b5ed933ab9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9ce61b78b416e66d44acb22137f3999"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ab9ce61b78b416e66d44acb22137f3999">BOOST_AUTO_TEST_CASE</a> (NeonExportNonAlignedOutputPointerTest)</td></tr>
<tr class="separator:ab9ce61b78b416e66d44acb22137f3999"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2dc0f1995ef18fadd72c9b6c74edce7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ae2dc0f1995ef18fadd72c9b6c74edce7">BOOST_AUTO_TEST_CASE</a> (NeonInstanceNormalizationNchwEndToEndTest1)</td></tr>
<tr class="separator:ae2dc0f1995ef18fadd72c9b6c74edce7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9decb65c57e3ac6f9996632242d29f2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad9decb65c57e3ac6f9996632242d29f2">BOOST_AUTO_TEST_CASE</a> (NeonInstanceNormalizationNchwEndToEndTest2)</td></tr>
<tr class="separator:ad9decb65c57e3ac6f9996632242d29f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1604bbaf3797f46764541e06142c486c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a1604bbaf3797f46764541e06142c486c">BOOST_AUTO_TEST_CASE</a> (NeonArgMaxSimpleTest)</td></tr>
<tr class="separator:a1604bbaf3797f46764541e06142c486c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f9c9924ee33ca3c1e82592f5a211f75"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a3f9c9924ee33ca3c1e82592f5a211f75">BOOST_AUTO_TEST_CASE</a> (NeonArgMinSimpleTest)</td></tr>
<tr class="separator:a3f9c9924ee33ca3c1e82592f5a211f75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b8b9ff47f75056211d8877a0cb43a05"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a0b8b9ff47f75056211d8877a0cb43a05">BOOST_AUTO_TEST_CASE</a> (NeonArgMaxAxis0Test)</td></tr>
<tr class="separator:a0b8b9ff47f75056211d8877a0cb43a05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f67f26350dfe7a8f74ddc1ddf600741"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a5f67f26350dfe7a8f74ddc1ddf600741">BOOST_AUTO_TEST_CASE</a> (NeonArgMinAxis0Test)</td></tr>
<tr class="separator:a5f67f26350dfe7a8f74ddc1ddf600741"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad792413aef241a122cffe07dd1552477"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad792413aef241a122cffe07dd1552477">BOOST_AUTO_TEST_CASE</a> (NeonArgMaxAxis1Test)</td></tr>
<tr class="separator:ad792413aef241a122cffe07dd1552477"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a991623e504ae7897afef650efe5922a6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a991623e504ae7897afef650efe5922a6">BOOST_AUTO_TEST_CASE</a> (NeonArgMinAxis1Test)</td></tr>
<tr class="separator:a991623e504ae7897afef650efe5922a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae47365701f186c00b63d50967d29fcd8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ae47365701f186c00b63d50967d29fcd8">BOOST_AUTO_TEST_CASE</a> (NeonArgMaxAxis2Test)</td></tr>
<tr class="separator:ae47365701f186c00b63d50967d29fcd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56bf4a940fe54032d30583f37dcbc173"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a56bf4a940fe54032d30583f37dcbc173">BOOST_AUTO_TEST_CASE</a> (NeonArgMinAxis2Test)</td></tr>
<tr class="separator:a56bf4a940fe54032d30583f37dcbc173"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2f2a585b7c20e6410236bc087eac215"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ab2f2a585b7c20e6410236bc087eac215">BOOST_AUTO_TEST_CASE</a> (NeonArgMaxAxis3Test)</td></tr>
<tr class="separator:ab2f2a585b7c20e6410236bc087eac215"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a815b32e9701ab457eb99845aad24550c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a815b32e9701ab457eb99845aad24550c">BOOST_AUTO_TEST_CASE</a> (NeonArgMinAxis3Test)</td></tr>
<tr class="separator:a815b32e9701ab457eb99845aad24550c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a819925dc2f98ec56b046f90eb7c0dc43"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a819925dc2f98ec56b046f90eb7c0dc43">BOOST_AUTO_TEST_CASE</a> (NeonArgMaxSimpleTestQuantisedAsymm8)</td></tr>
<tr class="separator:a819925dc2f98ec56b046f90eb7c0dc43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad55af39009f2b0f0191b8854da60f86f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad55af39009f2b0f0191b8854da60f86f">BOOST_AUTO_TEST_CASE</a> (NeonArgMinSimpleTestQuantisedAsymm8)</td></tr>
<tr class="separator:ad55af39009f2b0f0191b8854da60f86f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd1426a216eb03ea1cf4b9b548ef3131"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#acd1426a216eb03ea1cf4b9b548ef3131">BOOST_AUTO_TEST_CASE</a> (NeonArgMaxAxis0TestQuantisedAsymm8)</td></tr>
<tr class="separator:acd1426a216eb03ea1cf4b9b548ef3131"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc9fde6d755f2de04d92687f59392f2f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#adc9fde6d755f2de04d92687f59392f2f">BOOST_AUTO_TEST_CASE</a> (NeonArgMinAxis0TestQuantisedAsymm8)</td></tr>
<tr class="separator:adc9fde6d755f2de04d92687f59392f2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22ec28bd9719aec6676897e8ed8e8ef1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a22ec28bd9719aec6676897e8ed8e8ef1">BOOST_AUTO_TEST_CASE</a> (NeonArgMaxAxis1TestQuantisedAsymm8)</td></tr>
<tr class="separator:a22ec28bd9719aec6676897e8ed8e8ef1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1cc3b02303e679b5a006f9b98e6aa79"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ac1cc3b02303e679b5a006f9b98e6aa79">BOOST_AUTO_TEST_CASE</a> (NeonArgMinAxis1TestQuantisedAsymm8)</td></tr>
<tr class="separator:ac1cc3b02303e679b5a006f9b98e6aa79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4892abb94679c653f8cb78efb6f17152"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a4892abb94679c653f8cb78efb6f17152">BOOST_AUTO_TEST_CASE</a> (NeonArgMaxAxis2TestQuantisedAsymm8)</td></tr>
<tr class="separator:a4892abb94679c653f8cb78efb6f17152"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a227ad0d4d211bb83dd10360b0c64bd2b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a227ad0d4d211bb83dd10360b0c64bd2b">BOOST_AUTO_TEST_CASE</a> (NeonArgMinAxis2TestQuantisedAsymm8)</td></tr>
<tr class="separator:a227ad0d4d211bb83dd10360b0c64bd2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59af9ee6527696d071e8dd804b2a72f8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a59af9ee6527696d071e8dd804b2a72f8">BOOST_AUTO_TEST_CASE</a> (NeonArgMaxAxis3TestQuantisedAsymm8)</td></tr>
<tr class="separator:a59af9ee6527696d071e8dd804b2a72f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ce29f53a1fde801c350375814a6175f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a1ce29f53a1fde801c350375814a6175f">BOOST_AUTO_TEST_CASE</a> (NeonArgMinAxis3TestQuantisedAsymm8)</td></tr>
<tr class="separator:a1ce29f53a1fde801c350375814a6175f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0348e6bb67ace72535bd105219bb6237"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a0348e6bb67ace72535bd105219bb6237">scores</a> ({ 0.0f, 0.9f, 0.8f, 0.0f, 0.75f, 0.72f, 0.0f, 0.6f, 0.5f, 0.0f, 0.93f, 0.95f, 0.0f, 0.5f, 0.4f, 0.0f, 0.3f, 0.2f })</td></tr>
<tr class="separator:a0348e6bb67ace72535bd105219bb6237"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0981848e4ae57729f14f72bd4caa9f8"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ac0981848e4ae57729f14f72bd4caa9f8">anchors</a> ({ 0.5f, 0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 1.0f, 1.0f, 0.5f, 10.5f, 1.0f, 1.0f, 0.5f, 10.5f, 1.0f, 1.0f, 0.5f, 100.5f, 1.0f, 1.0f })</td></tr>
<tr class="separator:ac0981848e4ae57729f14f72bd4caa9f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cde378b23177d7dbb79f23d1e363960"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a3cde378b23177d7dbb79f23d1e363960">DetectionPostProcessRegularNmsEndToEnd&lt; armnn::DataType::Float32 &gt;</a> (<a class="el" href="_ref_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ada422a73ac4e68bcb1b1b1f0b44028d9">boxEncodings</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a0348e6bb67ace72535bd105219bb6237">scores</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ac0981848e4ae57729f14f72bd4caa9f8">anchors</a>)</td></tr>
<tr class="separator:a3cde378b23177d7dbb79f23d1e363960"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a469c9be3a505d4ef240b1ae2478c5256"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a469c9be3a505d4ef240b1ae2478c5256">QuantizeData</a> (uint8_t *quant, const float *dequant, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;info)</td></tr>
<tr class="separator:a469c9be3a505d4ef240b1ae2478c5256"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a522a440dc1e26bed45fd3f68be8484e9"><td class="memItemLeft" align="right" valign="top">boxEncodingsInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a522a440dc1e26bed45fd3f68be8484e9">SetQuantizationScale</a> (1.0f)</td></tr>
<tr class="separator:a522a440dc1e26bed45fd3f68be8484e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec48a5a5ab6ecf86c8db0f6d0859fe2f"><td class="memItemLeft" align="right" valign="top">boxEncodingsInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#aec48a5a5ab6ecf86c8db0f6d0859fe2f">SetQuantizationOffset</a> (1)</td></tr>
<tr class="separator:aec48a5a5ab6ecf86c8db0f6d0859fe2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeeba71439ec1a08d39e80eb365a473fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#abfa50e55ee160bfc64d8c3bb3dc40cc4">scoresInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#aeeba71439ec1a08d39e80eb365a473fa">SetQuantizationScale</a> (0.01f)</td></tr>
<tr class="separator:aeeba71439ec1a08d39e80eb365a473fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a928273b32d998ba9b1daf93587c46fa1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#abfa50e55ee160bfc64d8c3bb3dc40cc4">scoresInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a928273b32d998ba9b1daf93587c46fa1">SetQuantizationOffset</a> (0)</td></tr>
<tr class="separator:a928273b32d998ba9b1daf93587c46fa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada422a73ac4e68bcb1b1b1f0b44028d9"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ada422a73ac4e68bcb1b1b1f0b44028d9">boxEncodings</a> ({ 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f })</td></tr>
<tr class="separator:ada422a73ac4e68bcb1b1b1f0b44028d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99e26266538c44c9eb1d28f5095b79d8"><td class="memItemLeft" align="right" valign="top">std::vector&lt; uint8_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a99e26266538c44c9eb1d28f5095b79d8">qBoxEncodings</a> (boxEncodings.size(), 0)</td></tr>
<tr class="separator:a99e26266538c44c9eb1d28f5095b79d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad16c7915847aa89511b528d543e66fb2"><td class="memItemLeft" align="right" valign="top">std::vector&lt; uint8_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad16c7915847aa89511b528d543e66fb2">qScores</a> (scores.size(), 0)</td></tr>
<tr class="separator:ad16c7915847aa89511b528d543e66fb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d5b9e392c2744826c8bb8df575975f1"><td class="memItemLeft" align="right" valign="top">std::vector&lt; uint8_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a9d5b9e392c2744826c8bb8df575975f1">qAnchors</a> (anchors.size(), 0)</td></tr>
<tr class="separator:a9d5b9e392c2744826c8bb8df575975f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab26c8f73114673f5af878c0cdd52fc54"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ab26c8f73114673f5af878c0cdd52fc54">QuantizeData</a> (qBoxEncodings.data(), boxEncodings.data(), boxEncodingsInfo)</td></tr>
<tr class="separator:ab26c8f73114673f5af878c0cdd52fc54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a201b46d5e1007dfd105345c509245b09"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a201b46d5e1007dfd105345c509245b09">QuantizeData</a> (qScores.data(), scores.data(), <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#abfa50e55ee160bfc64d8c3bb3dc40cc4">scoresInfo</a>)</td></tr>
<tr class="separator:a201b46d5e1007dfd105345c509245b09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdb56c7ab178e350bae6bd5dbe006f1d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#acdb56c7ab178e350bae6bd5dbe006f1d">QuantizeData</a> (qAnchors.data(), anchors.data(), <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#afe48c20bc9f2e0b86d00806b5e17f2a4">anchorsInfo</a>)</td></tr>
<tr class="separator:acdb56c7ab178e350bae6bd5dbe006f1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b3bc526127b743c5c9bbb71671d2ab7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a3b3bc526127b743c5c9bbb71671d2ab7">DetectionPostProcessRegularNmsEndToEnd&lt; armnn::DataType::QAsymmU8 &gt;</a> (<a class="el" href="_ref_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a99e26266538c44c9eb1d28f5095b79d8">qBoxEncodings</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad16c7915847aa89511b528d543e66fb2">qScores</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a9d5b9e392c2744826c8bb8df575975f1">qAnchors</a>, 1.0f, 1, 0.01f, 0, 0.5f, 0)</td></tr>
<tr class="separator:a3b3bc526127b743c5c9bbb71671d2ab7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac88dc69623e6bacd6204fd86ed16eae2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ac88dc69623e6bacd6204fd86ed16eae2">DetectionPostProcessFastNmsEndToEnd&lt; armnn::DataType::Float32 &gt;</a> (<a class="el" href="_ref_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ada422a73ac4e68bcb1b1b1f0b44028d9">boxEncodings</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a0348e6bb67ace72535bd105219bb6237">scores</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ac0981848e4ae57729f14f72bd4caa9f8">anchors</a>)</td></tr>
<tr class="separator:ac88dc69623e6bacd6204fd86ed16eae2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfa50e55ee160bfc64d8c3bb3dc40cc4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#abfa50e55ee160bfc64d8c3bb3dc40cc4">scoresInfo</a> ({ 1, 6, 3 }, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>)</td></tr>
<tr class="separator:abfa50e55ee160bfc64d8c3bb3dc40cc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe48c20bc9f2e0b86d00806b5e17f2a4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#afe48c20bc9f2e0b86d00806b5e17f2a4">anchorsInfo</a> ({ 6, 4 }, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>)</td></tr>
<tr class="separator:afe48c20bc9f2e0b86d00806b5e17f2a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6974361ca12ee218b8f0c62e92acd032"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a6974361ca12ee218b8f0c62e92acd032">DetectionPostProcessFastNmsEndToEnd&lt; armnn::DataType::QAsymmU8 &gt;</a> (<a class="el" href="_ref_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a99e26266538c44c9eb1d28f5095b79d8">qBoxEncodings</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad16c7915847aa89511b528d543e66fb2">qScores</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a9d5b9e392c2744826c8bb8df575975f1">qAnchors</a>, 1.0f, 1, 0.01f, 0, 0.5f, 0)</td></tr>
<tr class="separator:a6974361ca12ee218b8f0c62e92acd032"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ab59caffe2ee6be46c08766c055420f17"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a> = {<a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea39f8662ca778258e9c6a14f26fec5ec1">armnn::Compute::CpuAcc</a>}</td></tr>
<tr class="separator:ab59caffe2ee6be46c08766c055420f17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64c1dd1b6dd60be9f4a16db9c8f427a5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a64c1dd1b6dd60be9f4a16db9c8f427a5">scoresInfo</a> ({ 1, 6, 3 }, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>)</td></tr>
<tr class="separator:a64c1dd1b6dd60be9f4a16db9c8f427a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a358cb7cd3c0647b25be049fd734b8c22"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a358cb7cd3c0647b25be049fd734b8c22">anchorsInfo</a> ({ 6, 4 }, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>)</td></tr>
<tr class="separator:a358cb7cd3c0647b25be049fd734b8c22"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="ac0981848e4ae57729f14f72bd4caa9f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0981848e4ae57729f14f72bd4caa9f8">&#9670;&nbsp;</a></span>anchors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; float &gt; anchors </td>
          <td>(</td>
          <td class="paramtype">{ 0.5f, 0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 1.0f, 1.0f, 0.5f, 10.5f, 1.0f, 1.0f, 0.5f, 10.5f, 1.0f, 1.0f, 0.5f, 100.5f, 1.0f, 1.0f }&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="_network_8cpp_source.xhtml#l01221">Network::AddDetectionPostProcessLayer()</a>, <a class="el" href="_optimizer_tests_8cpp_source.xhtml#l00502">BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="backends_2reference_2workloads_2_detection_post_process_8cpp_source.xhtml#l00141">armnn::DetectionPostProcess()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00139">DetectionPostProcessImpl()</a>, <a class="el" href="_ref_detection_post_process_tests_8cpp_source.xhtml#l00072">DetectionPostProcessTestImpl()</a>, <a class="el" href="_ref_detection_post_process_workload_8cpp_source.xhtml#l00021">RefDetectionPostProcessWorkload::Execute()</a>, <a class="el" href="_network_8hpp_source.xhtml#l00038">Network::GetGuid()</a>, <a class="el" href="_deserializer_8cpp_source.xhtml#l00764">Deserializer::GetNetworkOutputBindingInfo()</a>, <a class="el" href="_serializer_8hpp_source.xhtml#l00042">SerializerVisitor::GetSerializedLayers()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l00045">IWorkloadFactory::IsLayerSupported()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00545">QuantizeData()</a>, <a class="el" href="_i_layer_visitor_8hpp_source.xhtml#l00093">ILayerVisitor::VisitConcatLayer()</a>, and <a class="el" href="_i_layer_support_8hpp_source.xhtml#l00027">ILayerSupport::~ILayerSupport()</a>.</p>

</div>
</div>
<a id="afe48c20bc9f2e0b86d00806b5e17f2a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe48c20bc9f2e0b86d00806b5e17f2a4">&#9670;&nbsp;</a></span>anchorsInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> anchorsInfo </td>
          <td>(</td>
          <td class="paramtype">{ 6, 4 }&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1bca53809b6d4022cb7f994c5c4e64aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bca53809b6d4022cb7f994c5c4e64aa">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[1/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonAbsEndToEndTestFloat32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00029">29</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00043">BOOST_AUTO_TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    std::vector&lt;float&gt; expectedOutput =</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        1.f, 1.f, 1.f, 1.f, 5.f, 5.f, 5.f, 5.f,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        3.f, 3.f, 3.f, 3.f, 4.f, 4.f, 4.f, 4.f</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    };</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    ElementwiseUnarySimpleEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                                                             UnaryOperation::Abs,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                                             expectedOutput);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8c80ce683482e071b23ad8c366ec2200"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c80ce683482e071b23ad8c366ec2200">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[2/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">ConstantUsage_Neon_Float32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00043">43</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00029">BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">IOutputSlot::Connect()</a>, <a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea39f8662ca778258e9c6a14f26fec5ec1">armnn::CpuAcc</a>, <a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::CpuRef</a>, <a class="el" href="_network_8cpp_source.xhtml#l00049">INetwork::Create()</a>, <a class="el" href="_runtime_8cpp_source.xhtml#l00032">IRuntime::Create()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">IConnectableLayer::GetInputSlot()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">IConnectableLayer::GetOutputSlot()</a>, <a class="el" href="_network_8cpp_source.xhtml#l00890">armnn::Optimize()</a>, <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00045">options</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">IOutputSlot::SetTensorInfo()</a>, and <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38">armnn::Success</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    BOOST_TEST(ConstantUsageFloat32Test(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>));</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a08f6c3e931e3a82a80e275447a7cb31e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08f6c3e931e3a82a80e275447a7cb31e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[3/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonGreaterSimpleEndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca8768a6821cd735aea4f5b0df88c1fc6a">armnn::Greater</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">const</span> std::vector&lt;uint8_t&gt; expectedOutput({ 0, 0, 0, 0,  1, 1, 1, 1,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                                0, 0, 0, 0,  0, 0, 0, 0 });</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    ComparisonSimpleEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                                       ComparisonOperation::Greater,</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                                                       expectedOutput);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a14452124d5ae504d8875382c3634eb74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14452124d5ae504d8875382c3634eb74">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[4/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonGreaterSimpleEndToEndUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00098">98</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca8768a6821cd735aea4f5b0df88c1fc6a">armnn::Greater</a>.</p>
<div class="fragment"><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">const</span> std::vector&lt;uint8_t&gt; expectedOutput({ 0, 0, 0, 0,  1, 1, 1, 1,</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                                0, 0, 0, 0,  0, 0, 0, 0 });</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    ComparisonSimpleEndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                                               ComparisonOperation::Greater,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                                               expectedOutput);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abf342e51b788bf8e2bf070d18bedae96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf342e51b788bf8e2bf070d18bedae96">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[5/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonGreaterBroadcastEndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00108">108</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca8768a6821cd735aea4f5b0df88c1fc6a">armnn::Greater</a>.</p>
<div class="fragment"><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;{</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keyword">const</span> std::vector&lt;uint8_t&gt; expectedOutput({ 0, 1, 0, 0, 0, 1,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                                1, 1, 1, 1, 1, 1 });</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    ComparisonBroadcastEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>,</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                                          ComparisonOperation::Greater,</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                                          expectedOutput);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a32c60cefb795ce7d0a0d67eea23311ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32c60cefb795ce7d0a0d67eea23311ad">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[6/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonGreaterBroadcastEndToEndUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00118">118</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca8768a6821cd735aea4f5b0df88c1fc6a">armnn::Greater</a>.</p>
<div class="fragment"><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;{</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">const</span> std::vector&lt;uint8_t&gt; expectedOutput({ 0, 1, 0, 0, 0, 1,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                                1, 1, 1, 1, 1, 1 });</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    ComparisonBroadcastEndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                                                  ComparisonOperation::Greater,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                                                  expectedOutput);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa77db7cb5a8cdabc3f3f560258f4f21c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa77db7cb5a8cdabc3f3f560258f4f21c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[7/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonConcatEndToEndDim0Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00128">128</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    ConcatDim0EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9d3555adb8d3f83d5733f4ac8354b77c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d3555adb8d3f83d5733f4ac8354b77c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[8/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonConcatEndToEndDim0Uint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00133">133</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    ConcatDim0EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9daf87e1460f9304964fcc4f402fb259"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9daf87e1460f9304964fcc4f402fb259">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[9/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonConcatEndToEndDim1Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00138">138</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    ConcatDim1EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6a1f2d3bb6bb5dfae6042ba3bf0be92e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a1f2d3bb6bb5dfae6042ba3bf0be92e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[10/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonConcatEndToEndDim1Uint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00143">143</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;{</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    ConcatDim1EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a53dfedd8cce454accdd7b637c4f8343a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53dfedd8cce454accdd7b637c4f8343a">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[11/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonConcatEndToEndDim3Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00148">148</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    ConcatDim3EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4ead8cf58c0c1bbd12cc5e6acfc08338"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ead8cf58c0c1bbd12cc5e6acfc08338">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[12/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonConcatEndToEndDim3Uint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00153">153</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;{</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    ConcatDim3EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a27a746f7bc22538b810be0d5e945b26a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27a746f7bc22538b810be0d5e945b26a">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[13/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">DephtToSpaceEndToEndNchwFloat32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00159">159</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>.</p>
<div class="fragment"><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;{</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7cf4601d23d9558a0c8b9a5a330ae854"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cf4601d23d9558a0c8b9a5a330ae854">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[14/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">DephtToSpaceEndToEndNchwFloat16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00164">164</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>.</p>
<div class="fragment"><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::Float16&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aca41e6b9e1bda61b09b635c5857aee91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca41e6b9e1bda61b09b635c5857aee91">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[15/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">DephtToSpaceEndToEndNchwUint8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00169">169</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>.</p>
<div class="fragment"><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;{</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a66bf08ef789c18b8a63d0fceaefbeea1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66bf08ef789c18b8a63d0fceaefbeea1">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[16/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">DephtToSpaceEndToEndNchwInt16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00174">174</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>.</p>
<div class="fragment"><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;{</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::QSymmS16&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a138933084e2ddb38faaa03ea6c435365"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a138933084e2ddb38faaa03ea6c435365">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[17/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">DephtToSpaceEndToEndNhwcFloat32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00179">179</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::NHWC</a>.</p>
<div class="fragment"><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;{</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae15bf71385d1355cc0d85af4d61a008e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae15bf71385d1355cc0d85af4d61a008e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[18/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">DephtToSpaceEndToEndNhwcFloat16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00184">184</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::NHWC</a>.</p>
<div class="fragment"><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;{</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::Float16&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a015b7b281e1718199b6ad08352840823"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a015b7b281e1718199b6ad08352840823">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[19/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">DephtToSpaceEndToEndNhwcUint8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00189">189</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::NHWC</a>.</p>
<div class="fragment"><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;{</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a756295623f8ac16a2beb184a3030e3aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a756295623f8ac16a2beb184a3030e3aa">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[20/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">DephtToSpaceEndToEndNhwcInt16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00194">194</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::NHWC</a>.</p>
<div class="fragment"><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;{</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::QSymmS16&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3cd60c9b4ecad211eecbf7804799ae95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3cd60c9b4ecad211eecbf7804799ae95">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[21/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">DequantizeEndToEndSimpleTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00200">200</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;{</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    DequantizeEndToEndSimple&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad3804af7f4121ef26a388c1c9f81e06b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3804af7f4121ef26a388c1c9f81e06b">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[22/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">DequantizeEndToEndOffsetTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00205">205</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;{</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    DequantizeEndToEndOffset&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6cf0bfeae35f405a5dc67ed57affd9d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cf0bfeae35f405a5dc67ed57affd9d9">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[23/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonPreluEndToEndFloat32Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00210">210</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;{</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    PreluEndToEndNegativeTest&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab3c8acea06815a62e228bb9319ddcc60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3c8acea06815a62e228bb9319ddcc60">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[24/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonPreluEndToEndTestUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00215">215</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;{</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    PreluEndToEndPositiveTest&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae4dcafa0cac6f73ce4bd9fffa692280d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4dcafa0cac6f73ce4bd9fffa692280d">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[25/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSpaceToDepthNhwcEndToEndTest1&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00220">220</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="_space_to_depth_end_to_end_test_impl_8cpp_source.xhtml#l00098">SpaceToDepthNhwcEndToEndTest1()</a>.</p>
<div class="fragment"><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;{</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#ae2aeba7e1195292ca5a000a81c145629">SpaceToDepthNhwcEndToEndTest1</a>(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div><div class="ttc" id="_space_to_depth_end_to_end_test_impl_8cpp_xhtml_ae2aeba7e1195292ca5a000a81c145629"><div class="ttname"><a href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#ae2aeba7e1195292ca5a000a81c145629">SpaceToDepthNhwcEndToEndTest1</a></div><div class="ttdeci">void SpaceToDepthNhwcEndToEndTest1(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_space_to_depth_end_to_end_test_impl_8cpp_source.xhtml#l00098">SpaceToDepthEndToEndTestImpl.cpp:98</a></div></div>
<div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa3b1a1d76c1d2d0cb3578af2472d5786"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3b1a1d76c1d2d0cb3578af2472d5786">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[26/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSpaceToDepthNchwEndToEndTest1&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00225">225</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="_space_to_depth_end_to_end_test_impl_8cpp_source.xhtml#l00129">SpaceToDepthNchwEndToEndTest1()</a>.</p>
<div class="fragment"><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;{</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <a class="code" href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#aa539d7b30c0a8064ab301a61c5a90fed">SpaceToDepthNchwEndToEndTest1</a>(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;}</div><div class="ttc" id="_space_to_depth_end_to_end_test_impl_8cpp_xhtml_aa539d7b30c0a8064ab301a61c5a90fed"><div class="ttname"><a href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#aa539d7b30c0a8064ab301a61c5a90fed">SpaceToDepthNchwEndToEndTest1</a></div><div class="ttdeci">void SpaceToDepthNchwEndToEndTest1(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_space_to_depth_end_to_end_test_impl_8cpp_source.xhtml#l00129">SpaceToDepthEndToEndTestImpl.cpp:129</a></div></div>
<div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab921327fa50673c42e5d19699a8d7296"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab921327fa50673c42e5d19699a8d7296">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[27/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSpaceToDepthNhwcEndToEndTest2&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00230">230</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="_space_to_depth_end_to_end_test_impl_8cpp_source.xhtml#l00160">SpaceToDepthNhwcEndToEndTest2()</a>.</p>
<div class="fragment"><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;{</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <a class="code" href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#a2da64f8783ac838e5c4aa76c0d2de8cb">SpaceToDepthNhwcEndToEndTest2</a>(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div><div class="ttc" id="_space_to_depth_end_to_end_test_impl_8cpp_xhtml_a2da64f8783ac838e5c4aa76c0d2de8cb"><div class="ttname"><a href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#a2da64f8783ac838e5c4aa76c0d2de8cb">SpaceToDepthNhwcEndToEndTest2</a></div><div class="ttdeci">void SpaceToDepthNhwcEndToEndTest2(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_space_to_depth_end_to_end_test_impl_8cpp_source.xhtml#l00160">SpaceToDepthEndToEndTestImpl.cpp:160</a></div></div>
<div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac58542c104ba70a65e4e125e12a801fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac58542c104ba70a65e4e125e12a801fa">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[28/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSpaceToDepthNchwEndToEndTest2&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00235">235</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="_space_to_depth_end_to_end_test_impl_8cpp_source.xhtml#l00191">SpaceToDepthNchwEndToEndTest2()</a>.</p>
<div class="fragment"><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;{</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <a class="code" href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#a00fc587ab0be7b4d988fcc1a9bdf5355">SpaceToDepthNchwEndToEndTest2</a>(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;}</div><div class="ttc" id="_space_to_depth_end_to_end_test_impl_8cpp_xhtml_a00fc587ab0be7b4d988fcc1a9bdf5355"><div class="ttname"><a href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#a00fc587ab0be7b4d988fcc1a9bdf5355">SpaceToDepthNchwEndToEndTest2</a></div><div class="ttdeci">void SpaceToDepthNchwEndToEndTest2(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_space_to_depth_end_to_end_test_impl_8cpp_source.xhtml#l00191">SpaceToDepthEndToEndTestImpl.cpp:191</a></div></div>
<div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad3f31806f100cfeb7ea2ae529df55e34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3f31806f100cfeb7ea2ae529df55e34">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[29/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter1dEndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00240">240</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;{</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    Splitter1dEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa71a3ef46b213ce5d270e60b0ecc8557"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa71a3ef46b213ce5d270e60b0ecc8557">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[30/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter1dEndToEndUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00245">245</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;{</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    Splitter1dEndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5bf6ca74dabc25f0c014e6966be3956b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5bf6ca74dabc25f0c014e6966be3956b">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[31/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter2dDim0EndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00250">250</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;{</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    Splitter2dDim0EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9f327ea14c666c031452bc317ab55023"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f327ea14c666c031452bc317ab55023">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[32/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter2dDim1EndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00255">255</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;{</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    Splitter2dDim1EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad1404f851fb9559ae9b3a403d21b7b6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1404f851fb9559ae9b3a403d21b7b6a">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[33/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter2dDim0EndToEndUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00260">260</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;{</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    Splitter2dDim0EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a157ac52b020368f4e4a086011b3cf7c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a157ac52b020368f4e4a086011b3cf7c4">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[34/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter2dDim1EndToEndUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00265">265</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;{</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    Splitter2dDim1EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa69384e2c2aa50739b8fb8e9b2fffaec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa69384e2c2aa50739b8fb8e9b2fffaec">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[35/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter3dDim0EndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00270">270</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;{</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    Splitter3dDim0EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab481307a1087080d658579c421ccae14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab481307a1087080d658579c421ccae14">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[36/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter3dDim1EndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00275">275</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;{</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    Splitter3dDim1EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab80e6a797df04fbd1dadf34b5288effd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab80e6a797df04fbd1dadf34b5288effd">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[37/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter3dDim2EndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00280">280</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;{</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    Splitter3dDim2EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abed8aefee4420b00529b765385109a07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abed8aefee4420b00529b765385109a07">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[38/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter3dDim0EndToEndUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00285">285</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;{</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    Splitter3dDim0EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a54af9f6f8541f7b1aa36b68909c5a454"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54af9f6f8541f7b1aa36b68909c5a454">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[39/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter3dDim1EndToEndUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00290">290</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;{</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    Splitter3dDim1EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad03398894656de4577c25a38ebcacfc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad03398894656de4577c25a38ebcacfc5">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[40/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter3dDim2EndToEndUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00295">295</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;{</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    Splitter3dDim2EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2b905de12806c3480d59907178cf5bc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b905de12806c3480d59907178cf5bc1">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[41/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter4dDim0EndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00300">300</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;{</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    Splitter4dDim0EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad52602d8dc02485735ac085c0b8dbe0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad52602d8dc02485735ac085c0b8dbe0f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[42/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter4dDim1EndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00305">305</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;{</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    Splitter4dDim1EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a579a7f2b91a1d20355c5c23a628bb531"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a579a7f2b91a1d20355c5c23a628bb531">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[43/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter4dDim2EndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00310">310</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;{</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    Splitter4dDim2EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afb0e1534489f21f7fe9e5055c3d15cf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb0e1534489f21f7fe9e5055c3d15cf0">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[44/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter4dDim3EndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00315">315</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;{</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    Splitter4dDim3EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a519174862e574b4c5b16d854e9703a07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a519174862e574b4c5b16d854e9703a07">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[45/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter4dDim0EndToEndUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00320">320</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;{</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    Splitter4dDim0EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0832f9950ef62c1f45ae765072238d9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0832f9950ef62c1f45ae765072238d9e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[46/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter4dDim1EndToEndUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00325">325</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;{</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    Splitter4dDim1EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8dc2c199ff4fa47a459e170886d1fee2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dc2c199ff4fa47a459e170886d1fee2">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[47/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter4dDim2EndToEndUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00330">330</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;{</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    Splitter4dDim2EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6befe939868d35975b47bce59eaa8b73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6befe939868d35975b47bce59eaa8b73">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[48/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonSplitter4dDim3EndToEndUint8Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00335">335</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;{</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    Splitter4dDim3EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8e13f191eb837fdbb3390336154c8fc6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e13f191eb837fdbb3390336154c8fc6">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[49/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonQuantizedLstmEndToEndTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00340">340</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="_quantized_lstm_end_to_end_test_impl_8cpp_source.xhtml#l00179">QuantizedLstmEndToEnd()</a>.</p>
<div class="fragment"><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;{</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="_quantized_lstm_end_to_end_test_impl_8cpp.xhtml#a81b5bf2355bdbac79af06c1bc97adb52">QuantizedLstmEndToEnd</a>(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;}</div><div class="ttc" id="_quantized_lstm_end_to_end_test_impl_8cpp_xhtml_a81b5bf2355bdbac79af06c1bc97adb52"><div class="ttname"><a href="_quantized_lstm_end_to_end_test_impl_8cpp.xhtml#a81b5bf2355bdbac79af06c1bc97adb52">QuantizedLstmEndToEnd</a></div><div class="ttdeci">void QuantizedLstmEndToEnd(const std::vector&lt; armnn::BackendId &gt; &amp;backends)</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_end_to_end_test_impl_8cpp_source.xhtml#l00179">QuantizedLstmEndToEndTestImpl.cpp:179</a></div></div>
<div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a86faac93dccd9c6833273fbd7d1f3beb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86faac93dccd9c6833273fbd7d1f3beb">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[50/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonTransposeConvolution2dEndToEndFloatNchwTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00345">345</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>.</p>
<div class="fragment"><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;{</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    TransposeConvolution2dEndToEnd&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7afa245d3002692d0c5a51dae551f906"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7afa245d3002692d0c5a51dae551f906">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[51/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonTransposeConvolution2dEndToEndUint8NchwTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00351">351</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>.</p>
<div class="fragment"><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;{</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    TransposeConvolution2dEndToEnd&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7941253beab47fec145e4ba5d7b94b76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7941253beab47fec145e4ba5d7b94b76">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[52/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonTransposeConvolution2dEndToEndFloatNhwcTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00357">357</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::NHWC</a>.</p>
<div class="fragment"><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;{</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    TransposeConvolution2dEndToEnd&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae3a453b6efdbf75df7f7b602ee83f1b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3a453b6efdbf75df7f7b602ee83f1b6">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[53/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonTransposeConvolution2dEndToEndUint8NhwcTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00363">363</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::NHWC</a>.</p>
<div class="fragment"><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;{</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    TransposeConvolution2dEndToEnd&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa17c111024b09c13383792b5ed933ab9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa17c111024b09c13383792b5ed933ab9">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[54/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonImportNonAlignedInputPointerTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00369">369</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;{</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    ImportNonAlignedInputPointerTest(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab9ce61b78b416e66d44acb22137f3999"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9ce61b78b416e66d44acb22137f3999">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[55/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonExportNonAlignedOutputPointerTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00374">374</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00170">armnn::BOOST_AUTO_TEST_CASE()</a>, and <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;{</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    ExportNonAlignedOutputPointerTest(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae2dc0f1995ef18fadd72c9b6c74edce7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2dc0f1995ef18fadd72c9b6c74edce7">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[56/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonInstanceNormalizationNchwEndToEndTest1&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00405">405</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="_instance_normalization_end_to_end_test_impl_8cpp_source.xhtml#l00168">InstanceNormalizationNchwEndToEndTest1()</a>.</p>
<div class="fragment"><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;{</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <a class="code" href="_instance_normalization_end_to_end_test_impl_8cpp.xhtml#a120f2896c50cfa77409d16ef6b1628eb">InstanceNormalizationNchwEndToEndTest1</a>(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;}</div><div class="ttc" id="_instance_normalization_end_to_end_test_impl_8cpp_xhtml_a120f2896c50cfa77409d16ef6b1628eb"><div class="ttname"><a href="_instance_normalization_end_to_end_test_impl_8cpp.xhtml#a120f2896c50cfa77409d16ef6b1628eb">InstanceNormalizationNchwEndToEndTest1</a></div><div class="ttdeci">void InstanceNormalizationNchwEndToEndTest1(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_instance_normalization_end_to_end_test_impl_8cpp_source.xhtml#l00168">InstanceNormalizationEndToEndTestImpl.cpp:168</a></div></div>
<div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad9decb65c57e3ac6f9996632242d29f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9decb65c57e3ac6f9996632242d29f2">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[57/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonInstanceNormalizationNchwEndToEndTest2&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00410">410</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="_instance_normalization_end_to_end_test_impl_8cpp_source.xhtml#l00310">InstanceNormalizationNchwEndToEndTest2()</a>.</p>
<div class="fragment"><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;{</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <a class="code" href="_instance_normalization_end_to_end_test_impl_8cpp.xhtml#a3e262db2d488773b8824f73c4f6ab145">InstanceNormalizationNchwEndToEndTest2</a>(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
<div class="ttc" id="_instance_normalization_end_to_end_test_impl_8cpp_xhtml_a3e262db2d488773b8824f73c4f6ab145"><div class="ttname"><a href="_instance_normalization_end_to_end_test_impl_8cpp.xhtml#a3e262db2d488773b8824f73c4f6ab145">InstanceNormalizationNchwEndToEndTest2</a></div><div class="ttdeci">void InstanceNormalizationNchwEndToEndTest2(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_instance_normalization_end_to_end_test_impl_8cpp_source.xhtml#l00310">InstanceNormalizationEndToEndTestImpl.cpp:310</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a1604bbaf3797f46764541e06142c486c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1604bbaf3797f46764541e06142c486c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[58/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMaxSimpleTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00416">416</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;{</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    ArgMaxEndToEndSimple&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3f9c9924ee33ca3c1e82592f5a211f75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f9c9924ee33ca3c1e82592f5a211f75">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[59/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMinSimpleTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00421">421</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;{</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    ArgMinEndToEndSimple&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0b8b9ff47f75056211d8877a0cb43a05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b8b9ff47f75056211d8877a0cb43a05">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[60/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMaxAxis0Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00426">426</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;{</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    ArgMaxAxis0EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5f67f26350dfe7a8f74ddc1ddf600741"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f67f26350dfe7a8f74ddc1ddf600741">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[61/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMinAxis0Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00431">431</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;{</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    ArgMinAxis0EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad792413aef241a122cffe07dd1552477"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad792413aef241a122cffe07dd1552477">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[62/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMaxAxis1Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00436">436</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;{</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    ArgMaxAxis1EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a991623e504ae7897afef650efe5922a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a991623e504ae7897afef650efe5922a6">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[63/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMinAxis1Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00441">441</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;{</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    ArgMinAxis1EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae47365701f186c00b63d50967d29fcd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae47365701f186c00b63d50967d29fcd8">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[64/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMaxAxis2Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00446">446</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;{</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    ArgMaxAxis2EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a56bf4a940fe54032d30583f37dcbc173"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56bf4a940fe54032d30583f37dcbc173">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[65/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMinAxis2Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00451">451</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;{</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    ArgMinAxis2EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab2f2a585b7c20e6410236bc087eac215"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2f2a585b7c20e6410236bc087eac215">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[66/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMaxAxis3Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00456">456</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;{</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    ArgMaxAxis3EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a815b32e9701ab457eb99845aad24550c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a815b32e9701ab457eb99845aad24550c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[67/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMinAxis3Test&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00461">461</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;{</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    ArgMinAxis3EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a819925dc2f98ec56b046f90eb7c0dc43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a819925dc2f98ec56b046f90eb7c0dc43">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[68/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMaxSimpleTestQuantisedAsymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00466">466</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;{</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    ArgMaxEndToEndSimple&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad55af39009f2b0f0191b8854da60f86f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad55af39009f2b0f0191b8854da60f86f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[69/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMinSimpleTestQuantisedAsymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00471">471</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;{</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    ArgMinEndToEndSimple&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acd1426a216eb03ea1cf4b9b548ef3131"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd1426a216eb03ea1cf4b9b548ef3131">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[70/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMaxAxis0TestQuantisedAsymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00476">476</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;{</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    ArgMaxAxis0EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="adc9fde6d755f2de04d92687f59392f2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc9fde6d755f2de04d92687f59392f2f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[71/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMinAxis0TestQuantisedAsymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00481">481</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;{</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    ArgMinAxis0EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a22ec28bd9719aec6676897e8ed8e8ef1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22ec28bd9719aec6676897e8ed8e8ef1">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[72/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMaxAxis1TestQuantisedAsymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00486">486</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;{</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    ArgMaxAxis1EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac1cc3b02303e679b5a006f9b98e6aa79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1cc3b02303e679b5a006f9b98e6aa79">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[73/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMinAxis1TestQuantisedAsymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00491">491</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;{</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    ArgMinAxis1EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4892abb94679c653f8cb78efb6f17152"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4892abb94679c653f8cb78efb6f17152">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[74/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMaxAxis2TestQuantisedAsymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00496">496</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;{</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    ArgMaxAxis2EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a227ad0d4d211bb83dd10360b0c64bd2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a227ad0d4d211bb83dd10360b0c64bd2b">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[75/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMinAxis2TestQuantisedAsymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00501">501</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;{</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    ArgMinAxis2EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a59af9ee6527696d071e8dd804b2a72f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59af9ee6527696d071e8dd804b2a72f8">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[76/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMaxAxis3TestQuantisedAsymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00506">506</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>.</p>
<div class="fragment"><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;{</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    ArgMaxAxis3EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a1ce29f53a1fde801c350375814a6175f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ce29f53a1fde801c350375814a6175f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[77/77]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NeonArgMinAxis3TestQuantisedAsymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00511">511</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ac0981848e4ae57729f14f72bd4caa9f8">anchors()</a>, <a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00170">armnn::BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ada422a73ac4e68bcb1b1b1f0b44028d9">boxEncodings()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, and <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a0348e6bb67ace72535bd105219bb6237">scores()</a>.</p>
<div class="fragment"><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;{</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    ArgMinAxis3EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;}</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">NeonEndToEndTests.cpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ada422a73ac4e68bcb1b1b1f0b44028d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada422a73ac4e68bcb1b1b1f0b44028d9">&#9670;&nbsp;</a></span>boxEncodings()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; float &gt; boxEncodings </td>
          <td>(</td>
          <td class="paramtype">{ 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f }&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00511">BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="armnn_tf_lite_parser_2test_2_detection_post_process_8cpp_source.xhtml#l00164">BOOST_FIXTURE_TEST_CASE()</a>, <a class="el" href="backends_2reference_2workloads_2_detection_post_process_8cpp_source.xhtml#l00141">armnn::DetectionPostProcess()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00139">DetectionPostProcessImpl()</a>, <a class="el" href="_ref_detection_post_process_tests_8cpp_source.xhtml#l00072">DetectionPostProcessTestImpl()</a>, <a class="el" href="_ref_detection_post_process_workload_8cpp_source.xhtml#l00021">RefDetectionPostProcessWorkload::Execute()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l00045">IWorkloadFactory::IsLayerSupported()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00545">QuantizeData()</a>, and <a class="el" href="_i_layer_support_8hpp_source.xhtml#l00027">ILayerSupport::~ILayerSupport()</a>.</p>

</div>
</div>
<a id="ac88dc69623e6bacd6204fd86ed16eae2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac88dc69623e6bacd6204fd86ed16eae2">&#9670;&nbsp;</a></span>DetectionPostProcessFastNmsEndToEnd< armnn::DataType::Float32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DetectionPostProcessFastNmsEndToEnd&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_ref_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ada422a73ac4e68bcb1b1b1f0b44028d9">boxEncodings</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a0348e6bb67ace72535bd105219bb6237">scores</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ac0981848e4ae57729f14f72bd4caa9f8">anchors</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6974361ca12ee218b8f0c62e92acd032"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6974361ca12ee218b8f0c62e92acd032">&#9670;&nbsp;</a></span>DetectionPostProcessFastNmsEndToEnd< armnn::DataType::QAsymmU8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DetectionPostProcessFastNmsEndToEnd&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_ref_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a99e26266538c44c9eb1d28f5095b79d8">qBoxEncodings</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad16c7915847aa89511b528d543e66fb2">qScores</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a9d5b9e392c2744826c8bb8df575975f1">qAnchors</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">1.&#160;</td>
          <td class="paramname"><em>0f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">1&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0.&#160;</td>
          <td class="paramname"><em>01f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0.&#160;</td>
          <td class="paramname"><em>5f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3cde378b23177d7dbb79f23d1e363960"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3cde378b23177d7dbb79f23d1e363960">&#9670;&nbsp;</a></span>DetectionPostProcessRegularNmsEndToEnd< armnn::DataType::Float32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DetectionPostProcessRegularNmsEndToEnd&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_ref_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ada422a73ac4e68bcb1b1b1f0b44028d9">boxEncodings</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a0348e6bb67ace72535bd105219bb6237">scores</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ac0981848e4ae57729f14f72bd4caa9f8">anchors</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3b3bc526127b743c5c9bbb71671d2ab7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b3bc526127b743c5c9bbb71671d2ab7">&#9670;&nbsp;</a></span>DetectionPostProcessRegularNmsEndToEnd< armnn::DataType::QAsymmU8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DetectionPostProcessRegularNmsEndToEnd&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_ref_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a99e26266538c44c9eb1d28f5095b79d8">qBoxEncodings</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad16c7915847aa89511b528d543e66fb2">qScores</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a9d5b9e392c2744826c8bb8df575975f1">qAnchors</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">1.&#160;</td>
          <td class="paramname"><em>0f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">1&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0.&#160;</td>
          <td class="paramname"><em>01f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0.&#160;</td>
          <td class="paramname"><em>5f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9d5b9e392c2744826c8bb8df575975f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d5b9e392c2744826c8bb8df575975f1">&#9670;&nbsp;</a></span>qAnchors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; uint8_t &gt; qAnchors </td>
          <td>(</td>
          <td class="paramtype">anchors.&#160;</td>
          <td class="paramname"><em>size</em>(), </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="_ref_end_to_end_tests_8cpp_source.xhtml#l00682">BOOST_AUTO_TEST_CASE()</a>, and <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00545">QuantizeData()</a>.</p>

</div>
</div>
<a id="a99e26266538c44c9eb1d28f5095b79d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99e26266538c44c9eb1d28f5095b79d8">&#9670;&nbsp;</a></span>qBoxEncodings()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; uint8_t &gt; qBoxEncodings </td>
          <td>(</td>
          <td class="paramtype">boxEncodings.&#160;</td>
          <td class="paramname"><em>size</em>(), </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="_ref_end_to_end_tests_8cpp_source.xhtml#l00682">BOOST_AUTO_TEST_CASE()</a>, and <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00545">QuantizeData()</a>.</p>

</div>
</div>
<a id="ad16c7915847aa89511b528d543e66fb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad16c7915847aa89511b528d543e66fb2">&#9670;&nbsp;</a></span>qScores()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; uint8_t &gt; qScores </td>
          <td>(</td>
          <td class="paramtype">scores.&#160;</td>
          <td class="paramname"><em>size</em>(), </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="_ref_end_to_end_tests_8cpp_source.xhtml#l00682">BOOST_AUTO_TEST_CASE()</a>, and <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00545">QuantizeData()</a>.</p>

</div>
</div>
<a id="a469c9be3a505d4ef240b1ae2478c5256"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a469c9be3a505d4ef240b1ae2478c5256">&#9670;&nbsp;</a></span>QuantizeData() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QuantizeData </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>quant</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>dequant</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00545">545</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ac0981848e4ae57729f14f72bd4caa9f8">anchors()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a358cb7cd3c0647b25be049fd734b8c22">anchorsInfo</a>, <a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00170">armnn::BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ada422a73ac4e68bcb1b1b1f0b44028d9">boxEncodings()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">defaultBackends</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00093">TensorInfo::GetNumElements()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00264">TensorInfo::GetQuantizationOffset()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00247">TensorInfo::GetQuantizationScale()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a9d5b9e392c2744826c8bb8df575975f1">qAnchors()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a99e26266538c44c9eb1d28f5095b79d8">qBoxEncodings()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#ad16c7915847aa89511b528d543e66fb2">qScores()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a0348e6bb67ace72535bd105219bb6237">scores()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#a64c1dd1b6dd60be9f4a16db9c8f427a5">scoresInfo</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00275">TensorInfo::SetQuantizationOffset()</a>, and <a class="el" href="_tensor_8cpp_source.xhtml#l00259">TensorInfo::SetQuantizationScale()</a>.</p>
<div class="fragment"><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;{</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>(); i++)</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    {</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        quant[i] = armnn::Quantize&lt;uint8_t&gt;(dequant[i], info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a047ca888c43bd7fb5702853bf72410d0">GetQuantizationScale</a>(), info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a770b51078da02f44a819e9f95d8058b5">GetQuantizationOffset</a>());</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    }</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a770b51078da02f44a819e9f95d8058b5"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a770b51078da02f44a819e9f95d8058b5">armnn::TensorInfo::GetQuantizationOffset</a></div><div class="ttdeci">int32_t GetQuantizationOffset() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00264">Tensor.cpp:264</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a047ca888c43bd7fb5702853bf72410d0"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a047ca888c43bd7fb5702853bf72410d0">armnn::TensorInfo::GetQuantizationScale</a></div><div class="ttdeci">float GetQuantizationScale() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00247">Tensor.cpp:247</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8846406ac37fbd2204f0be16ee05d5b7"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">armnn::TensorInfo::GetNumElements</a></div><div class="ttdeci">unsigned int GetNumElements() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00093">Tensor.hpp:93</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab26c8f73114673f5af878c0cdd52fc54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab26c8f73114673f5af878c0cdd52fc54">&#9670;&nbsp;</a></span>QuantizeData() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">QuantizeData </td>
          <td>(</td>
          <td class="paramtype">qBoxEncodings.&#160;</td>
          <td class="paramname"><em>data</em>(), </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">boxEncodings.&#160;</td>
          <td class="paramname"><em>data</em>(), </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">boxEncodingsInfo&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a201b46d5e1007dfd105345c509245b09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a201b46d5e1007dfd105345c509245b09">&#9670;&nbsp;</a></span>QuantizeData() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">QuantizeData </td>
          <td>(</td>
          <td class="paramtype">qScores.&#160;</td>
          <td class="paramname"><em>data</em>(), </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scores.&#160;</td>
          <td class="paramname"><em>data</em>(), </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#abfa50e55ee160bfc64d8c3bb3dc40cc4">scoresInfo</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acdb56c7ab178e350bae6bd5dbe006f1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acdb56c7ab178e350bae6bd5dbe006f1d">&#9670;&nbsp;</a></span>QuantizeData() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">QuantizeData </td>
          <td>(</td>
          <td class="paramtype">qAnchors.&#160;</td>
          <td class="paramname"><em>data</em>(), </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">anchors.&#160;</td>
          <td class="paramname"><em>data</em>(), </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#afe48c20bc9f2e0b86d00806b5e17f2a4">anchorsInfo</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0348e6bb67ace72535bd105219bb6237"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0348e6bb67ace72535bd105219bb6237">&#9670;&nbsp;</a></span>scores()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; float &gt; scores </td>
          <td>(</td>
          <td class="paramtype">{ 0.0f, 0.9f, 0.8f, 0.0f, 0.75f, 0.72f, 0.0f, 0.6f, 0.5f, 0.0f, 0.93f, 0.95f, 0.0f, 0.5f, 0.4f, 0.0f, 0.3f, 0.2f }&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div><div class="line">    std::vector&lt;float&gt; <a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ada422a73ac4e68bcb1b1b1f0b44028d9">boxEncodings</a>({</div><div class="line">                                        0.0f, 0.0f, 0.0f, 0.0f,</div><div class="line">                                        0.0f, 1.0f, 0.0f, 0.0f,</div><div class="line">                                        0.0f, -1.0f, 0.0f, 0.0f,</div><div class="line">                                        0.0f, 0.0f, 0.0f, 0.0f,</div><div class="line">                                        0.0f, 1.0f, 0.0f, 0.0f,</div><div class="line">                                        0.0f, 0.0f, 0.0f, 0.0f</div><div class="line">                                    })</div><div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ada422a73ac4e68bcb1b1b1f0b44028d9"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ada422a73ac4e68bcb1b1b1f0b44028d9">boxEncodings</a></div><div class="ttdeci">std::vector&lt; float &gt; boxEncodings({ 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f })</div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00511">BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="armnn_tf_lite_parser_2test_2_detection_post_process_8cpp_source.xhtml#l00164">BOOST_FIXTURE_TEST_CASE()</a>, <a class="el" href="backends_2reference_2workloads_2_detection_post_process_8cpp_source.xhtml#l00141">armnn::DetectionPostProcess()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00139">DetectionPostProcessImpl()</a>, <a class="el" href="_ref_detection_post_process_tests_8cpp_source.xhtml#l00072">DetectionPostProcessTestImpl()</a>, <a class="el" href="_ref_detection_post_process_workload_8cpp_source.xhtml#l00021">RefDetectionPostProcessWorkload::Execute()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l00045">IWorkloadFactory::IsLayerSupported()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00545">QuantizeData()</a>, and <a class="el" href="_i_layer_support_8hpp_source.xhtml#l00027">ILayerSupport::~ILayerSupport()</a>.</p>

</div>
</div>
<a id="abfa50e55ee160bfc64d8c3bb3dc40cc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfa50e55ee160bfc64d8c3bb3dc40cc4">&#9670;&nbsp;</a></span>scoresInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> scoresInfo </td>
          <td>(</td>
          <td class="paramtype">{ 1, 6, 3 }&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aec48a5a5ab6ecf86c8db0f6d0859fe2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec48a5a5ab6ecf86c8db0f6d0859fe2f">&#9670;&nbsp;</a></span>SetQuantizationOffset() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">boxEncodingsInfo SetQuantizationOffset </td>
          <td>(</td>
          <td class="paramtype">1&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="_tensor_8hpp_source.xhtml#l00098">TensorInfo::HasMultipleQuantizationScales()</a>.</p>

</div>
</div>
<a id="a928273b32d998ba9b1daf93587c46fa1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a928273b32d998ba9b1daf93587c46fa1">&#9670;&nbsp;</a></span>SetQuantizationOffset() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#afe48c20bc9f2e0b86d00806b5e17f2a4">anchorsInfo</a> SetQuantizationOffset </td>
          <td>(</td>
          <td class="paramtype">0&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a522a440dc1e26bed45fd3f68be8484e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a522a440dc1e26bed45fd3f68be8484e9">&#9670;&nbsp;</a></span>SetQuantizationScale() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">boxEncodingsInfo SetQuantizationScale </td>
          <td>(</td>
          <td class="paramtype">1.&#160;</td>
          <td class="paramname"><em>0f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="_tensor_8hpp_source.xhtml#l00098">TensorInfo::HasMultipleQuantizationScales()</a>.</p>

</div>
</div>
<a id="aeeba71439ec1a08d39e80eb365a473fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeeba71439ec1a08d39e80eb365a473fa">&#9670;&nbsp;</a></span>SetQuantizationScale() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml#afe48c20bc9f2e0b86d00806b5e17f2a4">anchorsInfo</a> SetQuantizationScale </td>
          <td>(</td>
          <td class="paramtype">0.&#160;</td>
          <td class="paramname"><em>01f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a358cb7cd3c0647b25be049fd734b8c22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a358cb7cd3c0647b25be049fd734b8c22">&#9670;&nbsp;</a></span>anchorsInfo</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> anchorsInfo({ 6, 4 }, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>) </td>
          <td>(</td>
          <td class="paramtype">{ 6, 4 }&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="_serializer_tests_8cpp_source.xhtml#l00771">BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00327">DetectionPostProcessFastNmsQuantizedTest()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00139">DetectionPostProcessImpl()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00263">DetectionPostProcessRegularNmsQuantizedTest()</a>, <a class="el" href="_ref_detection_post_process_tests_8cpp_source.xhtml#l00072">DetectionPostProcessTestImpl()</a>, <a class="el" href="_ref_detection_post_process_workload_8cpp_source.xhtml#l00021">RefDetectionPostProcessWorkload::Execute()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00545">QuantizeData()</a>, and <a class="el" href="_workload_data_8cpp_source.xhtml#l02483">DetectionPostProcessQueueDescriptor::Validate()</a>.</p>

</div>
</div>
<a id="ab59caffe2ee6be46c08766c055420f17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab59caffe2ee6be46c08766c055420f17">&#9670;&nbsp;</a></span>defaultBackends</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a>&gt; defaultBackends = {<a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea39f8662ca778258e9c6a14f26fec5ec1">armnn::Compute::CpuAcc</a>}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00026">26</a> of file <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml">NeonEndToEndTests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00029">BOOST_AUTO_TEST_CASE()</a>, and <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00545">QuantizeData()</a>.</p>

</div>
</div>
<a id="a64c1dd1b6dd60be9f4a16db9c8f427a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64c1dd1b6dd60be9f4a16db9c8f427a5">&#9670;&nbsp;</a></span>scoresInfo</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> scoresInfo({ 1, 6, 3 }, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>) </td>
          <td>(</td>
          <td class="paramtype">{ 1, 6, 3 }&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div><div class="line">    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> boxEncodingsInfo({ 1, 6, 4 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>)</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00053">Tensor.hpp:53</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_optimizer_tests_8cpp_source.xhtml#l00502">BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00327">DetectionPostProcessFastNmsQuantizedTest()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00139">DetectionPostProcessImpl()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00263">DetectionPostProcessRegularNmsQuantizedTest()</a>, <a class="el" href="_ref_detection_post_process_tests_8cpp_source.xhtml#l00072">DetectionPostProcessTestImpl()</a>, <a class="el" href="_ref_detection_post_process_workload_8cpp_source.xhtml#l00021">RefDetectionPostProcessWorkload::Execute()</a>, <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00545">QuantizeData()</a>, and <a class="el" href="_workload_data_8cpp_source.xhtml#l02483">DetectionPostProcessQueueDescriptor::Validate()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_d86eb514662c7c08e168285f21d00ea1.xhtml">neon</a></li><li class="navelem"><a class="el" href="dir_c3e37ff99b1c352c48e2670d743526e1.xhtml">test</a></li><li class="navelem"><a class="el" href="_neon_end_to_end_tests_8cpp.xhtml">NeonEndToEndTests.cpp</a></li>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:15 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
