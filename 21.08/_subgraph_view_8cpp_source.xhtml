<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/SubgraphView.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_subgraph_view_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SubgraphView.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_subgraph_view_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_subgraph_view_8hpp.xhtml">SubgraphView.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_8hpp.xhtml">Graph.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_ignore_unused_8hpp.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_numeric_cast_8hpp.xhtml">armnn/utility/NumericCast.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_polymorphic_downcast_8hpp.xhtml">armnn/utility/PolymorphicDowncast.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> C&gt;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keywordtype">void</span> AssertIfNullsOrDuplicates(<span class="keyword">const</span> C&amp; container, <span class="keyword">const</span> std::string&amp; errorMessage)</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keyword">using</span> T = <span class="keyword">typename</span> C::value_type;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    std::unordered_set&lt;T&gt; duplicateSet;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    std::for_each(container.begin(), container.end(), [&amp;duplicateSet, &amp;errorMessage](<span class="keyword">const</span> T&amp; i)</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="comment">// Ignore unused for release builds</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(errorMessage);</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="comment">// Check if the item is valid</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(i, errorMessage.c_str());</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="comment">// Check if a duplicate has been found</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(duplicateSet.find(i) == duplicateSet.end(), errorMessage.c_str());</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        duplicateSet.insert(i);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    });</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;} <span class="comment">// anonymous namespace</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a40bb9799fd918fa31f983cc5aa156828">   43</a></span>&#160;<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a40bb9799fd918fa31f983cc5aa156828">SubgraphView::SubgraphView</a>(<a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; graph)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    : m_InputSlots{}</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    , m_OutputSlots{}</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    , m_Layers(graph.begin(), graph.end())</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    ArrangeBySortOrder();</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    CheckSubgraph();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#aa3ff0319812b6ea8da57604211400879">   52</a></span>&#160;<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a40bb9799fd918fa31f983cc5aa156828">SubgraphView::SubgraphView</a>(<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a5cc65e15002dbc33a5c8a7d6680e9a9d">InputSlots</a>&amp;&amp; inputs, <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a78293334750ec5279eb9c96d56deaf08">OutputSlots</a>&amp;&amp; outputs, <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a74798938fdaeae75c8adfa4a7439e7f9">Layers</a>&amp;&amp; layers)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    : m_InputSlots{inputs}</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    , m_OutputSlots{outputs}</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    , m_Layers{layers}</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    ArrangeBySortOrder();</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    CheckSubgraph();</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a40ec3404f963da3c5ea3665a3b50c5ca">   61</a></span>&#160;<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a40bb9799fd918fa31f983cc5aa156828">SubgraphView::SubgraphView</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a>&amp; subgraph)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    : m_InputSlots(subgraph.m_InputSlots.<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a2fc512b3ddb7bb2cdf02f44038ca2500">begin</a>(), subgraph.m_InputSlots.<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#aaf68d7cca5c48a7f3d398452a5244667">end</a>())</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    , m_OutputSlots(subgraph.m_OutputSlots.<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a2fc512b3ddb7bb2cdf02f44038ca2500">begin</a>(), subgraph.m_OutputSlots.<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#aaf68d7cca5c48a7f3d398452a5244667">end</a>())</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    , m_Layers(subgraph.m_Layers.<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a2fc512b3ddb7bb2cdf02f44038ca2500">begin</a>(), subgraph.m_Layers.<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#aaf68d7cca5c48a7f3d398452a5244667">end</a>())</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    ArrangeBySortOrder();</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    CheckSubgraph();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#ae192e05beaadbd1d231676d9c37d1317">   70</a></span>&#160;<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a40bb9799fd918fa31f983cc5aa156828">SubgraphView::SubgraphView</a>(<a class="code" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a>&amp;&amp; subgraph)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    : m_InputSlots(<a class="code" href="namespacestd.xhtml">std</a>::move(subgraph.m_InputSlots))</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    , m_OutputSlots(<a class="code" href="namespacestd.xhtml">std</a>::move(subgraph.m_OutputSlots))</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    , m_Layers(<a class="code" href="namespacestd.xhtml">std</a>::move(subgraph.m_Layers))</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    ArrangeBySortOrder();</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    CheckSubgraph();</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a8e22424d6e8e40cbf9884a08c42a0199">   79</a></span>&#160;<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a40bb9799fd918fa31f983cc5aa156828">SubgraphView::SubgraphView</a>(<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    : m_InputSlots{}</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    , m_OutputSlots{}</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    , m_Layers{PolymorphicDowncast&lt;Layer*&gt;(layer)}</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;{</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numInputSlots = layer-&gt;GetNumInputSlots();</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    m_InputSlots.resize(numInputSlots);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; numInputSlots; i++)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        m_InputSlots.at(i) = PolymorphicDowncast&lt;InputSlot*&gt;(&amp;(layer-&gt;GetInputSlot(i)));</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numOutputSlots = layer-&gt;GetNumOutputSlots();</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    m_OutputSlots.resize(numOutputSlots);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; numOutputSlots; i++)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        m_OutputSlots.at(i) = PolymorphicDowncast&lt;OutputSlot*&gt;(&amp;(layer-&gt;GetOutputSlot(i)));</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    CheckSubgraph();</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#aae84cdbe05d87942f8ce0a2576c8a7c8">  101</a></span>&#160;<a class="code" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a>&amp; <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#aae84cdbe05d87942f8ce0a2576c8a7c8">SubgraphView::operator=</a>(<a class="code" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a>&amp;&amp; other)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    m_InputSlots = std::move(other.m_InputSlots);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    m_OutputSlots = std::move(other.m_OutputSlots);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    m_Layers = std::move(other.m_Layers);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    CheckSubgraph();</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordtype">void</span> SubgraphView::CheckSubgraph()</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="comment">// Check for invalid or duplicate input slots</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    AssertIfNullsOrDuplicates(m_InputSlots, <span class="stringliteral">&quot;Sub-graphs cannot contain null or duplicate input slots&quot;</span>);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="comment">// Check for invalid or duplicate output slots</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    AssertIfNullsOrDuplicates(m_OutputSlots, <span class="stringliteral">&quot;Sub-graphs cannot contain null or duplicate output slots&quot;</span>);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment">// Check for invalid or duplicate layers</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    AssertIfNullsOrDuplicates(m_Layers, <span class="stringliteral">&quot;Sub-graphs cannot contain null or duplicate layers&quot;</span>);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a0b066a26219bcae83ca3e1d7f60fb123">  124</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a5cc65e15002dbc33a5c8a7d6680e9a9d">SubgraphView::InputSlots</a>&amp; <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a0b066a26219bcae83ca3e1d7f60fb123">SubgraphView::GetInputSlots</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">return</span> m_InputSlots;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a4b924dd808b6a155518d552c7ef3728f">  129</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a78293334750ec5279eb9c96d56deaf08">SubgraphView::OutputSlots</a>&amp; <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a4b924dd808b6a155518d552c7ef3728f">SubgraphView::GetOutputSlots</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">return</span> m_OutputSlots;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#affe284f25c7940ffa692a4d2005591ff">  134</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_input_slot.xhtml">InputSlot</a>* <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#affe284f25c7940ffa692a4d2005591ff">SubgraphView::GetInputSlot</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index)<span class="keyword"> const</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">return</span> m_InputSlots.at(index);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#ad5357715e7e8c6750036d26258449115">  139</a></span>&#160;<a class="code" href="classarmnn_1_1_input_slot.xhtml">InputSlot</a>* <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#affe284f25c7940ffa692a4d2005591ff">SubgraphView::GetInputSlot</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;{</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">return</span> m_InputSlots.at(index);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a66fd1c3ee6399e0bef2de8a5b9a59592">  144</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a>* <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a66fd1c3ee6399e0bef2de8a5b9a59592">SubgraphView::GetOutputSlot</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index)<span class="keyword"> const</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">return</span> m_OutputSlots.at(index);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a22a2f50137aef4f93fbdb57b6e029895">  149</a></span>&#160;<a class="code" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a>* <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a66fd1c3ee6399e0bef2de8a5b9a59592">SubgraphView::GetOutputSlot</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;{</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">return</span> m_OutputSlots.at(index);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a6cbf14f4d57ef2de2cfed9a903db1643">  154</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a6cbf14f4d57ef2de2cfed9a903db1643">SubgraphView::GetNumInputSlots</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(m_InputSlots.size());</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;}</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a59a4100374e80a3504f4bb4d13695d0b">  159</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a59a4100374e80a3504f4bb4d13695d0b">SubgraphView::GetNumOutputSlots</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(m_OutputSlots.size());</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#ac8ac9809196ec980b8472fbc8367697a">  164</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a74798938fdaeae75c8adfa4a7439e7f9">SubgraphView::Layers</a>&amp; <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#ac8ac9809196ec980b8472fbc8367697a">SubgraphView::GetLayers</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">return</span> m_Layers;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;}</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a2fc512b3ddb7bb2cdf02f44038ca2500">  169</a></span>&#160;<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#af323e5b54c189191060bce191ce0f233">SubgraphView::Iterator</a> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a2fc512b3ddb7bb2cdf02f44038ca2500">SubgraphView::begin</a>()</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;{</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordflow">return</span> m_Layers.begin();</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;}</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#aaf68d7cca5c48a7f3d398452a5244667">  174</a></span>&#160;<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#af323e5b54c189191060bce191ce0f233">SubgraphView::Iterator</a> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#aaf68d7cca5c48a7f3d398452a5244667">SubgraphView::end</a>()</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;{</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">return</span> m_Layers.end();</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a6136e1f09b845a7ebe1d57cfd720e0bd">  179</a></span>&#160;<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a39524c3cad3af48ba3e2bba2e8bf9fbe">SubgraphView::ConstIterator</a> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a2fc512b3ddb7bb2cdf02f44038ca2500">SubgraphView::begin</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">return</span> m_Layers.begin();</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a9e48fc9629934ce1c8cd2166fa1aaeca">  184</a></span>&#160;<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a39524c3cad3af48ba3e2bba2e8bf9fbe">SubgraphView::ConstIterator</a> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#aaf68d7cca5c48a7f3d398452a5244667">SubgraphView::end</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">return</span> m_Layers.end();</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a3b4adb0f69ba6d30924569e5fe22478c">  189</a></span>&#160;<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a39524c3cad3af48ba3e2bba2e8bf9fbe">SubgraphView::ConstIterator</a> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a3b4adb0f69ba6d30924569e5fe22478c">SubgraphView::cbegin</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a2fc512b3ddb7bb2cdf02f44038ca2500">begin</a>();</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;}</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#a7efd45d3f8e9891ebd212b1f23062a1e">  194</a></span>&#160;<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a39524c3cad3af48ba3e2bba2e8bf9fbe">SubgraphView::ConstIterator</a> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a7efd45d3f8e9891ebd212b1f23062a1e">SubgraphView::cend</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#aaf68d7cca5c48a7f3d398452a5244667">end</a>();</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;}</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="classarmnn_1_1_subgraph_view.xhtml#aa71d36872f416feaa853788a7a7a7ef8">  199</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#aa71d36872f416feaa853788a7a7a7ef8">SubgraphView::Clear</a>()</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;{</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    m_InputSlots.clear();</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    m_OutputSlots.clear();</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    m_Layers.clear();</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;}</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keywordtype">void</span> SubgraphView::ArrangeBySortOrder()</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;{</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keyword">using</span> LayerList = std::list&lt;Layer*&gt;;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keyword">auto</span> compareLayerPriority = [](<span class="keyword">const</span> LayerList::value_type&amp; layerA, <span class="keyword">const</span> LayerList::value_type&amp; layerB)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">return</span> layerA-&gt;GetPriority() &lt; layerB-&gt;GetPriority();</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        };</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    m_Layers.sort(compareLayerPriority);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;}</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="_ignore_unused_8hpp_xhtml"><div class="ttname"><a href="_ignore_unused_8hpp.xhtml">IgnoreUnused.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00061">INetwork.hpp:61</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_af323e5b54c189191060bce191ce0f233"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#af323e5b54c189191060bce191ce0f233">armnn::SubgraphView::Iterator</a></div><div class="ttdeci">Layers::iterator Iterator</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8hpp_source.xhtml#l00041">SubgraphView.hpp:41</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_aae84cdbe05d87942f8ce0a2576c8a7c8"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#aae84cdbe05d87942f8ce0a2576c8a7c8">armnn::SubgraphView::operator=</a></div><div class="ttdeci">SubgraphView &amp; operator=(SubgraphView &amp;&amp;other)</div><div class="ttdoc">Move-assignment operator. </div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00101">SubgraphView.cpp:101</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a78293334750ec5279eb9c96d56deaf08"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a78293334750ec5279eb9c96d56deaf08">armnn::SubgraphView::OutputSlots</a></div><div class="ttdeci">std::vector&lt; OutputSlot * &gt; OutputSlots</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8hpp_source.xhtml#l00039">SubgraphView.hpp:39</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a6cbf14f4d57ef2de2cfed9a903db1643"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a6cbf14f4d57ef2de2cfed9a903db1643">armnn::SubgraphView::GetNumInputSlots</a></div><div class="ttdeci">unsigned int GetNumInputSlots() const</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00154">SubgraphView.cpp:154</a></div></div>
<div class="ttc" id="_subgraph_view_8hpp_xhtml"><div class="ttname"><a href="_subgraph_view_8hpp.xhtml">SubgraphView.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_slot_xhtml"><div class="ttname"><a href="classarmnn_1_1_input_slot.xhtml">armnn::InputSlot</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00041">Layer.hpp:41</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_aaf68d7cca5c48a7f3d398452a5244667"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#aaf68d7cca5c48a7f3d398452a5244667">armnn::SubgraphView::end</a></div><div class="ttdeci">Iterator end()</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00174">SubgraphView.cpp:174</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__software__tools_8dox_source.xhtml#l00006">01_00_software_tools.dox:6</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="_numeric_cast_8hpp_xhtml"><div class="ttname"><a href="_numeric_cast_8hpp.xhtml">NumericCast.hpp</a></div></div>
<div class="ttc" id="_polymorphic_downcast_8hpp_xhtml"><div class="ttname"><a href="_polymorphic_downcast_8hpp.xhtml">PolymorphicDowncast.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml">armnn::SubgraphView</a></div><div class="ttdoc">The SubgraphView class represents a subgraph of a Graph. </div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8hpp_source.xhtml#l00023">SubgraphView.hpp:23</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00147">BackendId.hpp:147</a></div></div>
<div class="ttc" id="_assert_8hpp_xhtml_a91c4dfde57907d7698c7531785690a7f"><div class="ttname"><a href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a></div><div class="ttdeci">#define ARMNN_ASSERT_MSG(COND, MSG)</div><div class="ttdef"><b>Definition:</b> <a href="_assert_8hpp_source.xhtml#l00015">Assert.hpp:15</a></div></div>
<div class="ttc" id="_graph_8hpp_xhtml"><div class="ttname"><a href="_graph_8hpp.xhtml">Graph.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a66fd1c3ee6399e0bef2de8a5b9a59592"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a66fd1c3ee6399e0bef2de8a5b9a59592">armnn::SubgraphView::GetOutputSlot</a></div><div class="ttdeci">const OutputSlot * GetOutputSlot(unsigned int index) const</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00144">SubgraphView.cpp:144</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_slot_xhtml"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml">armnn::OutputSlot</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00083">Layer.hpp:83</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00029">Graph.hpp:29</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_aa71d36872f416feaa853788a7a7a7ef8"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#aa71d36872f416feaa853788a7a7a7ef8">armnn::SubgraphView::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00199">SubgraphView.cpp:199</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a5cc65e15002dbc33a5c8a7d6680e9a9d"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a5cc65e15002dbc33a5c8a7d6680e9a9d">armnn::SubgraphView::InputSlots</a></div><div class="ttdeci">std::vector&lt; InputSlot * &gt; InputSlots</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8hpp_source.xhtml#l00038">SubgraphView.hpp:38</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a40bb9799fd918fa31f983cc5aa156828"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a40bb9799fd918fa31f983cc5aa156828">armnn::SubgraphView::SubgraphView</a></div><div class="ttdeci">SubgraphView(Graph &amp;graph)</div><div class="ttdoc">Constructs a sub-graph from the entire given graph. </div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00043">SubgraphView.cpp:43</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a0b066a26219bcae83ca3e1d7f60fb123"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a0b066a26219bcae83ca3e1d7f60fb123">armnn::SubgraphView::GetInputSlots</a></div><div class="ttdeci">const InputSlots &amp; GetInputSlots() const</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00124">SubgraphView.cpp:124</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a7efd45d3f8e9891ebd212b1f23062a1e"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a7efd45d3f8e9891ebd212b1f23062a1e">armnn::SubgraphView::cend</a></div><div class="ttdeci">ConstIterator cend() const</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00194">SubgraphView.cpp:194</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_affe284f25c7940ffa692a4d2005591ff"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#affe284f25c7940ffa692a4d2005591ff">armnn::SubgraphView::GetInputSlot</a></div><div class="ttdeci">const InputSlot * GetInputSlot(unsigned int index) const</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00134">SubgraphView.cpp:134</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a4b924dd808b6a155518d552c7ef3728f"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a4b924dd808b6a155518d552c7ef3728f">armnn::SubgraphView::GetOutputSlots</a></div><div class="ttdeci">const OutputSlots &amp; GetOutputSlots() const</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00129">SubgraphView.cpp:129</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_ac8ac9809196ec980b8472fbc8367697a"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#ac8ac9809196ec980b8472fbc8367697a">armnn::SubgraphView::GetLayers</a></div><div class="ttdeci">const Layers &amp; GetLayers() const</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00164">SubgraphView.cpp:164</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a375ca3cff9f1b005d1412dc5f3cf5b6e"><div class="ttname"><a href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a></div><div class="ttdeci">std::enable_if_t&lt; std::is_unsigned&lt; Source &gt;::value &amp;&amp;std::is_unsigned&lt; Dest &gt;::value, Dest &gt; numeric_cast(Source source)</div><div class="ttdef"><b>Definition:</b> <a href="_numeric_cast_8hpp_source.xhtml#l00035">NumericCast.hpp:35</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a2fc512b3ddb7bb2cdf02f44038ca2500"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a2fc512b3ddb7bb2cdf02f44038ca2500">armnn::SubgraphView::begin</a></div><div class="ttdeci">Iterator begin()</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00169">SubgraphView.cpp:169</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a3b4adb0f69ba6d30924569e5fe22478c"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a3b4adb0f69ba6d30924569e5fe22478c">armnn::SubgraphView::cbegin</a></div><div class="ttdeci">ConstIterator cbegin() const</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00189">SubgraphView.cpp:189</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a74798938fdaeae75c8adfa4a7439e7f9"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a74798938fdaeae75c8adfa4a7439e7f9">armnn::SubgraphView::Layers</a></div><div class="ttdeci">std::list&lt; Layer * &gt; Layers</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8hpp_source.xhtml#l00040">SubgraphView.hpp:40</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a39524c3cad3af48ba3e2bba2e8bf9fbe"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a39524c3cad3af48ba3e2bba2e8bf9fbe">armnn::SubgraphView::ConstIterator</a></div><div class="ttdeci">Layers::const_iterator ConstIterator</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8hpp_source.xhtml#l00042">SubgraphView.hpp:42</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a59a4100374e80a3504f4bb4d13695d0b"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a59a4100374e80a3504f4bb4d13695d0b">armnn::SubgraphView::GetNumOutputSlots</a></div><div class="ttdeci">unsigned int GetNumOutputSlots() const</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00159">SubgraphView.cpp:159</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_subgraph_view_8cpp.xhtml">SubgraphView.cpp</a></li>
    <li class="footer">Generated on Tue Aug 24 2021 16:18:20 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
