<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_i_layer_visitor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ILayerVisitor Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a4549b1bbb63fa26700d74854e388784f">FinishVisit</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a27fa880bce96ac7355284a7681f2377e">ILayerVisitor</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a463965a96896bf0d261b44eea5172c7b">StartVisit</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a288db083c224e756f7bb35afe6289b7f">VisitAbsLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ab2a1e493b983a932792bc5d0c1a20127">VisitActivationLayer</a>(const IConnectableLayer *layer, const ActivationDescriptor &amp;activationDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a2d20b94b7de822f3d29ab12e47e3be4e">VisitAdditionLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a8423316906ebe6ae6d28c7f69ad91248">VisitArgMinMaxLayer</a>(const IConnectableLayer *layer, const ArgMinMaxDescriptor &amp;argMinMaxDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a9e642355474f31268e66a404e6c1b81d">VisitBatchNormalizationLayer</a>(const IConnectableLayer *layer, const BatchNormalizationDescriptor &amp;desc, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a1cee693185bcda15bd777008e60c7cf7">VisitBatchToSpaceNdLayer</a>(const IConnectableLayer *layer, const BatchToSpaceNdDescriptor &amp;batchToSpaceNdDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a6a1a6856fe4210d9c84c4fb86b4b661e">VisitComparisonLayer</a>(const IConnectableLayer *layer, const ComparisonDescriptor &amp;comparisonDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#aeb90d7587f7887aee1f2b43261d4ee5c">VisitConcatLayer</a>(const IConnectableLayer *layer, const OriginsDescriptor &amp;concatDescriptor, const char *name=nullptr)</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a2f123a6a99ac143c0f3806cb505765cd">VisitConstantLayer</a>(const IConnectableLayer *layer, const ConstTensor &amp;input, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#abc8fe4c6cbc8fa2b13c525500dddfbf6">VisitConvolution2dLayer</a>(const IConnectableLayer *layer, const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a72d308d6f24ffb8846375d770394af66">VisitDepthToSpaceLayer</a>(const IConnectableLayer *layer, const DepthToSpaceDescriptor &amp;depthToSpaceDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ad39aaac8f8fb790ae364c87f1a249d68">VisitDepthwiseConvolution2dLayer</a>(const IConnectableLayer *layer, const DepthwiseConvolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a0fa32cbc3ca68467c749d50e844faeaf">VisitDequantizeLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ab270e1bebbe01a22543cc49ac3a14c25">VisitDetectionPostProcessLayer</a>(const IConnectableLayer *layer, const DetectionPostProcessDescriptor &amp;descriptor, const ConstTensor &amp;anchors, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ada3c96a7b0d4251edb24584096b90a24">VisitDivisionLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#aaf99c2bdfe61c48821f23826433a5abc">VisitElementwiseUnaryLayer</a>(const IConnectableLayer *layer, const ElementwiseUnaryDescriptor &amp;elementwiseUnaryDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ae242b544b15e9d80aa2f3be385540eb6">VisitEqualLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#abf67d8273706f9dfc51be559b8505199">VisitFillLayer</a>(const IConnectableLayer *layer, const FillDescriptor &amp;fillDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a3fd73f343863eedb8dde418c6183193c">VisitFloorLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a554265358b3809394c760b824303310c">VisitFullyConnectedLayer</a>(const IConnectableLayer *layer, const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ab93a48970564c6eabbc982a2116c1262">VisitFullyConnectedLayer</a>(const IConnectableLayer *layer, const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a8b19c99b738524199b49d4b9819d4d8a">VisitGatherLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ad2e2934576c5b4755cc9b36671227bc2">VisitGatherLayer</a>(const IConnectableLayer *layer, const GatherDescriptor &amp;gatherDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ac81739b57b9a27fb0c363bcd6479692e">VisitGreaterLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ab6dc51682cb4178194f3f00c2309ec7b">VisitInputLayer</a>(const IConnectableLayer *layer, LayerBindingId id, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#aaf4e8d2b1ed2612f4821ed1d2351667b">VisitInstanceNormalizationLayer</a>(const IConnectableLayer *layer, const InstanceNormalizationDescriptor &amp;desc, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a0678ff146765cea41b6d577773680fda">VisitL2NormalizationLayer</a>(const IConnectableLayer *layer, const L2NormalizationDescriptor &amp;desc, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a42258b02ff22765d6f2eeba7bff7f802">VisitLogicalBinaryLayer</a>(const IConnectableLayer *layer, const LogicalBinaryDescriptor &amp;logicalBinaryDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a2db103c5db69877b05b365e50ee3bd5b">VisitLogSoftmaxLayer</a>(const IConnectableLayer *layer, const LogSoftmaxDescriptor &amp;logSoftmaxDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#aed730aaef50861ea8b7b6276ce880c9a">VisitLstmLayer</a>(const IConnectableLayer *layer, const LstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a9cbdbdbda6abefbc2e1eacaad47795bd">VisitMaximumLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ab33e9cae83e312ccc9e12adcf53494e3">VisitMeanLayer</a>(const IConnectableLayer *layer, const MeanDescriptor &amp;meanDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a002ed3346c6a89035f54e11155d5b1e1">VisitMergeLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#acc80689b27497fe0c4ee3c27b50d1f31">VisitMergerLayer</a>(const IConnectableLayer *layer, const MergerDescriptor &amp;mergerDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a63187da01b5bb0bd4500ddf851edd0ff">VisitMinimumLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a1e415ad61a4fa40d85a4f0da855cf485">VisitMultiplicationLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a96501b3e43422b9fdf6fc45d89b20992">VisitNormalizationLayer</a>(const IConnectableLayer *layer, const NormalizationDescriptor &amp;normalizationDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a0da6bde681d919b7282eddad4a446890">VisitOutputLayer</a>(const IConnectableLayer *layer, LayerBindingId id, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#aab2febd844bcf654e80cf164984c8904">VisitPadLayer</a>(const IConnectableLayer *layer, const PadDescriptor &amp;padDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a211e587a05b0c7e7202f8f8894f89894">VisitPermuteLayer</a>(const IConnectableLayer *layer, const PermuteDescriptor &amp;permuteDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#aef56afef7d87afa51fd363487c375af5">VisitPooling2dLayer</a>(const IConnectableLayer *layer, const Pooling2dDescriptor &amp;pooling2dDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a4f6971a5d2c164c691dc7943f4befd5c">VisitPreluLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a3f99f4f70c011a8ab5234e5595350781">VisitQLstmLayer</a>(const IConnectableLayer *layer, const QLstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#acb1bac244973743d460064c1e0d816fd">VisitQuantizedLstmLayer</a>(const IConnectableLayer *layer, const QuantizedLstmInputParams &amp;params, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a78ec371d5935104926bca5c5febf6780">VisitQuantizeLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a7b2632b6e22ac7bc314bad5532fdb3c9">VisitRankLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a226889fe8ad44b16a54f1cc50fc9730b">VisitReduceLayer</a>(const IConnectableLayer *layer, const ReduceDescriptor &amp;reduceDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#acb732489554691ba852ca323888093ac">VisitReshapeLayer</a>(const IConnectableLayer *layer, const ReshapeDescriptor &amp;reshapeDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a8d87dab666a8aa6e132fcd93717a3c4b">VisitResizeBilinearLayer</a>(const IConnectableLayer *layer, const ResizeBilinearDescriptor &amp;resizeDesc, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a306e22f3cc6baaf7a6f1390f669be42e">VisitResizeLayer</a>(const IConnectableLayer *layer, const ResizeDescriptor &amp;resizeDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a413253dbf325ea0b44559b55242170d1">VisitRsqrtLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#aad5c9d5c9cf256ea990097732fd1f108">VisitSliceLayer</a>(const IConnectableLayer *layer, const SliceDescriptor &amp;sliceDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ae47c90e3188970462a28d297644133d1">VisitSoftmaxLayer</a>(const IConnectableLayer *layer, const SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#aa8c1ec6712293700fb3874f63f2ec5f0">VisitSpaceToBatchNdLayer</a>(const IConnectableLayer *layer, const SpaceToBatchNdDescriptor &amp;spaceToBatchNdDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a7ac3fe15d509443ffbe985370b61b913">VisitSpaceToDepthLayer</a>(const IConnectableLayer *layer, const SpaceToDepthDescriptor &amp;spaceToDepthDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a45c613d43c30b3314cafb1be3ef7685c">VisitSplitterLayer</a>(const IConnectableLayer *layer, const ViewsDescriptor &amp;splitterDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a5c7df9d37959280f4328848ae4b2be37">VisitStackLayer</a>(const IConnectableLayer *layer, const StackDescriptor &amp;stackDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a2c97836f7288428fe4f070033d2f0aea">VisitStandInLayer</a>(const IConnectableLayer *layer, const StandInDescriptor &amp;standInDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ac2f4ca5ada6d8fcf82d7bea2e6a06924">VisitStridedSliceLayer</a>(const IConnectableLayer *layer, const StridedSliceDescriptor &amp;stridedSliceDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#ad339435c8d56522efc647da668d47047">VisitSubtractionLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a6d33c538a0f3f179ec2eeb4dcee2a21e">VisitSwitchLayer</a>(const IConnectableLayer *layer, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a58bb3bc96c089a4d0b954be81f1899c6">VisitTransposeConvolution2dLayer</a>(const IConnectableLayer *layer, const TransposeConvolution2dDescriptor &amp;descriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a5e101341277244c45eb20f4db63c77a3">VisitTransposeLayer</a>(const IConnectableLayer *layer, const TransposeDescriptor &amp;transposeDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a7ad7aeeaf26228ef11c15fa5d4507d8a">~ILayerVisitor</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Tue Aug 24 2021 16:18:49 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
