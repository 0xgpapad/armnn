<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: IOnnxParser Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classarmnn_onnx_parser_1_1_i_onnx_parser-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">IOnnxParser Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_i_onnx_parser_8hpp_source.xhtml">IOnnxParser.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for IOnnxParser:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_onnx_parser_1_1_i_onnx_parser.png" usemap="#IOnnxParser_map" alt=""/>
  <map id="IOnnxParser_map" name="IOnnxParser_map">
<area href="classarmnn_onnx_parser_1_1_onnx_parser.xhtml" alt="OnnxParser" shape="rect" coords="0,56,83,80"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad92bc619ba8c78c9a4200d6635fde326"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#ad92bc619ba8c78c9a4200d6635fde326">CreateNetworkFromBinaryFile</a> (const char *graphFile)=0</td></tr>
<tr class="memdesc:ad92bc619ba8c78c9a4200d6635fde326"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the network from a protobuf binary file on disk.  <a href="#ad92bc619ba8c78c9a4200d6635fde326">More...</a><br /></td></tr>
<tr class="separator:ad92bc619ba8c78c9a4200d6635fde326"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f8e06d1391080a1f34e49997c16f878"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a9f8e06d1391080a1f34e49997c16f878">CreateNetworkFromTextFile</a> (const char *graphFile)=0</td></tr>
<tr class="memdesc:a9f8e06d1391080a1f34e49997c16f878"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the network from a protobuf text file on disk.  <a href="#a9f8e06d1391080a1f34e49997c16f878">More...</a><br /></td></tr>
<tr class="separator:a9f8e06d1391080a1f34e49997c16f878"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02561e57c710ca5c616279c928125f1c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a02561e57c710ca5c616279c928125f1c">CreateNetworkFromString</a> (const std::string &amp;protoText)=0</td></tr>
<tr class="memdesc:a02561e57c710ca5c616279c928125f1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the network directly from protobuf text in a string. Useful for debugging/testing.  <a href="#a02561e57c710ca5c616279c928125f1c">More...</a><br /></td></tr>
<tr class="separator:a02561e57c710ca5c616279c928125f1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbba18b867f84bfcd3c88d06f275eac9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn_onnx_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#adbba18b867f84bfcd3c88d06f275eac9">GetNetworkInputBindingInfo</a> (const std::string &amp;name) const =0</td></tr>
<tr class="memdesc:adbba18b867f84bfcd3c88d06f275eac9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve binding info (layer id and tensor info) for the network input identified by the given layer name.  <a href="#adbba18b867f84bfcd3c88d06f275eac9">More...</a><br /></td></tr>
<tr class="separator:adbba18b867f84bfcd3c88d06f275eac9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99d33c004ce680f49893c9254d9bff5a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn_onnx_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a99d33c004ce680f49893c9254d9bff5a">GetNetworkOutputBindingInfo</a> (const std::string &amp;name) const =0</td></tr>
<tr class="memdesc:a99d33c004ce680f49893c9254d9bff5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve binding info (layer id and tensor info) for the network output identified by the given layer name.  <a href="#a99d33c004ce680f49893c9254d9bff5a">More...</a><br /></td></tr>
<tr class="separator:a99d33c004ce680f49893c9254d9bff5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a1ae1d4dfe89d26b84d371439d6815bfb"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a1ae1d4dfe89d26b84d371439d6815bfb">CreateRaw</a> ()</td></tr>
<tr class="separator:a1ae1d4dfe89d26b84d371439d6815bfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9b9254fb8a084f0db4f7deff0498b20"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearmnn_onnx_parser.xhtml#ac7dfccab29feeb5f33f1ec0183c1e123">IOnnxParserPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#af9b9254fb8a084f0db4f7deff0498b20">Create</a> ()</td></tr>
<tr class="separator:af9b9254fb8a084f0db4f7deff0498b20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a793da4fa60bf13f128c20d8def32c291"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a793da4fa60bf13f128c20d8def32c291">Destroy</a> (<a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a> *parser)</td></tr>
<tr class="separator:a793da4fa60bf13f128c20d8def32c291"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a722949b1ae5d20dce7e8c5004c9a248b"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a722949b1ae5d20dce7e8c5004c9a248b">~IOnnxParser</a> ()</td></tr>
<tr class="separator:a722949b1ae5d20dce7e8c5004c9a248b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_i_onnx_parser_8hpp_source.xhtml#l00022">22</a> of file <a class="el" href="_i_onnx_parser_8hpp_source.xhtml">IOnnxParser.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a722949b1ae5d20dce7e8c5004c9a248b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a722949b1ae5d20dce7e8c5004c9a248b">&#9670;&nbsp;</a></span>~IOnnxParser()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_onnx_parser_8hpp_source.xhtml#l00045">45</a> of file <a class="el" href="_i_onnx_parser_8hpp_source.xhtml">IOnnxParser.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{};</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af9b9254fb8a084f0db4f7deff0498b20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9b9254fb8a084f0db4f7deff0498b20">&#9670;&nbsp;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn_onnx_parser.xhtml#ac7dfccab29feeb5f33f1ec0183c1e123">IOnnxParserPtr</a> Create </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_onnx_parser_8cpp_source.xhtml#l00435">435</a> of file <a class="el" href="_onnx_parser_8cpp_source.xhtml">OnnxParser.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_constructor_8cpp_source.xhtml#l00011">BOOST_AUTO_TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;{</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn_onnx_parser.xhtml#ac7dfccab29feeb5f33f1ec0183c1e123">IOnnxParserPtr</a>(<a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a1ae1d4dfe89d26b84d371439d6815bfb">CreateRaw</a>(), &amp;<a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a793da4fa60bf13f128c20d8def32c291">IOnnxParser::Destroy</a>);</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;}</div><div class="ttc" id="classarmnn_onnx_parser_1_1_i_onnx_parser_xhtml_a1ae1d4dfe89d26b84d371439d6815bfb"><div class="ttname"><a href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a1ae1d4dfe89d26b84d371439d6815bfb">armnnOnnxParser::IOnnxParser::CreateRaw</a></div><div class="ttdeci">static IOnnxParser * CreateRaw()</div><div class="ttdef"><b>Definition:</b> <a href="_onnx_parser_8cpp_source.xhtml#l00430">OnnxParser.cpp:430</a></div></div>
<div class="ttc" id="classarmnn_onnx_parser_1_1_i_onnx_parser_xhtml_a793da4fa60bf13f128c20d8def32c291"><div class="ttname"><a href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a793da4fa60bf13f128c20d8def32c291">armnnOnnxParser::IOnnxParser::Destroy</a></div><div class="ttdeci">static void Destroy(IOnnxParser *parser)</div><div class="ttdef"><b>Definition:</b> <a href="_onnx_parser_8cpp_source.xhtml#l00440">OnnxParser.cpp:440</a></div></div>
<div class="ttc" id="namespacearmnn_onnx_parser_xhtml_ac7dfccab29feeb5f33f1ec0183c1e123"><div class="ttname"><a href="namespacearmnn_onnx_parser.xhtml#ac7dfccab29feeb5f33f1ec0183c1e123">armnnOnnxParser::IOnnxParserPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IOnnxParser, void(*)(IOnnxParser *parser)&gt; IOnnxParserPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_onnx_parser_8hpp_source.xhtml#l00020">IOnnxParser.hpp:20</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad92bc619ba8c78c9a4200d6635fde326"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad92bc619ba8c78c9a4200d6635fde326">&#9670;&nbsp;</a></span>CreateNetworkFromBinaryFile()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromBinaryFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>graphFile</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create the network from a protobuf binary file on disk. </p>

<p>Implemented in <a class="el" href="classarmnn_onnx_parser_1_1_onnx_parser.xhtml#a012b24cafd443425314d4f9e06cec6c1">OnnxParser</a>.</p>

</div>
</div>
<a id="a02561e57c710ca5c616279c928125f1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02561e57c710ca5c616279c928125f1c">&#9670;&nbsp;</a></span>CreateNetworkFromString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromString </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>protoText</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create the network directly from protobuf text in a string. Useful for debugging/testing. </p>

<p>Implemented in <a class="el" href="classarmnn_onnx_parser_1_1_onnx_parser.xhtml#a4cb67bfbe630abf10787ac613d1a31c5">OnnxParser</a>.</p>

</div>
</div>
<a id="a9f8e06d1391080a1f34e49997c16f878"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f8e06d1391080a1f34e49997c16f878">&#9670;&nbsp;</a></span>CreateNetworkFromTextFile()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromTextFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>graphFile</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create the network from a protobuf text file on disk. </p>

<p>Implemented in <a class="el" href="classarmnn_onnx_parser_1_1_onnx_parser.xhtml#a08bac41eb476686564b15063edf1fc04">OnnxParser</a>.</p>

</div>
</div>
<a id="a1ae1d4dfe89d26b84d371439d6815bfb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ae1d4dfe89d26b84d371439d6815bfb">&#9670;&nbsp;</a></span>CreateRaw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a> * CreateRaw </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_onnx_parser_8cpp_source.xhtml#l00430">430</a> of file <a class="el" href="_onnx_parser_8cpp_source.xhtml">OnnxParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;{</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> OnnxParser();</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a793da4fa60bf13f128c20d8def32c291"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a793da4fa60bf13f128c20d8def32c291">&#9670;&nbsp;</a></span>Destroy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_onnx_parser_8cpp_source.xhtml#l00440">440</a> of file <a class="el" href="_onnx_parser_8cpp_source.xhtml">OnnxParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;{</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <span class="keyword">delete</span> parser;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="adbba18b867f84bfcd3c88d06f275eac9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbba18b867f84bfcd3c88d06f275eac9">&#9670;&nbsp;</a></span>GetNetworkInputBindingInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn_onnx_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a> GetNetworkInputBindingInfo </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieve binding info (layer id and tensor info) for the network input identified by the given layer name. </p>

<p>Implemented in <a class="el" href="classarmnn_onnx_parser_1_1_onnx_parser.xhtml#aba39201ebaeb0738f15a14b3c8da1f5a">OnnxParser</a>.</p>

</div>
</div>
<a id="a99d33c004ce680f49893c9254d9bff5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99d33c004ce680f49893c9254d9bff5a">&#9670;&nbsp;</a></span>GetNetworkOutputBindingInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn_onnx_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a> GetNetworkOutputBindingInfo </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieve binding info (layer id and tensor info) for the network output identified by the given layer name. </p>

<p>Implemented in <a class="el" href="classarmnn_onnx_parser_1_1_onnx_parser.xhtml#aee8c8fa7de3c87392791d9f8dd90655f">OnnxParser</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnnOnnxParser/<a class="el" href="_i_onnx_parser_8hpp_source.xhtml">IOnnxParser.hpp</a></li>
<li>src/armnnOnnxParser/<a class="el" href="_onnx_parser_8cpp_source.xhtml">OnnxParser.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn_onnx_parser.xhtml">armnnOnnxParser</a></li><li class="navelem"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a></li>
    <li class="footer">Generated on Thu Nov 26 2020 11:04:33 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
