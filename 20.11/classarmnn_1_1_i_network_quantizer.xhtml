<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: INetworkQuantizer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_i_network_quantizer.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classarmnn_1_1_i_network_quantizer-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">INetworkQuantizer Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Quantizer class Quantizes a float32 InputNetwork.  
 <a href="classarmnn_1_1_i_network_quantizer.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_network_quantizer_8hpp_source.xhtml">INetworkQuantizer.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for INetworkQuantizer:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_i_network_quantizer.png" usemap="#INetworkQuantizer_map" alt=""/>
  <map id="INetworkQuantizer_map" name="INetworkQuantizer_map">
<area href="classarmnn_1_1_network_quantizer.xhtml" alt="NetworkQuantizer" shape="rect" coords="0,56,116,80"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0ec2c346796d52e923cca0477497a6d0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml#a0ec2c346796d52e923cca0477497a6d0">OverrideInputRange</a> (<a class="el" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a> layerId, float min, float max)=0</td></tr>
<tr class="memdesc:a0ec2c346796d52e923cca0477497a6d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overrides the default quantization values for the input layer with the given id.  <a href="#a0ec2c346796d52e923cca0477497a6d0">More...</a><br /></td></tr>
<tr class="separator:a0ec2c346796d52e923cca0477497a6d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7708b89714c5a85d62e07f674ab9da4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml#ae7708b89714c5a85d62e07f674ab9da4">Refine</a> (const <a class="el" href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">InputTensors</a> &amp;inputTensors)=0</td></tr>
<tr class="memdesc:ae7708b89714c5a85d62e07f674ab9da4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Refine input network with a set of refinement data for specified LayerBindingId.  <a href="#ae7708b89714c5a85d62e07f674ab9da4">More...</a><br /></td></tr>
<tr class="separator:ae7708b89714c5a85d62e07f674ab9da4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c24535b51018853e67bad277f4cbbeb"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml#a2c24535b51018853e67bad277f4cbbeb">ExportNetwork</a> ()=0</td></tr>
<tr class="memdesc:a2c24535b51018853e67bad277f4cbbeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extract final quantized network.  <a href="#a2c24535b51018853e67bad277f4cbbeb">More...</a><br /></td></tr>
<tr class="separator:a2c24535b51018853e67bad277f4cbbeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ab8c40aedacd27ec921e53f3a022e6a63"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml">INetworkQuantizer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml#ab8c40aedacd27ec921e53f3a022e6a63">CreateRaw</a> (<a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a> *inputNetwork, const <a class="el" href="structarmnn_1_1_quantizer_options.xhtml">QuantizerOptions</a> &amp;options=<a class="el" href="structarmnn_1_1_quantizer_options.xhtml">QuantizerOptions</a>())</td></tr>
<tr class="memdesc:ab8c40aedacd27ec921e53f3a022e6a63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create Quantizer object and return raw pointer.  <a href="#ab8c40aedacd27ec921e53f3a022e6a63">More...</a><br /></td></tr>
<tr class="separator:ab8c40aedacd27ec921e53f3a022e6a63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a4d01d9351c02a703740290f226441f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearmnn.xhtml#a41119e261eec9343888d2ceab1e4999a">INetworkQuantizerPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml#a3a4d01d9351c02a703740290f226441f">Create</a> (<a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a> *inputNetwork, const <a class="el" href="structarmnn_1_1_quantizer_options.xhtml">QuantizerOptions</a> &amp;options=<a class="el" href="structarmnn_1_1_quantizer_options.xhtml">QuantizerOptions</a>())</td></tr>
<tr class="memdesc:a3a4d01d9351c02a703740290f226441f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create Quantizer object wrapped in unique_ptr.  <a href="#a3a4d01d9351c02a703740290f226441f">More...</a><br /></td></tr>
<tr class="separator:a3a4d01d9351c02a703740290f226441f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1ad5b83dc4d8bed64c29adf21c8958a"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml#ad1ad5b83dc4d8bed64c29adf21c8958a">Destroy</a> (<a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml">INetworkQuantizer</a> *quantizer)</td></tr>
<tr class="memdesc:ad1ad5b83dc4d8bed64c29adf21c8958a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy Quantizer object.  <a href="#ad1ad5b83dc4d8bed64c29adf21c8958a">More...</a><br /></td></tr>
<tr class="separator:ad1ad5b83dc4d8bed64c29adf21c8958a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a6b376fc4dcd2e2b3f5c1125a9c460a12"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml#a6b376fc4dcd2e2b3f5c1125a9c460a12">~INetworkQuantizer</a> ()</td></tr>
<tr class="separator:a6b376fc4dcd2e2b3f5c1125a9c460a12"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Quantizer class Quantizes a float32 InputNetwork. </p>

<p class="definition">Definition at line <a class="el" href="_i_network_quantizer_8hpp_source.xhtml#l00032">32</a> of file <a class="el" href="_i_network_quantizer_8hpp_source.xhtml">INetworkQuantizer.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a6b376fc4dcd2e2b3f5c1125a9c460a12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b376fc4dcd2e2b3f5c1125a9c460a12">&#9670;&nbsp;</a></span>~INetworkQuantizer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml">INetworkQuantizer</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_network_quantizer_8hpp_source.xhtml#l00054">54</a> of file <a class="el" href="_i_network_quantizer_8hpp_source.xhtml">INetworkQuantizer.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3a4d01d9351c02a703740290f226441f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a4d01d9351c02a703740290f226441f">&#9670;&nbsp;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a41119e261eec9343888d2ceab1e4999a">INetworkQuantizerPtr</a> Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a> *&#160;</td>
          <td class="paramname"><em>inputNetwork</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_quantizer_options.xhtml">QuantizerOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="structarmnn_1_1_quantizer_options.xhtml">QuantizerOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create Quantizer object wrapped in unique_ptr. </p>

<p class="definition">Definition at line <a class="el" href="_network_quantizer_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="_network_quantizer_8cpp_source.xhtml">NetworkQuantizer.cpp</a>.</p>

<p class="reference">References <a class="el" href="_network_quantizer_8cpp_source.xhtml#l00036">INetworkQuantizer::CreateRaw()</a>, and <a class="el" href="_network_quantizer_8cpp_source.xhtml#l00046">INetworkQuantizer::Destroy()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantizer_test_8cpp_source.xhtml#l00226">armnn::BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_arm_n_n_quantizer_main_8cpp_source.xhtml#l00017">main()</a>, <a class="el" href="_quantizer_test_8cpp_source.xhtml#l02998">armnn::PreserveTypeTestImpl()</a>, <a class="el" href="_quantizer_test_8cpp_source.xhtml#l01227">armnn::TestQuantizeConvolution2d()</a>, <a class="el" href="_quantizer_test_8cpp_source.xhtml#l01313">armnn::TestQuantizeDepthwiseConvolution2d()</a>, <a class="el" href="_quantizer_test_8cpp_source.xhtml#l02669">armnn::TestQuantizeTransposeConvolution2d()</a>, and <a class="el" href="_quantizer_test_8cpp_source.xhtml#l01099">armnn::ValidateFullyConnectedLayer()</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a41119e261eec9343888d2ceab1e4999a">INetworkQuantizerPtr</a>(<a class="code" href="classarmnn_1_1_i_network_quantizer.xhtml#ab8c40aedacd27ec921e53f3a022e6a63">CreateRaw</a>(inputNetwork, options), &amp;<a class="code" href="classarmnn_1_1_i_network_quantizer.xhtml#ad1ad5b83dc4d8bed64c29adf21c8958a">INetworkQuantizer::Destroy</a>);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a41119e261eec9343888d2ceab1e4999a"><div class="ttname"><a href="namespacearmnn.xhtml#a41119e261eec9343888d2ceab1e4999a">armnn::INetworkQuantizerPtr</a></div><div class="ttdeci">std::unique_ptr&lt; class INetworkQuantizer, void(*)(INetworkQuantizer *quantizer)&gt; INetworkQuantizerPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_quantizer_8hpp_source.xhtml#l00029">INetworkQuantizer.hpp:29</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_network_quantizer_xhtml_ad1ad5b83dc4d8bed64c29adf21c8958a"><div class="ttname"><a href="classarmnn_1_1_i_network_quantizer.xhtml#ad1ad5b83dc4d8bed64c29adf21c8958a">armnn::INetworkQuantizer::Destroy</a></div><div class="ttdeci">static void Destroy(INetworkQuantizer *quantizer)</div><div class="ttdoc">Destroy Quantizer object. </div><div class="ttdef"><b>Definition:</b> <a href="_network_quantizer_8cpp_source.xhtml#l00046">NetworkQuantizer.cpp:46</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_network_quantizer_xhtml_ab8c40aedacd27ec921e53f3a022e6a63"><div class="ttname"><a href="classarmnn_1_1_i_network_quantizer.xhtml#ab8c40aedacd27ec921e53f3a022e6a63">armnn::INetworkQuantizer::CreateRaw</a></div><div class="ttdeci">static INetworkQuantizer * CreateRaw(INetwork *inputNetwork, const QuantizerOptions &amp;options=QuantizerOptions())</div><div class="ttdoc">Create Quantizer object and return raw pointer. </div><div class="ttdef"><b>Definition:</b> <a href="_network_quantizer_8cpp_source.xhtml#l00036">NetworkQuantizer.cpp:36</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab8c40aedacd27ec921e53f3a022e6a63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8c40aedacd27ec921e53f3a022e6a63">&#9670;&nbsp;</a></span>CreateRaw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml">INetworkQuantizer</a> * CreateRaw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a> *&#160;</td>
          <td class="paramname"><em>inputNetwork</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_quantizer_options.xhtml">QuantizerOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="structarmnn_1_1_quantizer_options.xhtml">QuantizerOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create Quantizer object and return raw pointer. </p>

<p class="definition">Definition at line <a class="el" href="_network_quantizer_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="_network_quantizer_8cpp_source.xhtml">NetworkQuantizer.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_network_quantizer_8cpp_source.xhtml#l00041">INetworkQuantizer::Create()</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> NetworkQuantizer(inputNetwork, options);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad1ad5b83dc4d8bed64c29adf21c8958a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1ad5b83dc4d8bed64c29adf21c8958a">&#9670;&nbsp;</a></span>Destroy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml">INetworkQuantizer</a> *&#160;</td>
          <td class="paramname"><em>quantizer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroy Quantizer object. </p>

<p class="definition">Definition at line <a class="el" href="_network_quantizer_8cpp_source.xhtml#l00046">46</a> of file <a class="el" href="_network_quantizer_8cpp_source.xhtml">NetworkQuantizer.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_network_quantizer_8cpp_source.xhtml#l00041">INetworkQuantizer::Create()</a>.</p>
<div class="fragment"><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">delete</span> PolymorphicDowncast&lt;NetworkQuantizer*&gt;(quantizer);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a2c24535b51018853e67bad277f4cbbeb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c24535b51018853e67bad277f4cbbeb">&#9670;&nbsp;</a></span>ExportNetwork()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">INetworkPtr</a> ExportNetwork </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Extract final quantized network. </p>

<p>Implemented in <a class="el" href="classarmnn_1_1_network_quantizer.xhtml#a8768a9dd173e985bfc0c72338662d631">NetworkQuantizer</a>.</p>

</div>
</div>
<a id="a0ec2c346796d52e923cca0477497a6d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ec2c346796d52e923cca0477497a6d0">&#9670;&nbsp;</a></span>OverrideInputRange()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void OverrideInputRange </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a>&#160;</td>
          <td class="paramname"><em>layerId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>max</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Overrides the default quantization values for the input layer with the given id. </p>

<p>Implemented in <a class="el" href="classarmnn_1_1_network_quantizer.xhtml#a0de9803a30020e30ec8c9c0ba8592dc6">NetworkQuantizer</a>.</p>

</div>
</div>
<a id="ae7708b89714c5a85d62e07f674ab9da4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7708b89714c5a85d62e07f674ab9da4">&#9670;&nbsp;</a></span>Refine()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Refine </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">InputTensors</a> &amp;&#160;</td>
          <td class="paramname"><em>inputTensors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Refine input network with a set of refinement data for specified LayerBindingId. </p>

<p>Implemented in <a class="el" href="classarmnn_1_1_network_quantizer.xhtml#acff529f0d8ffed99123e3a729942be12">NetworkQuantizer</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnnQuantizer/<a class="el" href="_i_network_quantizer_8hpp_source.xhtml">INetworkQuantizer.hpp</a></li>
<li>src/armnn/<a class="el" href="_network_quantizer_8cpp_source.xhtml">NetworkQuantizer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_i_network_quantizer.xhtml">INetworkQuantizer</a></li>
    <li class="footer">Generated on Wed Nov 25 2020 09:59:18 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
