<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_network.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Network Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classarmnn_1_1_network.xhtml">Network</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a75a50f464326fefa605ea84ae2c9be85">Accept</a>(ILayerVisitor &amp;visitor) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#abf67dfbce354d772111fc5e5d4cd850d">AddAbsLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a36a40a1209689f39a5a283209991da3c">AddActivationLayer</a>(const ActivationDescriptor &amp;activationDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#adb60c75544796e23d7abc1ce0476f6d9">AddAdditionLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a40d7cd9d061c23405392f7c513849a2f">AddArgMinMaxLayer</a>(const ArgMinMaxDescriptor &amp;desc, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#abd4965a5d1d28a91b975e6b0eef024c8">AddBatchNormalizationLayer</a>(const BatchNormalizationDescriptor &amp;desc, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a1a3c9903dcd90a7f40d8aca0c339501f">AddBatchToSpaceNdLayer</a>(const BatchToSpaceNdDescriptor &amp;batchToSpaceNdDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a52fab7cec34e1fa77df68503e0c0ce59">AddComparisonLayer</a>(const ComparisonDescriptor &amp;comparisonDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a7b0396c132c4da95e80b210f9b6734e9">AddConcatLayer</a>(const ConcatDescriptor &amp;concatDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a8b2e7eb34ad5aacda72260f77fd880ce">AddConstantLayer</a>(const ConstTensor &amp;input, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a865189c08aa64d448d05efc92a43725a">AddConvolution2dLayer</a>(const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a672c0f6fdd479311818f7efbac694042">AddConvolution2dLayer</a>(const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a1100ef86ba46e5c43aff78db7a82f049">AddConvolution2dLayer</a>(const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const ConstTensor &amp;biases, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a59e55a0755a655a809520738c697334f">AddDepthToSpaceLayer</a>(const DepthToSpaceDescriptor &amp;depthToSpaceDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a1add5219a64f4249a282f52202828451">AddDepthwiseConvolution2dLayer</a>(const DepthwiseConvolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#ab192233990fa6525e30cfbe5a4701e2a">AddDepthwiseConvolution2dLayer</a>(const DepthwiseConvolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a37b53840117ba4159bd7c033bd18d281">AddDepthwiseConvolution2dLayer</a>(const DepthwiseConvolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const ConstTensor &amp;biases, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a224ea587dd10d2aa0d019be5c9de4b89">AddDequantizeLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a52cc1e062595108da0dfef4b200dabd7">AddDetectionPostProcessLayer</a>(const DetectionPostProcessDescriptor &amp;descriptor, const ConstTensor &amp;anchors, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a47d30afdd251fef00a59d2234cca0020">AddDivisionLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a99093f440e7e0ba4c8dcc90c3ec8cf4d">AddElementwiseUnaryLayer</a>(const ElementwiseUnaryDescriptor &amp;elementwiseUnaryDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a9062eab56f601adeae8229fd8759fbd7">AddEqualLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#aaa0398a8d5bd734d7fe3a08b5c5aa11d">AddFillLayer</a>(const FillDescriptor &amp;fillDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a7b9879b0da1f561d10e4f5c545028143">AddFloorLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a80dc86e975ff991ef63aa8b523d4fcdf">AddFullyConnectedLayer</a>(const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a65835b534db6a10d91e2096952fcf7d7">AddFullyConnectedLayer</a>(const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const ConstTensor &amp;weights, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a1d28c2b5a3c3c73eb3c4f9f6112bde94">AddFullyConnectedLayer</a>(const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const ConstTensor &amp;weights, const ConstTensor &amp;biases, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#ac3d4632a58d626521765246bbfdeadcf">AddGatherLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#add5a24bcbc5a20e5ae8ba7b5fae23e38">AddGatherLayer</a>(const GatherDescriptor &amp;gatherDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#aad4a7bebcdaeeea663429cbd47b2917e">AddGreaterLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">AddInputLayer</a>(LayerBindingId id, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a98fef92a93b7a51ce6755dae02bb0cd4">AddInstanceNormalizationLayer</a>(const InstanceNormalizationDescriptor &amp;desc, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#acce5b3272c9da9cb4201b437dd96a729">AddL2NormalizationLayer</a>(const L2NormalizationDescriptor &amp;desc, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#af20d03254f845463796cb4fa1898c189">AddLogicalBinaryLayer</a>(const LogicalBinaryDescriptor &amp;logicalBinaryDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a4c47466a95f61c321f525b06fc87b2c5">AddLogSoftmaxLayer</a>(const LogSoftmaxDescriptor &amp;logSoftmaxDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#ab1569dbf88b6511bde91bee3224a558c">AddLstmLayer</a>(const LstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a10c7356df73267c2acf3248465d5954b">AddMaximumLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a06632621d4259f7ef2aadb03cc08e993">AddMeanLayer</a>(const MeanDescriptor &amp;meanDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a679d1dd7ae79631ba09c642a7b25158a">AddMergeLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#ac9758a0b2749095fd2a7ac152ff8fd49">AddMergerLayer</a>(const MergerDescriptor &amp;mergerDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#add39cd8a51e34c532fb56cf313703844">AddMinimumLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a6e6cb8fd00cb855c4f0d93c4a7a2bde2">AddMultiplicationLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a942922c1213c451e3286fb5cd31c6499">AddNormalizationLayer</a>(const NormalizationDescriptor &amp;normalizationDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">AddOutputLayer</a>(LayerBindingId id, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a7d7934b6f0d8d4ae7749875397d724fc">AddPadLayer</a>(const PadDescriptor &amp;padDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#aff9921f194908a3c35015de701723234">AddPermuteLayer</a>(const PermuteDescriptor &amp;permuteDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#ab8b4e22c47ae0b0f259de353e760a4bf">AddPooling2dLayer</a>(const Pooling2dDescriptor &amp;pooling2dDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#ae00badf3bdad170348706604b7e6c694">AddPreluLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#adcafe39da43a14ab0ee48b925ea8b149">AddQLstmLayer</a>(const QLstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a6a6657fdd77cabea7a9e0a740635735e">AddQuantizedLstmLayer</a>(const QuantizedLstmInputParams &amp;params, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a4d008f554108aaee4c2c769dcdde685f">AddQuantizeLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#abc680a52c823d25fd270905cfd20befe">AddRankLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a09774b1c2b882e1d573dc507479805b6">AddReshapeLayer</a>(const ReshapeDescriptor &amp;reshapeDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#acae7df585b6c920cecd8065f0e16ff9b">AddResizeBilinearLayer</a>(const ResizeBilinearDescriptor &amp;resizeDesc, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#aa1ee88eebe67898c50a4ca259de49bbc">AddResizeLayer</a>(const ResizeDescriptor &amp;resizeDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#ac107b7e1d91f17f2023ea9ed113f559c">AddRsqrtLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#ad445d732cda17f0a552fa916f59fed8d">AddSliceLayer</a>(const SliceDescriptor &amp;sliceDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a8b1fbac089170c35fcb98d7012859428">AddSoftmaxLayer</a>(const SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a9e234ae3b84213cb9fce636cfc2302bb">AddSpaceToBatchNdLayer</a>(const SpaceToBatchNdDescriptor &amp;spaceToBatchNdDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#afa43cbc86ae43ce6ee468347b30229c4">AddSpaceToDepthLayer</a>(const SpaceToDepthDescriptor &amp;spaceToDepthDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#acb8e86be339d57b32f0ba3d9293c880b">AddSplitterLayer</a>(const ViewsDescriptor &amp;splitterDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a204e14633b366322221f04c76ed275e3">AddStackLayer</a>(const StackDescriptor &amp;stackDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a18aea8e0700f679353afb0a0cb9e0c84">AddStandInLayer</a>(const StandInDescriptor &amp;descriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a9bf4cfcac428b1331ff83c45f1166665">AddStridedSliceLayer</a>(const StridedSliceDescriptor &amp;stridedSliceDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a59a557b3b913730cf1153f1337a64496">AddSubtractionLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a48a6892297a07e5d87020b9b817e2224">AddSwitchLayer</a>(const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a59f6284064bfe8f2fbdb997fc3b65586">AddTransposeConvolution2dLayer</a>(const TransposeConvolution2dDescriptor &amp;descriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#ac4860f8e63591cd71c4c6a9f4b9e349b">AddTransposeLayer</a>(const TransposeDescriptor &amp;transposeDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a464f0ff87b1aabf71febaa71321dd40b">Create</a>(NetworkOptions networkOptions={})</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a230005513ac5eee1f3944b1960b6f2ed">CreateRaw</a>(NetworkOptions networkOptions={})</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a55bd1bb29076dc45bb335e7322781463">Destroy</a>(INetwork *network)</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>() const</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a9c14d61a444f68e56124eaae495b19df">Network</a>(NetworkOptions networkOptions={})</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#a9aa1b214fcaec2371fe4226bd126fb73">PrintGraph</a>() override</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#af760179196d57e2ddbc64b989fb72586">~INetwork</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml#ac9062f3da8a725626fd7e7bd27449220">~Network</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_network.xhtml">Network</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Wed Nov 25 2020 09:59:18 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
