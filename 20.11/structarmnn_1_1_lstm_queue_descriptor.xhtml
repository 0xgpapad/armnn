<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: LstmQueueDescriptor Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarmnn_1_1_lstm_queue_descriptor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="structarmnn_1_1_lstm_queue_descriptor-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">LstmQueueDescriptor Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for LstmQueueDescriptor:</div>
<div class="dyncontent">
 <div class="center">
  <img src="structarmnn_1_1_lstm_queue_descriptor.png" usemap="#LstmQueueDescriptor_map" alt=""/>
  <map id="LstmQueueDescriptor_map" name="LstmQueueDescriptor_map">
<area href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml" alt="QueueDescriptorWithParameters&lt; LstmDescriptor &gt;" shape="rect" coords="0,56,305,80"/>
<area href="structarmnn_1_1_queue_descriptor.xhtml" alt="QueueDescriptor" shape="rect" coords="0,0,305,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1f701da89f9eeded946647212e5eebc9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a1f701da89f9eeded946647212e5eebc9">LstmQueueDescriptor</a> ()</td></tr>
<tr class="separator:a1f701da89f9eeded946647212e5eebc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a041e495449e22774a34d92b0904c10bf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a041e495449e22774a34d92b0904c10bf">Validate</a> (const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;workloadInfo) const</td></tr>
<tr class="separator:a041e495449e22774a34d92b0904c10bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_structarmnn_1_1_queue_descriptor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_structarmnn_1_1_queue_descriptor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></td></tr>
<tr class="memitem:a765d2cee4ccce5b9467e0c2b6d25b84a inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a765d2cee4ccce5b9467e0c2b6d25b84a">ValidateInputsOutputs</a> (const std::string &amp;descName, unsigned int numExpectedIn, unsigned int numExpectedOut) const</td></tr>
<tr class="separator:a765d2cee4ccce5b9467e0c2b6d25b84a inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0428f0a7927f8c29264d9c9a287840da inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a0428f0a7927f8c29264d9c9a287840da inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memTemplItemLeft" align="right" valign="top">const T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a0428f0a7927f8c29264d9c9a287840da">GetAdditionalInformation</a> () const</td></tr>
<tr class="separator:a0428f0a7927f8c29264d9c9a287840da inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a08a1932be591c315a512a877d38b22df"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">m_InputToInputWeights</a></td></tr>
<tr class="separator:a08a1932be591c315a512a877d38b22df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ea82566d98c5a657c76c3d851c47848"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a3ea82566d98c5a657c76c3d851c47848">m_InputToForgetWeights</a></td></tr>
<tr class="separator:a3ea82566d98c5a657c76c3d851c47848"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28ad98d17603fd8b12e046f8ece58970"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a28ad98d17603fd8b12e046f8ece58970">m_InputToCellWeights</a></td></tr>
<tr class="separator:a28ad98d17603fd8b12e046f8ece58970"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83dc9086b2e4a4e4cadb66bd874df798"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a83dc9086b2e4a4e4cadb66bd874df798">m_InputToOutputWeights</a></td></tr>
<tr class="separator:a83dc9086b2e4a4e4cadb66bd874df798"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98d377149071d8842d610cc0734d1cfe"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">m_RecurrentToInputWeights</a></td></tr>
<tr class="separator:a98d377149071d8842d610cc0734d1cfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45d73e66cbb2b65049e4016c20657ccf"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a45d73e66cbb2b65049e4016c20657ccf">m_RecurrentToForgetWeights</a></td></tr>
<tr class="separator:a45d73e66cbb2b65049e4016c20657ccf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea142bd50ffb93631c2e08324ec92a1e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aea142bd50ffb93631c2e08324ec92a1e">m_RecurrentToCellWeights</a></td></tr>
<tr class="separator:aea142bd50ffb93631c2e08324ec92a1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adebc1771e5a1f4b113a7aa594ea74d2c"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#adebc1771e5a1f4b113a7aa594ea74d2c">m_RecurrentToOutputWeights</a></td></tr>
<tr class="separator:adebc1771e5a1f4b113a7aa594ea74d2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c1c0a7ead7273788976c9e97cffaab7"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">m_CellToInputWeights</a></td></tr>
<tr class="separator:a5c1c0a7ead7273788976c9e97cffaab7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acefa49d7faf26933e27e473e7bdb4175"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">m_CellToForgetWeights</a></td></tr>
<tr class="separator:acefa49d7faf26933e27e473e7bdb4175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f74071b0e07bbe2cb20a8f78826e084"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">m_CellToOutputWeights</a></td></tr>
<tr class="separator:a6f74071b0e07bbe2cb20a8f78826e084"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb3aade8fae984f7293e222dcbe66030"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acb3aade8fae984f7293e222dcbe66030">m_InputGateBias</a></td></tr>
<tr class="separator:acb3aade8fae984f7293e222dcbe66030"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba3ffe91d818266b8785ce971548eb59"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aba3ffe91d818266b8785ce971548eb59">m_ForgetGateBias</a></td></tr>
<tr class="separator:aba3ffe91d818266b8785ce971548eb59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75980b5795efd899a0c678a06a900c6d"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a75980b5795efd899a0c678a06a900c6d">m_CellBias</a></td></tr>
<tr class="separator:a75980b5795efd899a0c678a06a900c6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a332551528a4b3534c2d6c89ce816fcd9"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a332551528a4b3534c2d6c89ce816fcd9">m_OutputGateBias</a></td></tr>
<tr class="separator:a332551528a4b3534c2d6c89ce816fcd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3c52626a6f05597d82ed095d0765962"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">m_ProjectionWeights</a></td></tr>
<tr class="separator:af3c52626a6f05597d82ed095d0765962"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ba352eb1fdf6dc5ecf7f2e6b6b48f94"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a></td></tr>
<tr class="separator:a2ba352eb1fdf6dc5ecf7f2e6b6b48f94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cc28aa4fff6ba9a8abdb340c1abdd57"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">m_InputLayerNormWeights</a></td></tr>
<tr class="separator:a9cc28aa4fff6ba9a8abdb340c1abdd57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a453a4af385d0c060c9aac990fceaa1ef"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">m_ForgetLayerNormWeights</a></td></tr>
<tr class="separator:a453a4af385d0c060c9aac990fceaa1ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a518f0195d0278a892b49649b8860d17f"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">m_CellLayerNormWeights</a></td></tr>
<tr class="separator:a518f0195d0278a892b49649b8860d17f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3f07e27230d6d99adc2c82ba681df2b"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">m_OutputLayerNormWeights</a></td></tr>
<tr class="separator:aa3f07e27230d6d99adc2c82ba681df2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_structarmnn_1_1_queue_descriptor_with_parameters"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_structarmnn_1_1_queue_descriptor_with_parameters')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters&lt; LstmDescriptor &gt;</a></td></tr>
<tr class="memitem:aad91b9bbf7aa365d304febe79a3d1333 inherit pub_attribs_structarmnn_1_1_queue_descriptor_with_parameters"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a></td></tr>
<tr class="separator:aad91b9bbf7aa365d304febe79a3d1333 inherit pub_attribs_structarmnn_1_1_queue_descriptor_with_parameters"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_structarmnn_1_1_queue_descriptor"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_structarmnn_1_1_queue_descriptor')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></td></tr>
<tr class="memitem:a4b50e46a6810018f3edecfb68b2a76b3 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a></td></tr>
<tr class="separator:a4b50e46a6810018f3edecfb68b2a76b3 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6abd491bb99ffe88bd472c1ae5a1ed1a inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a></td></tr>
<tr class="separator:a6abd491bb99ffe88bd472c1ae5a1ed1a inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f2e6134cabedfc58aa53fe38a2b8a67 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a2f2e6134cabedfc58aa53fe38a2b8a67">m_AdditionalInfoObject</a></td></tr>
<tr class="separator:a2f2e6134cabedfc58aa53fe38a2b8a67 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_structarmnn_1_1_queue_descriptor_with_parameters"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_structarmnn_1_1_queue_descriptor_with_parameters')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters&lt; LstmDescriptor &gt;</a></td></tr>
<tr class="memitem:a52679b441422256016dc6f5b5e9193d5 inherit pro_methods_structarmnn_1_1_queue_descriptor_with_parameters"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#a52679b441422256016dc6f5b5e9193d5">~QueueDescriptorWithParameters</a> ()=default</td></tr>
<tr class="separator:a52679b441422256016dc6f5b5e9193d5 inherit pro_methods_structarmnn_1_1_queue_descriptor_with_parameters"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f269eb32757efa5b203091c52e985fd inherit pro_methods_structarmnn_1_1_queue_descriptor_with_parameters"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#a6f269eb32757efa5b203091c52e985fd">QueueDescriptorWithParameters</a> ()=default</td></tr>
<tr class="separator:a6f269eb32757efa5b203091c52e985fd inherit pro_methods_structarmnn_1_1_queue_descriptor_with_parameters"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cbdcaa9cab857077a3810788e2cf489 inherit pro_methods_structarmnn_1_1_queue_descriptor_with_parameters"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#a6cbdcaa9cab857077a3810788e2cf489">QueueDescriptorWithParameters</a> (<a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> const &amp;)=default</td></tr>
<tr class="separator:a6cbdcaa9cab857077a3810788e2cf489 inherit pro_methods_structarmnn_1_1_queue_descriptor_with_parameters"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa86bd03df9faf133a34e263f16486707 inherit pro_methods_structarmnn_1_1_queue_descriptor_with_parameters"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aa86bd03df9faf133a34e263f16486707">operator=</a> (<a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> const &amp;)=default</td></tr>
<tr class="separator:aa86bd03df9faf133a34e263f16486707 inherit pro_methods_structarmnn_1_1_queue_descriptor_with_parameters"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_structarmnn_1_1_queue_descriptor"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_structarmnn_1_1_queue_descriptor')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></td></tr>
<tr class="memitem:af67c3785421c91d37fb22132d441f704 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#af67c3785421c91d37fb22132d441f704">~QueueDescriptor</a> ()=default</td></tr>
<tr class="separator:af67c3785421c91d37fb22132d441f704 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab088ef357662bcea45cbd49674ad0ff7 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#ab088ef357662bcea45cbd49674ad0ff7">QueueDescriptor</a> ()</td></tr>
<tr class="separator:ab088ef357662bcea45cbd49674ad0ff7 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75d3b85e1e50b1dff74ee84a593d089e inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a75d3b85e1e50b1dff74ee84a593d089e">QueueDescriptor</a> (<a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a> const &amp;)=default</td></tr>
<tr class="separator:a75d3b85e1e50b1dff74ee84a593d089e inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c928b975a0de05cf2536c721ba6b521 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a1c928b975a0de05cf2536c721ba6b521">operator=</a> (<a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a> const &amp;)=default</td></tr>
<tr class="separator:a1c928b975a0de05cf2536c721ba6b521 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00387">387</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1f701da89f9eeded946647212e5eebc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f701da89f9eeded946647212e5eebc9">&#9670;&nbsp;</a></span>LstmQueueDescriptor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml">LstmQueueDescriptor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00389">389</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        : <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">m_InputToInputWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a3ea82566d98c5a657c76c3d851c47848">m_InputToForgetWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a28ad98d17603fd8b12e046f8ece58970">m_InputToCellWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a83dc9086b2e4a4e4cadb66bd874df798">m_InputToOutputWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">m_RecurrentToInputWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a45d73e66cbb2b65049e4016c20657ccf">m_RecurrentToForgetWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aea142bd50ffb93631c2e08324ec92a1e">m_RecurrentToCellWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#adebc1771e5a1f4b113a7aa594ea74d2c">m_RecurrentToOutputWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">m_CellToInputWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">m_CellToForgetWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">m_CellToOutputWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acb3aade8fae984f7293e222dcbe66030">m_InputGateBias</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aba3ffe91d818266b8785ce971548eb59">m_ForgetGateBias</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a75980b5795efd899a0c678a06a900c6d">m_CellBias</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a332551528a4b3534c2d6c89ce816fcd9">m_OutputGateBias</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">m_ProjectionWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">m_InputLayerNormWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">m_ForgetLayerNormWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">m_CellLayerNormWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        , <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">m_OutputLayerNormWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    {</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    }</div><div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a45d73e66cbb2b65049e4016c20657ccf"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a45d73e66cbb2b65049e4016c20657ccf">armnn::LstmQueueDescriptor::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00419">WorkloadData.hpp:419</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a6f74071b0e07bbe2cb20a8f78826e084"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">armnn::LstmQueueDescriptor::m_CellToOutputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00424">WorkloadData.hpp:424</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a28ad98d17603fd8b12e046f8ece58970"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a28ad98d17603fd8b12e046f8ece58970">armnn::LstmQueueDescriptor::m_InputToCellWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00416">WorkloadData.hpp:416</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a83dc9086b2e4a4e4cadb66bd874df798"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a83dc9086b2e4a4e4cadb66bd874df798">armnn::LstmQueueDescriptor::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00417">WorkloadData.hpp:417</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a2ba352eb1fdf6dc5ecf7f2e6b6b48f94"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">armnn::LstmQueueDescriptor::m_ProjectionBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ProjectionBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00430">WorkloadData.hpp:430</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a332551528a4b3534c2d6c89ce816fcd9"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a332551528a4b3534c2d6c89ce816fcd9">armnn::LstmQueueDescriptor::m_OutputGateBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00428">WorkloadData.hpp:428</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a5c1c0a7ead7273788976c9e97cffaab7"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">armnn::LstmQueueDescriptor::m_CellToInputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00422">WorkloadData.hpp:422</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a518f0195d0278a892b49649b8860d17f"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">armnn::LstmQueueDescriptor::m_CellLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00433">WorkloadData.hpp:433</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_acefa49d7faf26933e27e473e7bdb4175"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">armnn::LstmQueueDescriptor::m_CellToForgetWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00423">WorkloadData.hpp:423</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a75980b5795efd899a0c678a06a900c6d"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a75980b5795efd899a0c678a06a900c6d">armnn::LstmQueueDescriptor::m_CellBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00427">WorkloadData.hpp:427</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a98d377149071d8842d610cc0734d1cfe"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">armnn::LstmQueueDescriptor::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00418">WorkloadData.hpp:418</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a9cc28aa4fff6ba9a8abdb340c1abdd57"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">armnn::LstmQueueDescriptor::m_InputLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00431">WorkloadData.hpp:431</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_aa3f07e27230d6d99adc2c82ba681df2b"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">armnn::LstmQueueDescriptor::m_OutputLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_OutputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00434">WorkloadData.hpp:434</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_aba3ffe91d818266b8785ce971548eb59"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aba3ffe91d818266b8785ce971548eb59">armnn::LstmQueueDescriptor::m_ForgetGateBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00426">WorkloadData.hpp:426</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a08a1932be591c315a512a877d38b22df"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">armnn::LstmQueueDescriptor::m_InputToInputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00414">WorkloadData.hpp:414</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_adebc1771e5a1f4b113a7aa594ea74d2c"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#adebc1771e5a1f4b113a7aa594ea74d2c">armnn::LstmQueueDescriptor::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00421">WorkloadData.hpp:421</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a453a4af385d0c060c9aac990fceaa1ef"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">armnn::LstmQueueDescriptor::m_ForgetLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ForgetLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00432">WorkloadData.hpp:432</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_acb3aade8fae984f7293e222dcbe66030"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acb3aade8fae984f7293e222dcbe66030">armnn::LstmQueueDescriptor::m_InputGateBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00425">WorkloadData.hpp:425</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_aea142bd50ffb93631c2e08324ec92a1e"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aea142bd50ffb93631c2e08324ec92a1e">armnn::LstmQueueDescriptor::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00420">WorkloadData.hpp:420</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_af3c52626a6f05597d82ed095d0765962"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">armnn::LstmQueueDescriptor::m_ProjectionWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ProjectionWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00429">WorkloadData.hpp:429</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a3ea82566d98c5a657c76c3d851c47848"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a3ea82566d98c5a657c76c3d851c47848">armnn::LstmQueueDescriptor::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00415">WorkloadData.hpp:415</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a041e495449e22774a34d92b0904c10bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a041e495449e22774a34d92b0904c10bf">&#9670;&nbsp;</a></span>Validate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadInfo</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8cpp_source.xhtml#l01832">1832</a> of file <a class="el" href="_workload_data_8cpp_source.xhtml">WorkloadData.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::BFloat16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::Float16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00018">WorkloadInfo::m_InputTensorInfos</a>, <a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00019">WorkloadInfo::m_OutputTensorInfos</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;{</div><div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;    <span class="comment">// ported from android/ml/nn/common/operations/LSTM.cpp CheckInputTensorDimensions()</span></div><div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;</div><div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;    <span class="keyword">const</span> std::string descriptorName{<span class="stringliteral">&quot;LstmQueueDescriptor&quot;</span>};</div><div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;</div><div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;    <span class="comment">// check dimensions of all inputs and outputs</span></div><div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;    <span class="keywordflow">if</span> (workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>.size() != 3)</div><div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160;    {</div><div class="line"><a name="l01841"></a><span class="lineno"> 1841</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(descriptorName + <span class="stringliteral">&quot;: Invalid number of inputs.&quot;</span>);</div><div class="line"><a name="l01842"></a><span class="lineno"> 1842</span>&#160;    }</div><div class="line"><a name="l01843"></a><span class="lineno"> 1843</span>&#160;    <span class="keywordflow">if</span> (workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">m_OutputTensorInfos</a>.size() != 4)</div><div class="line"><a name="l01844"></a><span class="lineno"> 1844</span>&#160;    {</div><div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(descriptorName + <span class="stringliteral">&quot;: Invalid number of outputs.&quot;</span>);</div><div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160;    }</div><div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;</div><div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;    std::vector&lt;DataType&gt; supportedTypes =</div><div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;    {</div><div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">DataType::BFloat16</a>,</div><div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">DataType::Float16</a>,</div><div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">DataType::Float32</a>,</div><div class="line"><a name="l01853"></a><span class="lineno"> 1853</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">DataType::QSymmS16</a></div><div class="line"><a name="l01854"></a><span class="lineno"> 1854</span>&#160;    };</div><div class="line"><a name="l01855"></a><span class="lineno"> 1855</span>&#160;</div><div class="line"><a name="l01856"></a><span class="lineno"> 1856</span>&#160;    <span class="comment">// check for supported type of one input and match them with all the other input and output</span></div><div class="line"><a name="l01857"></a><span class="lineno"> 1857</span>&#160;    ValidateDataTypes(workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[0], supportedTypes, descriptorName);</div><div class="line"><a name="l01858"></a><span class="lineno"> 1858</span>&#160;</div><div class="line"><a name="l01859"></a><span class="lineno"> 1859</span>&#160;    <span class="comment">// type matches all other inputs</span></div><div class="line"><a name="l01860"></a><span class="lineno"> 1860</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 1u; i &lt; workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>.size(); ++i)</div><div class="line"><a name="l01861"></a><span class="lineno"> 1861</span>&#160;    {</div><div class="line"><a name="l01862"></a><span class="lineno"> 1862</span>&#160;        ValidateTensorDataTypesMatch(workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[0],</div><div class="line"><a name="l01863"></a><span class="lineno"> 1863</span>&#160;                                     workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[i],</div><div class="line"><a name="l01864"></a><span class="lineno"> 1864</span>&#160;                                     descriptorName,</div><div class="line"><a name="l01865"></a><span class="lineno"> 1865</span>&#160;                                     <span class="stringliteral">&quot;input_0&quot;</span>,</div><div class="line"><a name="l01866"></a><span class="lineno"> 1866</span>&#160;                                     <span class="stringliteral">&quot;input_&quot;</span> + std::to_string(i));</div><div class="line"><a name="l01867"></a><span class="lineno"> 1867</span>&#160;    }</div><div class="line"><a name="l01868"></a><span class="lineno"> 1868</span>&#160;    <span class="comment">// type matches all other outputs</span></div><div class="line"><a name="l01869"></a><span class="lineno"> 1869</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0u; i &lt; workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">m_OutputTensorInfos</a>.size(); ++i)</div><div class="line"><a name="l01870"></a><span class="lineno"> 1870</span>&#160;    {</div><div class="line"><a name="l01871"></a><span class="lineno"> 1871</span>&#160;        ValidateTensorDataTypesMatch(workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[0],</div><div class="line"><a name="l01872"></a><span class="lineno"> 1872</span>&#160;                                     workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">m_OutputTensorInfos</a>[i],</div><div class="line"><a name="l01873"></a><span class="lineno"> 1873</span>&#160;                                     <span class="stringliteral">&quot;LstmQueueDescriptor&quot;</span>,</div><div class="line"><a name="l01874"></a><span class="lineno"> 1874</span>&#160;                                     <span class="stringliteral">&quot;input_0&quot;</span>,</div><div class="line"><a name="l01875"></a><span class="lineno"> 1875</span>&#160;                                     <span class="stringliteral">&quot;output_&quot;</span> + std::to_string(i));</div><div class="line"><a name="l01876"></a><span class="lineno"> 1876</span>&#160;    }</div><div class="line"><a name="l01877"></a><span class="lineno"> 1877</span>&#160;</div><div class="line"><a name="l01878"></a><span class="lineno"> 1878</span>&#160;    <span class="comment">// Making sure clipping parameters have valid values.</span></div><div class="line"><a name="l01879"></a><span class="lineno"> 1879</span>&#160;    <span class="comment">// == 0 means no clipping</span></div><div class="line"><a name="l01880"></a><span class="lineno"> 1880</span>&#160;    <span class="comment">//  &gt; 0 means clipping</span></div><div class="line"><a name="l01881"></a><span class="lineno"> 1881</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a531a3907ec13d3772370da88030191a5">m_ClippingThresCell</a> &lt; 0.0f)</div><div class="line"><a name="l01882"></a><span class="lineno"> 1882</span>&#160;    {</div><div class="line"><a name="l01883"></a><span class="lineno"> 1883</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(descriptorName + <span class="stringliteral">&quot;: negative cell clipping threshold is invalid&quot;</span>);</div><div class="line"><a name="l01884"></a><span class="lineno"> 1884</span>&#160;    }</div><div class="line"><a name="l01885"></a><span class="lineno"> 1885</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a86e88bef0df4df96df752b4b8955a3af">m_ClippingThresProj</a> &lt; 0.0f)</div><div class="line"><a name="l01886"></a><span class="lineno"> 1886</span>&#160;    {</div><div class="line"><a name="l01887"></a><span class="lineno"> 1887</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(descriptorName + <span class="stringliteral">&quot;: negative projection clipping threshold is invalid&quot;</span>);</div><div class="line"><a name="l01888"></a><span class="lineno"> 1888</span>&#160;    }</div><div class="line"><a name="l01889"></a><span class="lineno"> 1889</span>&#160;</div><div class="line"><a name="l01890"></a><span class="lineno"> 1890</span>&#160;</div><div class="line"><a name="l01891"></a><span class="lineno"> 1891</span>&#160;    <span class="comment">// Inferring batch size, number of outputs and number of cells from the inputs.</span></div><div class="line"><a name="l01892"></a><span class="lineno"> 1892</span>&#160;    <span class="keyword">const</span> uint32_t n_input = workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[0].GetShape()[1];</div><div class="line"><a name="l01893"></a><span class="lineno"> 1893</span>&#160;    <span class="keyword">const</span> uint32_t n_batch = workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[0].GetShape()[0];</div><div class="line"><a name="l01894"></a><span class="lineno"> 1894</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a83dc9086b2e4a4e4cadb66bd874df798">m_InputToOutputWeights</a>, <span class="stringliteral">&quot;Null pointer check&quot;</span>, <span class="stringliteral">&quot;InputToOutputWeights&quot;</span>);</div><div class="line"><a name="l01895"></a><span class="lineno"> 1895</span>&#160;    <span class="keyword">const</span> uint32_t n_cell = <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a83dc9086b2e4a4e4cadb66bd874df798">m_InputToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a8e8d2fbabcac19f9e12779080ddff54e">GetShape</a>()[0];</div><div class="line"><a name="l01896"></a><span class="lineno"> 1896</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#adebc1771e5a1f4b113a7aa594ea74d2c">m_RecurrentToOutputWeights</a>, <span class="stringliteral">&quot;Null pointer check&quot;</span>, <span class="stringliteral">&quot;RecurrentToOutputWeights&quot;</span>);</div><div class="line"><a name="l01897"></a><span class="lineno"> 1897</span>&#160;    <span class="keyword">const</span> uint32_t n_output = <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#adebc1771e5a1f4b113a7aa594ea74d2c">m_RecurrentToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a8e8d2fbabcac19f9e12779080ddff54e">GetShape</a>()[1];</div><div class="line"><a name="l01898"></a><span class="lineno"> 1898</span>&#160;</div><div class="line"><a name="l01899"></a><span class="lineno"> 1899</span>&#160;    <span class="comment">// input tensor</span></div><div class="line"><a name="l01900"></a><span class="lineno"> 1900</span>&#160;    ValidateTensorNumDimNumElem(workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[0], 2, (n_batch * n_input),</div><div class="line"><a name="l01901"></a><span class="lineno"> 1901</span>&#160;                                descriptorName + <span class="stringliteral">&quot; input_0&quot;</span>);</div><div class="line"><a name="l01902"></a><span class="lineno"> 1902</span>&#160;    <span class="comment">// outputStateInTensor</span></div><div class="line"><a name="l01903"></a><span class="lineno"> 1903</span>&#160;    ValidateTensorNumDimNumElem(workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[1], 2, (n_batch * n_output),</div><div class="line"><a name="l01904"></a><span class="lineno"> 1904</span>&#160;                                descriptorName + <span class="stringliteral">&quot; input_1&quot;</span>);</div><div class="line"><a name="l01905"></a><span class="lineno"> 1905</span>&#160;    <span class="comment">// outputStateInTensor</span></div><div class="line"><a name="l01906"></a><span class="lineno"> 1906</span>&#160;    ValidateTensorNumDimNumElem(workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[2], 2, (n_batch * n_cell),</div><div class="line"><a name="l01907"></a><span class="lineno"> 1907</span>&#160;                                descriptorName + <span class="stringliteral">&quot; input_2&quot;</span>);</div><div class="line"><a name="l01908"></a><span class="lineno"> 1908</span>&#160;    <span class="comment">// scratchBufferTensor</span></div><div class="line"><a name="l01909"></a><span class="lineno"> 1909</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> scratchBufferSize = <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a> ? n_cell * 3 : n_cell * 4;</div><div class="line"><a name="l01910"></a><span class="lineno"> 1910</span>&#160;    ValidateTensorNumDimNumElem(workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">m_OutputTensorInfos</a>[0], 2, (n_batch * scratchBufferSize),</div><div class="line"><a name="l01911"></a><span class="lineno"> 1911</span>&#160;                                descriptorName + <span class="stringliteral">&quot; output_0&quot;</span>);</div><div class="line"><a name="l01912"></a><span class="lineno"> 1912</span>&#160;    <span class="comment">// outputStateOutTensor</span></div><div class="line"><a name="l01913"></a><span class="lineno"> 1913</span>&#160;    ValidateTensorNumDimNumElem(workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">m_OutputTensorInfos</a>[1], 2, (n_batch * n_output),</div><div class="line"><a name="l01914"></a><span class="lineno"> 1914</span>&#160;                                descriptorName + <span class="stringliteral">&quot; output_1&quot;</span>);</div><div class="line"><a name="l01915"></a><span class="lineno"> 1915</span>&#160;    <span class="comment">// cellStateOutTensor</span></div><div class="line"><a name="l01916"></a><span class="lineno"> 1916</span>&#160;    ValidateTensorNumDimNumElem(workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">m_OutputTensorInfos</a>[2], 2, (n_batch * n_cell),</div><div class="line"><a name="l01917"></a><span class="lineno"> 1917</span>&#160;                                descriptorName + <span class="stringliteral">&quot; output_2&quot;</span>);</div><div class="line"><a name="l01918"></a><span class="lineno"> 1918</span>&#160;    <span class="comment">// outputTensor</span></div><div class="line"><a name="l01919"></a><span class="lineno"> 1919</span>&#160;    ValidateTensorNumDimNumElem(workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">m_OutputTensorInfos</a>[3], 2, (n_batch * n_output),</div><div class="line"><a name="l01920"></a><span class="lineno"> 1920</span>&#160;                                descriptorName + <span class="stringliteral">&quot; output_3&quot;</span>);</div><div class="line"><a name="l01921"></a><span class="lineno"> 1921</span>&#160;</div><div class="line"><a name="l01922"></a><span class="lineno"> 1922</span>&#160;</div><div class="line"><a name="l01923"></a><span class="lineno"> 1923</span>&#160;    <span class="comment">// check that dimensions of inputs/outputs and QueueDescriptor data match with each other</span></div><div class="line"><a name="l01924"></a><span class="lineno"> 1924</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">m_InputToInputWeights</a> )</div><div class="line"><a name="l01925"></a><span class="lineno"> 1925</span>&#160;    {</div><div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">m_InputToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 2,</div><div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;                                      (n_cell * n_input), <span class="stringliteral">&quot;InputLayerNormWeights&quot;</span>);</div><div class="line"><a name="l01928"></a><span class="lineno"> 1928</span>&#160;    }</div><div class="line"><a name="l01929"></a><span class="lineno"> 1929</span>&#160;</div><div class="line"><a name="l01930"></a><span class="lineno"> 1930</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a3ea82566d98c5a657c76c3d851c47848">m_InputToForgetWeights</a>, <span class="stringliteral">&quot;Null pointer check&quot;</span>, <span class="stringliteral">&quot;InputToForgetWeights&quot;</span>);</div><div class="line"><a name="l01931"></a><span class="lineno"> 1931</span>&#160;    ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a3ea82566d98c5a657c76c3d851c47848">m_InputToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 2,</div><div class="line"><a name="l01932"></a><span class="lineno"> 1932</span>&#160;                                  (n_cell * n_input), <span class="stringliteral">&quot;InputToForgetWeights&quot;</span>);</div><div class="line"><a name="l01933"></a><span class="lineno"> 1933</span>&#160;</div><div class="line"><a name="l01934"></a><span class="lineno"> 1934</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a28ad98d17603fd8b12e046f8ece58970">m_InputToCellWeights</a>, <span class="stringliteral">&quot;Null pointer check&quot;</span>, <span class="stringliteral">&quot;InputToCellWeights&quot;</span>);</div><div class="line"><a name="l01935"></a><span class="lineno"> 1935</span>&#160;    ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a28ad98d17603fd8b12e046f8ece58970">m_InputToCellWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 2,</div><div class="line"><a name="l01936"></a><span class="lineno"> 1936</span>&#160;                                  (n_cell * n_input), <span class="stringliteral">&quot;InputToCellWeights&quot;</span>);</div><div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;</div><div class="line"><a name="l01938"></a><span class="lineno"> 1938</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">m_RecurrentToInputWeights</a> )</div><div class="line"><a name="l01939"></a><span class="lineno"> 1939</span>&#160;    {</div><div class="line"><a name="l01940"></a><span class="lineno"> 1940</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">m_RecurrentToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 2,</div><div class="line"><a name="l01941"></a><span class="lineno"> 1941</span>&#160;                                      (n_cell * n_output), <span class="stringliteral">&quot;RecurrentToInputWeights&quot;</span>);</div><div class="line"><a name="l01942"></a><span class="lineno"> 1942</span>&#160;    }</div><div class="line"><a name="l01943"></a><span class="lineno"> 1943</span>&#160;</div><div class="line"><a name="l01944"></a><span class="lineno"> 1944</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a45d73e66cbb2b65049e4016c20657ccf">m_RecurrentToForgetWeights</a>, <span class="stringliteral">&quot;Null pointer check&quot;</span>, <span class="stringliteral">&quot;RecurrentToForgetWeights&quot;</span>);</div><div class="line"><a name="l01945"></a><span class="lineno"> 1945</span>&#160;    ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a45d73e66cbb2b65049e4016c20657ccf">m_RecurrentToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 2,</div><div class="line"><a name="l01946"></a><span class="lineno"> 1946</span>&#160;                                  (n_cell * n_output), <span class="stringliteral">&quot;RecurrentToForgetWeights&quot;</span>);</div><div class="line"><a name="l01947"></a><span class="lineno"> 1947</span>&#160;</div><div class="line"><a name="l01948"></a><span class="lineno"> 1948</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aea142bd50ffb93631c2e08324ec92a1e">m_RecurrentToCellWeights</a>, <span class="stringliteral">&quot;Null pointer check&quot;</span>, <span class="stringliteral">&quot;RecurrentToCellWeights&quot;</span>);</div><div class="line"><a name="l01949"></a><span class="lineno"> 1949</span>&#160;    ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aea142bd50ffb93631c2e08324ec92a1e">m_RecurrentToCellWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 2,</div><div class="line"><a name="l01950"></a><span class="lineno"> 1950</span>&#160;                                  (n_cell * n_output), <span class="stringliteral">&quot;RecurrentToCellWeights&quot;</span>);</div><div class="line"><a name="l01951"></a><span class="lineno"> 1951</span>&#160;</div><div class="line"><a name="l01952"></a><span class="lineno"> 1952</span>&#160;    <span class="comment">// Make sure the input-gate&#39;s parameters are either both present (regular</span></div><div class="line"><a name="l01953"></a><span class="lineno"> 1953</span>&#160;    <span class="comment">// LSTM) or not at all (CIFG-LSTM). And CifgEnable is set accordingly.</span></div><div class="line"><a name="l01954"></a><span class="lineno"> 1954</span>&#160;    <span class="keywordtype">bool</span> cifg_weights_all_or_none = ((<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">m_InputToInputWeights</a> &amp;&amp; <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">m_RecurrentToInputWeights</a> &amp;&amp;</div><div class="line"><a name="l01955"></a><span class="lineno"> 1955</span>&#160;                                     !<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>) ||</div><div class="line"><a name="l01956"></a><span class="lineno"> 1956</span>&#160;                                     (!<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">m_InputToInputWeights</a> &amp;&amp; !<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">m_RecurrentToInputWeights</a> &amp;&amp;</div><div class="line"><a name="l01957"></a><span class="lineno"> 1957</span>&#160;                                     <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>));</div><div class="line"><a name="l01958"></a><span class="lineno"> 1958</span>&#160;    <span class="keywordflow">if</span> (!cifg_weights_all_or_none)</div><div class="line"><a name="l01959"></a><span class="lineno"> 1959</span>&#160;    {</div><div class="line"><a name="l01960"></a><span class="lineno"> 1960</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(descriptorName + <span class="stringliteral">&quot;: Input-Gate&#39;s parameters InputToInputWeights and &quot;</span></div><div class="line"><a name="l01961"></a><span class="lineno"> 1961</span>&#160;                                       <span class="stringliteral">&quot;RecurrentToInputWeights must either both be present (regular LSTM) &quot;</span></div><div class="line"><a name="l01962"></a><span class="lineno"> 1962</span>&#160;                                       <span class="stringliteral">&quot;or both not present (CIFG-LSTM). In addition CifgEnable must be set &quot;</span></div><div class="line"><a name="l01963"></a><span class="lineno"> 1963</span>&#160;                                       <span class="stringliteral">&quot;accordingly.&quot;</span>);</div><div class="line"><a name="l01964"></a><span class="lineno"> 1964</span>&#160;    }</div><div class="line"><a name="l01965"></a><span class="lineno"> 1965</span>&#160;</div><div class="line"><a name="l01966"></a><span class="lineno"> 1966</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">m_CellToInputWeights</a> )</div><div class="line"><a name="l01967"></a><span class="lineno"> 1967</span>&#160;    {</div><div class="line"><a name="l01968"></a><span class="lineno"> 1968</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">m_CellToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1,</div><div class="line"><a name="l01969"></a><span class="lineno"> 1969</span>&#160;                                      n_cell, <span class="stringliteral">&quot;CellToInputWeights&quot;</span>);</div><div class="line"><a name="l01970"></a><span class="lineno"> 1970</span>&#160;    }</div><div class="line"><a name="l01971"></a><span class="lineno"> 1971</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">m_CellToForgetWeights</a> )</div><div class="line"><a name="l01972"></a><span class="lineno"> 1972</span>&#160;    {</div><div class="line"><a name="l01973"></a><span class="lineno"> 1973</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">m_CellToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1,</div><div class="line"><a name="l01974"></a><span class="lineno"> 1974</span>&#160;                                      n_cell, <span class="stringliteral">&quot;CellToForgetWeights&quot;</span>);</div><div class="line"><a name="l01975"></a><span class="lineno"> 1975</span>&#160;    }</div><div class="line"><a name="l01976"></a><span class="lineno"> 1976</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">m_CellToOutputWeights</a> )</div><div class="line"><a name="l01977"></a><span class="lineno"> 1977</span>&#160;    {</div><div class="line"><a name="l01978"></a><span class="lineno"> 1978</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">m_CellToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1,</div><div class="line"><a name="l01979"></a><span class="lineno"> 1979</span>&#160;                                      n_cell, <span class="stringliteral">&quot;CellToOutputWeights&quot;</span>);</div><div class="line"><a name="l01980"></a><span class="lineno"> 1980</span>&#160;    }</div><div class="line"><a name="l01981"></a><span class="lineno"> 1981</span>&#160;</div><div class="line"><a name="l01982"></a><span class="lineno"> 1982</span>&#160;    <span class="comment">// Making sure the peephole weights are there all or none. And PeepholeEnable is set accordingly.</span></div><div class="line"><a name="l01983"></a><span class="lineno"> 1983</span>&#160;    <span class="keywordtype">bool</span> peephole_weights_all_or_none =</div><div class="line"><a name="l01984"></a><span class="lineno"> 1984</span>&#160;            (((<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">m_CellToInputWeights</a> || <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>) &amp;&amp;  <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">m_CellToForgetWeights</a></div><div class="line"><a name="l01985"></a><span class="lineno"> 1985</span>&#160;            &amp;&amp; <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">m_CellToOutputWeights</a> &amp;&amp; <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">m_PeepholeEnabled</a>)</div><div class="line"><a name="l01986"></a><span class="lineno"> 1986</span>&#160;            || ( !<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">m_CellToInputWeights</a> &amp;&amp; !<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">m_CellToForgetWeights</a></div><div class="line"><a name="l01987"></a><span class="lineno"> 1987</span>&#160;            &amp;&amp; !<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">m_CellToOutputWeights</a> &amp;&amp; !<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">m_PeepholeEnabled</a>));</div><div class="line"><a name="l01988"></a><span class="lineno"> 1988</span>&#160;    <span class="keywordflow">if</span> (!peephole_weights_all_or_none)</div><div class="line"><a name="l01989"></a><span class="lineno"> 1989</span>&#160;    {</div><div class="line"><a name="l01990"></a><span class="lineno"> 1990</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(descriptorName + <span class="stringliteral">&quot;: Invalid combination of peephole parameters.&quot;</span>);</div><div class="line"><a name="l01991"></a><span class="lineno"> 1991</span>&#160;    }</div><div class="line"><a name="l01992"></a><span class="lineno"> 1992</span>&#160;</div><div class="line"><a name="l01993"></a><span class="lineno"> 1993</span>&#160;    <span class="comment">// Make sure the input gate bias is present only when not a CIFG-LSTM.</span></div><div class="line"><a name="l01994"></a><span class="lineno"> 1994</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l01995"></a><span class="lineno"> 1995</span>&#160;    {</div><div class="line"><a name="l01996"></a><span class="lineno"> 1996</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acb3aade8fae984f7293e222dcbe66030">m_InputGateBias</a>)</div><div class="line"><a name="l01997"></a><span class="lineno"> 1997</span>&#160;        {</div><div class="line"><a name="l01998"></a><span class="lineno"> 1998</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(descriptorName + <span class="stringliteral">&quot;: InputGateBias is present and CIFG-LSTM is enabled.&quot;</span>);</div><div class="line"><a name="l01999"></a><span class="lineno"> 1999</span>&#160;        }</div><div class="line"><a name="l02000"></a><span class="lineno"> 2000</span>&#160;    }</div><div class="line"><a name="l02001"></a><span class="lineno"> 2001</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l02002"></a><span class="lineno"> 2002</span>&#160;    {</div><div class="line"><a name="l02003"></a><span class="lineno"> 2003</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acb3aade8fae984f7293e222dcbe66030">m_InputGateBias</a>)</div><div class="line"><a name="l02004"></a><span class="lineno"> 2004</span>&#160;        {</div><div class="line"><a name="l02005"></a><span class="lineno"> 2005</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(descriptorName + <span class="stringliteral">&quot;: If CIFG-LSTM is disabled InputGateBias &quot;</span></div><div class="line"><a name="l02006"></a><span class="lineno"> 2006</span>&#160;                                           <span class="stringliteral">&quot;must be present.&quot;</span>);</div><div class="line"><a name="l02007"></a><span class="lineno"> 2007</span>&#160;        }</div><div class="line"><a name="l02008"></a><span class="lineno"> 2008</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acb3aade8fae984f7293e222dcbe66030">m_InputGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1,</div><div class="line"><a name="l02009"></a><span class="lineno"> 2009</span>&#160;                                      n_cell, <span class="stringliteral">&quot;InputGateBias&quot;</span>);</div><div class="line"><a name="l02010"></a><span class="lineno"> 2010</span>&#160;    }</div><div class="line"><a name="l02011"></a><span class="lineno"> 2011</span>&#160;</div><div class="line"><a name="l02012"></a><span class="lineno"> 2012</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aba3ffe91d818266b8785ce971548eb59">m_ForgetGateBias</a>, <span class="stringliteral">&quot;Null pointer check&quot;</span>, <span class="stringliteral">&quot;ForgetGateBias&quot;</span>);</div><div class="line"><a name="l02013"></a><span class="lineno"> 2013</span>&#160;    ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aba3ffe91d818266b8785ce971548eb59">m_ForgetGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1, n_cell, <span class="stringliteral">&quot;ForgetGateBias&quot;</span>);</div><div class="line"><a name="l02014"></a><span class="lineno"> 2014</span>&#160;</div><div class="line"><a name="l02015"></a><span class="lineno"> 2015</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a75980b5795efd899a0c678a06a900c6d">m_CellBias</a>, <span class="stringliteral">&quot;Null pointer check&quot;</span>, <span class="stringliteral">&quot;CellBias&quot;</span>);</div><div class="line"><a name="l02016"></a><span class="lineno"> 2016</span>&#160;    ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a75980b5795efd899a0c678a06a900c6d">m_CellBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1, n_cell, <span class="stringliteral">&quot;CellBias&quot;</span>);</div><div class="line"><a name="l02017"></a><span class="lineno"> 2017</span>&#160;</div><div class="line"><a name="l02018"></a><span class="lineno"> 2018</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a332551528a4b3534c2d6c89ce816fcd9">m_OutputGateBias</a>, <span class="stringliteral">&quot;Null pointer check&quot;</span>, <span class="stringliteral">&quot;OutputGateBias&quot;</span>);</div><div class="line"><a name="l02019"></a><span class="lineno"> 2019</span>&#160;    ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a332551528a4b3534c2d6c89ce816fcd9">m_OutputGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1, n_cell, <span class="stringliteral">&quot;OutputGateBias&quot;</span>);</div><div class="line"><a name="l02020"></a><span class="lineno"> 2020</span>&#160;</div><div class="line"><a name="l02021"></a><span class="lineno"> 2021</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">m_ProjectionWeights</a>)</div><div class="line"><a name="l02022"></a><span class="lineno"> 2022</span>&#160;    {</div><div class="line"><a name="l02023"></a><span class="lineno"> 2023</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">m_ProjectionWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 2,</div><div class="line"><a name="l02024"></a><span class="lineno"> 2024</span>&#160;                                      (n_cell * n_output), <span class="stringliteral">&quot;ProjectionWeights&quot;</span>);</div><div class="line"><a name="l02025"></a><span class="lineno"> 2025</span>&#160;    }</div><div class="line"><a name="l02026"></a><span class="lineno"> 2026</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a>)</div><div class="line"><a name="l02027"></a><span class="lineno"> 2027</span>&#160;    {</div><div class="line"><a name="l02028"></a><span class="lineno"> 2028</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1, n_output, <span class="stringliteral">&quot;ProjectionBias&quot;</span>);</div><div class="line"><a name="l02029"></a><span class="lineno"> 2029</span>&#160;    }</div><div class="line"><a name="l02030"></a><span class="lineno"> 2030</span>&#160;</div><div class="line"><a name="l02031"></a><span class="lineno"> 2031</span>&#160;    <span class="comment">// Making sure the projection tensors are consistent:</span></div><div class="line"><a name="l02032"></a><span class="lineno"> 2032</span>&#160;    <span class="comment">// 1) If projection weight is not present, then projection bias should not be</span></div><div class="line"><a name="l02033"></a><span class="lineno"> 2033</span>&#160;    <span class="comment">// present.</span></div><div class="line"><a name="l02034"></a><span class="lineno"> 2034</span>&#160;    <span class="comment">// 2) If projection weight is present, then projection bias is optional.</span></div><div class="line"><a name="l02035"></a><span class="lineno"> 2035</span>&#160;    <span class="keywordtype">bool</span> projecton_tensors_consistent = ((!<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">m_ProjectionWeights</a> &amp;&amp; !<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a> &amp;&amp;</div><div class="line"><a name="l02036"></a><span class="lineno"> 2036</span>&#160;                                        !<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">m_ProjectionEnabled</a>)</div><div class="line"><a name="l02037"></a><span class="lineno"> 2037</span>&#160;                                        || (<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">m_ProjectionWeights</a> &amp;&amp; !<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a> &amp;&amp;</div><div class="line"><a name="l02038"></a><span class="lineno"> 2038</span>&#160;                                        <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">m_ProjectionEnabled</a>)</div><div class="line"><a name="l02039"></a><span class="lineno"> 2039</span>&#160;                                        || (<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">m_ProjectionWeights</a> &amp;&amp; <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a> &amp;&amp;</div><div class="line"><a name="l02040"></a><span class="lineno"> 2040</span>&#160;                                        <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">m_ProjectionEnabled</a>));</div><div class="line"><a name="l02041"></a><span class="lineno"> 2041</span>&#160;    <span class="keywordflow">if</span> (!projecton_tensors_consistent)</div><div class="line"><a name="l02042"></a><span class="lineno"> 2042</span>&#160;    {</div><div class="line"><a name="l02043"></a><span class="lineno"> 2043</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(descriptorName + <span class="stringliteral">&quot;: Projection tensors are inconsistent.&quot;</span>);</div><div class="line"><a name="l02044"></a><span class="lineno"> 2044</span>&#160;    }</div><div class="line"><a name="l02045"></a><span class="lineno"> 2045</span>&#160;</div><div class="line"><a name="l02046"></a><span class="lineno"> 2046</span>&#160;    <span class="comment">// The four layer normalization weights either all have values or none of them have values. Additionally, if</span></div><div class="line"><a name="l02047"></a><span class="lineno"> 2047</span>&#160;    <span class="comment">// CIFG is used, input layer normalization weights tensor is omitted and the other layer normalization weights</span></div><div class="line"><a name="l02048"></a><span class="lineno"> 2048</span>&#160;    <span class="comment">// either all have values or none of them have values. Layer normalization is used when the values of all the</span></div><div class="line"><a name="l02049"></a><span class="lineno"> 2049</span>&#160;    <span class="comment">// layer normalization weights are present</span></div><div class="line"><a name="l02050"></a><span class="lineno"> 2050</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">m_InputLayerNormWeights</a>)</div><div class="line"><a name="l02051"></a><span class="lineno"> 2051</span>&#160;    {</div><div class="line"><a name="l02052"></a><span class="lineno"> 2052</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">m_InputLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1, n_cell, <span class="stringliteral">&quot;InputLayerNormWeights&quot;</span>);</div><div class="line"><a name="l02053"></a><span class="lineno"> 2053</span>&#160;    }</div><div class="line"><a name="l02054"></a><span class="lineno"> 2054</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">m_ForgetLayerNormWeights</a>)</div><div class="line"><a name="l02055"></a><span class="lineno"> 2055</span>&#160;    {</div><div class="line"><a name="l02056"></a><span class="lineno"> 2056</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">m_ForgetLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1, n_cell, <span class="stringliteral">&quot;ForgetLayerNormWeights&quot;</span>);</div><div class="line"><a name="l02057"></a><span class="lineno"> 2057</span>&#160;    }</div><div class="line"><a name="l02058"></a><span class="lineno"> 2058</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">m_CellLayerNormWeights</a>)</div><div class="line"><a name="l02059"></a><span class="lineno"> 2059</span>&#160;    {</div><div class="line"><a name="l02060"></a><span class="lineno"> 2060</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">m_CellLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1, n_cell, <span class="stringliteral">&quot;CellLayerNormWeights&quot;</span>);</div><div class="line"><a name="l02061"></a><span class="lineno"> 2061</span>&#160;    }</div><div class="line"><a name="l02062"></a><span class="lineno"> 2062</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">m_OutputLayerNormWeights</a>)</div><div class="line"><a name="l02063"></a><span class="lineno"> 2063</span>&#160;    {</div><div class="line"><a name="l02064"></a><span class="lineno"> 2064</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">m_OutputLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1, n_cell, <span class="stringliteral">&quot;OutputLayerNormWeights&quot;</span>);</div><div class="line"><a name="l02065"></a><span class="lineno"> 2065</span>&#160;    }</div><div class="line"><a name="l02066"></a><span class="lineno"> 2066</span>&#160;</div><div class="line"><a name="l02067"></a><span class="lineno"> 2067</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a4a8ec49f130084445d44297549254780">m_LayerNormEnabled</a>)</div><div class="line"><a name="l02068"></a><span class="lineno"> 2068</span>&#160;    {</div><div class="line"><a name="l02069"></a><span class="lineno"> 2069</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l02070"></a><span class="lineno"> 2070</span>&#160;        {</div><div class="line"><a name="l02071"></a><span class="lineno"> 2071</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">m_InputLayerNormWeights</a>)</div><div class="line"><a name="l02072"></a><span class="lineno"> 2072</span>&#160;            {</div><div class="line"><a name="l02073"></a><span class="lineno"> 2073</span>&#160;                <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(descriptorName + <span class="stringliteral">&quot;: Layer normalisation is enabled and CIFG-LSTM is &quot;</span></div><div class="line"><a name="l02074"></a><span class="lineno"> 2074</span>&#160;                                               <span class="stringliteral">&quot;disabled but InputLayerNormWeights are not present&quot;</span>);</div><div class="line"><a name="l02075"></a><span class="lineno"> 2075</span>&#160;            }</div><div class="line"><a name="l02076"></a><span class="lineno"> 2076</span>&#160;            ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">m_InputLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div><div class="line"><a name="l02077"></a><span class="lineno"> 2077</span>&#160;                                          1, n_cell, <span class="stringliteral">&quot;InputLayerNormWeights&quot;</span>);</div><div class="line"><a name="l02078"></a><span class="lineno"> 2078</span>&#160;        }</div><div class="line"><a name="l02079"></a><span class="lineno"> 2079</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">m_InputLayerNormWeights</a>)</div><div class="line"><a name="l02080"></a><span class="lineno"> 2080</span>&#160;        {</div><div class="line"><a name="l02081"></a><span class="lineno"> 2081</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(descriptorName + <span class="stringliteral">&quot;:InputLayerNormWeights are present while CIFG is &quot;</span></div><div class="line"><a name="l02082"></a><span class="lineno"> 2082</span>&#160;                                           <span class="stringliteral">&quot;enabled&quot;</span>);</div><div class="line"><a name="l02083"></a><span class="lineno"> 2083</span>&#160;        }</div><div class="line"><a name="l02084"></a><span class="lineno"> 2084</span>&#160;</div><div class="line"><a name="l02085"></a><span class="lineno"> 2085</span>&#160;        ValidatePointer(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">m_ForgetLayerNormWeights</a>, <span class="stringliteral">&quot;Null pointer check layer normalisation enabled&quot;</span>,</div><div class="line"><a name="l02086"></a><span class="lineno"> 2086</span>&#160;                        <span class="stringliteral">&quot;ForgetLayerNormWeights&quot;</span>);</div><div class="line"><a name="l02087"></a><span class="lineno"> 2087</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">m_ForgetLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1, n_cell, <span class="stringliteral">&quot;ForgetLayerNormWeights&quot;</span>);</div><div class="line"><a name="l02088"></a><span class="lineno"> 2088</span>&#160;</div><div class="line"><a name="l02089"></a><span class="lineno"> 2089</span>&#160;        ValidatePointer(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">m_OutputLayerNormWeights</a>, <span class="stringliteral">&quot;Null pointer check layer normalisation enabled&quot;</span>,</div><div class="line"><a name="l02090"></a><span class="lineno"> 2090</span>&#160;                        <span class="stringliteral">&quot;OutputLayerNormWeights&quot;</span>);</div><div class="line"><a name="l02091"></a><span class="lineno"> 2091</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">m_OutputLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1, n_cell, <span class="stringliteral">&quot;OutputLayerNormWeights&quot;</span>);</div><div class="line"><a name="l02092"></a><span class="lineno"> 2092</span>&#160;</div><div class="line"><a name="l02093"></a><span class="lineno"> 2093</span>&#160;        ValidatePointer(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">m_CellLayerNormWeights</a>, <span class="stringliteral">&quot;Null pointer check layer normalisation enabled&quot;</span>,</div><div class="line"><a name="l02094"></a><span class="lineno"> 2094</span>&#160;                        <span class="stringliteral">&quot;CellLayerNormWeights&quot;</span>);</div><div class="line"><a name="l02095"></a><span class="lineno"> 2095</span>&#160;        ValidateTensorNumDimNumElem(<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">m_CellLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(), 1, n_cell, <span class="stringliteral">&quot;CellLayerNormWeights&quot;</span>);</div><div class="line"><a name="l02096"></a><span class="lineno"> 2096</span>&#160;    }</div><div class="line"><a name="l02097"></a><span class="lineno"> 2097</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">m_InputLayerNormWeights</a> || <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">m_ForgetLayerNormWeights</a> || <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">m_OutputLayerNormWeights</a> || <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">m_CellLayerNormWeights</a>)</div><div class="line"><a name="l02098"></a><span class="lineno"> 2098</span>&#160;    {</div><div class="line"><a name="l02099"></a><span class="lineno"> 2099</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(descriptorName + <span class="stringliteral">&quot;: Layer normalisation is disabled but one or more layer &quot;</span></div><div class="line"><a name="l02100"></a><span class="lineno"> 2100</span>&#160;                                       <span class="stringliteral">&quot;normalisation weights are present.&quot;</span>);</div><div class="line"><a name="l02101"></a><span class="lineno"> 2101</span>&#160;    }</div><div class="line"><a name="l02102"></a><span class="lineno"> 2102</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml_a6c9de81fc65b3c4924cab11907075a17"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">armnn::LstmDescriptor::m_ProjectionEnabled</a></div><div class="ttdeci">bool m_ProjectionEnabled</div><div class="ttdoc">Enable/disable the projection layer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00931">Descriptors.hpp:931</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml_a86e88bef0df4df96df752b4b8955a3af"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml#a86e88bef0df4df96df752b4b8955a3af">armnn::LstmDescriptor::m_ClippingThresProj</a></div><div class="ttdeci">float m_ClippingThresProj</div><div class="ttdoc">Clipping threshold value for the projection. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00925">Descriptors.hpp:925</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a45d73e66cbb2b65049e4016c20657ccf"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a45d73e66cbb2b65049e4016c20657ccf">armnn::LstmQueueDescriptor::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00419">WorkloadData.hpp:419</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a6f74071b0e07bbe2cb20a8f78826e084"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">armnn::LstmQueueDescriptor::m_CellToOutputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00424">WorkloadData.hpp:424</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a28ad98d17603fd8b12e046f8ece58970"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a28ad98d17603fd8b12e046f8ece58970">armnn::LstmQueueDescriptor::m_InputToCellWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00416">WorkloadData.hpp:416</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a83dc9086b2e4a4e4cadb66bd874df798"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a83dc9086b2e4a4e4cadb66bd874df798">armnn::LstmQueueDescriptor::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00417">WorkloadData.hpp:417</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a2ba352eb1fdf6dc5ecf7f2e6b6b48f94"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">armnn::LstmQueueDescriptor::m_ProjectionBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ProjectionBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00430">WorkloadData.hpp:430</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a332551528a4b3534c2d6c89ce816fcd9"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a332551528a4b3534c2d6c89ce816fcd9">armnn::LstmQueueDescriptor::m_OutputGateBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00428">WorkloadData.hpp:428</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a5c1c0a7ead7273788976c9e97cffaab7"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">armnn::LstmQueueDescriptor::m_CellToInputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00422">WorkloadData.hpp:422</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a518f0195d0278a892b49649b8860d17f"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">armnn::LstmQueueDescriptor::m_CellLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00433">WorkloadData.hpp:433</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_acefa49d7faf26933e27e473e7bdb4175"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">armnn::LstmQueueDescriptor::m_CellToForgetWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00423">WorkloadData.hpp:423</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a75980b5795efd899a0c678a06a900c6d"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a75980b5795efd899a0c678a06a900c6d">armnn::LstmQueueDescriptor::m_CellBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00427">WorkloadData.hpp:427</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a98d377149071d8842d610cc0734d1cfe"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">armnn::LstmQueueDescriptor::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00418">WorkloadData.hpp:418</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters&lt; LstmDescriptor &gt;::m_Parameters</a></div><div class="ttdeci">LstmDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00057">WorkloadData.hpp:57</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml_ac97905bfa0daab357b91df1347600309"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">armnn::WorkloadInfo::m_InputTensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; m_InputTensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00018">WorkloadInfo.hpp:18</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a9cc28aa4fff6ba9a8abdb340c1abdd57"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">armnn::LstmQueueDescriptor::m_InputLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00431">WorkloadData.hpp:431</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_aa3f07e27230d6d99adc2c82ba681df2b"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">armnn::LstmQueueDescriptor::m_OutputLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_OutputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00434">WorkloadData.hpp:434</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_aba3ffe91d818266b8785ce971548eb59"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aba3ffe91d818266b8785ce971548eb59">armnn::LstmQueueDescriptor::m_ForgetGateBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00426">WorkloadData.hpp:426</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_cpu_tensor_handle_xhtml_a8e8d2fbabcac19f9e12779080ddff54e"><div class="ttname"><a href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a8e8d2fbabcac19f9e12779080ddff54e">armnn::ConstCpuTensorHandle::GetShape</a></div><div class="ttdeci">TensorShape GetShape() const override</div><div class="ttdoc">Get the number of elements for each dimension ordered from slowest iterating dimension to fastest ite...</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_tensor_handle_8hpp_source.xhtml#l00053">CpuTensorHandle.hpp:53</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a08a1932be591c315a512a877d38b22df"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">armnn::LstmQueueDescriptor::m_InputToInputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00414">WorkloadData.hpp:414</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml_a2837b4396f20c956952d1a7286cab5f8"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">armnn::LstmDescriptor::m_PeepholeEnabled</a></div><div class="ttdeci">bool m_PeepholeEnabled</div><div class="ttdoc">Enable/disable peephole. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00929">Descriptors.hpp:929</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml_a67b178f8a836bc1e52b8de109760adfd"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">armnn::WorkloadInfo::m_OutputTensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; m_OutputTensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00019">WorkloadInfo.hpp:19</a></div></div>
<div class="ttc" id="classarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml_a531a3907ec13d3772370da88030191a5"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml#a531a3907ec13d3772370da88030191a5">armnn::LstmDescriptor::m_ClippingThresCell</a></div><div class="ttdeci">float m_ClippingThresCell</div><div class="ttdoc">Clipping threshold value for the cell state. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00923">Descriptors.hpp:923</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml_ad474e5c51a0b194ef32e812b86c0cbdb"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">armnn::LstmDescriptor::m_CifgEnabled</a></div><div class="ttdeci">bool m_CifgEnabled</div><div class="ttdoc">Enable/disable cifg (coupled input &amp; forget gate). </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00927">Descriptors.hpp:927</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_adebc1771e5a1f4b113a7aa594ea74d2c"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#adebc1771e5a1f4b113a7aa594ea74d2c">armnn::LstmQueueDescriptor::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00421">WorkloadData.hpp:421</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a453a4af385d0c060c9aac990fceaa1ef"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">armnn::LstmQueueDescriptor::m_ForgetLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ForgetLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00432">WorkloadData.hpp:432</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_acb3aade8fae984f7293e222dcbe66030"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acb3aade8fae984f7293e222dcbe66030">armnn::LstmQueueDescriptor::m_InputGateBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00425">WorkloadData.hpp:425</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml_a4a8ec49f130084445d44297549254780"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml#a4a8ec49f130084445d44297549254780">armnn::LstmDescriptor::m_LayerNormEnabled</a></div><div class="ttdeci">bool m_LayerNormEnabled</div><div class="ttdoc">Enable/disable layer normalization. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00933">Descriptors.hpp:933</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_aea142bd50ffb93631c2e08324ec92a1e"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aea142bd50ffb93631c2e08324ec92a1e">armnn::LstmQueueDescriptor::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00420">WorkloadData.hpp:420</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_cpu_tensor_handle_xhtml_a66e8f43a5b42b500871ed96e15419567"><div class="ttname"><a href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">armnn::ConstCpuTensorHandle::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo() const</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_tensor_handle_8hpp_source.xhtml#l00037">CpuTensorHandle.hpp:37</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_af3c52626a6f05597d82ed095d0765962"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">armnn::LstmQueueDescriptor::m_ProjectionWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ProjectionWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00429">WorkloadData.hpp:429</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a3ea82566d98c5a657c76c3d851c47848"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a3ea82566d98c5a657c76c3d851c47848">armnn::LstmQueueDescriptor::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00415">WorkloadData.hpp:415</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a75980b5795efd899a0c678a06a900c6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75980b5795efd899a0c678a06a900c6d">&#9670;&nbsp;</a></span>m_CellBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_CellBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00427">427</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a518f0195d0278a892b49649b8860d17f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a518f0195d0278a892b49649b8860d17f">&#9670;&nbsp;</a></span>m_CellLayerNormWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_CellLayerNormWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00433">433</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="acefa49d7faf26933e27e473e7bdb4175"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acefa49d7faf26933e27e473e7bdb4175">&#9670;&nbsp;</a></span>m_CellToForgetWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_CellToForgetWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00423">423</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a5c1c0a7ead7273788976c9e97cffaab7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c1c0a7ead7273788976c9e97cffaab7">&#9670;&nbsp;</a></span>m_CellToInputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_CellToInputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00422">422</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a6f74071b0e07bbe2cb20a8f78826e084"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f74071b0e07bbe2cb20a8f78826e084">&#9670;&nbsp;</a></span>m_CellToOutputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_CellToOutputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00424">424</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="aba3ffe91d818266b8785ce971548eb59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba3ffe91d818266b8785ce971548eb59">&#9670;&nbsp;</a></span>m_ForgetGateBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_ForgetGateBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00426">426</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a453a4af385d0c060c9aac990fceaa1ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a453a4af385d0c060c9aac990fceaa1ef">&#9670;&nbsp;</a></span>m_ForgetLayerNormWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_ForgetLayerNormWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00432">432</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="acb3aade8fae984f7293e222dcbe66030"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb3aade8fae984f7293e222dcbe66030">&#9670;&nbsp;</a></span>m_InputGateBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_InputGateBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00425">425</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a9cc28aa4fff6ba9a8abdb340c1abdd57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cc28aa4fff6ba9a8abdb340c1abdd57">&#9670;&nbsp;</a></span>m_InputLayerNormWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_InputLayerNormWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00431">431</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a28ad98d17603fd8b12e046f8ece58970"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28ad98d17603fd8b12e046f8ece58970">&#9670;&nbsp;</a></span>m_InputToCellWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_InputToCellWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00416">416</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a3ea82566d98c5a657c76c3d851c47848"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ea82566d98c5a657c76c3d851c47848">&#9670;&nbsp;</a></span>m_InputToForgetWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_InputToForgetWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00415">415</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a08a1932be591c315a512a877d38b22df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08a1932be591c315a512a877d38b22df">&#9670;&nbsp;</a></span>m_InputToInputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_InputToInputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00414">414</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a83dc9086b2e4a4e4cadb66bd874df798"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83dc9086b2e4a4e4cadb66bd874df798">&#9670;&nbsp;</a></span>m_InputToOutputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_InputToOutputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00417">417</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a332551528a4b3534c2d6c89ce816fcd9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a332551528a4b3534c2d6c89ce816fcd9">&#9670;&nbsp;</a></span>m_OutputGateBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_OutputGateBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00428">428</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="aa3f07e27230d6d99adc2c82ba681df2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3f07e27230d6d99adc2c82ba681df2b">&#9670;&nbsp;</a></span>m_OutputLayerNormWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_OutputLayerNormWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00434">434</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a2ba352eb1fdf6dc5ecf7f2e6b6b48f94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">&#9670;&nbsp;</a></span>m_ProjectionBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_ProjectionBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00430">430</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="af3c52626a6f05597d82ed095d0765962"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3c52626a6f05597d82ed095d0765962">&#9670;&nbsp;</a></span>m_ProjectionWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_ProjectionWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00429">429</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="aea142bd50ffb93631c2e08324ec92a1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea142bd50ffb93631c2e08324ec92a1e">&#9670;&nbsp;</a></span>m_RecurrentToCellWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_RecurrentToCellWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00420">420</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a45d73e66cbb2b65049e4016c20657ccf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45d73e66cbb2b65049e4016c20657ccf">&#9670;&nbsp;</a></span>m_RecurrentToForgetWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_RecurrentToForgetWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00419">419</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a98d377149071d8842d610cc0734d1cfe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98d377149071d8842d610cc0734d1cfe">&#9670;&nbsp;</a></span>m_RecurrentToInputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_RecurrentToInputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00418">418</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="adebc1771e5a1f4b113a7aa594ea74d2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adebc1771e5a1f4b113a7aa594ea74d2c">&#9670;&nbsp;</a></span>m_RecurrentToOutputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml">ConstCpuTensorHandle</a>* m_RecurrentToOutputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8hpp_source.xhtml#l00421">421</a> of file <a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>src/backends/backendsCommon/<a class="el" href="_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a></li>
<li>src/backends/backendsCommon/<a class="el" href="_workload_data_8cpp_source.xhtml">WorkloadData.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml">LstmQueueDescriptor</a></li>
    <li class="footer">Generated on Wed Nov 25 2020 09:59:18 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
