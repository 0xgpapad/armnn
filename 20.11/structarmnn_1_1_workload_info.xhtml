<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: WorkloadInfo Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarmnn_1_1_workload_info.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="structarmnn_1_1_workload_info-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">WorkloadInfo Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Contains information about inputs and outputs to a layer.  
 <a href="structarmnn_1_1_workload_info.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml">WorkloadInfo.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ac97905bfa0daab357b91df1347600309"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a></td></tr>
<tr class="separator:ac97905bfa0daab357b91df1347600309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67b178f8a836bc1e52b8de109760adfd"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">m_OutputTensorInfos</a></td></tr>
<tr class="separator:a67b178f8a836bc1e52b8de109760adfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Contains information about inputs and outputs to a layer. </p>
<p>This is needed at construction of workloads, but are not stored. </p>

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">16</a> of file <a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml">WorkloadInfo.hpp</a>.</p>
</div><h2 class="groupheader">Member Data Documentation</h2>
<a id="ac97905bfa0daab357b91df1347600309"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac97905bfa0daab357b91df1347600309">&#9670;&nbsp;</a></span>m_InputTensorInfos</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&gt; m_InputTensorInfos</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00018">18</a> of file <a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml">WorkloadInfo.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_arg_min_max_workload_8cpp_source.xhtml#l00055">ClArgMinMaxWorkload::ClArgMinMaxWorkload()</a>, <a class="el" href="_cl_gather_workload_8cpp_source.xhtml#l00029">ClGatherWorkload::ClGatherWorkload()</a>, <a class="el" href="_cl_log_softmax_workload_8cpp_source.xhtml#l00028">ClLogSoftmaxWorkload::ClLogSoftmaxWorkload()</a>, <a class="el" href="_cl_multiplication_workload_8cpp_source.xhtml#l00047">ClMultiplicationWorkload::ClMultiplicationWorkload()</a>, <a class="el" href="_cl_softmax_workload_8cpp_source.xhtml#l00028">ClSoftmaxWorkload::ClSoftmaxWorkload()</a>, <a class="el" href="_cl_strided_slice_workload_8cpp_source.xhtml#l00055">ClStridedSliceWorkload::ClStridedSliceWorkload()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00355">Layer::CollectQueueDescriptorInputs()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00149">RefWorkloadFactory::CreateAddition()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00294">RefWorkloadFactory::CreateDivision()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00339">RefWorkloadFactory::CreateFloor()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00375">RefWorkloadFactory::CreateInput()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00433">RefWorkloadFactory::CreateMaximum()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00478">RefWorkloadFactory::CreateMinimum()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00491">RefWorkloadFactory::CreateMultiplication()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00510">RefWorkloadFactory::CreateOutput()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00666">RefWorkloadFactory::CreateSubtraction()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l00465">LoadedNetwork::EnqueueWorkload()</a>, <a class="el" href="_workload_8hpp_source.xhtml#l00134">FirstInputTypedWorkload&lt; QueueDescriptor, DataType &gt;::FirstInputTypedWorkload()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00025">armnn::GetBiasDataType()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00033">armnn::IsDataType()</a>, <a class="el" href="_workload_8hpp_source.xhtml#l00109">MultiTypedWorkload&lt; QueueDescriptor, InputDataType, OutputDataType &gt;::MultiTypedWorkload()</a>, <a class="el" href="_neon_arg_min_max_workload_8cpp_source.xhtml#l00055">NeonArgMinMaxWorkload::NeonArgMinMaxWorkload()</a>, <a class="el" href="_neon_gather_workload_8cpp_source.xhtml#l00027">NeonGatherWorkload::NeonGatherWorkload()</a>, <a class="el" href="_neon_log_softmax_workload_8cpp_source.xhtml#l00033">NeonLogSoftmaxWorkload::NeonLogSoftmaxWorkload()</a>, <a class="el" href="_neon_multiplication_workload_8cpp_source.xhtml#l00047">NeonMultiplicationWorkload::NeonMultiplicationWorkload()</a>, <a class="el" href="_neon_normalization_float_workload_8cpp_source.xhtml#l00060">NeonNormalizationFloatWorkload::NeonNormalizationFloatWorkload()</a>, <a class="el" href="_neon_softmax_workload_8cpp_source.xhtml#l00033">NeonSoftmaxWorkload::NeonSoftmaxWorkload()</a>, <a class="el" href="_neon_strided_slice_workload_8cpp_source.xhtml#l00049">NeonStridedSliceWorkload::NeonStridedSliceWorkload()</a>, <a class="el" href="_workload_8hpp_source.xhtml#l00056">TypedWorkload&lt; DebugQueueDescriptor, DataType &gt;::TypedWorkload()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00504">MemCopyQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00540">MemImportQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00709">SoftmaxQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00734">SplitterQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00806">ConcatQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00902">StackQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00618">ActivationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00643">ArgMinMaxQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00998">FillQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01021">FullyConnectedQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01371">PermuteQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01400">Pooling2dQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01231">Convolution2dQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01297">DepthwiseConvolution2dQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02625">DetectionPostProcessQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01083">NormalizationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01111">AdditionQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01148">MultiplicationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02196">DivisionQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02230">SubtractionQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02264">MaximumQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02298">MeanQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02342">PadQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02364">QuantizeQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02516">EqualQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01185">BatchNormalizationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03557">RankQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01427">ResizeBilinearQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01474">ResizeQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01521">FakeQuantizationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01542">InstanceNormalizationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01571">L2NormalizationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01603">LogSoftmaxQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01657">ReshapeQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01686">SpaceToBatchNdQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01753">SpaceToDepthQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01806">FloorQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01832">LstmQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02104">ConvertBf16ToFp32QueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02127">ConvertFp32ToBf16QueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02173">ConvertFp16ToFp32QueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02150">ConvertFp32ToFp16QueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02393">BatchToSpaceNdQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02417">StridedSliceQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02474">MinimumQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02540">GreaterQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02564">RsqrtQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02590">GatherQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02693">DequantizeQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02718">MergeQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02736">SwitchQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02782">PreluQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02819">TransposeConvolution2dQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02871">TransposeQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02900">QLstmQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03186">QuantizedLstmQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03357">AbsQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03384">SliceQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03439">DepthToSpaceQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03492">ComparisonQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03516">ElementwiseUnaryQueueDescriptor::Validate()</a>, and <a class="el" href="_workload_data_8cpp_source.xhtml#l03586">LogicalBinaryQueueDescriptor::Validate()</a>.</p>

</div>
</div>
<a id="a67b178f8a836bc1e52b8de109760adfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67b178f8a836bc1e52b8de109760adfd">&#9670;&nbsp;</a></span>m_OutputTensorInfos</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&gt; m_OutputTensorInfos</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml">WorkloadInfo.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_layer_8hpp_source.xhtml#l00362">Layer::CollectQueueDescriptorOutputs()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00375">RefWorkloadFactory::CreateInput()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00510">RefWorkloadFactory::CreateOutput()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l00465">LoadedNetwork::EnqueueWorkload()</a>, <a class="el" href="_workload_8hpp_source.xhtml#l00134">FirstInputTypedWorkload&lt; QueueDescriptor, DataType &gt;::FirstInputTypedWorkload()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00025">armnn::GetBiasDataType()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00033">armnn::IsDataType()</a>, <a class="el" href="_workload_8hpp_source.xhtml#l00109">MultiTypedWorkload&lt; QueueDescriptor, InputDataType, OutputDataType &gt;::MultiTypedWorkload()</a>, <a class="el" href="_neon_normalization_float_workload_8cpp_source.xhtml#l00060">NeonNormalizationFloatWorkload::NeonNormalizationFloatWorkload()</a>, <a class="el" href="_workload_8hpp_source.xhtml#l00056">TypedWorkload&lt; DebugQueueDescriptor, DataType &gt;::TypedWorkload()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00504">MemCopyQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00540">MemImportQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00709">SoftmaxQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00734">SplitterQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00806">ConcatQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00902">StackQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00618">ActivationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00643">ArgMinMaxQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l00998">FillQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01021">FullyConnectedQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01371">PermuteQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01400">Pooling2dQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01231">Convolution2dQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01297">DepthwiseConvolution2dQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02625">DetectionPostProcessQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01083">NormalizationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01111">AdditionQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01148">MultiplicationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02196">DivisionQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02230">SubtractionQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02264">MaximumQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02298">MeanQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02342">PadQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02364">QuantizeQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02516">EqualQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01185">BatchNormalizationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03557">RankQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01427">ResizeBilinearQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01474">ResizeQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01521">FakeQuantizationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01542">InstanceNormalizationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01571">L2NormalizationQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01603">LogSoftmaxQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01626">ConstantQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01657">ReshapeQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01686">SpaceToBatchNdQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01753">SpaceToDepthQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01806">FloorQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l01832">LstmQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02104">ConvertBf16ToFp32QueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02127">ConvertFp32ToBf16QueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02173">ConvertFp16ToFp32QueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02150">ConvertFp32ToFp16QueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02393">BatchToSpaceNdQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02417">StridedSliceQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02474">MinimumQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02540">GreaterQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02564">RsqrtQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02590">GatherQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02693">DequantizeQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02718">MergeQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02736">SwitchQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02782">PreluQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02819">TransposeConvolution2dQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02871">TransposeQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l02900">QLstmQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03186">QuantizedLstmQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03357">AbsQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03384">SliceQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03439">DepthToSpaceQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03492">ComparisonQueueDescriptor::Validate()</a>, <a class="el" href="_workload_data_8cpp_source.xhtml#l03516">ElementwiseUnaryQueueDescriptor::Validate()</a>, and <a class="el" href="_workload_data_8cpp_source.xhtml#l03586">LogicalBinaryQueueDescriptor::Validate()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>include/armnn/backends/<a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml">WorkloadInfo.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a></li>
    <li class="footer">Generated on Wed Nov 25 2020 09:59:20 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
