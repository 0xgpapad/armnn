<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnn/IRuntime.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_i_runtime_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">IRuntime.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_i_runtime_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_backend_options_8hpp.xhtml">BackendOptions.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_network_8hpp.xhtml">INetwork.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_profiler_8hpp.xhtml">IProfiler.hpp</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_8hpp.xhtml">Tensor.hpp</a>&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_types_8hpp.xhtml">Types.hpp</a>&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_types_utils_8hpp.xhtml">TypesUtils.hpp</a>&quot;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_local_packet_handler_8hpp.xhtml">profiling/ILocalPacketHandler.hpp</a>&quot;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">   20</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> = int;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml">IGpuAccTunedParameters</a>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>;</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a150468a02bd7b2d2d061c4aaaee939f0">   25</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#a150468a02bd7b2d2d061c4aaaee939f0">IRuntimePtr</a> = std::unique_ptr&lt;IRuntime, void(*)(IRuntime* runtime)&gt;;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_network_properties.xhtml">   27</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_i_network_properties.xhtml">INetworkProperties</a></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;{</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_network_properties.xhtml#ac45bc38ba4b9616dc9b3bf5f91eb2655">   29</a></span>&#160;    <a class="code" href="structarmnn_1_1_i_network_properties.xhtml#ac45bc38ba4b9616dc9b3bf5f91eb2655">INetworkProperties</a>(<span class="keywordtype">bool</span> importEnabled = <span class="keyword">false</span>, <span class="keywordtype">bool</span> exportEnabled = <span class="keyword">false</span>)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        : <a class="code" href="structarmnn_1_1_i_network_properties.xhtml#a111a52fb2bd24aee9fc125f28c2eb1cb">m_ImportEnabled</a>(importEnabled),</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;          <a class="code" href="structarmnn_1_1_i_network_properties.xhtml#a042fb9a87ffa70730766d19505d80490">m_ExportEnabled</a>(exportEnabled) {}</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_network_properties.xhtml#a111a52fb2bd24aee9fc125f28c2eb1cb">   33</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_i_network_properties.xhtml#a111a52fb2bd24aee9fc125f28c2eb1cb">m_ImportEnabled</a>;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_network_properties.xhtml#a042fb9a87ffa70730766d19505d80490">   34</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_i_network_properties.xhtml#a042fb9a87ffa70730766d19505d80490">m_ExportEnabled</a>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_network_properties.xhtml#a043b374620881808982d513014269742">   36</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="structarmnn_1_1_i_network_properties.xhtml#a043b374620881808982d513014269742">~INetworkProperties</a>() {}</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;};</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_runtime.xhtml">   39</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">   42</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">CreationOptions</a></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    {</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a899860966ff7a5d7901e5b33bcad88fd">   44</a></span>&#160;        <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a899860966ff7a5d7901e5b33bcad88fd">CreationOptions</a>()</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            : m_GpuAccTunedParameters(nullptr)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            , m_EnableGpuProfiling(<a class="code" href="_cl_layer_tests_8cpp.xhtml#a2289f9e7fac0ce47801448e873b04303">false</a>)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            , m_DynamicBackendsPath(<span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        {}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">        /// If set, uses the GpuAcc tuned parameters from the given object when executing GPU workloads.</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">        /// It will also be updated with new tuned parameters if it is configured to do so.</span></div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a515d755116f35e5b3ab30b7a78a712f1">   52</a></span>&#160;<span class="comment"></span>        std::shared_ptr&lt;IGpuAccTunedParameters&gt; <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a515d755116f35e5b3ab30b7a78a712f1">m_GpuAccTunedParameters</a>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">        /// Setting this flag will allow the user to obtain GPU profiling information from the runtime.</span></div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a2fe8c3eadf4f4f9c0c664a24a2a298f9">   55</a></span>&#160;<span class="comment"></span>        <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a2fe8c3eadf4f4f9c0c664a24a2a298f9">m_EnableGpuProfiling</a>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">        /// Setting this value will override the paths set by the DYNAMIC_BACKEND_PATHS compiler directive</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">        /// Only a single path is allowed for the override</span></div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#ae43cf4b5df0068ee6a9151c98947248b">   59</a></span>&#160;<span class="comment"></span>        std::string <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#ae43cf4b5df0068ee6a9151c98947248b">m_DynamicBackendsPath</a>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">   61</a></span>&#160;        <span class="keyword">struct </span><a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">ExternalProfilingOptions</a></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        {</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#ad290ff73f5e32ea7e4e549d743815ff8">   63</a></span>&#160;            <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#ad290ff73f5e32ea7e4e549d743815ff8">ExternalProfilingOptions</a>()</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                : m_EnableProfiling(<a class="code" href="_cl_layer_tests_8cpp.xhtml#a2289f9e7fac0ce47801448e873b04303">false</a>)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                , m_TimelineEnabled(<a class="code" href="_cl_layer_tests_8cpp.xhtml#a2289f9e7fac0ce47801448e873b04303">false</a>)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                , m_OutgoingCaptureFile(<span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                , m_IncomingCaptureFile(<span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                , m_FileOnly(<a class="code" href="_cl_layer_tests_8cpp.xhtml#a2289f9e7fac0ce47801448e873b04303">false</a>)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                , m_CapturePeriod(<a class="code" href="namespacearmnn.xhtml#a602ddc6408c3347ba4c1eba623003984">LOWEST_CAPTURE_PERIOD</a>)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                , m_FileFormat(<span class="stringliteral">&quot;binary&quot;</span>)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                , m_LocalPacketHandlers()</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            {}</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a26d42007440bb01a1a6d0ab3b5a657ee">   74</a></span>&#160;            <span class="keywordtype">bool</span>        <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a26d42007440bb01a1a6d0ab3b5a657ee">m_EnableProfiling</a>;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a5b304d775657afbf1fb724af57add374">   75</a></span>&#160;            <span class="keywordtype">bool</span>        <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a5b304d775657afbf1fb724af57add374">m_TimelineEnabled</a>;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aa0d6aa79d683bc79d20d4ddcf7db87db">   76</a></span>&#160;            std::string <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aa0d6aa79d683bc79d20d4ddcf7db87db">m_OutgoingCaptureFile</a>;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a36dd18e4f73d470e3234d72198aa5fef">   77</a></span>&#160;            std::string <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a36dd18e4f73d470e3234d72198aa5fef">m_IncomingCaptureFile</a>;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#ad8f8cb971cad412664cd7df58df7eb1e">   78</a></span>&#160;            <span class="keywordtype">bool</span>        <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#ad8f8cb971cad412664cd7df58df7eb1e">m_FileOnly</a>;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a2239347f38747f993c324bdd8b1eb146">   79</a></span>&#160;            uint32_t    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a2239347f38747f993c324bdd8b1eb146">m_CapturePeriod</a>;</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aeec9a6408083ab1b6bf7fa3e566ebe46">   80</a></span>&#160;            std::string <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aeec9a6408083ab1b6bf7fa3e566ebe46">m_FileFormat</a>;</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a3c0e8ba6298293937517b6e5c6a79264">   81</a></span>&#160;            std::vector&lt;armnn::profiling::ILocalPacketHandlerSharedPtr&gt; <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a3c0e8ba6298293937517b6e5c6a79264">m_LocalPacketHandlers</a>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        };</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">   83</a></span>&#160;        <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">ExternalProfilingOptions</a> <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">m_ProfilingOptions</a>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">        /// Pass backend specific options.</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">        ///</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">        /// For example, to enable GpuAcc tuning add the following</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">        /// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.cpp</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">        /// m_BackendOption.emplace_back(</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">        ///     BackendOptions{&quot;GpuAcc&quot;,</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">        ///       {</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">        ///         {&quot;TuningLevel&quot;, 2},</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">        ///         {&quot;TuningFile&quot;, filename}</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">        ///       }</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">        ///     });</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">        /// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">        /// Execute representative workloads through the runtime to generate tuning data.</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">        /// The tuning file is written once the runtime is destroyed</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">        /// To execute with the tuning data, start up with just the tuning file specified.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">        /// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.cpp</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">        /// m_BackendOption.emplace_back(</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">        ///     BackendOptions{&quot;GpuAcc&quot;,</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">        ///       {</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">        ///         {&quot;TuningFile&quot;, filename}</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">        ///       }</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">        ///     });</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">        /// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">        /// The following backend options are available:</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">        /// GpuAcc:</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">        ///   &quot;TuningLevel&quot; : int [0..3] (0=UseOnly(default) | 1=RapidTuning | 2=NormalTuning | 3=ExhaustiveTuning)</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">        ///   &quot;TuningFile&quot; : string [filenameString]</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">        ///   &quot;KernelProfilingEnabled&quot; : bool [true | false]</span></div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">  115</a></span>&#160;<span class="comment"></span>        std::vector&lt;BackendOptions&gt; <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">m_BackendOptions</a>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    };</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>* CreateRaw(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">CreationOptions</a>&amp; options);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearmnn.xhtml#a150468a02bd7b2d2d061c4aaaee939f0">IRuntimePtr</a> Create(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">CreationOptions</a>&amp; options);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> Destroy(<a class="code" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>* runtime);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">    /// Loads a complete network into the IRuntime.</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">    /// @param [out] networkIdOut - Unique identifier for the network is returned in this reference.</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">    /// @param [in] network - Complete network to load into the IRuntime.</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">    /// The runtime takes ownership of the network once passed in.</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">    /// @return armnn::Status</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> LoadNetwork(<a class="code" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a>&amp; networkIdOut, <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> network) = 0;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">    /// Load a complete network into the IRuntime.</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">    /// @param [out] networkIdOut Unique identifier for the network is returned in this reference.</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">    /// @param [in] network Complete network to load into the IRuntime.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">    /// @param [out] errorMessage Error message if there were any errors.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">    /// The runtime takes ownership of the network once passed in.</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">    /// @return armnn::Status</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> LoadNetwork(<a class="code" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a>&amp; networkIdOut,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                               <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> network,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                               std::string&amp; errorMessage) = 0;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> LoadNetwork(<a class="code" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a>&amp; networkIdOut,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                               <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> network,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                               std::string&amp; errorMessage,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_i_network_properties.xhtml">INetworkProperties</a>&amp; networkProperties) = 0;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> <a class="code" href="namespacearmnn.xhtml#ae52296dff1f4879854f320d59f92574e">GetInputTensorInfo</a>(<a class="code" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> networkId, <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a> layerId) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> GetOutputTensorInfo(<a class="code" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> networkId, <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a> layerId) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">    /// Evaluates a network using input in inputTensors and outputs filled into outputTensors</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> EnqueueWorkload(<a class="code" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> networkId,</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">InputTensors</a>&amp; inputTensors,</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a8f091a512915d1cb29a4ebf13dfc53ea">OutputTensors</a>&amp; outputTensors) = 0;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">    /// Unloads a network from the IRuntime.</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">    /// At the moment this only removes the network from the m_Impl-&gt;m_Network.</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">    /// This might need more work in the future to be AndroidNN compliant.</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">    /// @param [in] networkId - Unique identifier for the network to be unloaded. Generated in LoadNetwork().</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">    /// @return armnn::Status</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> UnloadNetwork(<a class="code" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> networkId) = 0;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_device_spec.xhtml">IDeviceSpec</a>&amp; GetDeviceSpec() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">    /// Gets the profiler corresponding to the given network id.</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">    /// @param networkId The id of the network for which to get the profile.</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">    /// @return A pointer to the requested profiler, or nullptr if not found.</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keyword">const</span> std::shared_ptr&lt;IProfiler&gt; GetProfiler(<a class="code" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> networkId) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">    /// Registers a callback function to debug layers performing custom computations on intermediate tensors.</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">    /// @param networkId The id of the network to register the callback.</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">    /// @param func callback function to pass to the debug layer.</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> RegisterDebugCallback(<a class="code" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> networkId, <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">DebugCallbackFunction</a>&amp; func) = 0;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_runtime.xhtml#ad728a798fda08188df91623caebd527c">  172</a></span>&#160;    <a class="code" href="classarmnn_1_1_i_runtime.xhtml#ad728a798fda08188df91623caebd527c">~IRuntime</a>() {}</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;};</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">/// The following API is replaced by the backend options API.</span></div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a2d3a708a26ac6d77bf8f15506e89a25a">  177</a></span>&#160;<span class="comment"></span><span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#a2d3a708a26ac6d77bf8f15506e89a25a">IGpuAccTunedParametersPtr</a> = std::shared_ptr&lt;IGpuAccTunedParameters&gt;;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">/// Manages a set of GpuAcc parameters which have been tuned for maximum performance.</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">/// Passes an instance of this object to the IRuntime::Create() method (via IRuntime::CreationOptions) to use it</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">/// for all GPU workload execution.</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">/// Can be created in two modes:</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">///     - In UseTunedParameters mode, the parameters stored in this object are used to execute GPU workloads.</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">///     - In UpdateTunedParameters mode, additionally, whenever a GPU workload is executed for the first time, the</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">///       optimum parameters will be found and stored in this object. WARNING - This tuning can be slow.</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">/// The parameters can be loaded from and saved to a file so that you can first run a slow initial read-write</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">/// execution, save the parameters for later and then run fast read-only executions using the optimised parameters.</span></div><div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml">  190</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml">IGpuAccTunedParameters</a></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a46c8a310cf4c094f8c80e1cb8dc1f911">  193</a></span>&#160;    <span class="keyword">enum class</span> <a class="code" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a46c8a310cf4c094f8c80e1cb8dc1f911">Mode</a></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    {</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        UseTunedParameters,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        UpdateTunedParameters</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    };</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a707090747256af276c389e0cf1cb0a9a">  199</a></span>&#160;    <span class="keyword">enum class</span> <a class="code" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a707090747256af276c389e0cf1cb0a9a">TuningLevel</a></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    {</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a707090747256af276c389e0cf1cb0a9aab571ef5b2664270d25bea4f4b61ffe68">Rapid</a> = 0,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a707090747256af276c389e0cf1cb0a9aa960b44c579bc2f6818d2daaf9e4c16f0">Normal</a> = 1,</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a707090747256af276c389e0cf1cb0a9aafaf34f09ea1e93bfbf591e19dc0dfb9f">Exhaustive</a> = 2</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    };</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">    /// Creates an IClTunedParameters with the given mode.</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">    /// @{</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment"></span>    <span class="keyword">static</span> <a class="code" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml">IGpuAccTunedParameters</a>* CreateRaw(<a class="code" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a46c8a310cf4c094f8c80e1cb8dc1f911">Mode</a> mode, <a class="code" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a707090747256af276c389e0cf1cb0a9a">TuningLevel</a> tunerMode);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearmnn.xhtml#a2d3a708a26ac6d77bf8f15506e89a25a">IGpuAccTunedParametersPtr</a> Create(<a class="code" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a46c8a310cf4c094f8c80e1cb8dc1f911">Mode</a> mode, <a class="code" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a707090747256af276c389e0cf1cb0a9a">TuningLevel</a> tunerMode);<span class="comment"></span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">    /// @}</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment"></span>    <span class="keyword">static</span> <span class="keywordtype">void</span> Destroy(<a class="code" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml">IGpuAccTunedParameters</a>* params);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">    /// Loads an existing set of tuned parameters from the given file.</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">    /// If there is an error loading the file, an armnn::Exception is thrown.</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> Load(<span class="keyword">const</span> <span class="keywordtype">char</span>* filename) = 0;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">    /// Saves the current set of tuned parameters to the given file.</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">    /// If there is an error saving to the file, an armnn::Exception is thrown.</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> Save(<span class="keyword">const</span> <span class="keywordtype">char</span>* filename) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a42b98f24092313b6a7673b54a3a84aa4">  222</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a42b98f24092313b6a7673b54a3a84aa4">~IGpuAccTunedParameters</a>() {};</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;};</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="_tensor_8hpp_xhtml"><div class="ttname"><a href="_tensor_8hpp.xhtml">Tensor.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_network_properties_xhtml_a111a52fb2bd24aee9fc125f28c2eb1cb"><div class="ttname"><a href="structarmnn_1_1_i_network_properties.xhtml#a111a52fb2bd24aee9fc125f28c2eb1cb">armnn::INetworkProperties::m_ImportEnabled</a></div><div class="ttdeci">const bool m_ImportEnabled</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00033">IRuntime.hpp:33</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_aa0d6aa79d683bc79d20d4ddcf7db87db"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aa0d6aa79d683bc79d20d4ddcf7db87db">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_OutgoingCaptureFile</a></div><div class="ttdeci">std::string m_OutgoingCaptureFile</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00076">IRuntime.hpp:76</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="_cl_layer_tests_8cpp_xhtml_a2289f9e7fac0ce47801448e873b04303"><div class="ttname"><a href="_cl_layer_tests_8cpp.xhtml#a2289f9e7fac0ce47801448e873b04303">false</a></div><div class="ttdeci">DataLayout::NCHW false</div><div class="ttdef"><b>Definition:</b> <a href="_cl_layer_tests_8cpp_source.xhtml#l00135">ClLayerTests.cpp:135</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_ad290ff73f5e32ea7e4e549d743815ff8"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#ad290ff73f5e32ea7e4e549d743815ff8">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::ExternalProfilingOptions</a></div><div class="ttdeci">ExternalProfilingOptions()</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00063">IRuntime.hpp:63</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a150468a02bd7b2d2d061c4aaaee939f0"><div class="ttname"><a href="namespacearmnn.xhtml#a150468a02bd7b2d2d061c4aaaee939f0">armnn::IRuntimePtr</a></div><div class="ttdeci">std::unique_ptr&lt; IRuntime, void(*)(IRuntime *runtime)&gt; IRuntimePtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00025">IRuntime.hpp:25</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_aa01bce88f89975a5a031db4cc8861527"><div class="ttname"><a href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">armnn::InputTensors</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; LayerBindingId, class ConstTensor &gt; &gt; InputTensors</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00340">Tensor.hpp:340</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a83015160d8c67d5d77735eb0d4033d9a"><div class="ttname"><a href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">armnn::NetworkId</a></div><div class="ttdeci">int NetworkId</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00020">IRuntime.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2020 ARM Limited. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00025">00_introduction.dox:25</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_runtime_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_runtime.xhtml">armnn::IRuntime</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00039">IRuntime.hpp:39</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a36dd18e4f73d470e3234d72198aa5fef"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a36dd18e4f73d470e3234d72198aa5fef">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_IncomingCaptureFile</a></div><div class="ttdeci">std::string m_IncomingCaptureFile</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00077">IRuntime.hpp:77</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a26d42007440bb01a1a6d0ab3b5a657ee"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a26d42007440bb01a1a6d0ab3b5a657ee">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_EnableProfiling</a></div><div class="ttdeci">bool m_EnableProfiling</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00074">IRuntime.hpp:74</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_ad8f8cb971cad412664cd7df58df7eb1e"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#ad8f8cb971cad412664cd7df58df7eb1e">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_FileOnly</a></div><div class="ttdeci">bool m_FileOnly</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00078">IRuntime.hpp:78</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a15f3ad9b5e4e3d46b0a6dda246a7bc28"><div class="ttname"><a href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a></div><div class="ttdeci">std::function&lt; void(LayerGuid guid, unsigned int slotIndex, ITensorHandle *tensorHandle)&gt; DebugCallbackFunction</div><div class="ttdoc">Define the type of callback for the Debug layer to call. </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00275">Types.hpp:275</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_runtime_xhtml_ad728a798fda08188df91623caebd527c"><div class="ttname"><a href="classarmnn_1_1_i_runtime.xhtml#ad728a798fda08188df91623caebd527c">armnn::IRuntime::~IRuntime</a></div><div class="ttdeci">~IRuntime()</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00172">IRuntime.hpp:172</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_gpu_acc_tuned_parameters_xhtml_a46c8a310cf4c094f8c80e1cb8dc1f911"><div class="ttname"><a href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a46c8a310cf4c094f8c80e1cb8dc1f911">armnn::IGpuAccTunedParameters::Mode</a></div><div class="ttdeci">Mode</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00193">IRuntime.hpp:193</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ab8cf8f9fb6792e654c2d8d8382f6f01b"><div class="ttname"><a href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a></div><div class="ttdeci">int LayerBindingId</div><div class="ttdoc">Type of identifiers for bindable layers (inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00202">Types.hpp:202</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_a515d755116f35e5b3ab30b7a78a712f1"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a515d755116f35e5b3ab30b7a78a712f1">armnn::IRuntime::CreationOptions::m_GpuAccTunedParameters</a></div><div class="ttdeci">std::shared_ptr&lt; IGpuAccTunedParameters &gt; m_GpuAccTunedParameters</div><div class="ttdoc">If set, uses the GpuAcc tuned parameters from the given object when executing GPU workloads...</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00052">IRuntime.hpp:52</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_network_properties_xhtml"><div class="ttname"><a href="structarmnn_1_1_i_network_properties.xhtml">armnn::INetworkProperties</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00027">IRuntime.hpp:27</a></div></div>
<div class="ttc" id="_backend_options_8hpp_xhtml"><div class="ttname"><a href="_backend_options_8hpp.xhtml">BackendOptions.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">armnn::IRuntime::CreationOptions::ExternalProfilingOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00061">IRuntime.hpp:61</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_aecebc69597fe0d38a3964031c6eeb0a8"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">armnn::IRuntime::CreationOptions::m_BackendOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; m_BackendOptions</div><div class="ttdoc">Pass backend specific options. </div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00115">IRuntime.hpp:115</a></div></div>
<div class="ttc" id="_types_utils_8hpp_xhtml"><div class="ttname"><a href="_types_utils_8hpp.xhtml">TypesUtils.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a3c0e8ba6298293937517b6e5c6a79264"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a3c0e8ba6298293937517b6e5c6a79264">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_LocalPacketHandlers</a></div><div class="ttdeci">std::vector&lt; armnn::profiling::ILocalPacketHandlerSharedPtr &gt; m_LocalPacketHandlers</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00081">IRuntime.hpp:81</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_gpu_acc_tuned_parameters_xhtml_a707090747256af276c389e0cf1cb0a9a"><div class="ttname"><a href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a707090747256af276c389e0cf1cb0a9a">armnn::IGpuAccTunedParameters::TuningLevel</a></div><div class="ttdeci">TuningLevel</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00199">IRuntime.hpp:199</a></div></div>
<div class="ttc" id="_types_8hpp_xhtml"><div class="ttname"><a href="_types_8hpp.xhtml">Types.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a8f091a512915d1cb29a4ebf13dfc53ea"><div class="ttname"><a href="namespacearmnn.xhtml#a8f091a512915d1cb29a4ebf13dfc53ea">armnn::OutputTensors</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; LayerBindingId, class Tensor &gt; &gt; OutputTensors</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00341">Tensor.hpp:341</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70b"><div class="ttname"><a href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">armnn::Status</a></div><div class="ttdeci">Status</div><div class="ttdoc">enumeration </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00026">Types.hpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a674efcf6cbdb9e831d653ff0e821fb38"><div class="ttname"><a href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">armnn::IOptimizedNetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IOptimizedNetwork, void(*)(IOptimizedNetwork *network)&gt; IOptimizedNetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00600">INetwork.hpp:600</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_network_properties_xhtml_a042fb9a87ffa70730766d19505d80490"><div class="ttname"><a href="structarmnn_1_1_i_network_properties.xhtml#a042fb9a87ffa70730766d19505d80490">armnn::INetworkProperties::m_ExportEnabled</a></div><div class="ttdeci">const bool m_ExportEnabled</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00034">IRuntime.hpp:34</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_device_spec_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_device_spec.xhtml">armnn::IDeviceSpec</a></div><div class="ttdoc">Device specific knowledge to be passed to the optimizer. </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00192">Types.hpp:192</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a602ddc6408c3347ba4c1eba623003984"><div class="ttname"><a href="namespacearmnn.xhtml#a602ddc6408c3347ba4c1eba623003984">armnn::LOWEST_CAPTURE_PERIOD</a></div><div class="ttdeci">constexpr unsigned int LOWEST_CAPTURE_PERIOD</div><div class="ttdoc">The lowest performance data capture interval we support is 10 miliseconds. </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00021">Types.hpp:21</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a707090747256af276c389e0cf1cb0a9aab571ef5b2664270d25bea4f4b61ffe68"><div class="ttname"><a href="namespacearmnn.xhtml#a707090747256af276c389e0cf1cb0a9aab571ef5b2664270d25bea4f4b61ffe68">armnn::TuningLevel::Rapid</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a2d3a708a26ac6d77bf8f15506e89a25a"><div class="ttname"><a href="namespacearmnn.xhtml#a2d3a708a26ac6d77bf8f15506e89a25a">armnn::IGpuAccTunedParametersPtr</a></div><div class="ttdeci">std::shared_ptr&lt; IGpuAccTunedParameters &gt; IGpuAccTunedParametersPtr</div><div class="ttdoc">The following API is replaced by the backend options API. </div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00177">IRuntime.hpp:177</a></div></div>
<div class="ttc" id="_i_network_8hpp_xhtml"><div class="ttname"><a href="_i_network_8hpp.xhtml">INetwork.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00042">IRuntime.hpp:42</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_network_properties_xhtml_ac45bc38ba4b9616dc9b3bf5f91eb2655"><div class="ttname"><a href="structarmnn_1_1_i_network_properties.xhtml#ac45bc38ba4b9616dc9b3bf5f91eb2655">armnn::INetworkProperties::INetworkProperties</a></div><div class="ttdeci">INetworkProperties(bool importEnabled=false, bool exportEnabled=false)</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00029">IRuntime.hpp:29</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_ae43cf4b5df0068ee6a9151c98947248b"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#ae43cf4b5df0068ee6a9151c98947248b">armnn::IRuntime::CreationOptions::m_DynamicBackendsPath</a></div><div class="ttdeci">std::string m_DynamicBackendsPath</div><div class="ttdoc">Setting this value will override the paths set by the DYNAMIC_BACKEND_PATHS compiler directive Only a...</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00059">IRuntime.hpp:59</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a707090747256af276c389e0cf1cb0a9aafaf34f09ea1e93bfbf591e19dc0dfb9f"><div class="ttname"><a href="namespacearmnn.xhtml#a707090747256af276c389e0cf1cb0a9aafaf34f09ea1e93bfbf591e19dc0dfb9f">armnn::TuningLevel::Exhaustive</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_a2fe8c3eadf4f4f9c0c664a24a2a298f9"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a2fe8c3eadf4f4f9c0c664a24a2a298f9">armnn::IRuntime::CreationOptions::m_EnableGpuProfiling</a></div><div class="ttdeci">bool m_EnableGpuProfiling</div><div class="ttdoc">Setting this flag will allow the user to obtain GPU profiling information from the runtime...</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00055">IRuntime.hpp:55</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_gpu_acc_tuned_parameters_xhtml_a42b98f24092313b6a7673b54a3a84aa4"><div class="ttname"><a href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml#a42b98f24092313b6a7673b54a3a84aa4">armnn::IGpuAccTunedParameters::~IGpuAccTunedParameters</a></div><div class="ttdeci">virtual ~IGpuAccTunedParameters()</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00222">IRuntime.hpp:222</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_gpu_acc_tuned_parameters_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml">armnn::IGpuAccTunedParameters</a></div><div class="ttdoc">Manages a set of GpuAcc parameters which have been tuned for maximum performance. ...</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00190">IRuntime.hpp:190</a></div></div>
<div class="ttc" id="_i_local_packet_handler_8hpp_xhtml"><div class="ttname"><a href="_i_local_packet_handler_8hpp.xhtml">ILocalPacketHandler.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a707090747256af276c389e0cf1cb0a9aa960b44c579bc2f6818d2daaf9e4c16f0"><div class="ttname"><a href="namespacearmnn.xhtml#a707090747256af276c389e0cf1cb0a9aa960b44c579bc2f6818d2daaf9e4c16f0">armnn::TuningLevel::Normal</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a2239347f38747f993c324bdd8b1eb146"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a2239347f38747f993c324bdd8b1eb146">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_CapturePeriod</a></div><div class="ttdeci">uint32_t m_CapturePeriod</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00079">IRuntime.hpp:79</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a5b304d775657afbf1fb724af57add374"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a5b304d775657afbf1fb724af57add374">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_TimelineEnabled</a></div><div class="ttdeci">bool m_TimelineEnabled</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00075">IRuntime.hpp:75</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_a899860966ff7a5d7901e5b33bcad88fd"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a899860966ff7a5d7901e5b33bcad88fd">armnn::IRuntime::CreationOptions::CreationOptions</a></div><div class="ttdeci">CreationOptions()</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00044">IRuntime.hpp:44</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_a30412a91cadff138686eaeb12f5357cc"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">armnn::IRuntime::CreationOptions::m_ProfilingOptions</a></div><div class="ttdeci">ExternalProfilingOptions m_ProfilingOptions</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00083">IRuntime.hpp:83</a></div></div>
<div class="ttc" id="_i_profiler_8hpp_xhtml"><div class="ttname"><a href="_i_profiler_8hpp.xhtml">IProfiler.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae52296dff1f4879854f320d59f92574e"><div class="ttname"><a href="namespacearmnn.xhtml#ae52296dff1f4879854f320d59f92574e">armnn::GetInputTensorInfo</a></div><div class="ttdeci">TensorInfo GetInputTensorInfo(const Network *network)</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_test_8cpp_source.xhtml#l00336">QuantizerTest.cpp:336</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_aeec9a6408083ab1b6bf7fa3e566ebe46"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aeec9a6408083ab1b6bf7fa3e566ebe46">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_FileFormat</a></div><div class="ttdeci">std::string m_FileFormat</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00080">IRuntime.hpp:80</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_network_properties_xhtml_a043b374620881808982d513014269742"><div class="ttname"><a href="structarmnn_1_1_i_network_properties.xhtml#a043b374620881808982d513014269742">armnn::INetworkProperties::~INetworkProperties</a></div><div class="ttdeci">virtual ~INetworkProperties()</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00036">IRuntime.hpp:36</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_2b72cc348e06937955e62ebdd8a13436.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_i_runtime_8hpp.xhtml">IRuntime.hpp</a></li>
    <li class="footer">Generated on Wed Nov 25 2020 09:59:10 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
