<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/cl/test/ClCreateWorkloadTests.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_create_workload_tests_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClCreateWorkloadTests.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_cl_context_control_fixture_8hpp_source.xhtml">ClContextControlFixture.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_cl_workload_factory_helper_8hpp_source.xhtml">ClWorkloadFactoryHelper.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="_assert_8hpp_source.xhtml">armnn/utility/Assert.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_ignore_unused_8hpp_source.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_polymorphic_downcast_8hpp_source.xhtml">armnn/utility/PolymorphicDowncast.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_mem_copy_workload_8hpp_source.xhtml">backendsCommon/MemCopyWorkload.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_create_workload_cl_neon_8hpp_source.xhtml">aclCommon/test/CreateWorkloadClNeon.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_arm_compute_tensor_utils_8hpp_source.xhtml">aclCommon/ArmComputeTensorUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_tensor_handle_8hpp_source.xhtml">cl/ClTensorHandle.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_workload_factory_8hpp_source.xhtml">cl/ClWorkloadFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_workloads_8hpp_source.xhtml">cl/workloads/ClWorkloads.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_workload_utils_8hpp_source.xhtml">cl/workloads/ClWorkloadUtils.hpp</a>&gt;</code><br />
</div>
<p><a href="_cl_create_workload_tests_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a6355f6187af6b3d95c55b85ac79a732e"><td class="memItemLeft" align="right" valign="top">boost::test_tools::predicate_result&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a6355f6187af6b3d95c55b85ac79a732e">CompareIClTensorHandleShape</a> (<a class="el" href="classarmnn_1_1_i_cl_tensor_handle.xhtml">IClTensorHandle</a> *tensorHandle, std::initializer_list&lt; unsigned int &gt; expectedDimensions)</td></tr>
<tr class="separator:a6355f6187af6b3d95c55b85ac79a732e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7906dccbc8d08250fd4d7a79d4d9c722"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a7906dccbc8d08250fd4d7a79d4d9c722">BOOST_AUTO_TEST_CASE</a> (CreateActivationFloatWorkload)</td></tr>
<tr class="separator:a7906dccbc8d08250fd4d7a79d4d9c722"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0821cd85c88deea1e8c829b66b71d13"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ac0821cd85c88deea1e8c829b66b71d13">BOOST_AUTO_TEST_CASE</a> (CreateActivationFloat16Workload)</td></tr>
<tr class="separator:ac0821cd85c88deea1e8c829b66b71d13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91343c247a116b44c01af985c72b1e4d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a91343c247a116b44c01af985c72b1e4d">BOOST_AUTO_TEST_CASE</a> (CreateAdditionFloatWorkload)</td></tr>
<tr class="separator:a91343c247a116b44c01af985c72b1e4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b08c46c01fef78120206b8fc825f9be"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a3b08c46c01fef78120206b8fc825f9be">BOOST_AUTO_TEST_CASE</a> (CreateAdditionFloat16Workload)</td></tr>
<tr class="separator:a3b08c46c01fef78120206b8fc825f9be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18112ff3922073508feb3c25602eace2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a18112ff3922073508feb3c25602eace2">BOOST_AUTO_TEST_CASE</a> (CreateSubtractionFloatWorkload)</td></tr>
<tr class="separator:a18112ff3922073508feb3c25602eace2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f8370f733e76f8b7de20d2152be1bfd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a5f8370f733e76f8b7de20d2152be1bfd">BOOST_AUTO_TEST_CASE</a> (CreateSubtractionFloat16Workload)</td></tr>
<tr class="separator:a5f8370f733e76f8b7de20d2152be1bfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82c98a04bbc6143dc77a73eda9fe0a9d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a82c98a04bbc6143dc77a73eda9fe0a9d">BOOST_AUTO_TEST_CASE</a> (CreateMultiplicationFloatWorkloadTest)</td></tr>
<tr class="separator:a82c98a04bbc6143dc77a73eda9fe0a9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a05119050b8f68fda67b01d34cc220a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a2a05119050b8f68fda67b01d34cc220a">BOOST_AUTO_TEST_CASE</a> (CreateMultiplicationFloat16WorkloadTest)</td></tr>
<tr class="separator:a2a05119050b8f68fda67b01d34cc220a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a494c3788535c8b0f026fa65bfdb07caa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a494c3788535c8b0f026fa65bfdb07caa">BOOST_AUTO_TEST_CASE</a> (CreateMultiplicationUint8WorkloadTest)</td></tr>
<tr class="separator:a494c3788535c8b0f026fa65bfdb07caa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c06371a0bca0be0ef80ed2154ff8e34"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a0c06371a0bca0be0ef80ed2154ff8e34">BOOST_AUTO_TEST_CASE</a> (CreateDivisionFloatWorkloadTest)</td></tr>
<tr class="separator:a0c06371a0bca0be0ef80ed2154ff8e34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a249e970fe04687638331a2fd8fa414d7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a249e970fe04687638331a2fd8fa414d7">BOOST_AUTO_TEST_CASE</a> (CreateDivisionFloat16WorkloadTest)</td></tr>
<tr class="separator:a249e970fe04687638331a2fd8fa414d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a683d53553e42dcf66fe2ea86ce3d623e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a683d53553e42dcf66fe2ea86ce3d623e">BOOST_AUTO_TEST_CASE</a> (CreateRsqrtFloat32WorkloadTest)</td></tr>
<tr class="separator:a683d53553e42dcf66fe2ea86ce3d623e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4e714990000cacf540f2f1da8220120"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ae4e714990000cacf540f2f1da8220120">BOOST_AUTO_TEST_CASE</a> (CreateBatchNormalizationFloatNchwWorkload)</td></tr>
<tr class="separator:ae4e714990000cacf540f2f1da8220120"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accc9f6ad24a88ccf9e8831bdf054b186"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#accc9f6ad24a88ccf9e8831bdf054b186">BOOST_AUTO_TEST_CASE</a> (CreateBatchNormalizationFloat16NchwWorkload)</td></tr>
<tr class="separator:accc9f6ad24a88ccf9e8831bdf054b186"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16f59a17052dcf58c1e71a70e5aac96f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a16f59a17052dcf58c1e71a70e5aac96f">BOOST_AUTO_TEST_CASE</a> (CreateBatchNormalizationFloatNhwcWorkload)</td></tr>
<tr class="separator:a16f59a17052dcf58c1e71a70e5aac96f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a839bb0bcdacf08446bb91ab31e3f15c3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a839bb0bcdacf08446bb91ab31e3f15c3">BOOST_AUTO_TEST_CASE</a> (CreateBatchNormalizationNhwcFloat16NhwcWorkload)</td></tr>
<tr class="separator:a839bb0bcdacf08446bb91ab31e3f15c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42cda8db468a1f3422bb56648dce81d9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a42cda8db468a1f3422bb56648dce81d9">BOOST_AUTO_TEST_CASE</a> (CreateConvertFp16ToFp32Workload)</td></tr>
<tr class="separator:a42cda8db468a1f3422bb56648dce81d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a343c41dca16808e3e6d78a3215f81ddc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a343c41dca16808e3e6d78a3215f81ddc">BOOST_AUTO_TEST_CASE</a> (CreateConvertFp32ToFp16Workload)</td></tr>
<tr class="separator:a343c41dca16808e3e6d78a3215f81ddc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a2458d4f6ff9103299e72433245db5b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a8a2458d4f6ff9103299e72433245db5b">BOOST_AUTO_TEST_CASE</a> (CreateConvolution2dFloatNchwWorkload)</td></tr>
<tr class="separator:a8a2458d4f6ff9103299e72433245db5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1738342e20abb6bebf8766a796424865"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a1738342e20abb6bebf8766a796424865">BOOST_AUTO_TEST_CASE</a> (CreateConvolution2dFloatNhwcWorkload)</td></tr>
<tr class="separator:a1738342e20abb6bebf8766a796424865"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d7eb8b3fb06687c2c24311ee2046326"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a3d7eb8b3fb06687c2c24311ee2046326">BOOST_AUTO_TEST_CASE</a> (CreateConvolution2dFloat16NchwWorkload)</td></tr>
<tr class="separator:a3d7eb8b3fb06687c2c24311ee2046326"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27f53421f1c972548d1f498ae050612f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a27f53421f1c972548d1f498ae050612f">BOOST_AUTO_TEST_CASE</a> (CreateConvolution2dFloat16NhwcWorkload)</td></tr>
<tr class="separator:a27f53421f1c972548d1f498ae050612f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad04c259a5e036c490fa5db7f245cf341"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ad04c259a5e036c490fa5db7f245cf341">BOOST_AUTO_TEST_CASE</a> (CreateConvolution2dFastMathEnabledWorkload)</td></tr>
<tr class="separator:ad04c259a5e036c490fa5db7f245cf341"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac96201c573891d4b179bf38af48a5fe5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ac96201c573891d4b179bf38af48a5fe5">BOOST_AUTO_TEST_CASE</a> (CreateDepthwiseConvolutionFloat32NhwcWorkload)</td></tr>
<tr class="separator:ac96201c573891d4b179bf38af48a5fe5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8bc0651cf474eba480143e1582535df"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#aa8bc0651cf474eba480143e1582535df">BOOST_AUTO_TEST_CASE</a> (CreateDirectConvolution2dFloatWorkload)</td></tr>
<tr class="separator:aa8bc0651cf474eba480143e1582535df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac390f3b99338a7f8fc89d966f9c12372"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ac390f3b99338a7f8fc89d966f9c12372">BOOST_AUTO_TEST_CASE</a> (CreateDirectConvolution2dFloat16Workload)</td></tr>
<tr class="separator:ac390f3b99338a7f8fc89d966f9c12372"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a40f27954eff6088526f5c9f91104fe"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a7a40f27954eff6088526f5c9f91104fe">BOOST_AUTO_TEST_CASE</a> (CreateDirectConvolution2dUint8Workload)</td></tr>
<tr class="separator:a7a40f27954eff6088526f5c9f91104fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6de57fe77ebce6f21c43b05f2a72f408"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a6de57fe77ebce6f21c43b05f2a72f408">BOOST_AUTO_TEST_CASE</a> (CreateFullyConnectedFloatWorkloadTest)</td></tr>
<tr class="separator:a6de57fe77ebce6f21c43b05f2a72f408"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fbf5f0fc078aec0653966e04c02b7c5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a4fbf5f0fc078aec0653966e04c02b7c5">BOOST_AUTO_TEST_CASE</a> (CreateFullyConnectedFloat16WorkloadTest)</td></tr>
<tr class="separator:a4fbf5f0fc078aec0653966e04c02b7c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad20aa0961362720f87ce4900305d29e1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ad20aa0961362720f87ce4900305d29e1">BOOST_AUTO_TEST_CASE</a> (CreateNormalizationFloat32NchwWorkload)</td></tr>
<tr class="separator:ad20aa0961362720f87ce4900305d29e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac38e4735e1da44f60e980124712372a8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ac38e4735e1da44f60e980124712372a8">BOOST_AUTO_TEST_CASE</a> (CreateNormalizationFloat16NchwWorkload)</td></tr>
<tr class="separator:ac38e4735e1da44f60e980124712372a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae644106a34c2df59a87550f1db76ce3c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ae644106a34c2df59a87550f1db76ce3c">BOOST_AUTO_TEST_CASE</a> (CreateNormalizationFloat32NhwcWorkload)</td></tr>
<tr class="separator:ae644106a34c2df59a87550f1db76ce3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2a04d98596b5e0580471dfe7610b3f1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ae2a04d98596b5e0580471dfe7610b3f1">BOOST_AUTO_TEST_CASE</a> (CreateNormalizationFloat16NhwcWorkload)</td></tr>
<tr class="separator:ae2a04d98596b5e0580471dfe7610b3f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af32a90a1a11f2fabc7eb0508325f99e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#af32a90a1a11f2fabc7eb0508325f99e0">BOOST_AUTO_TEST_CASE</a> (CreatePooling2dFloatNchwWorkload)</td></tr>
<tr class="separator:af32a90a1a11f2fabc7eb0508325f99e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11ff4c042447da348642135ed106597c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a11ff4c042447da348642135ed106597c">BOOST_AUTO_TEST_CASE</a> (CreatePooling2dFloatNhwcWorkload)</td></tr>
<tr class="separator:a11ff4c042447da348642135ed106597c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cded3755b3d277d7f8d2d3d695855a6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a8cded3755b3d277d7f8d2d3d695855a6">BOOST_AUTO_TEST_CASE</a> (CreatePooling2dFloat16NchwWorkload)</td></tr>
<tr class="separator:a8cded3755b3d277d7f8d2d3d695855a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac934609acb2906ca0f7a573462872aba"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ac934609acb2906ca0f7a573462872aba">BOOST_AUTO_TEST_CASE</a> (CreatePooling2dFloat16NhwcWorkload)</td></tr>
<tr class="separator:ac934609acb2906ca0f7a573462872aba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa73ba7a4ea3327d87efd4618c083b333"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#aa73ba7a4ea3327d87efd4618c083b333">BOOST_AUTO_TEST_CASE</a> (CreatePreluFloat16Workload)</td></tr>
<tr class="separator:aa73ba7a4ea3327d87efd4618c083b333"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5559e752bd51c12a4bd1b3b50fa5837"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ac5559e752bd51c12a4bd1b3b50fa5837">BOOST_AUTO_TEST_CASE</a> (CreatePreluFloatWorkload)</td></tr>
<tr class="separator:ac5559e752bd51c12a4bd1b3b50fa5837"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12d17284981e1fff8f0fc76da9293e2c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a12d17284981e1fff8f0fc76da9293e2c">BOOST_AUTO_TEST_CASE</a> (CreatePreluUint8Workload)</td></tr>
<tr class="separator:a12d17284981e1fff8f0fc76da9293e2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e917bb46b0281f715abb63b979ccb41"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a5e917bb46b0281f715abb63b979ccb41">BOOST_AUTO_TEST_CASE</a> (CreateReshapeFloatWorkload)</td></tr>
<tr class="separator:a5e917bb46b0281f715abb63b979ccb41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7ca80fe245601e4996a82bc5e067705"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ac7ca80fe245601e4996a82bc5e067705">BOOST_AUTO_TEST_CASE</a> (CreateReshapeFloat16Workload)</td></tr>
<tr class="separator:ac7ca80fe245601e4996a82bc5e067705"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4153a7dc499db9b5eddfb42976968db"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#aa4153a7dc499db9b5eddfb42976968db">BOOST_AUTO_TEST_CASE</a> (CreateReshapeUint8Workload)</td></tr>
<tr class="separator:aa4153a7dc499db9b5eddfb42976968db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a946fa4756dec94d55dd4a214e1a1403d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a946fa4756dec94d55dd4a214e1a1403d">BOOST_AUTO_TEST_CASE</a> (CreateSoftmaxFloat32WorkloadTest)</td></tr>
<tr class="separator:a946fa4756dec94d55dd4a214e1a1403d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54039376034c970df44d7f51703ec4e4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a54039376034c970df44d7f51703ec4e4">BOOST_AUTO_TEST_CASE</a> (CreateSoftmaxFloat16WorkloadTest)</td></tr>
<tr class="separator:a54039376034c970df44d7f51703ec4e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefd296f4bea755c458e645207441a3d0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#aefd296f4bea755c458e645207441a3d0">BOOST_AUTO_TEST_CASE</a> (CreateSoftmaxQAsymmU8Workload)</td></tr>
<tr class="separator:aefd296f4bea755c458e645207441a3d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17b4b33a309ab1aaf6a800bcbffe914c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a17b4b33a309ab1aaf6a800bcbffe914c">BOOST_AUTO_TEST_CASE</a> (CreateSoftmaxQAsymmS8Workload)</td></tr>
<tr class="separator:a17b4b33a309ab1aaf6a800bcbffe914c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3554a4d6ef7bd581c3b8ab0e07f7bd60"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a3554a4d6ef7bd581c3b8ab0e07f7bd60">BOOST_AUTO_TEST_CASE</a> (CreateSplitterFloatWorkload)</td></tr>
<tr class="separator:a3554a4d6ef7bd581c3b8ab0e07f7bd60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a856e926d6587c6025a56faa2ae276c03"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a856e926d6587c6025a56faa2ae276c03">BOOST_AUTO_TEST_CASE</a> (CreateSplitterFloat16Workload)</td></tr>
<tr class="separator:a856e926d6587c6025a56faa2ae276c03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50aa757aa4a97a25b35284809c557609"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a50aa757aa4a97a25b35284809c557609">BOOST_AUTO_TEST_CASE</a> (CreateSplitterConcatFloatWorkload)</td></tr>
<tr class="separator:a50aa757aa4a97a25b35284809c557609"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54e94a9adb7a0cc1a9cf6e168fd0754a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a54e94a9adb7a0cc1a9cf6e168fd0754a">BOOST_AUTO_TEST_CASE</a> (CreateSplitterConcatFloat16Workload)</td></tr>
<tr class="separator:a54e94a9adb7a0cc1a9cf6e168fd0754a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1867af9782d8dc17efb28c13096f5cf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ad1867af9782d8dc17efb28c13096f5cf">BOOST_AUTO_TEST_CASE</a> (CreateSingleOutputMultipleInputs)</td></tr>
<tr class="separator:ad1867af9782d8dc17efb28c13096f5cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8efb123460d78779f2adc478907b81f5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a8efb123460d78779f2adc478907b81f5">BOOST_AUTO_TEST_CASE</a> (CreateL2NormalizationFloatNchwWorkload)</td></tr>
<tr class="separator:a8efb123460d78779f2adc478907b81f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a910eb90bb742d08643e1386ec07dba0a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a910eb90bb742d08643e1386ec07dba0a">BOOST_AUTO_TEST_CASE</a> (CreateL2NormalizationFloatNhwcWorkload)</td></tr>
<tr class="separator:a910eb90bb742d08643e1386ec07dba0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08eba80387993983d420dc5b3af258e3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a08eba80387993983d420dc5b3af258e3">BOOST_AUTO_TEST_CASE</a> (CreateL2NormalizationFloat16NchwWorkload)</td></tr>
<tr class="separator:a08eba80387993983d420dc5b3af258e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac983b5968432e4c6fa456d565f382808"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ac983b5968432e4c6fa456d565f382808">BOOST_AUTO_TEST_CASE</a> (CreateL2NormalizationFloat16NhwcWorkload)</td></tr>
<tr class="separator:ac983b5968432e4c6fa456d565f382808"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f18267af5c3aa60239480c336516fcf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a2f18267af5c3aa60239480c336516fcf">BOOST_AUTO_TEST_CASE</a> (CreateLogSoftmaxFloat32WorkloadTest)</td></tr>
<tr class="separator:a2f18267af5c3aa60239480c336516fcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15cb5d6986ed78434fa442039242b3fe"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a15cb5d6986ed78434fa442039242b3fe">BOOST_AUTO_TEST_CASE</a> (CreateLSTMWorkloadFloatWorkload)</td></tr>
<tr class="separator:a15cb5d6986ed78434fa442039242b3fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acecd2490c8eb6763c8500e3ae925c190"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#acecd2490c8eb6763c8500e3ae925c190">BOOST_AUTO_TEST_CASE</a> (CreateResizeFloat32NchwWorkload)</td></tr>
<tr class="separator:acecd2490c8eb6763c8500e3ae925c190"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b3d75b4380f3ebdf3a8f02b00e4e929"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a2b3d75b4380f3ebdf3a8f02b00e4e929">BOOST_AUTO_TEST_CASE</a> (CreateResizeFloat16NchwWorkload)</td></tr>
<tr class="separator:a2b3d75b4380f3ebdf3a8f02b00e4e929"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac932bc28ac59c177e36c62e4364735a0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ac932bc28ac59c177e36c62e4364735a0">BOOST_AUTO_TEST_CASE</a> (CreateResizeUint8NchwWorkload)</td></tr>
<tr class="separator:ac932bc28ac59c177e36c62e4364735a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6699397e086ed473ba164574ffbcd2e4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a6699397e086ed473ba164574ffbcd2e4">BOOST_AUTO_TEST_CASE</a> (CreateResizeFloat32NhwcWorkload)</td></tr>
<tr class="separator:a6699397e086ed473ba164574ffbcd2e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adda190567d36383cf30cfff21a274978"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#adda190567d36383cf30cfff21a274978">BOOST_AUTO_TEST_CASE</a> (CreateResizeFloat16NhwcWorkload)</td></tr>
<tr class="separator:adda190567d36383cf30cfff21a274978"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a455f9af7175c5499cd667cc21b6fd96b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a455f9af7175c5499cd667cc21b6fd96b">BOOST_AUTO_TEST_CASE</a> (CreateResizeUint8NhwcWorkload)</td></tr>
<tr class="separator:a455f9af7175c5499cd667cc21b6fd96b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9d0429b4a5edb81168bbbd256e6a807"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#aa9d0429b4a5edb81168bbbd256e6a807">BOOST_AUTO_TEST_CASE</a> (CreateMeanFloat32Workload)</td></tr>
<tr class="separator:aa9d0429b4a5edb81168bbbd256e6a807"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c90a48cfa87be055de22f62926b755e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a3c90a48cfa87be055de22f62926b755e">BOOST_AUTO_TEST_CASE</a> (CreateMeanFloat16Workload)</td></tr>
<tr class="separator:a3c90a48cfa87be055de22f62926b755e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71ca2a3630a71cb48f61d55db31d2fc5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a71ca2a3630a71cb48f61d55db31d2fc5">BOOST_AUTO_TEST_CASE</a> (CreateMeanUint8Workload)</td></tr>
<tr class="separator:a71ca2a3630a71cb48f61d55db31d2fc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8782f9dbea0bfb27baa047d5c961ff3e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a8782f9dbea0bfb27baa047d5c961ff3e">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim0Float32Workload)</td></tr>
<tr class="separator:a8782f9dbea0bfb27baa047d5c961ff3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e908cfa4b2b0d235a7a83bb450af212"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a6e908cfa4b2b0d235a7a83bb450af212">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim1Float32Workload)</td></tr>
<tr class="separator:a6e908cfa4b2b0d235a7a83bb450af212"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15c6731388ff09e4fb01e12100138e40"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a15c6731388ff09e4fb01e12100138e40">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim3Float32Workload)</td></tr>
<tr class="separator:a15c6731388ff09e4fb01e12100138e40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4f6f715f63bf06d9bb87a21e77f2129"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ab4f6f715f63bf06d9bb87a21e77f2129">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim0Uint8Workload)</td></tr>
<tr class="separator:ab4f6f715f63bf06d9bb87a21e77f2129"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad76e3bac3ab907f6ebf516ca8f40ad49"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ad76e3bac3ab907f6ebf516ca8f40ad49">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim1Uint8Workload)</td></tr>
<tr class="separator:ad76e3bac3ab907f6ebf516ca8f40ad49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41bdcd447af6e0fe880fd6c746830468"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a41bdcd447af6e0fe880fd6c746830468">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim3Uint8Workload)</td></tr>
<tr class="separator:a41bdcd447af6e0fe880fd6c746830468"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c4700174743960fe55fea9802ca7943"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a1c4700174743960fe55fea9802ca7943">BOOST_AUTO_TEST_CASE</a> (CreateSpaceToDepthFloat32Workload)</td></tr>
<tr class="separator:a1c4700174743960fe55fea9802ca7943"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59f3a522fe899842007639e90ced8ef4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a59f3a522fe899842007639e90ced8ef4">BOOST_AUTO_TEST_CASE</a> (CreateSpaceToDepthFloat16Workload)</td></tr>
<tr class="separator:a59f3a522fe899842007639e90ced8ef4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8675faeba30ecf6ea82ed14e7e03e5ab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a8675faeba30ecf6ea82ed14e7e03e5ab">BOOST_AUTO_TEST_CASE</a> (CreateSpaceToDepthQAsymm8Workload)</td></tr>
<tr class="separator:a8675faeba30ecf6ea82ed14e7e03e5ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43e4abafcf0700a7531d8dc7f27d7eb6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a43e4abafcf0700a7531d8dc7f27d7eb6">BOOST_AUTO_TEST_CASE</a> (CreateSpaceToDepthQSymm16Workload)</td></tr>
<tr class="separator:a43e4abafcf0700a7531d8dc7f27d7eb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72d6262ab8544dbfa7cfc22910e3011c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a72d6262ab8544dbfa7cfc22910e3011c">BOOST_AUTO_TEST_CASE</a> (CreateStackFloat32Workload)</td></tr>
<tr class="separator:a72d6262ab8544dbfa7cfc22910e3011c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0649f45ba567b07c038f5f6afd6d393"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#ab0649f45ba567b07c038f5f6afd6d393">BOOST_AUTO_TEST_CASE</a> (CreateStackFloat16Workload)</td></tr>
<tr class="separator:ab0649f45ba567b07c038f5f6afd6d393"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a966e80d9fbe654c47b44265d982d3c33"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a966e80d9fbe654c47b44265d982d3c33">BOOST_AUTO_TEST_CASE</a> (CreateStackUint8Workload)</td></tr>
<tr class="separator:a966e80d9fbe654c47b44265d982d3c33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bfad4da743703b05cfc0a4691759543"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#a7bfad4da743703b05cfc0a4691759543">BOOST_AUTO_TEST_CASE</a> (CreateQLstmWorkloadTest)</td></tr>
<tr class="separator:a7bfad4da743703b05cfc0a4691759543"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed3a050eccd0708a65889e9fd33a8cbd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml#aed3a050eccd0708a65889e9fd33a8cbd">BOOST_AUTO_TEST_CASE</a> (CreateQuantizedLstmWorkload)</td></tr>
<tr class="separator:aed3a050eccd0708a65889e9fd33a8cbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a7906dccbc8d08250fd4d7a79d4d9c722"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7906dccbc8d08250fd4d7a79d4d9c722">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[1/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateActivationFloatWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00727">BOOST_AUTO_TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    ClCreateActivationWorkloadTest&lt;armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac0821cd85c88deea1e8c829b66b71d13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0821cd85c88deea1e8c829b66b71d13">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[2/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateActivationFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00053">53</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    ClCreateActivationWorkloadTest&lt;armnn::DataType::Float16&gt;();</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a91343c247a116b44c01af985c72b1e4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91343c247a116b44c01af985c72b1e4d">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[3/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateAdditionFloatWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00080">80</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    ClCreateElementwiseWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_addition_workload.xhtml">ClAdditionWorkload</a>,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                    <a class="code" href="structarmnn_1_1_addition_queue_descriptor.xhtml">AdditionQueueDescriptor</a>,</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                    <a class="code" href="classarmnn_1_1_addition_layer.xhtml">AdditionLayer</a>,</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;();</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_cl_addition_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_addition_workload.xhtml">armnn::ClAdditionWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_addition_workload_8hpp_source.xhtml#l00015">ClAdditionWorkload.hpp:15</a></div></div>
<div class="ttc" id="structarmnn_1_1_addition_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_addition_queue_descriptor.xhtml">armnn::AdditionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00240">WorkloadData.hpp:240</a></div></div>
<div class="ttc" id="classarmnn_1_1_addition_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_addition_layer.xhtml">armnn::AdditionLayer</a></div><div class="ttdoc">This layer represents an addition operation. </div><div class="ttdef"><b>Definition:</b> <a href="_addition_layer_8hpp_source.xhtml#l00013">AdditionLayer.hpp:13</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3b08c46c01fef78120206b8fc825f9be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b08c46c01fef78120206b8fc825f9be">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[4/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateAdditionFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    ClCreateElementwiseWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_addition_workload.xhtml">ClAdditionWorkload</a>,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                    <a class="code" href="structarmnn_1_1_addition_queue_descriptor.xhtml">AdditionQueueDescriptor</a>,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                    <a class="code" href="classarmnn_1_1_addition_layer.xhtml">AdditionLayer</a>,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>&gt;();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_cl_addition_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_addition_workload.xhtml">armnn::ClAdditionWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_addition_workload_8hpp_source.xhtml#l00015">ClAdditionWorkload.hpp:15</a></div></div>
<div class="ttc" id="structarmnn_1_1_addition_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_addition_queue_descriptor.xhtml">armnn::AdditionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00240">WorkloadData.hpp:240</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="classarmnn_1_1_addition_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_addition_layer.xhtml">armnn::AdditionLayer</a></div><div class="ttdoc">This layer represents an addition operation. </div><div class="ttdef"><b>Definition:</b> <a href="_addition_layer_8hpp_source.xhtml#l00013">AdditionLayer.hpp:13</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a18112ff3922073508feb3c25602eace2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18112ff3922073508feb3c25602eace2">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[5/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSubtractionFloatWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    ClCreateElementwiseWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_subtraction_workload.xhtml">ClSubtractionWorkload</a>,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                    <a class="code" href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">SubtractionQueueDescriptor</a>,</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                    <a class="code" href="classarmnn_1_1_subtraction_layer.xhtml">SubtractionLayer</a>,</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_subtraction_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">armnn::SubtractionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00258">WorkloadData.hpp:258</a></div></div>
<div class="ttc" id="classarmnn_1_1_subtraction_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_subtraction_layer.xhtml">armnn::SubtractionLayer</a></div><div class="ttdoc">This layer represents a subtraction operation. </div><div class="ttdef"><b>Definition:</b> <a href="_subtraction_layer_8hpp_source.xhtml#l00014">SubtractionLayer.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_subtraction_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_subtraction_workload.xhtml">armnn::ClSubtractionWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_subtraction_workload_8hpp_source.xhtml#l00015">ClSubtractionWorkload.hpp:15</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5f8370f733e76f8b7de20d2152be1bfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f8370f733e76f8b7de20d2152be1bfd">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[6/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSubtractionFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00104">104</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    ClCreateElementwiseWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_subtraction_workload.xhtml">ClSubtractionWorkload</a>,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                    <a class="code" href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">SubtractionQueueDescriptor</a>,</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                                    <a class="code" href="classarmnn_1_1_subtraction_layer.xhtml">SubtractionLayer</a>,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>&gt;();</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_subtraction_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">armnn::SubtractionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00258">WorkloadData.hpp:258</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="classarmnn_1_1_subtraction_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_subtraction_layer.xhtml">armnn::SubtractionLayer</a></div><div class="ttdoc">This layer represents a subtraction operation. </div><div class="ttdef"><b>Definition:</b> <a href="_subtraction_layer_8hpp_source.xhtml#l00014">SubtractionLayer.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_subtraction_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_subtraction_workload.xhtml">armnn::ClSubtractionWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_subtraction_workload_8hpp_source.xhtml#l00015">ClSubtractionWorkload.hpp:15</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a82c98a04bbc6143dc77a73eda9fe0a9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a82c98a04bbc6143dc77a73eda9fe0a9d">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[7/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateMultiplicationFloatWorkloadTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00112">112</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    ClCreateElementwiseWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_multiplication_workload.xhtml">ClMultiplicationWorkload</a>,</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                    <a class="code" href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">MultiplicationQueueDescriptor</a>,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                    <a class="code" href="classarmnn_1_1_multiplication_layer.xhtml">MultiplicationLayer</a>,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;();</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_multiplication_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">armnn::MultiplicationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00246">WorkloadData.hpp:246</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_multiplication_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_multiplication_workload.xhtml">armnn::ClMultiplicationWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_multiplication_workload_8hpp_source.xhtml#l00020">ClMultiplicationWorkload.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="classarmnn_1_1_multiplication_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_multiplication_layer.xhtml">armnn::MultiplicationLayer</a></div><div class="ttdoc">This layer represents a multiplication operation. </div><div class="ttdef"><b>Definition:</b> <a href="_multiplication_layer_8hpp_source.xhtml#l00014">MultiplicationLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2a05119050b8f68fda67b01d34cc220a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a05119050b8f68fda67b01d34cc220a">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[8/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateMultiplicationFloat16WorkloadTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00120">120</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;{</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    ClCreateElementwiseWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_multiplication_workload.xhtml">ClMultiplicationWorkload</a>,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                                    <a class="code" href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">MultiplicationQueueDescriptor</a>,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                    <a class="code" href="classarmnn_1_1_multiplication_layer.xhtml">MultiplicationLayer</a>,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>&gt;();</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_multiplication_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">armnn::MultiplicationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00246">WorkloadData.hpp:246</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_multiplication_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_multiplication_workload.xhtml">armnn::ClMultiplicationWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_multiplication_workload_8hpp_source.xhtml#l00020">ClMultiplicationWorkload.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_multiplication_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_multiplication_layer.xhtml">armnn::MultiplicationLayer</a></div><div class="ttdoc">This layer represents a multiplication operation. </div><div class="ttdef"><b>Definition:</b> <a href="_multiplication_layer_8hpp_source.xhtml#l00014">MultiplicationLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a494c3788535c8b0f026fa65bfdb07caa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a494c3788535c8b0f026fa65bfdb07caa">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[9/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateMultiplicationUint8WorkloadTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00128">128</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    ClCreateElementwiseWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_multiplication_workload.xhtml">ClMultiplicationWorkload</a>,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                    <a class="code" href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">MultiplicationQueueDescriptor</a>,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                    <a class="code" href="classarmnn_1_1_multiplication_layer.xhtml">MultiplicationLayer</a>,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>&gt;();</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_multiplication_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">armnn::MultiplicationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00246">WorkloadData.hpp:246</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_multiplication_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_multiplication_workload.xhtml">armnn::ClMultiplicationWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_multiplication_workload_8hpp_source.xhtml#l00020">ClMultiplicationWorkload.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_multiplication_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_multiplication_layer.xhtml">armnn::MultiplicationLayer</a></div><div class="ttdoc">This layer represents a multiplication operation. </div><div class="ttdef"><b>Definition:</b> <a href="_multiplication_layer_8hpp_source.xhtml#l00014">MultiplicationLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0c06371a0bca0be0ef80ed2154ff8e34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c06371a0bca0be0ef80ed2154ff8e34">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[10/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateDivisionFloatWorkloadTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00136">136</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;{</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    ClCreateElementwiseWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_division_float_workload.xhtml">ClDivisionFloatWorkload</a>,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                                    <a class="code" href="structarmnn_1_1_division_queue_descriptor.xhtml">DivisionQueueDescriptor</a>,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                                    <a class="code" href="classarmnn_1_1_division_layer.xhtml">DivisionLayer</a>,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;();</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_division_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_division_queue_descriptor.xhtml">armnn::DivisionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00252">WorkloadData.hpp:252</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_division_float_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_division_float_workload.xhtml">armnn::ClDivisionFloatWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_division_float_workload_8hpp_source.xhtml#l00020">ClDivisionFloatWorkload.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_division_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_division_layer.xhtml">armnn::DivisionLayer</a></div><div class="ttdoc">This layer represents a division operation. </div><div class="ttdef"><b>Definition:</b> <a href="_division_layer_8hpp_source.xhtml#l00014">DivisionLayer.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a249e970fe04687638331a2fd8fa414d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a249e970fe04687638331a2fd8fa414d7">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[11/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateDivisionFloat16WorkloadTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00144">144</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    ClCreateElementwiseWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_division_float_workload.xhtml">ClDivisionFloatWorkload</a>,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                    <a class="code" href="structarmnn_1_1_division_queue_descriptor.xhtml">DivisionQueueDescriptor</a>,</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                                    <a class="code" href="classarmnn_1_1_division_layer.xhtml">DivisionLayer</a>,</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>&gt;();</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_division_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_division_queue_descriptor.xhtml">armnn::DivisionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00252">WorkloadData.hpp:252</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_division_float_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_division_float_workload.xhtml">armnn::ClDivisionFloatWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_division_float_workload_8hpp_source.xhtml#l00020">ClDivisionFloatWorkload.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_division_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_division_layer.xhtml">armnn::DivisionLayer</a></div><div class="ttdoc">This layer represents a division operation. </div><div class="ttdef"><b>Definition:</b> <a href="_division_layer_8hpp_source.xhtml#l00014">DivisionLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a683d53553e42dcf66fe2ea86ce3d623e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a683d53553e42dcf66fe2ea86ce3d623e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[12/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateRsqrtFloat32WorkloadTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00172">172</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;{</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    ClCreateElementwiseUnaryWorkloadTest&lt;ClRsqrtWorkload, RsqrtQueueDescriptor, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        UnaryOperation::Rsqrt);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae4e714990000cacf540f2f1da8220120"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4e714990000cacf540f2f1da8220120">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[13/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchNormalizationFloatNchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00205">205</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;{</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    ClCreateBatchNormalizationWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_batch_normalization_float_workload.xhtml">ClBatchNormalizationFloatWorkload</a>,</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                           <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_batch_normalization_float_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_batch_normalization_float_workload.xhtml">armnn::ClBatchNormalizationFloatWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_batch_normalization_float_workload_8hpp_source.xhtml#l00025">ClBatchNormalizationFloatWorkload.hpp:25</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="accc9f6ad24a88ccf9e8831bdf054b186"></a>
<h2 class="memtitle"><span class="permalink"><a href="#accc9f6ad24a88ccf9e8831bdf054b186">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[14/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchNormalizationFloat16NchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00211">211</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;{</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    ClCreateBatchNormalizationWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_batch_normalization_float_workload.xhtml">ClBatchNormalizationFloatWorkload</a>,</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                           <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_batch_normalization_float_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_batch_normalization_float_workload.xhtml">armnn::ClBatchNormalizationFloatWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_batch_normalization_float_workload_8hpp_source.xhtml#l00025">ClBatchNormalizationFloatWorkload.hpp:25</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a16f59a17052dcf58c1e71a70e5aac96f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16f59a17052dcf58c1e71a70e5aac96f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[15/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchNormalizationFloatNhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00217">217</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;{</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    ClCreateBatchNormalizationWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_batch_normalization_float_workload.xhtml">ClBatchNormalizationFloatWorkload</a>,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                                           <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_batch_normalization_float_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_batch_normalization_float_workload.xhtml">armnn::ClBatchNormalizationFloatWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_batch_normalization_float_workload_8hpp_source.xhtml#l00025">ClBatchNormalizationFloatWorkload.hpp:25</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a839bb0bcdacf08446bb91ab31e3f15c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a839bb0bcdacf08446bb91ab31e3f15c3">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[16/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchNormalizationNhwcFloat16NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00223">223</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;{</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    ClCreateBatchNormalizationWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_batch_normalization_float_workload.xhtml">ClBatchNormalizationFloatWorkload</a>,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                           <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_batch_normalization_float_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_batch_normalization_float_workload.xhtml">armnn::ClBatchNormalizationFloatWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_batch_normalization_float_workload_8hpp_source.xhtml#l00025">ClBatchNormalizationFloatWorkload.hpp:25</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a42cda8db468a1f3422bb56648dce81d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42cda8db468a1f3422bb56648dce81d9">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[17/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConvertFp16ToFp32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00229">229</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00022">CompareIClTensorHandleShape()</a>.</p>
<div class="fragment"><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;{</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a> graph;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">ClWorkloadFactory</a> factory =</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        ClWorkloadFactoryHelper::GetFactory(ClWorkloadFactoryHelper::GetMemoryManager());</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keyword">auto</span> workload = CreateConvertFp16ToFp32WorkloadTest&lt;ClConvertFp16ToFp32Workload&gt;(factory, graph);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <a class="code" href="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor.xhtml">ConvertFp16ToFp32QueueDescriptor</a> queueDescriptor = workload-&gt;GetData();</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keyword">auto</span> inputHandle  = PolymorphicDowncast&lt;IClTensorHandle*&gt;(queueDescriptor.m_Inputs[0]);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keyword">auto</span> outputHandle = PolymorphicDowncast&lt;IClTensorHandle*&gt;(queueDescriptor.m_Outputs[0]);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    BOOST_TEST(<a class="code" href="_cl_create_workload_tests_8cpp.xhtml#a6355f6187af6b3d95c55b85ac79a732e">CompareIClTensorHandleShape</a>(inputHandle, {1, 3, 2, 3}));</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    BOOST_TEST(<a class="code" href="_cl_create_workload_tests_8cpp.xhtml#a6355f6187af6b3d95c55b85ac79a732e">CompareIClTensorHandleShape</a>(outputHandle, {1, 3, 2, 3}));</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    BOOST_TEST((inputHandle-&gt;GetTensor().info()-&gt;data_type() == arm_compute::DataType::F16));</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    BOOST_TEST((outputHandle-&gt;GetTensor().info()-&gt;data_type() == arm_compute::DataType::F32));</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8hpp_source.xhtml#l00019">ClWorkloadFactory.hpp:19</a></div></div>
<div class="ttc" id="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor.xhtml">armnn::ConvertFp16ToFp32QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00449">WorkloadData.hpp:449</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00029">Graph.hpp:29</a></div></div>
<div class="ttc" id="_cl_create_workload_tests_8cpp_xhtml_a6355f6187af6b3d95c55b85ac79a732e"><div class="ttname"><a href="_cl_create_workload_tests_8cpp.xhtml#a6355f6187af6b3d95c55b85ac79a732e">CompareIClTensorHandleShape</a></div><div class="ttdeci">boost::test_tools::predicate_result CompareIClTensorHandleShape(IClTensorHandle *tensorHandle, std::initializer_list&lt; unsigned int &gt; expectedDimensions)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_create_workload_tests_8cpp_source.xhtml#l00022">ClCreateWorkloadTests.cpp:22</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a343c41dca16808e3e6d78a3215f81ddc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a343c41dca16808e3e6d78a3215f81ddc">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[18/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConvertFp32ToFp16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00247">247</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00022">CompareIClTensorHandleShape()</a>.</p>
<div class="fragment"><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;{</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a> graph;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">ClWorkloadFactory</a> factory =</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        ClWorkloadFactoryHelper::GetFactory(ClWorkloadFactoryHelper::GetMemoryManager());</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keyword">auto</span> workload = CreateConvertFp32ToFp16WorkloadTest&lt;ClConvertFp32ToFp16Workload&gt;(factory, graph);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <a class="code" href="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor.xhtml">ConvertFp32ToFp16QueueDescriptor</a> queueDescriptor = workload-&gt;GetData();</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keyword">auto</span> inputHandle  = PolymorphicDowncast&lt;IClTensorHandle*&gt;(queueDescriptor.m_Inputs[0]);</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keyword">auto</span> outputHandle = PolymorphicDowncast&lt;IClTensorHandle*&gt;(queueDescriptor.m_Outputs[0]);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    BOOST_TEST(<a class="code" href="_cl_create_workload_tests_8cpp.xhtml#a6355f6187af6b3d95c55b85ac79a732e">CompareIClTensorHandleShape</a>(inputHandle, {1, 3, 2, 3}));</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    BOOST_TEST(<a class="code" href="_cl_create_workload_tests_8cpp.xhtml#a6355f6187af6b3d95c55b85ac79a732e">CompareIClTensorHandleShape</a>(outputHandle, {1, 3, 2, 3}));</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    BOOST_TEST((inputHandle-&gt;GetTensor().info()-&gt;data_type() == arm_compute::DataType::F32));</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    BOOST_TEST((outputHandle-&gt;GetTensor().info()-&gt;data_type() == arm_compute::DataType::F16));</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8hpp_source.xhtml#l00019">ClWorkloadFactory.hpp:19</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00029">Graph.hpp:29</a></div></div>
<div class="ttc" id="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor.xhtml">armnn::ConvertFp32ToFp16QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00454">WorkloadData.hpp:454</a></div></div>
<div class="ttc" id="_cl_create_workload_tests_8cpp_xhtml_a6355f6187af6b3d95c55b85ac79a732e"><div class="ttname"><a href="_cl_create_workload_tests_8cpp.xhtml#a6355f6187af6b3d95c55b85ac79a732e">CompareIClTensorHandleShape</a></div><div class="ttdeci">boost::test_tools::predicate_result CompareIClTensorHandleShape(IClTensorHandle *tensorHandle, std::initializer_list&lt; unsigned int &gt; expectedDimensions)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_create_workload_tests_8cpp_source.xhtml#l00022">ClCreateWorkloadTests.cpp:22</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8a2458d4f6ff9103299e72433245db5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a2458d4f6ff9103299e72433245db5b">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[19/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConvolution2dFloatNchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00289">289</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;{</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    ClConvolution2dWorkloadTest&lt;ClConvolution2dWorkload, armnn::DataType::Float32&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1738342e20abb6bebf8766a796424865"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1738342e20abb6bebf8766a796424865">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[20/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConvolution2dFloatNhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00294">294</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;{</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    ClConvolution2dWorkloadTest&lt;ClConvolution2dWorkload, armnn::DataType::Float32&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a3d7eb8b3fb06687c2c24311ee2046326"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d7eb8b3fb06687c2c24311ee2046326">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[21/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConvolution2dFloat16NchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00299">299</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;{</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    ClConvolution2dWorkloadTest&lt;ClConvolution2dWorkload, armnn::DataType::Float16&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a27f53421f1c972548d1f498ae050612f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27f53421f1c972548d1f498ae050612f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[22/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConvolution2dFloat16NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00304">304</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;{</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    ClConvolution2dWorkloadTest&lt;ClConvolution2dWorkload, armnn::DataType::Float16&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad04c259a5e036c490fa5db7f245cf341"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad04c259a5e036c490fa5db7f245cf341">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[23/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConvolution2dFastMathEnabledWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00309">309</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_assert_8hpp_source.xhtml#l00014">ARMNN_ASSERT</a>, and <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>.</p>
<div class="fragment"><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;{</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a> graph;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> = std::vector&lt;BackendOptions&gt;;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> modelOptions = {};</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <a class="code" href="structarmnn_1_1_backend_options.xhtml">BackendOptions</a> gpuAcc(<span class="stringliteral">&quot;GpuAcc&quot;</span>,</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    {</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        { <span class="stringliteral">&quot;FastMathEnabled&quot;</span>, <span class="keyword">true</span> }</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    });</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    modelOptions.push_back(gpuAcc);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">ClWorkloadFactory</a> factory =</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        ClWorkloadFactoryHelper::GetFactory(ClWorkloadFactoryHelper::GetMemoryManager(), modelOptions);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keyword">auto</span> workload =</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        CreateConvolution2dWorkloadFastMathTest&lt;ClConvolution2dWorkload, armnn::DataType::Float32&gt;(factory,</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                                                                                           graph,</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                                                                                           DataLayout::NCHW,</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                                                                                           modelOptions);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a>(workload != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keyword">auto</span> conv2dWorkload = PolymorphicDowncast&lt;ClConvolution2dWorkload*&gt;(workload.get());</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(conv2dWorkload);</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a>(conv2dWorkload != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a>(conv2dWorkload-&gt;GetConvolutionMethod() == arm_compute::ConvolutionMethod::WINOGRAD);</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8hpp_source.xhtml#l00019">ClWorkloadFactory.hpp:19</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a5b6893cda5b69359a4244c06054da18f"><div class="ttname"><a href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">armnn::ModelOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; ModelOptions</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00017">BackendOptions.hpp:17</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="_assert_8hpp_xhtml_a5698be69cbd5dfe6c28fcd9867e8cbed"><div class="ttname"><a href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a></div><div class="ttdeci">#define ARMNN_ASSERT(COND)</div><div class="ttdef"><b>Definition:</b> <a href="_assert_8hpp_source.xhtml#l00014">Assert.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00029">Graph.hpp:29</a></div></div>
<div class="ttc" id="structarmnn_1_1_backend_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a></div><div class="ttdoc">Struct for the users to pass backend specific options. </div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00020">BackendOptions.hpp:20</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac96201c573891d4b179bf38af48a5fe5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac96201c573891d4b179bf38af48a5fe5">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[24/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateDepthwiseConvolutionFloat32NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00361">361</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;{</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    ClDepthwiseConvolutionWorkloadTest&lt;ClDepthwiseConvolutionWorkload, DataType::Float32&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa8bc0651cf474eba480143e1582535df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8bc0651cf474eba480143e1582535df">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[25/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateDirectConvolution2dFloatWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00383">383</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;{</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    ClDirectConvolution2dWorkloadTest&lt;ClConvolution2dWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac390f3b99338a7f8fc89d966f9c12372"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac390f3b99338a7f8fc89d966f9c12372">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[26/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateDirectConvolution2dFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00388">388</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;{</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    ClDirectConvolution2dWorkloadTest&lt;ClConvolution2dWorkload, armnn::DataType::Float16&gt;();</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7a40f27954eff6088526f5c9f91104fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a40f27954eff6088526f5c9f91104fe">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[27/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateDirectConvolution2dUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00393">393</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;{</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    ClDirectConvolution2dWorkloadTest&lt;ClConvolution2dWorkload, armnn::DataType::QAsymmU8&gt;();</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a6de57fe77ebce6f21c43b05f2a72f408"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6de57fe77ebce6f21c43b05f2a72f408">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[28/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateFullyConnectedFloatWorkloadTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00417">417</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;{</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    ClCreateFullyConnectedWorkloadTest&lt;ClFullyConnectedWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a4fbf5f0fc078aec0653966e04c02b7c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fbf5f0fc078aec0653966e04c02b7c5">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[29/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateFullyConnectedFloat16WorkloadTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00422">422</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;{</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    ClCreateFullyConnectedWorkloadTest&lt;ClFullyConnectedWorkload, armnn::DataType::Float16&gt;();</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad20aa0961362720f87ce4900305d29e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad20aa0961362720f87ce4900305d29e1">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[30/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateNormalizationFloat32NchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00450">450</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;{</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    ClNormalizationWorkloadTest&lt;ClNormalizationFloatWorkload, armnn::DataType::Float32&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac38e4735e1da44f60e980124712372a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac38e4735e1da44f60e980124712372a8">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[31/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateNormalizationFloat16NchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00455">455</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;{</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    ClNormalizationWorkloadTest&lt;ClNormalizationFloatWorkload, armnn::DataType::Float16&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae644106a34c2df59a87550f1db76ce3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae644106a34c2df59a87550f1db76ce3c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[32/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateNormalizationFloat32NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00460">460</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;{</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    ClNormalizationWorkloadTest&lt;ClNormalizationFloatWorkload, armnn::DataType::Float32&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae2a04d98596b5e0580471dfe7610b3f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2a04d98596b5e0580471dfe7610b3f1">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[33/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateNormalizationFloat16NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00465">465</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;{</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    ClNormalizationWorkloadTest&lt;ClNormalizationFloatWorkload, armnn::DataType::Float16&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="af32a90a1a11f2fabc7eb0508325f99e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af32a90a1a11f2fabc7eb0508325f99e0">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[34/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePooling2dFloatNchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00493">493</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;{</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    ClPooling2dWorkloadTest&lt;armnn::DataType::Float32&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a11ff4c042447da348642135ed106597c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11ff4c042447da348642135ed106597c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[35/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePooling2dFloatNhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00498">498</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;{</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    ClPooling2dWorkloadTest&lt;armnn::DataType::Float32&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8cded3755b3d277d7f8d2d3d695855a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8cded3755b3d277d7f8d2d3d695855a6">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[36/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePooling2dFloat16NchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00503">503</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;{</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    ClPooling2dWorkloadTest&lt;armnn::DataType::Float16&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac934609acb2906ca0f7a573462872aba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac934609acb2906ca0f7a573462872aba">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[37/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePooling2dFloat16NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00508">508</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;{</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    ClPooling2dWorkloadTest&lt;armnn::DataType::Float16&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa73ba7a4ea3327d87efd4618c083b333"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa73ba7a4ea3327d87efd4618c083b333">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[38/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePreluFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00540">540</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;{</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    ClCreatePreluWorkloadTest({ 1, 4, 1, 2 }, { 5, 4, 3, 1 }, { 5, 4, 3, 2 }, DataType::Float16);</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac5559e752bd51c12a4bd1b3b50fa5837"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5559e752bd51c12a4bd1b3b50fa5837">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[39/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePreluFloatWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00545">545</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;{</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    ClCreatePreluWorkloadTest({ 1, 4, 1, 2 }, { 5, 4, 3, 1 }, { 5, 4, 3, 2 }, DataType::Float32);</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a12d17284981e1fff8f0fc76da9293e2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12d17284981e1fff8f0fc76da9293e2c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[40/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePreluUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00550">550</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;{</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    ClCreatePreluWorkloadTest({ 1, 4, 1, 2 }, { 5, 4, 3, 1 }, { 5, 4, 3, 2 }, DataType::QAsymmU8);</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a5e917bb46b0281f715abb63b979ccb41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e917bb46b0281f715abb63b979ccb41">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[41/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateReshapeFloatWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00573">573</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;{</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    ClCreateReshapeWorkloadTest&lt;armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac7ca80fe245601e4996a82bc5e067705"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7ca80fe245601e4996a82bc5e067705">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[42/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateReshapeFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00578">578</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;{</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    ClCreateReshapeWorkloadTest&lt;armnn::DataType::Float16&gt;();</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa4153a7dc499db9b5eddfb42976968db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4153a7dc499db9b5eddfb42976968db">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[43/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateReshapeUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00583">583</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;{</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    ClCreateReshapeWorkloadTest&lt;armnn::DataType::QAsymmU8&gt;();</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a946fa4756dec94d55dd4a214e1a1403d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a946fa4756dec94d55dd4a214e1a1403d">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[44/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSoftmaxFloat32WorkloadTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00619">619</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;{</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    ClSoftmaxWorkloadTest&lt;ClSoftmaxWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a54039376034c970df44d7f51703ec4e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54039376034c970df44d7f51703ec4e4">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[45/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSoftmaxFloat16WorkloadTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00624">624</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;{</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    ClSoftmaxWorkloadTest&lt;ClSoftmaxWorkload, armnn::DataType::Float16&gt;();</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aefd296f4bea755c458e645207441a3d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefd296f4bea755c458e645207441a3d0">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[46/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSoftmaxQAsymmU8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00629">629</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;{</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    ClSoftmaxWorkloadTest&lt;ClSoftmaxWorkload, armnn::DataType::QAsymmU8&gt;();</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a17b4b33a309ab1aaf6a800bcbffe914c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17b4b33a309ab1aaf6a800bcbffe914c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[47/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSoftmaxQAsymmS8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00634">634</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;{</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    ClSoftmaxWorkloadTest&lt;ClSoftmaxWorkload, armnn::DataType::QAsymmS8&gt;();</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a3554a4d6ef7bd581c3b8ab0e07f7bd60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3554a4d6ef7bd581c3b8ab0e07f7bd60">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[48/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSplitterFloatWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00663">663</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;{</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    ClSplitterWorkloadTest&lt;armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a856e926d6587c6025a56faa2ae276c03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a856e926d6587c6025a56faa2ae276c03">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[49/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSplitterFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00668">668</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;{</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;    ClSplitterWorkloadTest&lt;armnn::DataType::Float16&gt;();</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a50aa757aa4a97a25b35284809c557609"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50aa757aa4a97a25b35284809c557609">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[50/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSplitterConcatFloatWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00716">716</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;{</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    ClSplitterConcatTest&lt;armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a54e94a9adb7a0cc1a9cf6e168fd0754a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54e94a9adb7a0cc1a9cf6e168fd0754a">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[51/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSplitterConcatFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00721">721</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;{</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    ClSplitterConcatTest&lt;armnn::DataType::Float16&gt;();</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad1867af9782d8dc17efb28c13096f5cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1867af9782d8dc17efb28c13096f5cf">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[52/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSingleOutputMultipleInputs&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00727">727</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00048">BOOST_AUTO_TEST_CASE()</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>.</p>
<div class="fragment"><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;{</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    <span class="comment">// Test that it is possible to assign multiple (two) different layers to each of the outputs of a splitter layer.</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    <span class="comment">// We create a splitter with two outputs. That each of those outputs is used by two different activation layers.</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a> graph;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">ClWorkloadFactory</a> factory =</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        ClWorkloadFactoryHelper::GetFactory(ClWorkloadFactoryHelper::GetMemoryManager());</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    std::unique_ptr&lt;ClSplitterWorkload&gt; wlSplitter;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    std::unique_ptr&lt;ClActivationWorkload&gt; wlActiv0_0;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    std::unique_ptr&lt;ClActivationWorkload&gt; wlActiv0_1;</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    std::unique_ptr&lt;ClActivationWorkload&gt; wlActiv1_0;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    std::unique_ptr&lt;ClActivationWorkload&gt; wlActiv1_1;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    CreateSplitterMultipleInputsOneOutputWorkloadTest&lt;<a class="code" href="classarmnn_1_1_cl_splitter_workload.xhtml">ClSplitterWorkload</a>,</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;        <a class="code" href="classarmnn_1_1_cl_activation_workload.xhtml">ClActivationWorkload</a>, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;(factory, graph, wlSplitter, wlActiv0_0, wlActiv0_1,</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                                                               wlActiv1_0, wlActiv1_1);</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    <span class="comment">//Checks that the index of inputs/outputs matches what we declared on InputDescriptor construction.</span></div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    <a class="code" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a>* sOut0 = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a>*<span class="keyword">&gt;</span>(wlSplitter-&gt;GetData().m_Outputs[0]);</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;    <a class="code" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a>* sOut1 = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a>*<span class="keyword">&gt;</span>(wlSplitter-&gt;GetData().m_Outputs[1]);</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;    <a class="code" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a>* activ0_0Im = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a>*<span class="keyword">&gt;</span>(wlActiv0_0-&gt;GetData().m_Inputs[0]);</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    <a class="code" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a>* activ0_1Im = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a>*<span class="keyword">&gt;</span>(wlActiv0_1-&gt;GetData().m_Inputs[0]);</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    <a class="code" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a>* activ1_0Im = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a>*<span class="keyword">&gt;</span>(wlActiv1_0-&gt;GetData().m_Inputs[0]);</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    <a class="code" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a>* activ1_1Im = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a>*<span class="keyword">&gt;</span>(wlActiv1_1-&gt;GetData().m_Inputs[0]);</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    BOOST_TEST(sOut0);</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    BOOST_TEST(sOut1);</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    BOOST_TEST(activ0_0Im);</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    BOOST_TEST(activ0_1Im);</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    BOOST_TEST(activ1_0Im);</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    BOOST_TEST(activ1_1Im);</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    <span class="keywordtype">bool</span> validDataPointers = (sOut0 == activ0_0Im) &amp;&amp; (sOut0 == activ0_1Im) &amp;&amp;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                             (sOut1 == activ1_0Im) &amp;&amp; (sOut1 == activ1_1Im);</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;    BOOST_TEST(validDataPointers);</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8hpp_source.xhtml#l00019">ClWorkloadFactory.hpp:19</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_splitter_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_splitter_workload.xhtml">armnn::ClSplitterWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_splitter_workload_8hpp_source.xhtml#l00022">ClSplitterWorkload.hpp:22</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_activation_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_activation_workload.xhtml">armnn::ClActivationWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_activation_workload_8hpp_source.xhtml#l00018">ClActivationWorkload.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00029">Graph.hpp:29</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_sub_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">armnn::ClSubTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_tensor_handle_8hpp_source.xhtml#l00174">ClTensorHandle.hpp:174</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8efb123460d78779f2adc478907b81f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8efb123460d78779f2adc478907b81f5">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[53/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateL2NormalizationFloatNchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00806">806</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;{</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    ClL2NormalizationWorkloadTest&lt;ClL2NormalizationFloatWorkload, armnn::DataType::Float32&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a910eb90bb742d08643e1386ec07dba0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a910eb90bb742d08643e1386ec07dba0a">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[54/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateL2NormalizationFloatNhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00811">811</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;{</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;    ClL2NormalizationWorkloadTest&lt;ClL2NormalizationFloatWorkload, armnn::DataType::Float32&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a08eba80387993983d420dc5b3af258e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08eba80387993983d420dc5b3af258e3">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[55/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateL2NormalizationFloat16NchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00816">816</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;{</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;    ClL2NormalizationWorkloadTest&lt;ClL2NormalizationFloatWorkload, armnn::DataType::Float16&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac983b5968432e4c6fa456d565f382808"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac983b5968432e4c6fa456d565f382808">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[56/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateL2NormalizationFloat16NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00821">821</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;{</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    ClL2NormalizationWorkloadTest&lt;ClL2NormalizationFloatWorkload, armnn::DataType::Float16&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a2f18267af5c3aa60239480c336516fcf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f18267af5c3aa60239480c336516fcf">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[57/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateLogSoftmaxFloat32WorkloadTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00844">844</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;{</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    ClCreateLogSoftmaxWorkloadTest&lt;ClLogSoftmaxWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a15cb5d6986ed78434fa442039242b3fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15cb5d6986ed78434fa442039242b3fe">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[58/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateLSTMWorkloadFloatWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00865">865</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;{</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;    ClCreateLstmWorkloadTest&lt;ClLstmFloatWorkload&gt;();</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="acecd2490c8eb6763c8500e3ae925c190"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acecd2490c8eb6763c8500e3ae925c190">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[59/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateResizeFloat32NchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00897">897</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;{</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;    ClResizeWorkloadTest&lt;ClResizeWorkload, armnn::DataType::Float32&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a2b3d75b4380f3ebdf3a8f02b00e4e929"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b3d75b4380f3ebdf3a8f02b00e4e929">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[60/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateResizeFloat16NchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00902">902</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;{</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;    ClResizeWorkloadTest&lt;ClResizeWorkload, armnn::DataType::Float16&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac932bc28ac59c177e36c62e4364735a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac932bc28ac59c177e36c62e4364735a0">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[61/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateResizeUint8NchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00907">907</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;{</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;    ClResizeWorkloadTest&lt;ClResizeWorkload, armnn::DataType::QAsymmU8&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a6699397e086ed473ba164574ffbcd2e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6699397e086ed473ba164574ffbcd2e4">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[62/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateResizeFloat32NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00912">912</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;{</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;    ClResizeWorkloadTest&lt;ClResizeWorkload, armnn::DataType::Float32&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="adda190567d36383cf30cfff21a274978"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adda190567d36383cf30cfff21a274978">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[63/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateResizeFloat16NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00917">917</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;{</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;    ClResizeWorkloadTest&lt;ClResizeWorkload, armnn::DataType::Float16&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a455f9af7175c5499cd667cc21b6fd96b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a455f9af7175c5499cd667cc21b6fd96b">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[64/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateResizeUint8NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00922">922</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;{</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;    ClResizeWorkloadTest&lt;ClResizeWorkload, armnn::DataType::QAsymmU8&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa9d0429b4a5edb81168bbbd256e6a807"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9d0429b4a5edb81168bbbd256e6a807">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[65/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateMeanFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00946">946</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;{</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;    ClMeanWorkloadTest&lt;ClMeanWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a3c90a48cfa87be055de22f62926b755e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c90a48cfa87be055de22f62926b755e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[66/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateMeanFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00951">951</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;{</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;    ClMeanWorkloadTest&lt;ClMeanWorkload, armnn::DataType::Float16&gt;();</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a71ca2a3630a71cb48f61d55db31d2fc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71ca2a3630a71cb48f61d55db31d2fc5">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[67/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateMeanUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00956">956</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;{</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;    ClMeanWorkloadTest&lt;ClMeanWorkload, armnn::DataType::QAsymmU8&gt;();</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8782f9dbea0bfb27baa047d5c961ff3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8782f9dbea0bfb27baa047d5c961ff3e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[68/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim0Float32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00981">981</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;{</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;    ClCreateConcatWorkloadTest&lt;ClConcatWorkload, armnn::DataType::Float32&gt;({ 4, 3, 2, 5 }, 0);</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a6e908cfa4b2b0d235a7a83bb450af212"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e908cfa4b2b0d235a7a83bb450af212">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[69/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim1Float32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00986">986</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;{</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;    ClCreateConcatWorkloadTest&lt;ClConcatWorkload, armnn::DataType::Float32&gt;({ 2, 6, 2, 5 }, 1);</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a15c6731388ff09e4fb01e12100138e40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15c6731388ff09e4fb01e12100138e40">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[70/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim3Float32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00991">991</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;{</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    ClCreateConcatWorkloadTest&lt;ClConcatWorkload, armnn::DataType::Float32&gt;({ 2, 3, 2, 10 }, 3);</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab4f6f715f63bf06d9bb87a21e77f2129"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4f6f715f63bf06d9bb87a21e77f2129">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[71/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim0Uint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00996">996</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;{</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;    ClCreateConcatWorkloadTest&lt;ClConcatWorkload, armnn::DataType::QAsymmU8&gt;({ 4, 3, 2, 5 }, 0);</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad76e3bac3ab907f6ebf516ca8f40ad49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad76e3bac3ab907f6ebf516ca8f40ad49">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[72/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim1Uint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l01001">1001</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;{</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;    ClCreateConcatWorkloadTest&lt;ClConcatWorkload, armnn::DataType::QAsymmU8&gt;({ 2, 6, 2, 5 }, 1);</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a41bdcd447af6e0fe880fd6c746830468"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41bdcd447af6e0fe880fd6c746830468">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[73/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim3Uint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l01006">1006</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;{</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;    ClCreateConcatWorkloadTest&lt;ClConcatWorkload, armnn::DataType::QAsymmU8&gt;({ 2, 3, 2, 10 }, 3);</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1c4700174743960fe55fea9802ca7943"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c4700174743960fe55fea9802ca7943">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[74/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSpaceToDepthFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l01028">1028</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;{</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;    ClSpaceToDepthWorkloadTest&lt;ClSpaceToDepthWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a59f3a522fe899842007639e90ced8ef4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59f3a522fe899842007639e90ced8ef4">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[75/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSpaceToDepthFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l01033">1033</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;{</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;    ClSpaceToDepthWorkloadTest&lt;ClSpaceToDepthWorkload, armnn::DataType::Float16&gt;();</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8675faeba30ecf6ea82ed14e7e03e5ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8675faeba30ecf6ea82ed14e7e03e5ab">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[76/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSpaceToDepthQAsymm8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l01038">1038</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;{</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;    ClSpaceToDepthWorkloadTest&lt;ClSpaceToDepthWorkload, armnn::DataType::QAsymmU8&gt;();</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a43e4abafcf0700a7531d8dc7f27d7eb6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43e4abafcf0700a7531d8dc7f27d7eb6">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[77/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSpaceToDepthQSymm16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l01043">1043</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;{</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;    ClSpaceToDepthWorkloadTest&lt;ClSpaceToDepthWorkload, armnn::DataType::QSymmS16&gt;();</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a72d6262ab8544dbfa7cfc22910e3011c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72d6262ab8544dbfa7cfc22910e3011c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[78/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateStackFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l01076">1076</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;{</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;    ClCreateStackWorkloadTest&lt;armnn::DataType::Float32&gt;({ 3, 4, 5 }, { 3, 4, 2, 5 }, 2, 2);</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab0649f45ba567b07c038f5f6afd6d393"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0649f45ba567b07c038f5f6afd6d393">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[79/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateStackFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l01081">1081</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;{</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;    ClCreateStackWorkloadTest&lt;armnn::DataType::Float16&gt;({ 3, 4, 5 }, { 3, 4, 2, 5 }, 2, 2);</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a966e80d9fbe654c47b44265d982d3c33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a966e80d9fbe654c47b44265d982d3c33">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[80/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateStackUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l01086">1086</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;{</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;    ClCreateStackWorkloadTest&lt;armnn::DataType::QAsymmU8&gt;({ 3, 4, 5 }, { 3, 4, 2, 5 }, 2, 2);</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7bfad4da743703b05cfc0a4691759543"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bfad4da743703b05cfc0a4691759543">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[81/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateQLstmWorkloadTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l01114">1114</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;{</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;    ClCreateQLstmWorkloadTest&lt;ClQLstmWorkload&gt;();</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aed3a050eccd0708a65889e9fd33a8cbd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed3a050eccd0708a65889e9fd33a8cbd">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[82/82]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateQuantizedLstmWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l01153">1153</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END()</a>.</p>
<div class="fragment"><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;{</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;    ClCreateQuantizedLstmWorkloadTest&lt;ClQuantizedLstmWorkload&gt;();</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a6355f6187af6b3d95c55b85ac79a732e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6355f6187af6b3d95c55b85ac79a732e">&#9670;&nbsp;</a></span>CompareIClTensorHandleShape()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">boost::test_tools::predicate_result CompareIClTensorHandleShape </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_cl_tensor_handle.xhtml">IClTensorHandle</a> *&#160;</td>
          <td class="paramname"><em>tensorHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::initializer_list&lt; unsigned int &gt;&#160;</td>
          <td class="paramname"><em>expectedDimensions</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00022">22</a> of file <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml">ClCreateWorkloadTests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00229">BOOST_AUTO_TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">return</span> CompareTensorHandleShape&lt;IClTensorHandle&gt;(tensorHandle, expectedDimensions);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_1ad86c6d39ab715a831555571b9e98a5.xhtml">cl</a></li><li class="navelem"><a class="el" href="dir_02bab2737bbb2fb3882a0be567244fbf.xhtml">test</a></li><li class="navelem"><a class="el" href="_cl_create_workload_tests_8cpp.xhtml">ClCreateWorkloadTests.cpp</a></li>
    <li class="footer">Generated on Wed Nov 25 2020 09:59:15 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
