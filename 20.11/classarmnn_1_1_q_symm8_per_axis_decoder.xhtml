<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: QSymm8PerAxisDecoder Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_q_symm8_per_axis_decoder.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_q_symm8_per_axis_decoder-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">QSymm8PerAxisDecoder Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_base_iterator_8hpp_source.xhtml">BaseIterator.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for QSymm8PerAxisDecoder:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_q_symm8_per_axis_decoder.png" usemap="#QSymm8PerAxisDecoder_map" alt=""/>
  <map id="QSymm8PerAxisDecoder_map" name="QSymm8PerAxisDecoder_map">
<area href="classarmnn_1_1_per_axis_iterator.xhtml" alt="PerAxisIterator&lt; const int8_t, Decoder&lt; float &gt; &gt;" shape="rect" coords="0,112,291,136"/>
<area href="classarmnn_1_1_decoder.xhtml" alt="Decoder&lt; float &gt;" shape="rect" coords="0,56,291,80"/>
<area href="classarmnn_1_1_base_iterator.xhtml" alt="BaseIterator" shape="rect" coords="0,0,291,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aca909231af3b34be021acf194f6f4bd6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_q_symm8_per_axis_decoder.xhtml#aca909231af3b34be021acf194f6f4bd6">QSymm8PerAxisDecoder</a> (const int8_t *data, const std::vector&lt; float &gt; &amp;scale, unsigned int axisFactor)</td></tr>
<tr class="separator:aca909231af3b34be021acf194f6f4bd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9bae3d911834d08935b893a361ebc93"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_q_symm8_per_axis_decoder.xhtml#ab9bae3d911834d08935b893a361ebc93">Get</a> () const override</td></tr>
<tr class="separator:ab9bae3d911834d08935b893a361ebc93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a9f4904bad49e255fc7ecb69499ac9b"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_q_symm8_per_axis_decoder.xhtml#a0a9f4904bad49e255fc7ecb69499ac9b">GetScale</a> () const</td></tr>
<tr class="separator:a0a9f4904bad49e255fc7ecb69499ac9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af26d20b09e6c6011822574cffd8d33b2"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_q_symm8_per_axis_decoder.xhtml#af26d20b09e6c6011822574cffd8d33b2">DecodeTensor</a> (const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensorShape, const unsigned int channelMultiplier, bool isDepthwise) override</td></tr>
<tr class="separator:af26d20b09e6c6011822574cffd8d33b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_per_axis_iterator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_per_axis_iterator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml">PerAxisIterator&lt; const int8_t, Decoder&lt; float &gt; &gt;</a></td></tr>
<tr class="memitem:a32355e5e70f3cdda335d2a0e5793f91f inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml#a32355e5e70f3cdda335d2a0e5793f91f">PerAxisIterator</a> (const int8_t *data=nullptr, unsigned int axisFactor=0)</td></tr>
<tr class="separator:a32355e5e70f3cdda335d2a0e5793f91f inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8911c9582e8e83d0012fc4448e6f8034 inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml">PerAxisIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml#a8911c9582e8e83d0012fc4448e6f8034">SetIndex</a> (unsigned int index, unsigned int axisIndex) override</td></tr>
<tr class="separator:a8911c9582e8e83d0012fc4448e6f8034 inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b1db8441edf90d82f7b9f93f855fab8 inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml#a3b1db8441edf90d82f7b9f93f855fab8">Reset</a> (void *data) override</td></tr>
<tr class="separator:a3b1db8441edf90d82f7b9f93f855fab8 inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1017243731685b6089c348e23cf8372c inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml">PerAxisIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml#a1017243731685b6089c348e23cf8372c">operator++</a> () override</td></tr>
<tr class="separator:a1017243731685b6089c348e23cf8372c inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c545b982da450511b6713b58968b48a inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml">PerAxisIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml#a0c545b982da450511b6713b58968b48a">operator+=</a> (const unsigned int increment) override</td></tr>
<tr class="separator:a0c545b982da450511b6713b58968b48a inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a644c920607ff892c9687932702355077 inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml">PerAxisIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml#a644c920607ff892c9687932702355077">operator-=</a> (const unsigned int decrement) override</td></tr>
<tr class="separator:a644c920607ff892c9687932702355077 inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f1301b058e7ecc11022dafbb4d89c84 inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml">PerAxisIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml#a1f1301b058e7ecc11022dafbb4d89c84">operator[]</a> (const unsigned int index) override</td></tr>
<tr class="separator:a1f1301b058e7ecc11022dafbb4d89c84 inherit pub_methods_classarmnn_1_1_per_axis_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_decoder"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_decoder')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_decoder.xhtml">Decoder&lt; float &gt;</a></td></tr>
<tr class="memitem:aedfa2b7d97ed17b14903ed75d6214c78 inherit pub_methods_classarmnn_1_1_decoder"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_decoder.xhtml#aedfa2b7d97ed17b14903ed75d6214c78">Decoder</a> ()</td></tr>
<tr class="separator:aedfa2b7d97ed17b14903ed75d6214c78 inherit pub_methods_classarmnn_1_1_decoder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ff7c15dd4f7e8a75ede5fdab35d289a inherit pub_methods_classarmnn_1_1_decoder"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_decoder.xhtml#a2ff7c15dd4f7e8a75ede5fdab35d289a">~Decoder</a> ()</td></tr>
<tr class="separator:a2ff7c15dd4f7e8a75ede5fdab35d289a inherit pub_methods_classarmnn_1_1_decoder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_base_iterator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_base_iterator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_base_iterator.xhtml">BaseIterator</a></td></tr>
<tr class="memitem:a9be4690183bfdb2f5529a12583524eb5 inherit pub_methods_classarmnn_1_1_base_iterator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_iterator.xhtml#a9be4690183bfdb2f5529a12583524eb5">BaseIterator</a> ()</td></tr>
<tr class="separator:a9be4690183bfdb2f5529a12583524eb5 inherit pub_methods_classarmnn_1_1_base_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6ebc8bd299c44c289bd4168d3ecc68f inherit pub_methods_classarmnn_1_1_base_iterator"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_iterator.xhtml#ae6ebc8bd299c44c289bd4168d3ecc68f">~BaseIterator</a> ()</td></tr>
<tr class="separator:ae6ebc8bd299c44c289bd4168d3ecc68f inherit pub_methods_classarmnn_1_1_base_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classarmnn_1_1_per_axis_iterator"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classarmnn_1_1_per_axis_iterator')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml">PerAxisIterator&lt; const int8_t, Decoder&lt; float &gt; &gt;</a></td></tr>
<tr class="memitem:abb7c5ac687cb1779a8c73d24cb903cec inherit pro_attribs_classarmnn_1_1_per_axis_iterator"><td class="memItemLeft" align="right" valign="top">const int8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml#abb7c5ac687cb1779a8c73d24cb903cec">m_Iterator</a></td></tr>
<tr class="separator:abb7c5ac687cb1779a8c73d24cb903cec inherit pro_attribs_classarmnn_1_1_per_axis_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45aad47b4af330fd2b690eb3dde14512 inherit pro_attribs_classarmnn_1_1_per_axis_iterator"><td class="memItemLeft" align="right" valign="top">const int8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml#a45aad47b4af330fd2b690eb3dde14512">m_Start</a></td></tr>
<tr class="separator:a45aad47b4af330fd2b690eb3dde14512 inherit pro_attribs_classarmnn_1_1_per_axis_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaa9859f0e4c9c2f02ea8fd6f345a38c inherit pro_attribs_classarmnn_1_1_per_axis_iterator"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml#aeaa9859f0e4c9c2f02ea8fd6f345a38c">m_AxisIndex</a></td></tr>
<tr class="separator:aeaa9859f0e4c9c2f02ea8fd6f345a38c inherit pro_attribs_classarmnn_1_1_per_axis_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5c7a20def4940cda6745d0ef519b852 inherit pro_attribs_classarmnn_1_1_per_axis_iterator"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml#ac5c7a20def4940cda6745d0ef519b852">m_AxisFactor</a></td></tr>
<tr class="separator:ac5c7a20def4940cda6745d0ef519b852 inherit pro_attribs_classarmnn_1_1_per_axis_iterator"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_base_iterator_8hpp_source.xhtml#l00837">837</a> of file <a class="el" href="_base_iterator_8hpp_source.xhtml">BaseIterator.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aca909231af3b34be021acf194f6f4bd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca909231af3b34be021acf194f6f4bd6">&#9670;&nbsp;</a></span>QSymm8PerAxisDecoder()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_q_symm8_per_axis_decoder.xhtml">QSymm8PerAxisDecoder</a> </td>
          <td>(</td>
          <td class="paramtype">const int8_t *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>axisFactor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_base_iterator_8hpp_source.xhtml#l00840">840</a> of file <a class="el" href="_base_iterator_8hpp_source.xhtml">BaseIterator.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;        : <a class="code" href="classarmnn_1_1_per_axis_iterator.xhtml#a32355e5e70f3cdda335d2a0e5793f91f">PerAxisIterator</a>(data, axisFactor), m_Scales(scale) {}</div><div class="ttc" id="classarmnn_1_1_per_axis_iterator_xhtml_a32355e5e70f3cdda335d2a0e5793f91f"><div class="ttname"><a href="classarmnn_1_1_per_axis_iterator.xhtml#a32355e5e70f3cdda335d2a0e5793f91f">armnn::PerAxisIterator&lt; const int8_t, Decoder&lt; float &gt; &gt;::PerAxisIterator</a></div><div class="ttdeci">PerAxisIterator(const int8_t *data=nullptr, unsigned int axisFactor=0)</div><div class="ttdef"><b>Definition:</b> <a href="_base_iterator_8hpp_source.xhtml#l00778">BaseIterator.hpp:778</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af26d20b09e6c6011822574cffd8d33b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af26d20b09e6c6011822574cffd8d33b2">&#9670;&nbsp;</a></span>DecodeTensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;float&gt; DecodeTensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorShape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>channelMultiplier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isDepthwise</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_decoder.xhtml#a6f1a1177c9e21355a0c3875e5f280c8a">Decoder&lt; float &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="_base_iterator_8hpp_source.xhtml#l00854">854</a> of file <a class="el" href="_base_iterator_8hpp_source.xhtml">BaseIterator.hpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d">armnn::Dequantize</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00181">TensorShape::GetNumElements()</a>, and <a class="el" href="classarmnn_1_1_base_iterator.xhtml#a62f4064c73f91ac5ceb7a06dd3fa45b9">BaseIterator::operator[]()</a>.</p>
<div class="fragment"><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;    {</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;        <span class="keyword">const</span> uint32_t size = tensorShape.GetNumElements();</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;        <span class="keyword">const</span> uint32_t scaleSize = <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(m_Scales.size());</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;        <span class="keyword">const</span> uint32_t stepSize = isDepthwise ?</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;                                  tensorShape[2] * tensorShape[3] : tensorShape.GetNumElements() / tensorShape[0];</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;        <span class="keyword">const</span> uint32_t stepNum = size / (stepSize * channelMultiplier);</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;        uint32_t scale;</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;        std::vector&lt;float&gt; decodedTensor;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;        decodedTensor.reserve(size);</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;        <span class="comment">// channelMultiplier is only used in depthwise convolutions and in other cases will have no effect</span></div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;        <span class="comment">// stepSize is the length of a contiguous area sharing a quantization scale within a tensor</span></div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;        <span class="comment">// stepNum is the number of those steps/blocks in the tensor</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;        <span class="keywordflow">for</span> (uint32_t mult = 0; mult &lt; channelMultiplier; ++mult)</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;        {</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;            <span class="keywordflow">for</span> (uint32_t step = 0; step &lt; stepNum; ++step)</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;            {</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;                scale = (channelMultiplier * step + mult) % scaleSize;</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;                <span class="keywordflow">for</span> (uint32_t i = 0; i &lt; stepSize; ++i)</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;                {</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;                    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index = mult * stepSize * channelMultiplier +</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;                                         step * stepSize + i;</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;                    this-&gt;<a class="code" href="classarmnn_1_1_per_axis_iterator.xhtml#a1f1301b058e7ecc11022dafbb4d89c84">operator[]</a>(index);</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;                    decodedTensor.emplace_back(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d">armnn::Dequantize</a>(*<a class="code" href="classarmnn_1_1_per_axis_iterator.xhtml#abb7c5ac687cb1779a8c73d24cb903cec">m_Iterator</a>, m_Scales[scale], 0));</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                }</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;            }</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;        }</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;        <span class="keywordflow">return</span> decodedTensor;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_per_axis_iterator_xhtml_a1f1301b058e7ecc11022dafbb4d89c84"><div class="ttname"><a href="classarmnn_1_1_per_axis_iterator.xhtml#a1f1301b058e7ecc11022dafbb4d89c84">armnn::PerAxisIterator&lt; const int8_t, Decoder&lt; float &gt; &gt;::operator[]</a></div><div class="ttdeci">PerAxisIterator &amp; operator[](const unsigned int index) override</div><div class="ttdef"><b>Definition:</b> <a href="_base_iterator_8hpp_source.xhtml#l00822">BaseIterator.hpp:822</a></div></div>
<div class="ttc" id="classarmnn_1_1_per_axis_iterator_xhtml_abb7c5ac687cb1779a8c73d24cb903cec"><div class="ttname"><a href="classarmnn_1_1_per_axis_iterator.xhtml#abb7c5ac687cb1779a8c73d24cb903cec">armnn::PerAxisIterator&lt; const int8_t, Decoder&lt; float &gt; &gt;::m_Iterator</a></div><div class="ttdeci">const int8_t * m_Iterator</div><div class="ttdef"><b>Definition:</b> <a href="_base_iterator_8hpp_source.xhtml#l00831">BaseIterator.hpp:831</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d">armnn::LayerType::Dequantize</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab9bae3d911834d08935b893a361ebc93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9bae3d911834d08935b893a361ebc93">&#9670;&nbsp;</a></span>Get()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float Get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_decoder.xhtml#ac729108381e2340bea12877971713ecb">Decoder&lt; float &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="_base_iterator_8hpp_source.xhtml#l00843">843</a> of file <a class="el" href="_base_iterator_8hpp_source.xhtml">BaseIterator.hpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d">armnn::Dequantize</a>.</p>
<div class="fragment"><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;    {</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d">armnn::Dequantize</a>(*<a class="code" href="classarmnn_1_1_per_axis_iterator.xhtml#abb7c5ac687cb1779a8c73d24cb903cec">m_Iterator</a>, m_Scales[<a class="code" href="classarmnn_1_1_per_axis_iterator.xhtml#aeaa9859f0e4c9c2f02ea8fd6f345a38c">m_AxisIndex</a>], 0);</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_per_axis_iterator_xhtml_abb7c5ac687cb1779a8c73d24cb903cec"><div class="ttname"><a href="classarmnn_1_1_per_axis_iterator.xhtml#abb7c5ac687cb1779a8c73d24cb903cec">armnn::PerAxisIterator&lt; const int8_t, Decoder&lt; float &gt; &gt;::m_Iterator</a></div><div class="ttdeci">const int8_t * m_Iterator</div><div class="ttdef"><b>Definition:</b> <a href="_base_iterator_8hpp_source.xhtml#l00831">BaseIterator.hpp:831</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d">armnn::LayerType::Dequantize</a></div></div>
<div class="ttc" id="classarmnn_1_1_per_axis_iterator_xhtml_aeaa9859f0e4c9c2f02ea8fd6f345a38c"><div class="ttname"><a href="classarmnn_1_1_per_axis_iterator.xhtml#aeaa9859f0e4c9c2f02ea8fd6f345a38c">armnn::PerAxisIterator&lt; const int8_t, Decoder&lt; float &gt; &gt;::m_AxisIndex</a></div><div class="ttdeci">unsigned int m_AxisIndex</div><div class="ttdef"><b>Definition:</b> <a href="_base_iterator_8hpp_source.xhtml#l00833">BaseIterator.hpp:833</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0a9f4904bad49e255fc7ecb69499ac9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a9f4904bad49e255fc7ecb69499ac9b">&#9670;&nbsp;</a></span>GetScale()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float GetScale </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_base_iterator_8hpp_source.xhtml#l00849">849</a> of file <a class="el" href="_base_iterator_8hpp_source.xhtml">BaseIterator.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;    {</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;        <span class="keywordflow">return</span> m_Scales[<a class="code" href="classarmnn_1_1_per_axis_iterator.xhtml#aeaa9859f0e4c9c2f02ea8fd6f345a38c">m_AxisIndex</a>];</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_per_axis_iterator_xhtml_aeaa9859f0e4c9c2f02ea8fd6f345a38c"><div class="ttname"><a href="classarmnn_1_1_per_axis_iterator.xhtml#aeaa9859f0e4c9c2f02ea8fd6f345a38c">armnn::PerAxisIterator&lt; const int8_t, Decoder&lt; float &gt; &gt;::m_AxisIndex</a></div><div class="ttdeci">unsigned int m_AxisIndex</div><div class="ttdef"><b>Definition:</b> <a href="_base_iterator_8hpp_source.xhtml#l00833">BaseIterator.hpp:833</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/backends/reference/workloads/<a class="el" href="_base_iterator_8hpp_source.xhtml">BaseIterator.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_q_symm8_per_axis_decoder.xhtml">QSymm8PerAxisDecoder</a></li>
    <li class="footer">Generated on Thu Nov 26 2020 11:04:32 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
