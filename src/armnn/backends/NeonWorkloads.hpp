//
// Copyright Â© 2017 Arm Ltd. All rights reserved.
// SPDX-License-Identifier: MIT
//

#pragma once
#include "backends/NeonWorkloads/NeonActivationFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonActivationUint8Workload.hpp"
#include "backends/NeonWorkloads/NeonAdditionFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonBaseConstantWorkload.hpp"
#include "backends/NeonWorkloads/NeonBaseMergerWorkload.hpp"
#include "backends/NeonWorkloads/NeonBaseSplitterWorkload.hpp"
#include "backends/NeonWorkloads/NeonBatchNormalizationFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonConstantFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonConstantUint8Workload.hpp"
#include "backends/NeonWorkloads/NeonConvertFp16ToFp32Workload.hpp"
#include "backends/NeonWorkloads/NeonConvertFp32ToFp16Workload.hpp"
#include "backends/NeonWorkloads/NeonConvolution2dBaseWorkload.hpp"
#include "backends/NeonWorkloads/NeonConvolution2dFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonConvolution2dUint8Workload.hpp"
#include "backends/NeonWorkloads/NeonDepthwiseConvolutionFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonDepthwiseConvolutionUint8Workload.hpp"
#include "backends/NeonWorkloads/NeonFloorFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonFullyConnectedFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonL2NormalizationFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonLstmFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonMergerFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonMergerUint8Workload.hpp"
#include "backends/NeonWorkloads/NeonMultiplicationFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonNormalizationFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonPermuteWorkload.hpp"
#include "backends/NeonWorkloads/NeonPooling2dBaseWorkload.hpp"
#include "backends/NeonWorkloads/NeonPooling2dFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonPooling2dUint8Workload.hpp"
#include "backends/NeonWorkloads/NeonReshapeFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonReshapeUint8Workload.hpp"
#include "backends/NeonWorkloads/NeonSoftmaxFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonSoftmaxUint8Workload.hpp"
#include "backends/NeonWorkloads/NeonSplitterFloatWorkload.hpp"
#include "backends/NeonWorkloads/NeonSplitterUint8Workload.hpp"
