//
// Copyright Â© 2017 Arm Ltd. All rights reserved.
// SPDX-License-Identifier: MIT
//

#pragma once
#include "backends/ClWorkloads/ClActivationFloatWorkload.hpp"
#include "backends/ClWorkloads/ClActivationUint8Workload.hpp"
#include "backends/ClWorkloads/ClAdditionWorkload.hpp"
#include "backends/ClWorkloads/ClBaseConstantWorkload.hpp"
#include "backends/ClWorkloads/ClBaseMergerWorkload.hpp"
#include "backends/ClWorkloads/ClBatchNormalizationFloatWorkload.hpp"
#include "backends/ClWorkloads/ClConstantFloatWorkload.hpp"
#include "backends/ClWorkloads/ClConstantUint8Workload.hpp"
#include "backends/ClWorkloads/ClConvolution2dFloatWorkload.hpp"
#include "backends/ClWorkloads/ClConvolution2dUint8Workload.hpp"
#include "backends/ClWorkloads/ClDepthwiseConvolutionFloatWorkload.hpp"
#include "backends/ClWorkloads/ClDepthwiseConvolutionUint8Workload.hpp"
#include "backends/ClWorkloads/ClDivisionFloatWorkload.hpp"
#include "backends/ClWorkloads/ClFloorFloatWorkload.hpp"
#include "backends/ClWorkloads/ClFullyConnectedFloatWorkload.hpp"
#include "backends/ClWorkloads/ClL2NormalizationFloatWorkload.hpp"
#include "backends/ClWorkloads/ClLstmFloatWorkload.hpp"
#include "backends/ClWorkloads/ClMergerFloatWorkload.hpp"
#include "backends/ClWorkloads/ClMergerUint8Workload.hpp"
#include "backends/ClWorkloads/ClMultiplicationFloatWorkload.hpp"
#include "backends/ClWorkloads/ClNormalizationFloatWorkload.hpp"
#include "backends/ClWorkloads/ClPermuteWorkload.hpp"
#include "backends/ClWorkloads/ClPooling2dFloatWorkload.hpp"
#include "backends/ClWorkloads/ClPooling2dUint8Workload.hpp"
#include "backends/ClWorkloads/ClReshapeFloatWorkload.hpp"
#include "backends/ClWorkloads/ClReshapeUint8Workload.hpp"
#include "backends/ClWorkloads/ClResizeBilinearFloatWorkload.hpp"
#include "backends/ClWorkloads/ClSoftmaxFloatWorkload.hpp"
#include "backends/ClWorkloads/ClSoftmaxUint8Workload.hpp"
#include "backends/ClWorkloads/ClSplitterFloatWorkload.hpp"
#include "backends/ClWorkloads/ClSplitterUint8Workload.hpp"
#include "backends/ClWorkloads/ClSubtractionWorkload.hpp"
#include "backends/ClWorkloads/ClConvertFp16ToFp32Workload.hpp"
#include "backends/ClWorkloads/ClConvertFp32ToFp16Workload.hpp"
