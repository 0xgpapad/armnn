<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/profiling/test/TestTimelinePacketHandler.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_test_timeline_packet_handler_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TestTimelinePacketHandler.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_test_timeline_packet_handler_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2020 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_timeline_packet_handler_8hpp.xhtml">TestTimelinePacketHandler.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_profiling_connection_8hpp.xhtml">IProfilingConnection.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_ignore_unused_8hpp.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;chrono&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">namespace </span>profiling</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a0729ebfcf0d2e4717b94f212fac0bc0c">   21</a></span>&#160;std::vector&lt;uint32_t&gt; <a class="code" href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a0729ebfcf0d2e4717b94f212fac0bc0c">TestTimelinePacketHandler::GetHeadersAccepted</a>()</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    std::vector&lt;uint32_t&gt; headers;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    headers.push_back(m_DirectoryHeader); <span class="comment">// message directory</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    headers.push_back(m_MessageHeader); <span class="comment">// message</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">return</span> headers;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;}</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a2d3833345d2ad1283dc3d3b8fca76758">   29</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a2d3833345d2ad1283dc3d3b8fca76758">TestTimelinePacketHandler::HandlePacket</a>(<span class="keyword">const</span> Packet&amp; packet)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">if</span> (packet.GetHeader() == m_DirectoryHeader)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        ProcessDirectoryPacket(packet);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    }</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (packet.GetHeader() == m_MessageHeader)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        ProcessMessagePacket(packet);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;Received a packet with unknown header [&quot;</span> &lt;&lt; packet.GetHeader() &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_exception.xhtml">armnn::Exception</a>(ss.str());</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    }</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a17a237457e57625296e6b24feb19c60a">   47</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a17a237457e57625296e6b24feb19c60a">TestTimelinePacketHandler::Stop</a>()</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    m_Connection-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml#aacb6d0e5e6d570cdc2b0da14c3921ff0">Close</a>();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a72dbf07f5a1765ef4b046bfa932578d0">   52</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a72dbf07f5a1765ef4b046bfa932578d0">TestTimelinePacketHandler::WaitOnInferenceCompletion</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> timeout)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    std::unique_lock&lt;std::mutex&gt; lck(m_InferenceCompletedMutex);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">auto</span> start = std::chrono::high_resolution_clock::now();</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="comment">// Here we we will go back to sleep after a spurious wake up if</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// m_InferenceCompleted is not yet true.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">if</span> (!m_InferenceCompletedConditionVariable.wait_for(lck,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                                        std::chrono::milliseconds(timeout),</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                                        [&amp;]{return m_InferenceCompleted == true;}))</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keyword">auto</span> finish = std::chrono::high_resolution_clock::now();</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        std::chrono::duration&lt;double, std::milli&gt; elapsed = finish - start;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;Timed out waiting on inference completion for &quot;</span> &lt;&lt; elapsed.count() &lt;&lt; <span class="stringliteral">&quot; ms&quot;</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_timeout_exception.xhtml">armnn::TimeoutException</a>(ss.str());</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a1187d00f0fed291d622c85e47a68673d">   72</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a1187d00f0fed291d622c85e47a68673d">TestTimelinePacketHandler::SetInferenceComplete</a>()</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {   <span class="comment">// only lock when we are updating the inference completed variable</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        std::unique_lock&lt;std::mutex&gt; lck(m_InferenceCompletedMutex);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        m_InferenceCompleted = <span class="keyword">true</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    m_InferenceCompletedConditionVariable.notify_one();</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">void</span> TestTimelinePacketHandler::ProcessDirectoryPacket(<span class="keyword">const</span> Packet&amp; packet)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    m_DirectoryDecoder(packet);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordtype">void</span> TestTimelinePacketHandler::ProcessMessagePacket(<span class="keyword">const</span> Packet&amp; packet)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    m_Decoder(packet);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">// TimelineMessageDecoder functions</span></div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#aad0f373e20ef722c579a3c5e76634366">   92</a></span>&#160;<a class="code" href="class_i_timeline_decoder.xhtml#a7561a8de32d8a9ff3bfa7de7a89a590a">ITimelineDecoder::TimelineStatus</a> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#aad0f373e20ef722c579a3c5e76634366">TimelineMessageDecoder::CreateEntity</a>(<span class="keyword">const</span> <a class="code" href="struct_i_timeline_decoder_1_1_entity.xhtml">Entity</a>&amp; entity)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    m_TimelineModel.<a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#acf92758924263e61fea775a36ae49d21">AddEntity</a>(entity.<a class="code" href="struct_i_timeline_decoder_1_1_entity.xhtml#ab6b3b4830bf0417aa54e88663048075a">m_Guid</a>);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_i_timeline_decoder.xhtml#a7561a8de32d8a9ff3bfa7de7a89a590aa01c22cb6628ace016f56d9f9a2926c22">ITimelineDecoder::TimelineStatus::TimelineStatus_Success</a>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#a0931e57ff5b5eae76c1524dda59a1dc6">   98</a></span>&#160;<a class="code" href="class_i_timeline_decoder.xhtml#a7561a8de32d8a9ff3bfa7de7a89a590a">ITimelineDecoder::TimelineStatus</a> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#a0931e57ff5b5eae76c1524dda59a1dc6">TimelineMessageDecoder::CreateEventClass</a>(</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">const</span> <a class="code" href="struct_i_timeline_decoder_1_1_event_class.xhtml">ITimelineDecoder::EventClass</a>&amp; eventClass)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;{</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="comment">// for the moment terminate the run here so we can get this code</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="comment">// onto master prior to a major re-organisation</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">if</span> (m_PacketHandler != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        m_PacketHandler-&gt;SetInferenceComplete();</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(eventClass);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_i_timeline_decoder.xhtml#a7561a8de32d8a9ff3bfa7de7a89a590aa01c22cb6628ace016f56d9f9a2926c22">ITimelineDecoder::TimelineStatus::TimelineStatus_Success</a>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#af38ffd116a3021bec6dec62650633a69">  111</a></span>&#160;<a class="code" href="class_i_timeline_decoder.xhtml#a7561a8de32d8a9ff3bfa7de7a89a590a">ITimelineDecoder::TimelineStatus</a> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#af38ffd116a3021bec6dec62650633a69">TimelineMessageDecoder::CreateEvent</a>(<span class="keyword">const</span> <a class="code" href="struct_i_timeline_decoder_1_1_event.xhtml">ITimelineDecoder::Event</a>&amp; event)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(event);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_i_timeline_decoder.xhtml#a7561a8de32d8a9ff3bfa7de7a89a590aa01c22cb6628ace016f56d9f9a2926c22">ITimelineDecoder::TimelineStatus::TimelineStatus_Success</a>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#a8f298604f09a67fb8cca3488c01a0f6c">  117</a></span>&#160;<a class="code" href="class_i_timeline_decoder.xhtml#a7561a8de32d8a9ff3bfa7de7a89a590a">ITimelineDecoder::TimelineStatus</a> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#a8f298604f09a67fb8cca3488c01a0f6c">TimelineMessageDecoder::CreateLabel</a>(<span class="keyword">const</span> <a class="code" href="struct_i_timeline_decoder_1_1_label.xhtml">ITimelineDecoder::Label</a>&amp; label)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    m_TimelineModel.<a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#ac7862ad233ee72a56f4344d60af6424e">AddLabel</a>(label);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_i_timeline_decoder.xhtml#a7561a8de32d8a9ff3bfa7de7a89a590aa01c22cb6628ace016f56d9f9a2926c22">ITimelineDecoder::TimelineStatus::TimelineStatus_Success</a>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#a4790c583d5bf271c46bde8834b832169">  123</a></span>&#160;<a class="code" href="class_i_timeline_decoder.xhtml#a7561a8de32d8a9ff3bfa7de7a89a590a">ITimelineDecoder::TimelineStatus</a> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#a4790c583d5bf271c46bde8834b832169">TimelineMessageDecoder::CreateRelationship</a>(</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">const</span> <a class="code" href="struct_i_timeline_decoder_1_1_relationship.xhtml">ITimelineDecoder::Relationship</a>&amp; relationship)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;{</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    m_TimelineModel.<a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#aa843e2f9628e20b0c6211b5d02a8b79c">AddRelationship</a>(relationship);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_i_timeline_decoder.xhtml#a7561a8de32d8a9ff3bfa7de7a89a590aa01c22cb6628ace016f56d9f9a2926c22">ITimelineDecoder::TimelineStatus::TimelineStatus_Success</a>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;} <span class="comment">// namespace profiling</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="_ignore_unused_8hpp_xhtml"><div class="ttname"><a href="_ignore_unused_8hpp.xhtml">IgnoreUnused.hpp</a></div></div>
<div class="ttc" id="class_i_timeline_decoder_xhtml_a7561a8de32d8a9ff3bfa7de7a89a590aa01c22cb6628ace016f56d9f9a2926c22"><div class="ttname"><a href="class_i_timeline_decoder.xhtml#a7561a8de32d8a9ff3bfa7de7a89a590aa01c22cb6628ace016f56d9f9a2926c22">ITimelineDecoder::TimelineStatus::TimelineStatus_Success</a></div></div>
<div class="ttc" id="_test_timeline_packet_handler_8hpp_xhtml"><div class="ttname"><a href="_test_timeline_packet_handler_8hpp.xhtml">TestTimelinePacketHandler.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_message_decoder_xhtml_a4790c583d5bf271c46bde8834b832169"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#a4790c583d5bf271c46bde8834b832169">armnn::profiling::TimelineMessageDecoder::CreateRelationship</a></div><div class="ttdeci">virtual TimelineStatus CreateRelationship(const Relationship &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00123">TestTimelinePacketHandler.cpp:123</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_message_decoder_xhtml_af38ffd116a3021bec6dec62650633a69"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#af38ffd116a3021bec6dec62650633a69">armnn::profiling::TimelineMessageDecoder::CreateEvent</a></div><div class="ttdeci">virtual TimelineStatus CreateEvent(const Event &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00111">TestTimelinePacketHandler.cpp:111</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_message_decoder_xhtml_a8f298604f09a67fb8cca3488c01a0f6c"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#a8f298604f09a67fb8cca3488c01a0f6c">armnn::profiling::TimelineMessageDecoder::CreateLabel</a></div><div class="ttdeci">virtual TimelineStatus CreateLabel(const Label &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00117">TestTimelinePacketHandler.cpp:117</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_timeline_packet_handler_xhtml_a2d3833345d2ad1283dc3d3b8fca76758"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a2d3833345d2ad1283dc3d3b8fca76758">armnn::profiling::TestTimelinePacketHandler::HandlePacket</a></div><div class="ttdeci">virtual void HandlePacket(const Packet &amp;packet) override</div><div class="ttdoc">process the packet </div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00029">TestTimelinePacketHandler.cpp:29</a></div></div>
<div class="ttc" id="struct_i_timeline_decoder_1_1_event_class_xhtml"><div class="ttname"><a href="struct_i_timeline_decoder_1_1_event_class.xhtml">ITimelineDecoder::EventClass</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_timeline_decoder_8hpp_source.xhtml#l00047">ITimelineDecoder.hpp:47</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2020 ARM Limited. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00025">00_introduction.dox:25</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_timeout_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_timeout_exception.xhtml">armnn::TimeoutException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00135">Exceptions.hpp:135</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_timeline_packet_handler_xhtml_a0729ebfcf0d2e4717b94f212fac0bc0c"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a0729ebfcf0d2e4717b94f212fac0bc0c">armnn::profiling::TestTimelinePacketHandler::GetHeadersAccepted</a></div><div class="ttdeci">virtual std::vector&lt; uint32_t &gt; GetHeadersAccepted() override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00021">TestTimelinePacketHandler.cpp:21</a></div></div>
<div class="ttc" id="struct_i_timeline_decoder_1_1_relationship_xhtml"><div class="ttname"><a href="struct_i_timeline_decoder_1_1_relationship.xhtml">ITimelineDecoder::Relationship</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_timeline_decoder_8hpp_source.xhtml#l00065">ITimelineDecoder.hpp:65</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_acf92758924263e61fea775a36ae49d21"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#acf92758924263e61fea775a36ae49d21">armnn::profiling::TimelineModel::AddEntity</a></div><div class="ttdeci">void AddEntity(uint64_t guid)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00019">TimelineModel.cpp:19</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_timeline_packet_handler_xhtml_a17a237457e57625296e6b24feb19c60a"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a17a237457e57625296e6b24feb19c60a">armnn::profiling::TestTimelinePacketHandler::Stop</a></div><div class="ttdeci">void Stop()</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00047">TestTimelinePacketHandler.cpp:47</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_aa843e2f9628e20b0c6211b5d02a8b79c"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#aa843e2f9628e20b0c6211b5d02a8b79c">armnn::profiling::TimelineModel::AddRelationship</a></div><div class="ttdeci">void AddRelationship(const ITimelineDecoder::Relationship &amp;relationship)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00037">TimelineModel.cpp:37</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_timeline_packet_handler_xhtml_a1187d00f0fed291d622c85e47a68673d"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a1187d00f0fed291d622c85e47a68673d">armnn::profiling::TestTimelinePacketHandler::SetInferenceComplete</a></div><div class="ttdeci">void SetInferenceComplete()</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00072">TestTimelinePacketHandler.cpp:72</a></div></div>
<div class="ttc" id="struct_i_timeline_decoder_1_1_entity_xhtml_ab6b3b4830bf0417aa54e88663048075a"><div class="ttname"><a href="struct_i_timeline_decoder_1_1_entity.xhtml#ab6b3b4830bf0417aa54e88663048075a">ITimelineDecoder::Entity::m_Guid</a></div><div class="ttdeci">uint64_t m_Guid</div><div class="ttdef"><b>Definition:</b> <a href="_i_timeline_decoder_8hpp_source.xhtml#l00044">ITimelineDecoder.hpp:44</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_profiling_connection_xhtml_aacb6d0e5e6d570cdc2b0da14c3921ff0"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml#aacb6d0e5e6d570cdc2b0da14c3921ff0">armnn::profiling::IProfilingConnection::Close</a></div><div class="ttdeci">virtual void Close()=0</div></div>
<div class="ttc" id="classarmnn_1_1_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml">armnn::Exception</a></div><div class="ttdoc">Base class for all ArmNN exceptions so that users can filter to just those. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00046">Exceptions.hpp:46</a></div></div>
<div class="ttc" id="struct_i_timeline_decoder_1_1_entity_xhtml"><div class="ttname"><a href="struct_i_timeline_decoder_1_1_entity.xhtml">ITimelineDecoder::Entity</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_timeline_decoder_8hpp_source.xhtml#l00042">ITimelineDecoder.hpp:42</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_message_decoder_xhtml_a0931e57ff5b5eae76c1524dda59a1dc6"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#a0931e57ff5b5eae76c1524dda59a1dc6">armnn::profiling::TimelineMessageDecoder::CreateEventClass</a></div><div class="ttdeci">virtual TimelineStatus CreateEventClass(const EventClass &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00098">TestTimelinePacketHandler.cpp:98</a></div></div>
<div class="ttc" id="_i_profiling_connection_8hpp_xhtml"><div class="ttname"><a href="_i_profiling_connection_8hpp.xhtml">IProfilingConnection.hpp</a></div></div>
<div class="ttc" id="struct_i_timeline_decoder_1_1_event_xhtml"><div class="ttname"><a href="struct_i_timeline_decoder_1_1_event.xhtml">ITimelineDecoder::Event</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_timeline_decoder_8hpp_source.xhtml#l00052">ITimelineDecoder.hpp:52</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_timeline_packet_handler_xhtml_a72dbf07f5a1765ef4b046bfa932578d0"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml#a72dbf07f5a1765ef4b046bfa932578d0">armnn::profiling::TestTimelinePacketHandler::WaitOnInferenceCompletion</a></div><div class="ttdeci">void WaitOnInferenceCompletion(unsigned int timeout)</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00052">TestTimelinePacketHandler.cpp:52</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_message_decoder_xhtml_aad0f373e20ef722c579a3c5e76634366"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_message_decoder.xhtml#aad0f373e20ef722c579a3c5e76634366">armnn::profiling::TimelineMessageDecoder::CreateEntity</a></div><div class="ttdeci">virtual TimelineStatus CreateEntity(const Entity &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00092">TestTimelinePacketHandler.cpp:92</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_ac7862ad233ee72a56f4344d60af6424e"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#ac7862ad233ee72a56f4344d60af6424e">armnn::profiling::TimelineModel::AddLabel</a></div><div class="ttdeci">void AddLabel(const ITimelineDecoder::Label &amp;label)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00014">TimelineModel.cpp:14</a></div></div>
<div class="ttc" id="struct_i_timeline_decoder_1_1_label_xhtml"><div class="ttname"><a href="struct_i_timeline_decoder_1_1_label.xhtml">ITimelineDecoder::Label</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_timeline_decoder_8hpp_source.xhtml#l00059">ITimelineDecoder.hpp:59</a></div></div>
<div class="ttc" id="class_i_timeline_decoder_xhtml_a7561a8de32d8a9ff3bfa7de7a89a590a"><div class="ttname"><a href="class_i_timeline_decoder.xhtml#a7561a8de32d8a9ff3bfa7de7a89a590a">ITimelineDecoder::TimelineStatus</a></div><div class="ttdeci">TimelineStatus</div><div class="ttdef"><b>Definition:</b> <a href="_i_timeline_decoder_8hpp_source.xhtml#l00016">ITimelineDecoder.hpp:16</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_637c692f14729569dd2eac0c18e2a54a.xhtml">profiling</a></li><li class="navelem"><a class="el" href="dir_6b1198f6e738611120ec65b09506d2f8.xhtml">test</a></li><li class="navelem"><a class="el" href="_test_timeline_packet_handler_8cpp.xhtml">TestTimelinePacketHandler.cpp</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:46 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
