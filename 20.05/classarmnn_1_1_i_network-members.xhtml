<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_i_network.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">INetwork Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a8c9198a992b02e61a6777329d487dde3">Accept</a>(ILayerVisitor &amp;visitor) const =0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a242b431bbed538ef58c405762068c06e">AddAbsLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#aea068f6094e1c3bfcdf8167b68112632">AddActivationLayer</a>(const ActivationDescriptor &amp;activationDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a4812e0137ee610310d23059efed2cb84">AddAdditionLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#afd432f0676b9f238b68ee01a66183c7f">AddArgMinMaxLayer</a>(const ArgMinMaxDescriptor &amp;desc, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a8d1067e754512c434da1238b67ad26ea">AddBatchNormalizationLayer</a>(const BatchNormalizationDescriptor &amp;desc, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#afd29bdb840d7d978f3dee0309f422886">AddBatchToSpaceNdLayer</a>(const BatchToSpaceNdDescriptor &amp;batchToSpaceNdDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#ac3be1bcc0fa5ffaf04a4f1d20d0ab7f4">AddComparisonLayer</a>(const ComparisonDescriptor &amp;comparisonDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#aef27f787e8a2ee19c4052261f963f28e">AddConcatLayer</a>(const ConcatDescriptor &amp;concatDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a67b28a248a1e13f1f858e9d9e9e2d54b">AddConstantLayer</a>(const ConstTensor &amp;input, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a073e2f61f527d7d3801c26bdbd37dd7e">AddConvolution2dLayer</a>(const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#ab76caade6df9758cb23589475b080060">AddConvolution2dLayer</a>(const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#ab592c969eed4e15123349501c2e2c0e9">AddConvolution2dLayer</a>(const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const ConstTensor &amp;biases, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a9cc2cd640fcda8ffaf84b23230ba1664">AddDepthToSpaceLayer</a>(const DepthToSpaceDescriptor &amp;depthToSpaceDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a78367a5054c92d435f4f5c7e10ec65b8">AddDepthwiseConvolution2dLayer</a>(const DepthwiseConvolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a634843775f26ca85a78ad27c8f656845">AddDepthwiseConvolution2dLayer</a>(const DepthwiseConvolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a7aaabbe9b2f7159703df0cf0ff552d0f">AddDepthwiseConvolution2dLayer</a>(const DepthwiseConvolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const ConstTensor &amp;biases, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a061197f3813f225d94a73063f93a4f2c">AddDequantizeLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a7dbf4589abdc0b13690eb83eab617adc">AddDetectionPostProcessLayer</a>(const DetectionPostProcessDescriptor &amp;descriptor, const ConstTensor &amp;anchors, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a82a5bc0d24f4c4eb1fbf793e156a5193">AddDivisionLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a5bf8e0c150c7e6f8085c0767c6ab1914">AddElementwiseUnaryLayer</a>(const ElementwiseUnaryDescriptor &amp;elementwiseUnaryDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#afa185870287965e94d514de562fffa94">AddEqualLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#ab98cfce43a731ad63ca839dac5ee89eb">AddFloorLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a4839e4ec3f07974c57ca2c856b40cd57">AddFullyConnectedLayer</a>(const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a53b41b41319485d8ff71d294f2f52b38">AddFullyConnectedLayer</a>(const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const ConstTensor &amp;weights, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a315a27dc1f50e0526f7da71d47a3dccf">AddFullyConnectedLayer</a>(const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const ConstTensor &amp;weights, const ConstTensor &amp;biases, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a8440d2a2afd3eb3526212081c9016830">AddGatherLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#addd323d9ecb6d764bec8fa38cf9184db">AddGreaterLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a87d5ec72def73ca14bd2987a024bd569">AddInputLayer</a>(LayerBindingId id, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a604ca69f6e33b8d53ccc254cbd85125b">AddInstanceNormalizationLayer</a>(const InstanceNormalizationDescriptor &amp;desc, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a53f545a593ccf5d471217283bbd35648">AddL2NormalizationLayer</a>(const L2NormalizationDescriptor &amp;desc, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#ae47d992c09a281b38fd6e5675f9f8ec8">AddLogSoftmaxLayer</a>(const LogSoftmaxDescriptor &amp;logSoftmaxDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#ae56f97f1de7a08af6f0e0a1350e368cb">AddLstmLayer</a>(const LstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#afb8d4577c796ffdd213428cd285734b1">AddMaximumLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a8262e9e6fc869a9c9782115a6a552f36">AddMeanLayer</a>(const MeanDescriptor &amp;meanDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a12eefa50f602b22ec86be8bba2903cf8">AddMergeLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#afcff563d08cd58c9e2b1156aa44821b0">AddMergerLayer</a>(const MergerDescriptor &amp;mergerDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a4cc12e3bd9ffe196cc8b351f25a104e3">AddMinimumLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#ae24e82cf1ae2a71c5cd976edfb192fc0">AddMultiplicationLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a74dac9efbb6dbd1982a45af1805eb4e0">AddNormalizationLayer</a>(const NormalizationDescriptor &amp;normalizationDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#ad8582fba2ebeb65da43a56bc22d4f88b">AddOutputLayer</a>(LayerBindingId id, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a07485f1477554d32e43edc39502ac419">AddPadLayer</a>(const PadDescriptor &amp;padDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#ab62ebd16892ae3fdfe4ec89561c49d71">AddPermuteLayer</a>(const PermuteDescriptor &amp;permuteDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a4ec92bca4e51755105abb89e1878585f">AddPooling2dLayer</a>(const Pooling2dDescriptor &amp;pooling2dDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#af22f3d4f7258b4f89906128036dbb004">AddPreluLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a37642c66f966e976e37dc6ea736e0a2f">AddQLstmLayer</a>(const QLstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a4aefd9908eb21a6235e28056eada64fb">AddQuantizedLstmLayer</a>(const QuantizedLstmInputParams &amp;params, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a92563fbf873cb6f9ee980b664e805fa9">AddQuantizeLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#ac77b89eb982f9d745730c90fcbdddba4">AddReshapeLayer</a>(const ReshapeDescriptor &amp;reshapeDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a52829711d80cfb7fc2ca298fe2ab035d">AddResizeBilinearLayer</a>(const ResizeBilinearDescriptor &amp;resizeDesc, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a617aeb663e1535568864c23f5d988dd8">AddResizeLayer</a>(const ResizeDescriptor &amp;resizeDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a75d776349a203f50cfc66b3035565d8a">AddRsqrtLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a3c9c8780d160491ec37d7fe40e4c2b62">AddSliceLayer</a>(const SliceDescriptor &amp;sliceDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a53949668a151924c4aad83b176db1080">AddSoftmaxLayer</a>(const SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a22bff5c3ec61f7e61038f920343aa19b">AddSpaceToBatchNdLayer</a>(const SpaceToBatchNdDescriptor &amp;spaceToBatchNdDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a44a41ae9bf893dc0224e4d67a9ca1b39">AddSpaceToDepthLayer</a>(const SpaceToDepthDescriptor &amp;spaceToDepthDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a3a2dbac031f1a0b1b323916b1c7f61d2">AddSplitterLayer</a>(const ViewsDescriptor &amp;splitterDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#afaa808f44f0b8332ec0bd54f4fea47c0">AddStackLayer</a>(const StackDescriptor &amp;descriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#adc9a8e1169132f539ded502661ff628c">AddStandInLayer</a>(const StandInDescriptor &amp;descriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a348f95b60998a987ba20a58bfc720590">AddStridedSliceLayer</a>(const StridedSliceDescriptor &amp;stridedSliceDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#ab6d332d9c4b4f04c23f40f04f7f56d0d">AddSubtractionLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#af0850b9c758dff45e635515c27a496f8">AddSwitchLayer</a>(const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a07a1a4b8bdbec7bae0d40cbfb4991612">AddTransposeConvolution2dLayer</a>(const TransposeConvolution2dDescriptor &amp;descriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a4f6070c1337d40f1e98988acee015c7d">AddTransposeLayer</a>(const TransposeDescriptor &amp;transposeDescriptor, const char *name=nullptr)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a706f7345af3f18f4b16e226a672214c6">Create</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a1ca931603a06e926ca359e52890a6fea">CreateRaw</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a55bd1bb29076dc45bb335e7322781463">Destroy</a>(INetwork *network)</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#a06f863df5ac6a76c7407f64d63c04001">PrintGraph</a>()=0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml#af760179196d57e2ddbc64b989fb72586">~INetwork</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Fri May 29 2020 10:20:52 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
