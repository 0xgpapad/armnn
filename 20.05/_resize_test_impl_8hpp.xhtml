<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/ResizeTestImpl.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_resize_test_impl_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ResizeTestImpl.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="_resolve_type_8hpp_source.xhtml">ResolveType.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_types_8hpp_source.xhtml">armnn/Types.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_workload_factory_8hpp_source.xhtml">backendsCommon/WorkloadFactory.hpp</a>&gt;</code><br />
</div>
<p><a href="_resize_test_impl_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aa064b0204bbf393de5712227c78dbadd"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:aa064b0204bbf393de5712227c78dbadd"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_resize_test_impl_8hpp.xhtml#aa064b0204bbf393de5712227c78dbadd">ResizeBilinearNopTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:aa064b0204bbf393de5712227c78dbadd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8a2ca082563b114f8ad4c9cecf68185"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:ad8a2ca082563b114f8ad4c9cecf68185"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_resize_test_impl_8hpp.xhtml#ad8a2ca082563b114f8ad4c9cecf68185">SimpleResizeBilinearTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:ad8a2ca082563b114f8ad4c9cecf68185"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05a20c3e942d8088ddb3e572b601da33"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a05a20c3e942d8088ddb3e572b601da33"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_resize_test_impl_8hpp.xhtml#a05a20c3e942d8088ddb3e572b601da33">ResizeBilinearSqMinTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a05a20c3e942d8088ddb3e572b601da33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34a7419aea3fe50b6c046b1bd2467182"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a34a7419aea3fe50b6c046b1bd2467182"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_resize_test_impl_8hpp.xhtml#a34a7419aea3fe50b6c046b1bd2467182">ResizeBilinearMinTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a34a7419aea3fe50b6c046b1bd2467182"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a856cb9d46cf74b4f852c9133c002cd94"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a856cb9d46cf74b4f852c9133c002cd94"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_resize_test_impl_8hpp.xhtml#a856cb9d46cf74b4f852c9133c002cd94">ResizeBilinearMagTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a856cb9d46cf74b4f852c9133c002cd94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d1df786604fb3121d7f255bc3bbe952"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a6d1df786604fb3121d7f255bc3bbe952"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_resize_test_impl_8hpp.xhtml#a6d1df786604fb3121d7f255bc3bbe952">ResizeNearestNeighborNopTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a6d1df786604fb3121d7f255bc3bbe952"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49c8f922a49a5a66e2b12b928855a8c3"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a49c8f922a49a5a66e2b12b928855a8c3"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_resize_test_impl_8hpp.xhtml#a49c8f922a49a5a66e2b12b928855a8c3">SimpleResizeNearestNeighborTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a49c8f922a49a5a66e2b12b928855a8c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fa8169c343d8e7fb11eb7750b06bef5"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a7fa8169c343d8e7fb11eb7750b06bef5"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_resize_test_impl_8hpp.xhtml#a7fa8169c343d8e7fb11eb7750b06bef5">ResizeNearestNeighborSqMinTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a7fa8169c343d8e7fb11eb7750b06bef5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a75f31efb36868e8f2c7223426313db"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a5a75f31efb36868e8f2c7223426313db"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_resize_test_impl_8hpp.xhtml#a5a75f31efb36868e8f2c7223426313db">ResizeNearestNeighborMinTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a5a75f31efb36868e8f2c7223426313db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf1a58bdaf53efb1093601746773df9a"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:aaf1a58bdaf53efb1093601746773df9a"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_resize_test_impl_8hpp.xhtml#aaf1a58bdaf53efb1093601746773df9a">ResizeNearestNeighborMagTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout, float inQuantScale, int32_t inQuantOffset, float outQuantScale, int32_t outQuantOffset)</td></tr>
<tr class="separator:aaf1a58bdaf53efb1093601746773df9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a856cb9d46cf74b4f852c9133c002cd94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a856cb9d46cf74b4f852c9133c002cd94">&#9670;&nbsp;</a></span>ResizeBilinearMagTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; ResizeBilinearMagTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_resize_test_impl_8cpp_source.xhtml#l00293">293</a> of file <a class="el" href="_resize_test_impl_8cpp_source.xhtml">ResizeTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::Bilinear</a>.</p>
<div class="fragment"><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;{</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    ResizeTestParams testParams;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    testParams.m_ResizeMethod = <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::ResizeMethod::Bilinear</a>;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    testParams.m_DataLayout   = dataLayout;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    testParams.m_InputShape  = { 1, 2, 3, 2 };</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    testParams.m_OutputShape = { 1, 2, 3, 5 };</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    testParams.m_InputData =</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    {</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;          1.0f,   2.0f,</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;         13.0f,  21.0f,</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        144.0f, 233.0f,</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        233.0f, 144.0f,</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;         21.0f,  13.0f,</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;          2.0f,   1.0f</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    };</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    testParams.m_ExpectedOutputData =</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    {</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;          1.0f,   1.4f,   1.8f,   2.0f,   2.0f,</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;         13.0f,  16.2f,  19.4f,  21.0f,  21.0f,</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        144.0f, 179.6f, 215.2f, 233.0f, 233.0f,</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        233.0f, 197.4f, 161.8f, 144.0f, 144.0f,</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;         21.0f,  17.8f,  14.6f,  13.0f,  13.0f,</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;          2.0f,   1.6f,   1.2f,   1.0f,   1.0f</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    };</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    testParams.SetInQuantParams(1.0f, 0);</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keywordflow">return</span> ResizeTestImpl&lt;4, ArmnnType&gt;(workloadFactory, memoryManager, testParams);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f"><div class="ttname"><a href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::ResizeMethod::Bilinear</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a34a7419aea3fe50b6c046b1bd2467182"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34a7419aea3fe50b6c046b1bd2467182">&#9670;&nbsp;</a></span>ResizeBilinearMinTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; ResizeBilinearMinTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_resize_test_impl_8cpp_source.xhtml#l00255">255</a> of file <a class="el" href="_resize_test_impl_8cpp_source.xhtml">ResizeTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::Bilinear</a>.</p>
<div class="fragment"><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;{</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    ResizeTestParams testParams;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    testParams.m_ResizeMethod = <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::ResizeMethod::Bilinear</a>;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    testParams.m_DataLayout   = dataLayout;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    testParams.m_InputShape  = { 1, 2, 3, 5 };</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    testParams.m_OutputShape = { 1, 2, 2, 3 };</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    testParams.m_InputData =</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    {</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;         1.5f,  3.0f,  4.5f,  6.0f,  7.5f,</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;         9.0f, 10.5f, 12.0f, 13.5f, 15.0f,</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        16.5f, 18.0f, 19.5f, 21.0f, 22.5f,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        16.5f, 18.0f, 19.5f, 21.0f, 22.5f,</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;         9.0f, 10.5f, 12.0f, 13.5f, 15.0f,</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;         1.5f,  3.0f,  4.5f,  6.0f,  7.5f</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    };</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    testParams.m_ExpectedOutputData =</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    {</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;         1.50f,  4.00f,  6.50f,</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        12.75f, 15.25f, 17.75f,</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        16.50f, 19.00f, 21.50f,</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;         5.25f,  7.75f, 10.25f</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    };</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    testParams.SetInOutQuantParams(1.5f, -1);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordflow">return</span> ResizeTestImpl&lt;4, ArmnnType&gt;(workloadFactory, memoryManager, testParams);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f"><div class="ttname"><a href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::ResizeMethod::Bilinear</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa064b0204bbf393de5712227c78dbadd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa064b0204bbf393de5712227c78dbadd">&#9670;&nbsp;</a></span>ResizeBilinearNopTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; ResizeBilinearNopTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_resize_test_impl_8cpp_source.xhtml#l00143">143</a> of file <a class="el" href="_resize_test_impl_8cpp_source.xhtml">ResizeTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::Bilinear</a>.</p>
<div class="fragment"><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    ResizeTestParams testParams;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    testParams.m_ResizeMethod = <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::ResizeMethod::Bilinear</a>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    testParams.m_DataLayout   = dataLayout;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    testParams.m_InputShape  = { 1, 2, 4, 4 };</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    testParams.m_OutputShape = testParams.m_InputShape;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    testParams.m_InputData =</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        1.0f, 2.0f, 3.0f, 4.0f,</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        2.0f, 3.0f, 4.0f, 5.0f,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        3.0f, 4.0f, 5.0f, 6.0f,</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        4.0f, 5.0f, 6.0f, 7.0f,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        1.0f, 2.0f, 3.0f, 4.0f,</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        2.0f, 3.0f, 4.0f, 5.0f,</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        3.0f, 4.0f, 5.0f, 6.0f,</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        4.0f, 5.0f, 6.0f, 7.0f</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    };</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    testParams.m_ExpectedOutputData = testParams.m_InputData;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    testParams.SetInOutQuantParams(1.5f, 3);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">return</span> ResizeTestImpl&lt;4, ArmnnType&gt;(workloadFactory, memoryManager, testParams);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f"><div class="ttname"><a href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::ResizeMethod::Bilinear</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a05a20c3e942d8088ddb3e572b601da33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05a20c3e942d8088ddb3e572b601da33">&#9670;&nbsp;</a></span>ResizeBilinearSqMinTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; ResizeBilinearSqMinTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_resize_test_impl_8cpp_source.xhtml#l00215">215</a> of file <a class="el" href="_resize_test_impl_8cpp_source.xhtml">ResizeTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::Bilinear</a>.</p>
<div class="fragment"><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;{</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    ResizeTestParams testParams;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    testParams.m_ResizeMethod = <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::ResizeMethod::Bilinear</a>;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    testParams.m_DataLayout   = dataLayout;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    testParams.m_InputShape  = { 1, 2, 4, 4 };</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    testParams.m_OutputShape = { 1, 2, 2, 2 };</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    testParams.m_InputData =</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        1.0f, 2.0f, 3.0f, 4.0f,</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        2.0f, 3.0f, 4.0f, 5.0f,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        3.0f, 4.0f, 5.0f, 6.0f,</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        4.0f, 5.0f, 6.0f, 7.0f,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        7.0f, 6.0f, 5.0f, 4.0f,</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        6.0f, 5.0f, 4.0f, 3.0f,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        5.0f, 4.0f, 3.0f, 2.0f,</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        4.0f, 3.0f, 2.0f, 1.0f</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    };</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    testParams.m_ExpectedOutputData =</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    {</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        1.0f, 3.0f,</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        3.0f, 5.0f,</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        7.0f, 5.0f,</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        5.0f, 3.0f</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    };</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    testParams.SetInOutQuantParams(3.141592f, 3);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordflow">return</span> ResizeTestImpl&lt;4, ArmnnType&gt;(workloadFactory, memoryManager, testParams);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f"><div class="ttname"><a href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::ResizeMethod::Bilinear</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aaf1a58bdaf53efb1093601746773df9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf1a58bdaf53efb1093601746773df9a">&#9670;&nbsp;</a></span>ResizeNearestNeighborMagTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; ResizeNearestNeighborMagTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>inQuantScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>inQuantOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>outQuantScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>outQuantOffset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_resize_test_impl_8cpp_source.xhtml#l00487">487</a> of file <a class="el" href="_resize_test_impl_8cpp_source.xhtml">ResizeTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::NearestNeighbor</a>.</p>
<div class="fragment"><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;{</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    ResizeTestParams testParams;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    testParams.m_ResizeMethod = <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a>;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    testParams.m_DataLayout   = dataLayout;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    testParams.m_InputShape  = { 1, 2, 3, 2 };</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    testParams.m_OutputShape = { 1, 2, 3, 5 };</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    testParams.m_InputData =</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    {</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        0.183005f, 2.379065f,</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        1.054970f, 1.302565f,</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        2.400595f, 0.688960f,</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;        2.400595f, 0.688960f,</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        1.054970f, 1.302565f,</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        0.183005f, 2.379065f,</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    };</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    testParams.m_ExpectedOutputData =</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    {</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        0.183005f, 0.183005f, 0.183005f, 2.379065f, 2.379065f,</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        1.054970f, 1.054970f, 1.054970f, 1.302565f, 1.302565f,</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        2.400595f, 2.400595f, 2.400595f, 0.688960f, 0.688960f,</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        2.400595f, 2.400595f, 2.400595f, 0.688960f, 0.688960f,</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        1.054970f, 1.054970f, 1.054970f, 1.302565f, 1.302565f,</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        0.183005f, 0.183005f, 0.183005f, 2.379065f, 2.379065f</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    };</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    testParams.SetInQuantParams(inQuantScale, inQuantOffset);</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    testParams.SetOutQuantParams(outQuantScale, outQuantOffset);</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <span class="keywordflow">return</span> ResizeTestImpl&lt;4, ArmnnType&gt;(workloadFactory, memoryManager, testParams);</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f"><div class="ttname"><a href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5a75f31efb36868e8f2c7223426313db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a75f31efb36868e8f2c7223426313db">&#9670;&nbsp;</a></span>ResizeNearestNeighborMinTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; ResizeNearestNeighborMinTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_resize_test_impl_8cpp_source.xhtml#l00449">449</a> of file <a class="el" href="_resize_test_impl_8cpp_source.xhtml">ResizeTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::NearestNeighbor</a>.</p>
<div class="fragment"><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;{</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        ResizeTestParams testParams;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    testParams.m_ResizeMethod = <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a>;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    testParams.m_DataLayout   = dataLayout;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    testParams.m_InputShape  = { 1, 2, 3, 5 };</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    testParams.m_OutputShape = { 1, 2, 2, 3 };</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    testParams.m_InputData =</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    {</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;         1.5f,  3.0f,  4.5f,  6.0f,  7.5f,</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;         9.0f, 10.5f, 12.0f, 13.5f, 15.0f,</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        16.5f, 18.0f, 19.5f, 21.0f, 22.5f,</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        16.5f, 18.0f, 19.5f, 21.0f, 22.5f,</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;         9.0f, 10.5f, 12.0f, 13.5f, 15.0f,</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;         1.5f,  3.0f,  4.5f,  6.0f,  7.5f</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    };</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    testParams.m_ExpectedOutputData =</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    {</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;         1.5f,  3.0f,  6.0f,</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;         9.0f, 10.5f, 13.5f,</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        16.5f, 18.0f, 21.0f,</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;         9.0f, 10.5f, 13.5f</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    };</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    testParams.SetInOutQuantParams(1.5f, -1);</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <span class="keywordflow">return</span> ResizeTestImpl&lt;4, ArmnnType&gt;(workloadFactory, memoryManager, testParams);</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f"><div class="ttname"><a href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6d1df786604fb3121d7f255bc3bbe952"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d1df786604fb3121d7f255bc3bbe952">&#9670;&nbsp;</a></span>ResizeNearestNeighborNopTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; ResizeNearestNeighborNopTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_resize_test_impl_8cpp_source.xhtml#l00337">337</a> of file <a class="el" href="_resize_test_impl_8cpp_source.xhtml">ResizeTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::NearestNeighbor</a>.</p>
<div class="fragment"><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;{</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    ResizeTestParams testParams;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    testParams.m_ResizeMethod = <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a>;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    testParams.m_DataLayout   = dataLayout;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    testParams.m_InputShape  = { 1, 2, 4, 4 };</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    testParams.m_OutputShape = testParams.m_InputShape;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    testParams.m_InputData =</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    {</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        1.0f, 2.0f, 3.0f, 4.0f,</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        2.0f, 3.0f, 4.0f, 5.0f,</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        3.0f, 4.0f, 5.0f, 6.0f,</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        4.0f, 5.0f, 6.0f, 7.0f,</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        1.0f, 2.0f, 3.0f, 4.0f,</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        2.0f, 3.0f, 4.0f, 5.0f,</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        3.0f, 4.0f, 5.0f, 6.0f,</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        4.0f, 5.0f, 6.0f, 7.0f</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    };</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    testParams.m_ExpectedOutputData = testParams.m_InputData;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    testParams.SetInOutQuantParams(1.5f, 3);</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordflow">return</span> ResizeTestImpl&lt;4, ArmnnType&gt;(workloadFactory, memoryManager, testParams);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f"><div class="ttname"><a href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7fa8169c343d8e7fb11eb7750b06bef5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7fa8169c343d8e7fb11eb7750b06bef5">&#9670;&nbsp;</a></span>ResizeNearestNeighborSqMinTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; ResizeNearestNeighborSqMinTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_resize_test_impl_8cpp_source.xhtml#l00409">409</a> of file <a class="el" href="_resize_test_impl_8cpp_source.xhtml">ResizeTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::NearestNeighbor</a>.</p>
<div class="fragment"><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;{</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    ResizeTestParams testParams;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    testParams.m_ResizeMethod = <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a>;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    testParams.m_DataLayout   = dataLayout;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    testParams.m_InputShape  = { 1, 2, 4, 4 };</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    testParams.m_OutputShape = { 1, 2, 2, 2 };</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    testParams.m_InputData =</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    {</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        1.0f, 2.0f, 3.0f, 4.0f,</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        2.0f, 3.0f, 4.0f, 5.0f,</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        3.0f, 4.0f, 5.0f, 6.0f,</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        4.0f, 5.0f, 6.0f, 7.0f,</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        7.0f, 6.0f, 5.0f, 4.0f,</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        6.0f, 5.0f, 4.0f, 3.0f,</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        5.0f, 4.0f, 3.0f, 2.0f,</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        4.0f, 3.0f, 2.0f, 1.0f</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    };</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    testParams.m_ExpectedOutputData =</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    {</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        1.0f, 3.0f,</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        3.0f, 5.0f,</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        7.0f, 5.0f,</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        5.0f, 3.0f</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    };</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    testParams.SetInOutQuantParams(3.141592f, 3);</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="keywordflow">return</span> ResizeTestImpl&lt;4, ArmnnType&gt;(workloadFactory, memoryManager, testParams);</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f"><div class="ttname"><a href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad8a2ca082563b114f8ad4c9cecf68185"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8a2ca082563b114f8ad4c9cecf68185">&#9670;&nbsp;</a></span>SimpleResizeBilinearTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; SimpleResizeBilinearTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_resize_test_impl_8cpp_source.xhtml#l00176">176</a> of file <a class="el" href="_resize_test_impl_8cpp_source.xhtml">ResizeTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::Bilinear</a>.</p>
<div class="fragment"><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;{</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    ResizeTestParams testParams;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    testParams.m_ResizeMethod = <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::ResizeMethod::Bilinear</a>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    testParams.m_DataLayout   = dataLayout;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    testParams.m_InputShape  = { 1, 2, 2, 2 };</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    testParams.m_OutputShape = { 1, 2, 1, 1 };</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    testParams.m_InputData =</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;          1.0f, 255.0f,</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        200.0f, 250.0f,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        250.0f, 200.0f,</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        250.0f,   1.0f</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    };</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="comment">// The &#39;resize&#39; operation projects the top-left corner of output texels into the input image,</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="comment">// then figures out the interpolants and weights. Note this is different to projecting the centre of the</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="comment">// output texel. Thus, for a input matrix of 2x2, we&#39;ll expect the output 1x1 matrix to contain, as</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="comment">// its single element, the value that was at position (0,0) of the input matrix (rather than an average,</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="comment">// which we would expect if projecting the centre).</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    testParams.m_ExpectedOutputData =</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;          1.0f,</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        250.0f</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    };</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    testParams.SetInOutQuantParams(0.1567f, 1);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordflow">return</span> ResizeTestImpl&lt;4, ArmnnType&gt;(workloadFactory, memoryManager, testParams);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f"><div class="ttname"><a href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::ResizeMethod::Bilinear</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a49c8f922a49a5a66e2b12b928855a8c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49c8f922a49a5a66e2b12b928855a8c3">&#9670;&nbsp;</a></span>SimpleResizeNearestNeighborTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; SimpleResizeNearestNeighborTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_resize_test_impl_8cpp_source.xhtml#l00370">370</a> of file <a class="el" href="_resize_test_impl_8cpp_source.xhtml">ResizeTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::NearestNeighbor</a>.</p>
<div class="fragment"><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;{</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    ResizeTestParams testParams;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    testParams.m_ResizeMethod = <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a>;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    testParams.m_DataLayout   = dataLayout;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    testParams.m_InputShape  = { 1, 2, 2, 2 };</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    testParams.m_OutputShape = { 1, 2, 1, 1 };</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    testParams.m_InputData =</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    {</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;          1.0f, 255.0f,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        200.0f, 250.0f,</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        250.0f, 200.0f,</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        250.0f,   1.0f</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    };</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="comment">// The &#39;resize&#39; operation projects the top-left corner of output texels into the input image,</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="comment">// then figures out the interpolants and weights. Note this is different to projecting the centre of the</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="comment">// output texel. Thus, for a input matrix of 2x2, we&#39;ll expect the output 1x1 matrix to contain, as</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="comment">// its single element, the value that was at position (0,0) of the input matrix (rather than an average,</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="comment">// which we would expect if projecting the centre).</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    testParams.m_ExpectedOutputData =</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    {</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;          1.0f,</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        250.0f</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    };</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    testParams.SetInOutQuantParams(0.1567f, 1);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="keywordflow">return</span> ResizeTestImpl&lt;4, ArmnnType&gt;(workloadFactory, memoryManager, testParams);</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f"><div class="ttname"><a href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_resize_test_impl_8hpp.xhtml">ResizeTestImpl.hpp</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:48 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
