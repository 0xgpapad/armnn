<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: ClQLstmWorkload Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_cl_q_lstm_workload.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_cl_q_lstm_workload-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ClQLstmWorkload Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_cl_q_lstm_workload_8hpp_source.xhtml">ClQLstmWorkload.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ClQLstmWorkload:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_cl_q_lstm_workload.png" usemap="#ClQLstmWorkload_map" alt=""/>
  <map id="ClQLstmWorkload_map" name="ClQLstmWorkload_map">
<area href="classarmnn_1_1_base_workload.xhtml" alt="BaseWorkload&lt; QLstmQueueDescriptor &gt;" shape="rect" coords="0,56,249,80"/>
<area href="classarmnn_1_1_i_workload.xhtml" title="Workload interface to enqueue a layer computation. " alt="IWorkload" shape="rect" coords="0,0,249,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac5e2ac62e002b3034ac01a668cde90bb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_q_lstm_workload.xhtml#ac5e2ac62e002b3034ac01a668cde90bb">ClQLstmWorkload</a> (const <a class="el" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">QLstmQueueDescriptor</a> &amp;descriptor, const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;<a class="el" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>)</td></tr>
<tr class="separator:ac5e2ac62e002b3034ac01a668cde90bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae071e8822437c78baea75c3aef3a263a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_q_lstm_workload.xhtml#ae071e8822437c78baea75c3aef3a263a">Execute</a> () const override</td></tr>
<tr class="separator:ae071e8822437c78baea75c3aef3a263a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_base_workload"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_base_workload')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_base_workload.xhtml">BaseWorkload&lt; QLstmQueueDescriptor &gt;</a></td></tr>
<tr class="memitem:af2ef420610280dc5a661cd3d4836d5a2 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#af2ef420610280dc5a661cd3d4836d5a2">BaseWorkload</a> (const <a class="el" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">QLstmQueueDescriptor</a> &amp;descriptor, const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;info)</td></tr>
<tr class="separator:af2ef420610280dc5a661cd3d4836d5a2 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81627f96ba06d76e147f7d392a8117ed inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a81627f96ba06d76e147f7d392a8117ed">PostAllocationConfigure</a> () override</td></tr>
<tr class="separator:a81627f96ba06d76e147f7d392a8117ed inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a965cf380c7adf547d0f14b3f6d1da249 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">QLstmQueueDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a965cf380c7adf547d0f14b3f6d1da249">GetData</a> () const</td></tr>
<tr class="separator:a965cf380c7adf547d0f14b3f6d1da249 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29c2c6dd77c6fe10674fc6876751cbce inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_guid.xhtml">profiling::ProfilingGuid</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a29c2c6dd77c6fe10674fc6876751cbce">GetGuid</a> () const final</td></tr>
<tr class="separator:a29c2c6dd77c6fe10674fc6876751cbce inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_i_workload"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_i_workload')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_i_workload.xhtml">IWorkload</a></td></tr>
<tr class="memitem:a69c83c02ae8de866bc7a46c49e69c1ba inherit pub_methods_classarmnn_1_1_i_workload"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_workload.xhtml#a69c83c02ae8de866bc7a46c49e69c1ba">~IWorkload</a> ()</td></tr>
<tr class="separator:a69c83c02ae8de866bc7a46c49e69c1ba inherit pub_methods_classarmnn_1_1_i_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab81312bd5e64cbae2803de9f243bdb32 inherit pub_methods_classarmnn_1_1_i_workload"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_workload.xhtml#ab81312bd5e64cbae2803de9f243bdb32">RegisterDebugCallback</a> (const <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">DebugCallbackFunction</a> &amp;)</td></tr>
<tr class="separator:ab81312bd5e64cbae2803de9f243bdb32 inherit pub_methods_classarmnn_1_1_i_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classarmnn_1_1_base_workload"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classarmnn_1_1_base_workload')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classarmnn_1_1_base_workload.xhtml">BaseWorkload&lt; QLstmQueueDescriptor &gt;</a></td></tr>
<tr class="memitem:a0a487c549c63319505095b855ea3c195 inherit pro_attribs_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">QLstmQueueDescriptor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a></td></tr>
<tr class="separator:a0a487c549c63319505095b855ea3c195 inherit pro_attribs_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a902044db290170b8467ed4697b7fed24 inherit pro_attribs_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1profiling_1_1_profiling_guid.xhtml">profiling::ProfilingGuid</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a902044db290170b8467ed4697b7fed24">m_Guid</a></td></tr>
<tr class="separator:a902044db290170b8467ed4697b7fed24 inherit pro_attribs_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_cl_q_lstm_workload_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="_cl_q_lstm_workload_8hpp_source.xhtml">ClQLstmWorkload.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac5e2ac62e002b3034ac01a668cde90bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5e2ac62e002b3034ac01a668cde90bb">&#9670;&nbsp;</a></span>ClQLstmWorkload()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_cl_q_lstm_workload.xhtml">ClQLstmWorkload</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">QLstmQueueDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_q_lstm_workload_8cpp_source.xhtml#l00017">17</a> of file <a class="el" href="_cl_q_lstm_workload_8cpp_source.xhtml">ClQLstmWorkload.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    : BaseWorkload&lt;QLstmQueueDescriptor&gt;(descriptor, <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    arm_compute::LSTMParams&lt;arm_compute::ICLTensor&gt; qLstmParams;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="comment">// Mandatory params</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    m_InputToForgetWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    BuildArmComputeTensor(*m_InputToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a3ea82566d98c5a657c76c3d851c47848">m_InputToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    m_InputToCellWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    BuildArmComputeTensor(*m_InputToCellWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a28ad98d17603fd8b12e046f8ece58970">m_InputToCellWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    m_InputToOutputWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    BuildArmComputeTensor(*m_InputToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a83dc9086b2e4a4e4cadb66bd874df798">m_InputToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    m_RecurrentToForgetWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    BuildArmComputeTensor(*m_RecurrentToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a45d73e66cbb2b65049e4016c20657ccf">m_RecurrentToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    m_RecurrentToCellWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    BuildArmComputeTensor(*m_RecurrentToCellWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aea142bd50ffb93631c2e08324ec92a1e">m_RecurrentToCellWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    m_RecurrentToOutputWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    BuildArmComputeTensor(*m_RecurrentToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#adebc1771e5a1f4b113a7aa594ea74d2c">m_RecurrentToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    m_ForgetGateBiasTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    BuildArmComputeTensor(*m_ForgetGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aba3ffe91d818266b8785ce971548eb59">m_ForgetGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    m_CellBiasTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    BuildArmComputeTensor(*m_CellBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a75980b5795efd899a0c678a06a900c6d">m_CellBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    m_OutputGateBiasTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    BuildArmComputeTensor(*m_OutputGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a332551528a4b3534c2d6c89ce816fcd9">m_OutputGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">// Create tensors for optional params if they are enabled</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">m_PeepholeEnabled</a>)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        m_CellToInputWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="comment">// In ACL this is categorised as a CIFG param and not a Peephole param</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            BuildArmComputeTensor(*m_CellToInputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">m_CellToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        }</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        m_CellToForgetWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        BuildArmComputeTensor(*m_CellToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">m_CellToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        m_CellToOutputWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        BuildArmComputeTensor(*m_CellToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">m_CellToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="comment">// Set Peephole params</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        qLstmParams.set_peephole_params(m_CellToForgetWeightsTensor.get(),</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                        m_CellToOutputWeightsTensor.get());</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">m_ProjectionEnabled</a>)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        m_ProjectionWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        BuildArmComputeTensor(*m_ProjectionWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">m_ProjectionWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        m_ProjectionBiasTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            BuildArmComputeTensor(*m_ProjectionBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="comment">// Set projection params</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        qLstmParams.set_projection_params(</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            m_ProjectionWeightsTensor.get(),</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a> != <span class="keyword">nullptr</span> ? m_ProjectionBiasTensor.get() : <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a4a8ec49f130084445d44297549254780">m_LayerNormEnabled</a>)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        m_InputLayerNormWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            BuildArmComputeTensor(*m_InputLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">m_InputLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        m_ForgetLayerNormWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        BuildArmComputeTensor(*m_ForgetLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">m_ForgetLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        m_CellLayerNormWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        BuildArmComputeTensor(*m_CellLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">m_CellLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        m_OutputLayerNormWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        BuildArmComputeTensor(*m_OutputLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">m_OutputLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        qLstmParams.set_layer_normalization_params(</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">m_InputLayerNormWeights</a> != <span class="keyword">nullptr</span> ? m_InputLayerNormWeightsTensor.get() : <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            m_ForgetLayerNormWeightsTensor.get(),</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            m_CellLayerNormWeightsTensor.get(),</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            m_OutputLayerNormWeightsTensor.get());</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        m_InputToInputWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        BuildArmComputeTensor(*m_InputToInputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">m_InputToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        m_RecurrentToInputWeightsTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        BuildArmComputeTensor(*m_RecurrentToInputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">m_RecurrentToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        m_InputGateBiasTensor = std::make_unique&lt;arm_compute::CLTensor&gt;();</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        BuildArmComputeTensor(*m_InputGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#acb3aade8fae984f7293e222dcbe66030">m_InputGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        qLstmParams.set_cifg_params(</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            m_InputToInputWeightsTensor.get(),</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            m_RecurrentToInputWeightsTensor.get(),</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">m_CellToInputWeights</a>      != <span class="keyword">nullptr</span> ? m_CellToInputWeightsTensor.get()      : <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            m_InputGateBiasTensor.get());</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="comment">// Input/Output tensors</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keyword">const</span> arm_compute::ICLTensor&amp; input         = <span class="keyword">static_cast&lt;</span>IClTensorHandle*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>[0])-&gt;GetTensor();</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keyword">const</span> arm_compute::ICLTensor&amp; outputStateIn = <span class="keyword">static_cast&lt;</span>IClTensorHandle*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>[1])-&gt;GetTensor();</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">const</span> arm_compute::ICLTensor&amp; cellStateIn   = <span class="keyword">static_cast&lt;</span>IClTensorHandle*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>[2])-&gt;GetTensor();</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    arm_compute::ICLTensor&amp; outputStateOut = <span class="keyword">static_cast&lt;</span>IClTensorHandle*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a>[0])-&gt;GetTensor();</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    arm_compute::ICLTensor&amp; cellStateOut   = <span class="keyword">static_cast&lt;</span>IClTensorHandle*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a>[1])-&gt;GetTensor();</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    arm_compute::ICLTensor&amp; output         = <span class="keyword">static_cast&lt;</span>IClTensorHandle*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a>[2])-&gt;GetTensor();</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="comment">// Set scalar descriptor params</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    qLstmParams.set_cell_clip_params(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ac81fb0e66dc623dc37c77f219f53a6d3">m_CellClip</a>);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    qLstmParams.set_projection_clip_params(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#aa6a518b65088f34803b3214334bdff61">m_ProjectionClip</a>);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    qLstmParams.set_hidden_state_params(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a4556cbd764d4848d8ad0637a9eed580d">m_HiddenStateZeroPoint</a>,</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                                        <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#af8f724af7210b52529216feefa993c98">m_HiddenStateScale</a>);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    qLstmParams.set_matmul_scale_params(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a09e1f097944f61cc901240f9300364cf">m_InputIntermediateScale</a>,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                        <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#afec7f36158448f723b426a9527acb189">m_ForgetIntermediateScale</a>,</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                                        <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a0477ee1b44ace6090119178eea78cb0b">m_CellIntermediateScale</a>,</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                        <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#aa43409f9b457352c95c89f20ce5d844d">m_OutputIntermediateScale</a>);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    m_QLstmLayer.configure(&amp;input,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                           m_InputToForgetWeightsTensor.get(),</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                           m_InputToCellWeightsTensor.get(),</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                           m_InputToOutputWeightsTensor.get(),</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                           m_RecurrentToForgetWeightsTensor.get(),</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                           m_RecurrentToCellWeightsTensor.get(),</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                           m_RecurrentToOutputWeightsTensor.get(),</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                           m_ForgetGateBiasTensor.get(),</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                           m_CellBiasTensor.get(),</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                           m_OutputGateBiasTensor.get(),</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                           &amp;cellStateIn,</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                           &amp;outputStateIn,</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                           &amp;cellStateOut,</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                           &amp;outputStateOut,</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                           &amp;output,</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                           qLstmParams);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="comment">// InitializeArmComputeTensorData for mandatory params</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_InputToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a3ea82566d98c5a657c76c3d851c47848">m_InputToForgetWeights</a>);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_InputToCellWeightsTensor,   <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a28ad98d17603fd8b12e046f8ece58970">m_InputToCellWeights</a>);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_InputToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a83dc9086b2e4a4e4cadb66bd874df798">m_InputToOutputWeights</a>);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_RecurrentToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a45d73e66cbb2b65049e4016c20657ccf">m_RecurrentToForgetWeights</a>);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_RecurrentToCellWeightsTensor,   <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aea142bd50ffb93631c2e08324ec92a1e">m_RecurrentToCellWeights</a>);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_RecurrentToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#adebc1771e5a1f4b113a7aa594ea74d2c">m_RecurrentToOutputWeights</a>);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_ForgetGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aba3ffe91d818266b8785ce971548eb59">m_ForgetGateBias</a>);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_CellBiasTensor,       <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a75980b5795efd899a0c678a06a900c6d">m_CellBias</a>);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_OutputGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a332551528a4b3534c2d6c89ce816fcd9">m_OutputGateBias</a>);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_InputToInputWeightsTensor,     <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">m_InputToInputWeights</a>);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_RecurrentToInputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">m_RecurrentToInputWeights</a>);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_InputGateBiasTensor,           <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#acb3aade8fae984f7293e222dcbe66030">m_InputGateBias</a>);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    }</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">m_ProjectionEnabled</a>)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_ProjectionWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">m_ProjectionWeights</a>);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_ProjectionBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a>);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">m_PeepholeEnabled</a>)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_CellToInputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">m_CellToInputWeights</a>);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_CellToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">m_CellToForgetWeights</a>);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_CellToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">m_CellToOutputWeights</a>);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a4a8ec49f130084445d44297549254780">m_LayerNormEnabled</a>)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        {</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_InputLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">m_InputLayerNormWeights</a>);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        }</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_ForgetLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">m_ForgetLayerNormWeights</a>);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_CellLayerNormWeightsTensor,   <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">m_CellLayerNormWeights</a>);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">InitializeArmComputeClTensorData</a>(*m_OutputLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">m_OutputLayerNormWeights</a>);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    }</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    m_QLstmLayer.prepare();</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    FreeUnusedTensors();</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_acefa49d7faf26933e27e473e7bdb4175"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">armnn::QLstmQueueDescriptor::m_CellToForgetWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00559">WorkloadData.hpp:559</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_af3c52626a6f05597d82ed095d0765962"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">armnn::QLstmQueueDescriptor::m_ProjectionWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ProjectionWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00565">WorkloadData.hpp:565</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a46747c3d0b99968be0b37d74bc9687dd"><div class="ttname"><a href="namespacearmnn.xhtml#a46747c3d0b99968be0b37d74bc9687dd">armnn::InitializeArmComputeClTensorData</a></div><div class="ttdeci">void InitializeArmComputeClTensorData(arm_compute::CLTensor &amp;clTensor, const ConstCpuTensorHandle *handle)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_utils_8hpp_source.xhtml#l00090">ClWorkloadUtils.hpp:90</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_a2837b4396f20c956952d1a7286cab5f8"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">armnn::QLstmDescriptor::m_PeepholeEnabled</a></div><div class="ttdeci">bool m_PeepholeEnabled</div><div class="ttdoc">Enable/disable peephole. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01131">Descriptors.hpp:1131</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a2ba352eb1fdf6dc5ecf7f2e6b6b48f94"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">armnn::QLstmQueueDescriptor::m_ProjectionBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ProjectionBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00566">WorkloadData.hpp:566</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_af8f724af7210b52529216feefa993c98"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#af8f724af7210b52529216feefa993c98">armnn::QLstmDescriptor::m_HiddenStateScale</a></div><div class="ttdeci">float m_HiddenStateScale</div><div class="ttdoc">Hidden State quantization scale. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01147">Descriptors.hpp:1147</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a453a4af385d0c060c9aac990fceaa1ef"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">armnn::QLstmQueueDescriptor::m_ForgetLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ForgetLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00568">WorkloadData.hpp:568</a></div></div>
<div class="ttc" id="classarmnn_1_1_base_workload_xhtml_a0a487c549c63319505095b855ea3c195"><div class="ttname"><a href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">armnn::BaseWorkload&lt; QLstmQueueDescriptor &gt;::m_Data</a></div><div class="ttdeci">const QLstmQueueDescriptor m_Data</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8hpp_source.xhtml#l00046">Workload.hpp:46</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_aa43409f9b457352c95c89f20ce5d844d"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#aa43409f9b457352c95c89f20ce5d844d">armnn::QLstmDescriptor::m_OutputIntermediateScale</a></div><div class="ttdeci">float m_OutputIntermediateScale</div><div class="ttdoc">Output intermediate quantization scale. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01143">Descriptors.hpp:1143</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a518f0195d0278a892b49649b8860d17f"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">armnn::QLstmQueueDescriptor::m_CellLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00569">WorkloadData.hpp:569</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_aea142bd50ffb93631c2e08324ec92a1e"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aea142bd50ffb93631c2e08324ec92a1e">armnn::QLstmQueueDescriptor::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00556">WorkloadData.hpp:556</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a98d377149071d8842d610cc0734d1cfe"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">armnn::QLstmQueueDescriptor::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00554">WorkloadData.hpp:554</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a332551528a4b3534c2d6c89ce816fcd9"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a332551528a4b3534c2d6c89ce816fcd9">armnn::QLstmQueueDescriptor::m_OutputGateBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00564">WorkloadData.hpp:564</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a75980b5795efd899a0c678a06a900c6d"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a75980b5795efd899a0c678a06a900c6d">armnn::QLstmQueueDescriptor::m_CellBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00563">WorkloadData.hpp:563</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00049">WorkloadData.hpp:49</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a6f74071b0e07bbe2cb20a8f78826e084"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">armnn::QLstmQueueDescriptor::m_CellToOutputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00560">WorkloadData.hpp:560</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_aa3f07e27230d6d99adc2c82ba681df2b"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">armnn::QLstmQueueDescriptor::m_OutputLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_OutputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00570">WorkloadData.hpp:570</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_a4a8ec49f130084445d44297549254780"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#a4a8ec49f130084445d44297549254780">armnn::QLstmDescriptor::m_LayerNormEnabled</a></div><div class="ttdeci">bool m_LayerNormEnabled</div><div class="ttdoc">Enable/disable layer normalization. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01135">Descriptors.hpp:1135</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a3ea82566d98c5a657c76c3d851c47848"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a3ea82566d98c5a657c76c3d851c47848">armnn::QLstmQueueDescriptor::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00551">WorkloadData.hpp:551</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_aa6a518b65088f34803b3214334bdff61"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#aa6a518b65088f34803b3214334bdff61">armnn::QLstmDescriptor::m_ProjectionClip</a></div><div class="ttdeci">float m_ProjectionClip</div><div class="ttdoc">Clipping threshold value for the projection. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01127">Descriptors.hpp:1127</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_a09e1f097944f61cc901240f9300364cf"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#a09e1f097944f61cc901240f9300364cf">armnn::QLstmDescriptor::m_InputIntermediateScale</a></div><div class="ttdeci">float m_InputIntermediateScale</div><div class="ttdoc">Input intermediate quantization scale. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01137">Descriptors.hpp:1137</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_afec7f36158448f723b426a9527acb189"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#afec7f36158448f723b426a9527acb189">armnn::QLstmDescriptor::m_ForgetIntermediateScale</a></div><div class="ttdeci">float m_ForgetIntermediateScale</div><div class="ttdoc">Forget intermediate quantization scale. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01139">Descriptors.hpp:1139</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a5c1c0a7ead7273788976c9e97cffaab7"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">armnn::QLstmQueueDescriptor::m_CellToInputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00558">WorkloadData.hpp:558</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_ac81fb0e66dc623dc37c77f219f53a6d3"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#ac81fb0e66dc623dc37c77f219f53a6d3">armnn::QLstmDescriptor::m_CellClip</a></div><div class="ttdeci">float m_CellClip</div><div class="ttdoc">Clipping threshold value for the cell state. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01125">Descriptors.hpp:1125</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_adebc1771e5a1f4b113a7aa594ea74d2c"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#adebc1771e5a1f4b113a7aa594ea74d2c">armnn::QLstmQueueDescriptor::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00557">WorkloadData.hpp:557</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a6abd491bb99ffe88bd472c1ae5a1ed1a"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">armnn::QueueDescriptor::m_Outputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Outputs</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00031">WorkloadData.hpp:31</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_a6c9de81fc65b3c4924cab11907075a17"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">armnn::QLstmDescriptor::m_ProjectionEnabled</a></div><div class="ttdeci">bool m_ProjectionEnabled</div><div class="ttdoc">Enable/disable the projection layer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01133">Descriptors.hpp:1133</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_acb3aade8fae984f7293e222dcbe66030"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#acb3aade8fae984f7293e222dcbe66030">armnn::QLstmQueueDescriptor::m_InputGateBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00561">WorkloadData.hpp:561</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a4b50e46a6810018f3edecfb68b2a76b3"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">armnn::QueueDescriptor::m_Inputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Inputs</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00030">WorkloadData.hpp:30</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a9cc28aa4fff6ba9a8abdb340c1abdd57"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">armnn::QLstmQueueDescriptor::m_InputLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00567">WorkloadData.hpp:567</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a45d73e66cbb2b65049e4016c20657ccf"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a45d73e66cbb2b65049e4016c20657ccf">armnn::QLstmQueueDescriptor::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00555">WorkloadData.hpp:555</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_aba3ffe91d818266b8785ce971548eb59"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aba3ffe91d818266b8785ce971548eb59">armnn::QLstmQueueDescriptor::m_ForgetGateBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00562">WorkloadData.hpp:562</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_a0477ee1b44ace6090119178eea78cb0b"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#a0477ee1b44ace6090119178eea78cb0b">armnn::QLstmDescriptor::m_CellIntermediateScale</a></div><div class="ttdeci">float m_CellIntermediateScale</div><div class="ttdoc">Cell intermediate quantization scale. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01141">Descriptors.hpp:1141</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a83dc9086b2e4a4e4cadb66bd874df798"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a83dc9086b2e4a4e4cadb66bd874df798">armnn::QLstmQueueDescriptor::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00553">WorkloadData.hpp:553</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_ad474e5c51a0b194ef32e812b86c0cbdb"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">armnn::QLstmDescriptor::m_CifgEnabled</a></div><div class="ttdeci">bool m_CifgEnabled</div><div class="ttdoc">Enable/disable CIFG (coupled input &amp; forget gate). </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01129">Descriptors.hpp:1129</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_cpu_tensor_handle_xhtml_a66e8f43a5b42b500871ed96e15419567"><div class="ttname"><a href="classarmnn_1_1_const_cpu_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">armnn::ConstCpuTensorHandle::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo() const</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_tensor_handle_8hpp_source.xhtml#l00037">CpuTensorHandle.hpp:37</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a08a1932be591c315a512a877d38b22df"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">armnn::QLstmQueueDescriptor::m_InputToInputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00550">WorkloadData.hpp:550</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_a4556cbd764d4848d8ad0637a9eed580d"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#a4556cbd764d4848d8ad0637a9eed580d">armnn::QLstmDescriptor::m_HiddenStateZeroPoint</a></div><div class="ttdeci">int32_t m_HiddenStateZeroPoint</div><div class="ttdoc">Hidden State zero point. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01145">Descriptors.hpp:1145</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a28ad98d17603fd8b12e046f8ece58970"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a28ad98d17603fd8b12e046f8ece58970">armnn::QLstmQueueDescriptor::m_InputToCellWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00552">WorkloadData.hpp:552</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae071e8822437c78baea75c3aef3a263a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae071e8822437c78baea75c3aef3a263a">&#9670;&nbsp;</a></span>Execute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Execute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_workload.xhtml#a72ae00e6604850c8798c5e0d825ee7e4">IWorkload</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_q_lstm_workload_8cpp_source.xhtml#l00225">225</a> of file <a class="el" href="_cl_q_lstm_workload_8cpp_source.xhtml">ClQLstmWorkload.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;{</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    m_QLstmLayer.run();</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/backends/cl/workloads/<a class="el" href="_cl_q_lstm_workload_8hpp_source.xhtml">ClQLstmWorkload.hpp</a></li>
<li>src/backends/cl/workloads/<a class="el" href="_cl_q_lstm_workload_8cpp_source.xhtml">ClQLstmWorkload.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_cl_q_lstm_workload.xhtml">ClQLstmWorkload</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:51 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
