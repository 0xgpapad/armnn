<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/profiling/test/FileOnlyProfilingDecoratorTests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_file_only_profiling_decorator_tests_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">FileOnlyProfilingDecoratorTests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_file_only_profiling_decorator_tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2019 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_filesystem_8hpp.xhtml">Filesystem.hpp</a>&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_profiling_service_8hpp.xhtml">ProfilingService.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_runtime_8hpp.xhtml">Runtime.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_print_packet_header_handler_8hpp.xhtml">PrintPacketHeaderHandler.hpp</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_timeline_packet_handler_8hpp.xhtml">TestTimelinePacketHandler.hpp</a>&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;boost/filesystem.hpp&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;boost/numeric/conversion/cast.hpp&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;boost/test/unit_test.hpp&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;cstdio&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;sys/stat.h&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearmnn_1_1profiling.xhtml">armnn::profiling</a>;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a>;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacestd_1_1chrono__literals.xhtml">std::chrono_literals</a>;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">class </span>FileOnlyHelperService : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">ProfilingService</a></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="comment">// Wait for a notification from the send thread</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a9873e084badb22c4b5790529a9c7b704">WaitForPacketsSent</a>(uint32_t timeout = 1000)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#adc4b29d0bfe41252ef520acfa5bc897c">ProfilingService::WaitForPacketSent</a>(m_ProfilingService, timeout);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    }</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">armnn::profiling::ProfilingService</a> m_ProfilingService;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;};</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<a class="code" href="_output_shape_of_squeeze_8cpp.xhtml#ae3a6cb217a792718f2bd0e8f45e3ca9e">BOOST_AUTO_TEST_SUITE</a>(FileOnlyProfilingDecoratorTests)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a35f8c5b0911f87463330196366f3754e">   38</a></span>&#160;<a class="code" href="namespacestd.xhtml">std</a>::<span class="keywordtype">string</span> <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a35f8c5b0911f87463330196366f3754e">UniqueFileName</a>()</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    std::time_t t = std::time(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordtype">char</span> mbstr[100];</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    std::strftime(mbstr, <span class="keyword">sizeof</span>(mbstr), <span class="stringliteral">&quot;%Y_%m_%d_%H_%M_%S_&quot;</span>, std::localtime(&amp;t));</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    std::stringstream ss;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    ss &lt;&lt; mbstr;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    ss &lt;&lt; t;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    ss &lt;&lt; <span class="stringliteral">&quot;.bin&quot;</span>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> ss.str();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c5eec3424683a2c93a72995ce400da9">   50</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a10d15f3df1ab52b3b915a4be1dbf386b">BOOST_AUTO_TEST_CASE</a>(TestFileOnlyProfiling)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">// This test requires the CpuRef backend to be enabled</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="namespacearmnn.xhtml#ac2807505b850738bc8a1991ce669dd47">BackendRegistryInstance</a>().IsBackendRegistered(<span class="stringliteral">&quot;CpuRef&quot;</span>))</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// Create a temporary file name.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    boost::filesystem::path <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a1b7be354d3c06a46dc247e0e3341198d">tempPath</a> = boost::filesystem::temp_directory_path();</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    boost::filesystem::path <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aea1c98db5f166be1d82cbabcbc4d8c12">tempFile</a> = <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a35f8c5b0911f87463330196366f3754e">UniqueFileName</a>();</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    tempPath                         = tempPath / <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aea1c98db5f166be1d82cbabcbc4d8c12">tempFile</a>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::Runtime::CreationOptions</a> creationOptions;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    creationOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">m_ProfilingOptions</a>.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a26d42007440bb01a1a6d0ab3b5a657ee">m_EnableProfiling</a>     = <span class="keyword">true</span>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    creationOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">m_ProfilingOptions</a>.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#ad8f8cb971cad412664cd7df58df7eb1e">m_FileOnly</a>            = <span class="keyword">true</span>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    creationOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">m_ProfilingOptions</a>.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a2239347f38747f993c324bdd8b1eb146">m_CapturePeriod</a>       = 100;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    creationOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">m_ProfilingOptions</a>.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a5b304d775657afbf1fb724af57add374">m_TimelineEnabled</a>     = <span class="keyword">true</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="namespacearmnn_1_1profiling.xhtml#a96b0827ffefa36d7ec2b4ac34a922d12">ILocalPacketHandlerSharedPtr</a> localPacketHandlerPtr = std::make_shared&lt;TestTimelinePacketHandler&gt;();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    creationOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">m_ProfilingOptions</a>.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a3c0e8ba6298293937517b6e5c6a79264">m_LocalPacketHandlers</a>.push_back(localPacketHandlerPtr);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="classarmnn_1_1_runtime.xhtml">armnn::Runtime</a> runtime(creationOptions);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="comment">// Load a simple network</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// build up the structure of the network</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">INetworkPtr</a> net(<a class="code" href="classarmnn_1_1_i_network.xhtml#a706f7345af3f18f4b16e226a672214c6">INetwork::Create</a>());</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* input = net-&gt;AddInputLayer(0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a> descriptor;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* normalize = net-&gt;AddNormalizationLayer(descriptor, <span class="stringliteral">&quot;normalization&quot;</span>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* output = net-&gt;AddOutputLayer(0, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    input-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(normalize-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    normalize-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(output-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    input-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({ 1, 1, 4, 4 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">DataType::Float32</a>));</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    normalize-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({ 1, 1, 4, 4 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">DataType::Float32</a>));</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// optimize the network</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    std::vector&lt;armnn::BackendId&gt; backends = { <a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::Compute::CpuRef</a> };</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> optNet = <a class="code" href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685">Optimize</a>(*net, backends, runtime.<a class="code" href="classarmnn_1_1_runtime.xhtml#a25505c77f282c0295765d81c86514539">GetDeviceSpec</a>());</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="comment">// Load it into the runtime. It should succeed.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">armnn::NetworkId</a> netId;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    BOOST_TEST(runtime.<a class="code" href="classarmnn_1_1_runtime.xhtml#ae225e29e38b44860a32d766053a383dc">LoadNetwork</a>(netId, std::move(optNet)) == <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38">Status::Success</a>);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml">TestTimelinePacketHandler</a>*<span class="keyword">&gt;</span>(localPacketHandlerPtr.get())-&gt;WaitOnInferenceCompletion(3000);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<a class="code" href="namespacearmnn.xhtml#a10d15f3df1ab52b3b915a4be1dbf386b">BOOST_AUTO_TEST_CASE</a>(DumpOutgoingValidFileEndToEnd, * boost::unit_test::disabled())</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="comment">// Create a temporary file name.</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    boost::filesystem::path <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a1b7be354d3c06a46dc247e0e3341198d">tempPath</a> = boost::filesystem::temp_directory_path();</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aea1c98db5f166be1d82cbabcbc4d8c12">  104</a></span>&#160;    boost::filesystem::path <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aea1c98db5f166be1d82cbabcbc4d8c12">tempFile</a> = <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a35f8c5b0911f87463330196366f3754e">UniqueFileName</a>();</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a1b7be354d3c06a46dc247e0e3341198d">  105</a></span>&#160;    tempPath                         = tempPath / <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aea1c98db5f166be1d82cbabcbc4d8c12">tempFile</a>;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">  106</a></span>&#160;    armnn::Runtime::CreationOptions::ExternalProfilingOptions <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>;</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#affc4c5e8c0f3e0fac268deec9b481941">  107</a></span>&#160;    options.m_EnableProfiling     = <span class="keyword">true</span>;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a73b5da4091289681d269007956523e9a">  108</a></span>&#160;    options.m_FileOnly            = <span class="keyword">true</span>;</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#af38445f045fb017409cb3e54916b49ac">  109</a></span>&#160;    options.m_IncomingCaptureFile = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a1650fc89b05bd1d5aaa8d42eb11fb337">  110</a></span>&#160;    options.m_OutgoingCaptureFile = tempPath.string();</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a9a702f9af6f619f04b6accd536581917">  111</a></span>&#160;    options.m_CapturePeriod       = 100;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a07b3da250d2239acfc6005ff63f1625c">  113</a></span>&#160;    FileOnlyHelperService <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a07b3da250d2239acfc6005ff63f1625c">helper</a>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="comment">// Enable the profiling service</span></div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ac3b2ed181156194522b1a46ffd8b50b5">  116</a></span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">armnn::profiling::ProfilingService</a> <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ac3b2ed181156194522b1a46ffd8b50b5">profilingService</a>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ae7a3588986b93e13fda47c7ce4b0627c">ResetExternalProfilingOptions</a>(options, <span class="keyword">true</span>);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="comment">// Bring the profiling service to the &quot;WaitingForAck&quot; state</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aec0783b5a136e042adcc47bae4fe5291">Update</a>();</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aec0783b5a136e042adcc47bae4fe5291">Update</a>();</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad8d263669817cf577760710ff6c96bb9">GetCurrentState</a>() == <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a1dc1edc76d5b3c0325f00002f4c841f5">ProfilingState::WaitingForAck</a>);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aec0783b5a136e042adcc47bae4fe5291">Update</a>();</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="comment">// First packet sent will be the SendStreamMetaDataPacket, it&#39;s possible though unlikely that it will be sent twice</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="comment">// The second or possibly third packet will be the CounterDirectoryPacket which means the</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="comment">// ConnectionAcknowledgedCommandHandler has set the state to active</span></div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ae92a562353e3e0f6db4b9c6f4c573587">  129</a></span>&#160;    uint32_t <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ae92a562353e3e0f6db4b9c6f4c573587">packetCount</a> = 0;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aeb41e29e05a71ba26a6fe5291477b4f9">  130</a></span>&#160;    <span class="keywordflow">while</span>(profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad8d263669817cf577760710ff6c96bb9">GetCurrentState</a>() != <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d">ProfilingState::Active</a> &amp;&amp; packetCount &lt; 3)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">if</span>(!helper.WaitForPacketsSent())</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            BOOST_FAIL(<span class="stringliteral">&quot;Timeout waiting for packets&quot;</span>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        packetCount++;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad8d263669817cf577760710ff6c96bb9">GetCurrentState</a>() == <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d">ProfilingState::Active</a>);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="comment">// Minimum test here is to check that the file was created.</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(boost::filesystem::exists(tempPath.c_str()) == <span class="keyword">true</span>);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="comment">// Increment a counter.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a0ae21870422d53982556e0e31d6b19ee">IsCounterRegistered</a>(0) == <span class="keyword">true</span>);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a6c2d955d387944f5b7ad37ebb435a37f">IncrementCounterValue</a>(0);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a5a8454419fcb43e456ad6ad1b2143402">GetAbsoluteCounterValue</a>(0) &gt; 0);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a8f9bcec7e9c0fb2fe463c120a0fb43fe">GetDeltaCounterValue</a>(0) &gt; 0);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="comment">// At this point the profiling service is active and we&#39;ve activated all the counters. Waiting a collection</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="comment">// period should be enough to have some data in the file.</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="comment">// Wait for 1 collection period plus a bit of overhead..</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    helper.WaitForPacketsSent();</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment">// In order to flush the files we need to gracefully close the profiling service.</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    options.m_EnableProfiling = <span class="keyword">false</span>;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ae7a3588986b93e13fda47c7ce4b0627c">ResetExternalProfilingOptions</a>(options, <span class="keyword">true</span>);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="comment">// The output file size should be greater than 0.</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(<a class="code" href="namespacearmnn_utils_1_1_filesystem.xhtml#a1c541d9c526205112781efcf3224f29c">armnnUtils::Filesystem::GetFileSize</a>(tempPath.string().c_str()) &gt; 0);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="comment">// Delete the tmp file.</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a>(<a class="code" href="namespacearmnn_utils_1_1_filesystem.xhtml#a7d64caad10c705910e723dd8920a9dba">armnnUtils::Filesystem::Remove</a>(tempPath.string().c_str()));</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<a class="code" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END</a>()</div><div class="ttc" id="_output_shape_of_squeeze_8cpp_xhtml_ae3a6cb217a792718f2bd0e8f45e3ca9e"><div class="ttname"><a href="_output_shape_of_squeeze_8cpp.xhtml#ae3a6cb217a792718f2bd0e8f45e3ca9e">BOOST_AUTO_TEST_SUITE</a></div><div class="ttdeci">BOOST_AUTO_TEST_SUITE(TensorflowLiteParser)</div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_a0ae21870422d53982556e0e31d6b19ee"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a0ae21870422d53982556e0e31d6b19ee">armnn::profiling::ProfilingService::IsCounterRegistered</a></div><div class="ttdeci">bool IsCounterRegistered(uint16_t counterUid) const override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00233">ProfilingService.cpp:233</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a96b0827ffefa36d7ec2b4ac34a922d12"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a96b0827ffefa36d7ec2b4ac34a922d12">armnn::profiling::ILocalPacketHandlerSharedPtr</a></div><div class="ttdeci">std::shared_ptr&lt; ILocalPacketHandler &gt; ILocalPacketHandlerSharedPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_local_packet_handler_8hpp_source.xhtml#l00044">ILocalPacketHandler.hpp:44</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_a5a8454419fcb43e456ad6ad1b2143402"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a5a8454419fcb43e456ad6ad1b2143402">armnn::profiling::ProfilingService::GetAbsoluteCounterValue</a></div><div class="ttdeci">uint32_t GetAbsoluteCounterValue(uint16_t counterUid) const override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00238">ProfilingService.cpp:238</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00061">INetwork.hpp:61</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64"><div class="ttname"><a href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::Compute::CpuRef</a></div><div class="ttdoc">CPU Execution: Reference C++ kernels. </div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_ae92a562353e3e0f6db4b9c6f4c573587"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#ae92a562353e3e0f6db4b9c6f4c573587">packetCount</a></div><div class="ttdeci">uint32_t packetCount</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00129">FileOnlyProfilingDecoratorTests.cpp:129</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_ad8d263669817cf577760710ff6c96bb9"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad8d263669817cf577760710ff6c96bb9">armnn::profiling::ProfilingService::GetCurrentState</a></div><div class="ttdeci">ProfilingState GetCurrentState() const</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00223">ProfilingService.cpp:223</a></div></div>
<div class="ttc" id="classarmnn_1_1_runtime_xhtml_a25505c77f282c0295765d81c86514539"><div class="ttname"><a href="classarmnn_1_1_runtime.xhtml#a25505c77f282c0295765d81c86514539">armnn::Runtime::GetDeviceSpec</a></div><div class="ttdeci">virtual const IDeviceSpec &amp; GetDeviceSpec() const override</div><div class="ttdef"><b>Definition:</b> <a href="_runtime_8hpp_source.xhtml#l00071">Runtime.hpp:71</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00053">Tensor.hpp:53</a></div></div>
<div class="ttc" id="_runtime_8hpp_xhtml"><div class="ttname"><a href="_runtime_8hpp.xhtml">Runtime.hpp</a></div></div>
<div class="ttc" id="_test_timeline_packet_handler_8hpp_xhtml"><div class="ttname"><a href="_test_timeline_packet_handler_8hpp.xhtml">TestTimelinePacketHandler.hpp</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a35f8c5b0911f87463330196366f3754e"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a35f8c5b0911f87463330196366f3754e">UniqueFileName</a></div><div class="ttdeci">std::string UniqueFileName()</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00038">FileOnlyProfilingDecoratorTests.cpp:38</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ac2807505b850738bc8a1991ce669dd47"><div class="ttname"><a href="namespacearmnn.xhtml#ac2807505b850738bc8a1991ce669dd47">armnn::BackendRegistryInstance</a></div><div class="ttdeci">BackendRegistry &amp; BackendRegistryInstance()</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00013">BackendRegistry.cpp:13</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a83015160d8c67d5d77735eb0d4033d9a"><div class="ttname"><a href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">armnn::NetworkId</a></div><div class="ttdeci">int NetworkId</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00020">IRuntime.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2020 ARM Limited. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00025">00_introduction.dox:25</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a26d42007440bb01a1a6d0ab3b5a657ee"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a26d42007440bb01a1a6d0ab3b5a657ee">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_EnableProfiling</a></div><div class="ttdeci">bool m_EnableProfiling</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00074">IRuntime.hpp:74</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_aec0783b5a136e042adcc47bae4fe5291"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aec0783b5a136e042adcc47bae4fe5291">armnn::profiling::ProfilingService::Update</a></div><div class="ttdeci">void Update()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00103">ProfilingService.cpp:103</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_ad8f8cb971cad412664cd7df58df7eb1e"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#ad8f8cb971cad412664cd7df58df7eb1e">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_FileOnly</a></div><div class="ttdeci">bool m_FileOnly</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00078">IRuntime.hpp:78</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_a6c2d955d387944f5b7ad37ebb435a37f"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a6c2d955d387944f5b7ad37ebb435a37f">armnn::profiling::ProfilingService::IncrementCounterValue</a></div><div class="ttdeci">uint32_t IncrementCounterValue(uint16_t counterUid) override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00302">ProfilingService.cpp:302</a></div></div>
<div class="ttc" id="_filesystem_8hpp_xhtml"><div class="ttname"><a href="_filesystem_8hpp.xhtml">Filesystem.hpp</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a0c262ba6f6c189a2d092d127c1b7627b"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a></div><div class="ttdeci">BOOST_CHECK(profilingService.GetCurrentState()==ProfilingState::WaitingForAck)</div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a5ee4a6c9a2481245487b1b1a70d20fd0"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">armnn::IOutputSlot::SetTensorInfo</a></div><div class="ttdeci">virtual void SetTensorInfo(const TensorInfo &amp;tensorInfo)=0</div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_adc4b29d0bfe41252ef520acfa5bc897c"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#adc4b29d0bfe41252ef520acfa5bc897c">armnn::profiling::ProfilingService::WaitForPacketSent</a></div><div class="ttdeci">bool WaitForPacketSent(ProfilingService &amp;instance, uint32_t timeout=1000)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8hpp_source.xhtml#l00285">ProfilingService.hpp:285</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_timeline_packet_handler_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml">armnn::profiling::TestTimelinePacketHandler</a></div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8hpp_source.xhtml#l00045">TestTimelinePacketHandler.hpp:45</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_a8f9bcec7e9c0fb2fe463c120a0fb43fe"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a8f9bcec7e9c0fb2fe463c120a0fb43fe">armnn::profiling::ProfilingService::GetDeltaCounterValue</a></div><div class="ttdeci">uint32_t GetDeltaCounterValue(uint16_t counterUid) override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00246">ProfilingService.cpp:246</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00147">BackendId.hpp:147</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a3c0e8ba6298293937517b6e5c6a79264"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a3c0e8ba6298293937517b6e5c6a79264">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_LocalPacketHandlers</a></div><div class="ttdeci">std::vector&lt; armnn::profiling::ILocalPacketHandlerSharedPtr &gt; m_LocalPacketHandlers</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00081">IRuntime.hpp:81</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38"><div class="ttname"><a href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38">armnn::Status::Success</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a1b7be354d3c06a46dc247e0e3341198d"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a1b7be354d3c06a46dc247e0e3341198d">tempPath</a></div><div class="ttdeci">tempPath</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00105">FileOnlyProfilingDecoratorTests.cpp:105</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a82e98ef05fd67036d1195ba17174d685"><div class="ttname"><a href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685">armnn::Optimize</a></div><div class="ttdeci">IOptimizedNetworkPtr Optimize(const INetwork &amp;network, const std::vector&lt; BackendId &gt; &amp;backendPreferences, const IDeviceSpec &amp;deviceSpec, const OptimizerOptions &amp;options=OptimizerOptions(), Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; messages=EmptyOptional())</div><div class="ttdoc">Create an optimized version of the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01003">Network.cpp:1003</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d">armnn::profiling::ProfilingState::Active</a></div></div>
<div class="ttc" id="namespacearmnn_utils_1_1_filesystem_xhtml_a7d64caad10c705910e723dd8920a9dba"><div class="ttname"><a href="namespacearmnn_utils_1_1_filesystem.xhtml#a7d64caad10c705910e723dd8920a9dba">armnnUtils::Filesystem::Remove</a></div><div class="ttdeci">bool Remove(const char *path)</div><div class="ttdef"><b>Definition:</b> <a href="_filesystem_8cpp_source.xhtml#l00047">Filesystem.cpp:47</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_aea1c98db5f166be1d82cbabcbc4d8c12"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#aea1c98db5f166be1d82cbabcbc4d8c12">tempFile</a></div><div class="ttdeci">boost::filesystem::path tempFile</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00104">FileOnlyProfilingDecoratorTests.cpp:104</a></div></div>
<div class="ttc" id="namespacearmnn_utils_1_1_filesystem_xhtml_a1c541d9c526205112781efcf3224f29c"><div class="ttname"><a href="namespacearmnn_utils_1_1_filesystem.xhtml#a1c541d9c526205112781efcf3224f29c">armnnUtils::Filesystem::GetFileSize</a></div><div class="ttdeci">long long GetFileSize(const char *path)</div><div class="ttdef"><b>Definition:</b> <a href="_filesystem_8cpp_source.xhtml#l00021">Filesystem.cpp:21</a></div></div>
<div class="ttc" id="_print_packet_header_handler_8hpp_xhtml"><div class="ttname"><a href="_print_packet_header_handler_8hpp.xhtml">PrintPacketHeaderHandler.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a674efcf6cbdb9e831d653ff0e821fb38"><div class="ttname"><a href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">armnn::IOptimizedNetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IOptimizedNetwork, void(*)(IOptimizedNetwork *network)&gt; IOptimizedNetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00573">INetwork.hpp:573</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_ae7a3588986b93e13fda47c7ce4b0627c"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ae7a3588986b93e13fda47c7ce4b0627c">armnn::profiling::ProfilingService::ResetExternalProfilingOptions</a></div><div class="ttdeci">void ResetExternalProfilingOptions(const ExternalProfilingOptions &amp;options, bool resetProfilingService=false)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00032">ProfilingService.cpp:32</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml">armnn::profiling</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00168">BackendId.hpp:168</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a10d15f3df1ab52b3b915a4be1dbf386b"><div class="ttname"><a href="namespacearmnn.xhtml#a10d15f3df1ab52b3b915a4be1dbf386b">armnn::BOOST_AUTO_TEST_CASE</a></div><div class="ttdeci">BOOST_AUTO_TEST_CASE(CheckConvolution2dLayer)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00268">ConstTensorLayerVisitor.cpp:268</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acb0c054138599582d5a5f537e9798806a1dc1edc76d5b3c0325f00002f4c841f5"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a1dc1edc76d5b3c0325f00002f4c841f5">armnn::profiling::ProfilingState::WaitingForAck</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_ac3b2ed181156194522b1a46ffd8b50b5"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#ac3b2ed181156194522b1a46ffd8b50b5">profilingService</a></div><div class="ttdeci">armnn::profiling::ProfilingService profilingService</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00116">FileOnlyProfilingDecoratorTests.cpp:116</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00042">IRuntime.hpp:42</a></div></div>
<div class="ttc" id="_profiler_tests_8cpp_xhtml_af7f71af5c6c124222dd1c42c5df892f4"><div class="ttname"><a href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END</a></div><div class="ttdeci">BOOST_AUTO_TEST_SUITE_END()</div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">armnn::profiling::ProfilingService</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8hpp_source.xhtml#l00047">ProfilingService.hpp:47</a></div></div>
<div class="ttc" id="classarmnn_1_1_runtime_xhtml_ae225e29e38b44860a32d766053a383dc"><div class="ttname"><a href="classarmnn_1_1_runtime.xhtml#ae225e29e38b44860a32d766053a383dc">armnn::Runtime::LoadNetwork</a></div><div class="ttdeci">virtual Status LoadNetwork(NetworkId &amp;networkIdOut, IOptimizedNetworkPtr network) override</div><div class="ttdoc">Loads a complete network into the Runtime. </div><div class="ttdef"><b>Definition:</b> <a href="_runtime_8cpp_source.xhtml#l00046">Runtime.cpp:46</a></div></div>
<div class="ttc" id="classarmnn_1_1_runtime_xhtml"><div class="ttname"><a href="classarmnn_1_1_runtime.xhtml">armnn::Runtime</a></div><div class="ttdef"><b>Definition:</b> <a href="_runtime_8hpp_source.xhtml#l00030">Runtime.hpp:30</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a9873e084badb22c4b5790529a9c7b704"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a9873e084badb22c4b5790529a9c7b704">WaitForPacketsSent</a></div><div class="ttdeci">helper WaitForPacketsSent()</div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a6ec9e0eb66d7d6a01240492a0b18104c"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">armnn::IConnectableLayer::GetInputSlot</a></div><div class="ttdeci">virtual const IInputSlot &amp; GetInputSlot(unsigned int index) const =0</div><div class="ttdoc">Get a const input slot handle by slot index. </div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a2239347f38747f993c324bdd8b1eb146"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a2239347f38747f993c324bdd8b1eb146">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_CapturePeriod</a></div><div class="ttdeci">uint32_t m_CapturePeriod</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00079">IRuntime.hpp:79</a></div></div>
<div class="ttc" id="namespacestd_1_1chrono__literals_xhtml"><div class="ttname"><a href="namespacestd_1_1chrono__literals.xhtml">chrono_literals</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a5b304d775657afbf1fb724af57add374"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a5b304d775657afbf1fb724af57add374">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_TimelineEnabled</a></div><div class="ttdeci">bool m_TimelineEnabled</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00075">IRuntime.hpp:75</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index. </div></div>
<div class="ttc" id="namespacearmnn_xhtml_ace74f6f9feb95a964a49d79458232703"><div class="ttname"><a href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; INetwork, void(*)(INetwork *network)&gt; INetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00101">INetwork.hpp:101</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_ac1835f8756a9f03c02fcf9664e3a0fce"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">armnn::IOutputSlot::Connect</a></div><div class="ttdeci">virtual int Connect(IInputSlot &amp;destination)=0</div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a6560146509197f3e197d8d36f76c1347"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a></div><div class="ttdeci">armnn::Runtime::CreationOptions::ExternalProfilingOptions options</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00106">FileOnlyProfilingDecoratorTests.cpp:106</a></div></div>
<div class="ttc" id="structarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00559">Descriptors.hpp:559</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_a30412a91cadff138686eaeb12f5357cc"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">armnn::IRuntime::CreationOptions::m_ProfilingOptions</a></div><div class="ttdeci">ExternalProfilingOptions m_ProfilingOptions</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00083">IRuntime.hpp:83</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a07b3da250d2239acfc6005ff63f1625c"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a07b3da250d2239acfc6005ff63f1625c">helper</a></div><div class="ttdeci">FileOnlyHelperService helper</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00113">FileOnlyProfilingDecoratorTests.cpp:113</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_network_xhtml_a706f7345af3f18f4b16e226a672214c6"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a706f7345af3f18f4b16e226a672214c6">armnn::INetwork::Create</a></div><div class="ttdeci">static INetworkPtr Create()</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00050">Network.cpp:50</a></div></div>
<div class="ttc" id="_profiling_service_8hpp_xhtml"><div class="ttname"><a href="_profiling_service_8hpp.xhtml">ProfilingService.hpp</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_637c692f14729569dd2eac0c18e2a54a.xhtml">profiling</a></li><li class="navelem"><a class="el" href="dir_6b1198f6e738611120ec65b09506d2f8.xhtml">test</a></li><li class="navelem"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml">FileOnlyProfilingDecoratorTests.cpp</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:46 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
