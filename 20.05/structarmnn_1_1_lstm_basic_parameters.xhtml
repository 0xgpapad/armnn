<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: LstmBasicParameters Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarmnn_1_1_lstm_basic_parameters.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="structarmnn_1_1_lstm_basic_parameters-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">LstmBasicParameters Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_lstm_layer_8hpp_source.xhtml">LstmLayer.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a5a0d8af26a6aad1e5be521ea7dc550eb"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a5a0d8af26a6aad1e5be521ea7dc550eb">m_InputToForgetWeights</a></td></tr>
<tr class="memdesc:a5a0d8af26a6aad1e5be521ea7dc550eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [input_size, num_units].  <a href="#a5a0d8af26a6aad1e5be521ea7dc550eb">More...</a><br /></td></tr>
<tr class="separator:a5a0d8af26a6aad1e5be521ea7dc550eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14ab2bc78421c417c4f97a65b0bd78f9"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a14ab2bc78421c417c4f97a65b0bd78f9">m_InputToCellWeights</a></td></tr>
<tr class="memdesc:a14ab2bc78421c417c4f97a65b0bd78f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [input_size, num_units].  <a href="#a14ab2bc78421c417c4f97a65b0bd78f9">More...</a><br /></td></tr>
<tr class="separator:a14ab2bc78421c417c4f97a65b0bd78f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8d897b8d282f25a6eb784c4aaa98df6"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_basic_parameters.xhtml#ae8d897b8d282f25a6eb784c4aaa98df6">m_InputToOutputWeights</a></td></tr>
<tr class="memdesc:ae8d897b8d282f25a6eb784c4aaa98df6"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [input_size, num_units].  <a href="#ae8d897b8d282f25a6eb784c4aaa98df6">More...</a><br /></td></tr>
<tr class="separator:ae8d897b8d282f25a6eb784c4aaa98df6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d5f129421bbe6479a66d4ed1356bf68"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a3d5f129421bbe6479a66d4ed1356bf68">m_RecurrentToForgetWeights</a></td></tr>
<tr class="memdesc:a3d5f129421bbe6479a66d4ed1356bf68"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [output_size, num_units].  <a href="#a3d5f129421bbe6479a66d4ed1356bf68">More...</a><br /></td></tr>
<tr class="separator:a3d5f129421bbe6479a66d4ed1356bf68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e8c3db3c5474f0760553ff93fbc39e6"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a6e8c3db3c5474f0760553ff93fbc39e6">m_RecurrentToCellWeights</a></td></tr>
<tr class="memdesc:a6e8c3db3c5474f0760553ff93fbc39e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [output_size, num_units].  <a href="#a6e8c3db3c5474f0760553ff93fbc39e6">More...</a><br /></td></tr>
<tr class="separator:a6e8c3db3c5474f0760553ff93fbc39e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91dda74af4085ae43913746ad817795a"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a91dda74af4085ae43913746ad817795a">m_RecurrentToOutputWeights</a></td></tr>
<tr class="memdesc:a91dda74af4085ae43913746ad817795a"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [output_size, num_units].  <a href="#a91dda74af4085ae43913746ad817795a">More...</a><br /></td></tr>
<tr class="separator:a91dda74af4085ae43913746ad817795a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e0e17d5b494993407cb75d614455ddd"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a0e0e17d5b494993407cb75d614455ddd">m_ForgetGateBias</a></td></tr>
<tr class="memdesc:a0e0e17d5b494993407cb75d614455ddd"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 1D weights tensor with dimensions [num_units].  <a href="#a0e0e17d5b494993407cb75d614455ddd">More...</a><br /></td></tr>
<tr class="separator:a0e0e17d5b494993407cb75d614455ddd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51255889cbc063130a3d691c1781c5d3"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a51255889cbc063130a3d691c1781c5d3">m_CellBias</a></td></tr>
<tr class="memdesc:a51255889cbc063130a3d691c1781c5d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 1D weights tensor with dimensions [num_units].  <a href="#a51255889cbc063130a3d691c1781c5d3">More...</a><br /></td></tr>
<tr class="separator:a51255889cbc063130a3d691c1781c5d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacb55e0992b6781a7bd3225ab6e6bb2f"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_lstm_basic_parameters.xhtml#aacb55e0992b6781a7bd3225ab6e6bb2f">m_OutputGateBias</a></td></tr>
<tr class="memdesc:aacb55e0992b6781a7bd3225ab6e6bb2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 1D weights tensor with dimensions [num_units].  <a href="#aacb55e0992b6781a7bd3225ab6e6bb2f">More...</a><br /></td></tr>
<tr class="separator:aacb55e0992b6781a7bd3225ab6e6bb2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_lstm_layer_8hpp_source.xhtml#l00054">54</a> of file <a class="el" href="_lstm_layer_8hpp_source.xhtml">LstmLayer.hpp</a>.</p>
</div><h2 class="groupheader">Member Data Documentation</h2>
<a id="a51255889cbc063130a3d691c1781c5d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51255889cbc063130a3d691c1781c5d3">&#9670;&nbsp;</a></span>m_CellBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a>&gt; m_CellBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 1D weights tensor with dimensions [num_units]. </p>

<p class="definition">Definition at line <a class="el" href="_lstm_layer_8hpp_source.xhtml#l00071">71</a> of file <a class="el" href="_lstm_layer_8hpp_source.xhtml">LstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00309">LstmLayer::Accept()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00078">LstmLayer::Clone()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00276">LstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00166">LstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="a0e0e17d5b494993407cb75d614455ddd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e0e17d5b494993407cb75d614455ddd">&#9670;&nbsp;</a></span>m_ForgetGateBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a>&gt; m_ForgetGateBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 1D weights tensor with dimensions [num_units]. </p>

<p class="definition">Definition at line <a class="el" href="_lstm_layer_8hpp_source.xhtml#l00069">69</a> of file <a class="el" href="_lstm_layer_8hpp_source.xhtml">LstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00309">LstmLayer::Accept()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00078">LstmLayer::Clone()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00276">LstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00166">LstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="a14ab2bc78421c417c4f97a65b0bd78f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14ab2bc78421c417c4f97a65b0bd78f9">&#9670;&nbsp;</a></span>m_InputToCellWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a>&gt; m_InputToCellWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [input_size, num_units]. </p>

<p class="definition">Definition at line <a class="el" href="_lstm_layer_8hpp_source.xhtml#l00059">59</a> of file <a class="el" href="_lstm_layer_8hpp_source.xhtml">LstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00309">LstmLayer::Accept()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00078">LstmLayer::Clone()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00276">LstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00166">LstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="a5a0d8af26a6aad1e5be521ea7dc550eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a0d8af26a6aad1e5be521ea7dc550eb">&#9670;&nbsp;</a></span>m_InputToForgetWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a>&gt; m_InputToForgetWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [input_size, num_units]. </p>

<p class="definition">Definition at line <a class="el" href="_lstm_layer_8hpp_source.xhtml#l00057">57</a> of file <a class="el" href="_lstm_layer_8hpp_source.xhtml">LstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00309">LstmLayer::Accept()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01525">Network::AddLstmLayer()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00078">LstmLayer::Clone()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00276">LstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00166">LstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="ae8d897b8d282f25a6eb784c4aaa98df6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8d897b8d282f25a6eb784c4aaa98df6">&#9670;&nbsp;</a></span>m_InputToOutputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a>&gt; m_InputToOutputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [input_size, num_units]. </p>

<p class="definition">Definition at line <a class="el" href="_lstm_layer_8hpp_source.xhtml#l00061">61</a> of file <a class="el" href="_lstm_layer_8hpp_source.xhtml">LstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00309">LstmLayer::Accept()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00078">LstmLayer::Clone()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00276">LstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00166">LstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="aacb55e0992b6781a7bd3225ab6e6bb2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aacb55e0992b6781a7bd3225ab6e6bb2f">&#9670;&nbsp;</a></span>m_OutputGateBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a>&gt; m_OutputGateBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 1D weights tensor with dimensions [num_units]. </p>

<p class="definition">Definition at line <a class="el" href="_lstm_layer_8hpp_source.xhtml#l00073">73</a> of file <a class="el" href="_lstm_layer_8hpp_source.xhtml">LstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00309">LstmLayer::Accept()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00078">LstmLayer::Clone()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00276">LstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00166">LstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="a6e8c3db3c5474f0760553ff93fbc39e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e8c3db3c5474f0760553ff93fbc39e6">&#9670;&nbsp;</a></span>m_RecurrentToCellWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a>&gt; m_RecurrentToCellWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [output_size, num_units]. </p>

<p class="definition">Definition at line <a class="el" href="_lstm_layer_8hpp_source.xhtml#l00065">65</a> of file <a class="el" href="_lstm_layer_8hpp_source.xhtml">LstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00309">LstmLayer::Accept()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00078">LstmLayer::Clone()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00276">LstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00166">LstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="a3d5f129421bbe6479a66d4ed1356bf68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d5f129421bbe6479a66d4ed1356bf68">&#9670;&nbsp;</a></span>m_RecurrentToForgetWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a>&gt; m_RecurrentToForgetWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [output_size, num_units]. </p>

<p class="definition">Definition at line <a class="el" href="_lstm_layer_8hpp_source.xhtml#l00063">63</a> of file <a class="el" href="_lstm_layer_8hpp_source.xhtml">LstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00309">LstmLayer::Accept()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00078">LstmLayer::Clone()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00276">LstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00166">LstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="a91dda74af4085ae43913746ad817795a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91dda74af4085ae43913746ad817795a">&#9670;&nbsp;</a></span>m_RecurrentToOutputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a>&gt; m_RecurrentToOutputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [output_size, num_units]. </p>

<p class="definition">Definition at line <a class="el" href="_lstm_layer_8hpp_source.xhtml#l00067">67</a> of file <a class="el" href="_lstm_layer_8hpp_source.xhtml">LstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00309">LstmLayer::Accept()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00078">LstmLayer::Clone()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer::CreateWorkload()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00276">LstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00166">LstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>src/armnn/layers/<a class="el" href="_lstm_layer_8hpp_source.xhtml">LstmLayer.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="structarmnn_1_1_lstm_basic_parameters.xhtml">LstmBasicParameters</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:52 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
