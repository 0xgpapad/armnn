<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: tests/CaffeYolo-Armnn/CaffeYolo-Armnn.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_caffe_yolo-_armnn_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CaffeYolo-Armnn.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_caffe_yolo-_armnn_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;../YoloInferenceTest.hpp&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_caffe_parser_8hpp.xhtml">armnnCaffeParser/ICaffeParser.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_types_utils_8hpp.xhtml">armnn/TypesUtils.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno"><a class="line" href="_caffe_yolo-_armnn_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">    9</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="_caffe_yolo-_armnn_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>* argv[])</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;{</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputTensorShape{ { 1, 3, <a class="code" href="_yolo_database_8hpp.xhtml#af74f4ad1b33fe68237cb97c9345e9e87">YoloImageHeight</a>, <a class="code" href="_yolo_database_8hpp.xhtml#a88c3339d57718f167a374ab572610ba8">YoloImageWidth</a> } };</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <span class="keyword">using</span> YoloInferenceModel = <a class="code" href="class_inference_model.xhtml">InferenceModel</a>&lt;<a class="code" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml">armnnCaffeParser::ICaffeParser</a>,</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;        <span class="keywordtype">float</span>&gt;;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keywordtype">int</span> retVal = EXIT_FAILURE;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    {</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        <span class="comment">// Coverity fix: InferenceTestMain() may throw uncaught exceptions.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        retVal = <a class="code" href="namespacearmnn_1_1test.xhtml#a7ad751ee33bdcba0656fdb6e98eb17f1">InferenceTestMain</a>(argc, argv, { 0 },</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;            [&amp;inputTensorShape]()</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;            {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                <span class="keywordflow">return</span> make_unique&lt;YoloTestCaseProvider&lt;YoloInferenceModel&gt;&gt;(</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                    [&amp;]</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                    (<span class="keyword">const</span> <a class="code" href="structarmnn_1_1test_1_1_inference_test_options.xhtml">InferenceTestOptions</a> &amp;commonOptions,</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                     <span class="keyword">typename</span> YoloInferenceModel::CommandLineOptions modelOptions)</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                    {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                        <span class="keywordflow">if</span> (!<a class="code" href="namespacearmnn_1_1test.xhtml#a8a678fb3a8864e31aeb77f857ae6fc43">ValidateDirectory</a>(modelOptions.m_ModelDir))</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                        {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                            <span class="keywordflow">return</span> std::unique_ptr&lt;YoloInferenceModel&gt;();</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                        }</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                        <span class="keyword">typename</span> YoloInferenceModel::Params modelParams;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                        modelParams.m_ModelPath = modelOptions.m_ModelDir + <span class="stringliteral">&quot;yolov1_tiny_voc2007_model.caffemodel&quot;</span>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                        modelParams.m_InputBindings = { <span class="stringliteral">&quot;data&quot;</span> };</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                        modelParams.m_OutputBindings = { <span class="stringliteral">&quot;fc12&quot;</span> };</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                        modelParams.m_InputShapes = { inputTensorShape };</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                        modelParams.m_IsModelBinary = <span class="keyword">true</span>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                        modelParams.m_ComputeDevices = modelOptions.GetComputeDevicesAsBackendIds();</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                        modelParams.m_VisualizePostOptimizationModel = modelOptions.m_VisualizePostOptimizationModel;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                        modelParams.m_EnableFp16TurboMode = modelOptions.m_EnableFp16TurboMode;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                        <span class="keywordflow">return</span> std::make_unique&lt;YoloInferenceModel&gt;(modelParams,</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                                                                    commonOptions.m_EnableProfiling,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                                                    commonOptions.m_DynamicBackendsPath);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                });</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            });</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">catch</span> (<span class="keyword">const</span> std::exception&amp; e)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="comment">// Coverity fix: BOOST_LOG_TRIVIAL (typically used to report errors) may throw an</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="comment">// exception of type std::length_error.</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="comment">// Using stderr instead in this context as there is no point in nesting try-catch blocks here.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        std::cerr &lt;&lt; <span class="stringliteral">&quot;WARNING: CaffeYolo-Armnn: An error has occurred when running &quot;</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                     <span class="stringliteral">&quot;the classifier inference tests: &quot;</span> &lt;&lt; e.what() &lt;&lt; std::endl;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> retVal;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div><div class="ttc" id="_yolo_database_8hpp_xhtml_af74f4ad1b33fe68237cb97c9345e9e87"><div class="ttname"><a href="_yolo_database_8hpp.xhtml#af74f4ad1b33fe68237cb97c9345e9e87">YoloImageHeight</a></div><div class="ttdeci">constexpr unsigned int YoloImageHeight</div><div class="ttdef"><b>Definition:</b> <a href="_yolo_database_8hpp_source.xhtml#l00051">YoloDatabase.hpp:51</a></div></div>
<div class="ttc" id="structarmnn_1_1test_1_1_inference_test_options_xhtml"><div class="ttname"><a href="structarmnn_1_1test_1_1_inference_test_options.xhtml">armnn::test::InferenceTestOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_8hpp_source.xhtml#l00056">InferenceTest.hpp:56</a></div></div>
<div class="ttc" id="class_inference_model_xhtml"><div class="ttname"><a href="class_inference_model.xhtml">InferenceModel</a></div><div class="ttdef"><b>Definition:</b> <a href="_inference_model_8hpp_source.xhtml#l00319">InferenceModel.hpp:319</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_caffe_parser_1_1_i_caffe_parser_xhtml"><div class="ttname"><a href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml">armnnCaffeParser::ICaffeParser</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_caffe_parser_8hpp_source.xhtml#l00024">ICaffeParser.hpp:24</a></div></div>
<div class="ttc" id="_types_utils_8hpp_xhtml"><div class="ttname"><a href="_types_utils_8hpp.xhtml">TypesUtils.hpp</a></div></div>
<div class="ttc" id="_yolo_database_8hpp_xhtml_a88c3339d57718f167a374ab572610ba8"><div class="ttname"><a href="_yolo_database_8hpp.xhtml#a88c3339d57718f167a374ab572610ba8">YoloImageWidth</a></div><div class="ttdeci">constexpr unsigned int YoloImageWidth</div><div class="ttdef"><b>Definition:</b> <a href="_yolo_database_8hpp_source.xhtml#l00050">YoloDatabase.hpp:50</a></div></div>
<div class="ttc" id="namespacearmnn_1_1test_xhtml_a8a678fb3a8864e31aeb77f857ae6fc43"><div class="ttname"><a href="namespacearmnn_1_1test.xhtml#a8a678fb3a8864e31aeb77f857ae6fc43">armnn::test::ValidateDirectory</a></div><div class="ttdeci">bool ValidateDirectory(std::string &amp;dir)</div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_8cpp_source.xhtml#l00092">InferenceTest.cpp:92</a></div></div>
<div class="ttc" id="_caffe_yolo-_armnn_8cpp_xhtml_a0ddf1224851353fc92bfbff6f499fa97"><div class="ttname"><a href="_caffe_yolo-_armnn_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a></div><div class="ttdeci">int main(int argc, char *argv[])</div><div class="ttdef"><b>Definition:</b> <a href="_caffe_yolo-_armnn_8cpp_source.xhtml#l00009">CaffeYolo-Armnn.cpp:9</a></div></div>
<div class="ttc" id="_i_caffe_parser_8hpp_xhtml"><div class="ttname"><a href="_i_caffe_parser_8hpp.xhtml">ICaffeParser.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_1_1test_xhtml_a7ad751ee33bdcba0656fdb6e98eb17f1"><div class="ttname"><a href="namespacearmnn_1_1test.xhtml#a7ad751ee33bdcba0656fdb6e98eb17f1">armnn::test::InferenceTestMain</a></div><div class="ttdeci">int InferenceTestMain(int argc, char *argv[], const std::vector&lt; unsigned int &gt; &amp;defaultTestCaseIds, TConstructTestCaseProvider constructTestCaseProvider)</div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_8inl_source.xhtml#l00300">InferenceTest.inl:300</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_4648a32206b18698904bc2ccafd6affa.xhtml">CaffeYolo-Armnn</a></li><li class="navelem"><a class="el" href="_caffe_yolo-_armnn_8cpp.xhtml">CaffeYolo-Armnn.cpp</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:47 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
