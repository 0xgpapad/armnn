<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: IRuntime Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_i_runtime.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classarmnn_1_1_i_runtime-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">IRuntime Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_i_runtime_8hpp_source.xhtml">IRuntime.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for IRuntime:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_i_runtime.png" usemap="#IRuntime_map" alt=""/>
  <map id="IRuntime_map" name="IRuntime_map">
<area href="classarmnn_1_1_runtime.xhtml" alt="Runtime" shape="rect" coords="0,56,59,80"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">CreationOptions</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acf44b518011359b594bf20fe444d1165"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#acf44b518011359b594bf20fe444d1165">LoadNetwork</a> (<a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> &amp;networkIdOut, <a class="el" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> network)=0</td></tr>
<tr class="memdesc:acf44b518011359b594bf20fe444d1165"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads a complete network into the <a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>.  <a href="#acf44b518011359b594bf20fe444d1165">More...</a><br /></td></tr>
<tr class="separator:acf44b518011359b594bf20fe444d1165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59c572133d8ff0136c8e13c98694fd30"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#a59c572133d8ff0136c8e13c98694fd30">LoadNetwork</a> (<a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> &amp;networkIdOut, <a class="el" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> network, std::string &amp;errorMessage)=0</td></tr>
<tr class="memdesc:a59c572133d8ff0136c8e13c98694fd30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load a complete network into the <a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>.  <a href="#a59c572133d8ff0136c8e13c98694fd30">More...</a><br /></td></tr>
<tr class="separator:a59c572133d8ff0136c8e13c98694fd30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cc77101a5437bf82fb7891c5c4a7e69"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#a7cc77101a5437bf82fb7891c5c4a7e69">LoadNetwork</a> (<a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> &amp;networkIdOut, <a class="el" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> network, std::string &amp;errorMessage, const <a class="el" href="structarmnn_1_1_i_network_properties.xhtml">INetworkProperties</a> &amp;networkProperties)=0</td></tr>
<tr class="separator:a7cc77101a5437bf82fb7891c5c4a7e69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41ac6ca444d41e6147f48a71def60d61"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#a41ac6ca444d41e6147f48a71def60d61">GetInputTensorInfo</a> (<a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> networkId, <a class="el" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a> layerId) const =0</td></tr>
<tr class="separator:a41ac6ca444d41e6147f48a71def60d61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52b521ba6b78d819895a7dbaae83ed86"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#a52b521ba6b78d819895a7dbaae83ed86">GetOutputTensorInfo</a> (<a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> networkId, <a class="el" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a> layerId) const =0</td></tr>
<tr class="separator:a52b521ba6b78d819895a7dbaae83ed86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec0dc8016a3b1e444dfc1ffb5f15195c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#aec0dc8016a3b1e444dfc1ffb5f15195c">EnqueueWorkload</a> (<a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> networkId, const <a class="el" href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">InputTensors</a> &amp;inputTensors, const <a class="el" href="namespacearmnn.xhtml#a8f091a512915d1cb29a4ebf13dfc53ea">OutputTensors</a> &amp;outputTensors)=0</td></tr>
<tr class="memdesc:aec0dc8016a3b1e444dfc1ffb5f15195c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluates a network using input in inputTensors and outputs filled into outputTensors.  <a href="#aec0dc8016a3b1e444dfc1ffb5f15195c">More...</a><br /></td></tr>
<tr class="separator:aec0dc8016a3b1e444dfc1ffb5f15195c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43a7ee9625c9c3f4140fa02c92199fd1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#a43a7ee9625c9c3f4140fa02c92199fd1">UnloadNetwork</a> (<a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> networkId)=0</td></tr>
<tr class="memdesc:a43a7ee9625c9c3f4140fa02c92199fd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unloads a network from the <a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>.  <a href="#a43a7ee9625c9c3f4140fa02c92199fd1">More...</a><br /></td></tr>
<tr class="separator:a43a7ee9625c9c3f4140fa02c92199fd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f2ccbdacfac6eb983c519976a5ece54"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="classarmnn_1_1_i_device_spec.xhtml">IDeviceSpec</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#a6f2ccbdacfac6eb983c519976a5ece54">GetDeviceSpec</a> () const =0</td></tr>
<tr class="separator:a6f2ccbdacfac6eb983c519976a5ece54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76eaa5bd91bd3958ddbe1fe6f082888a"><td class="memItemLeft" align="right" valign="top">virtual const std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_profiler.xhtml">IProfiler</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#a76eaa5bd91bd3958ddbe1fe6f082888a">GetProfiler</a> (<a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> networkId) const =0</td></tr>
<tr class="memdesc:a76eaa5bd91bd3958ddbe1fe6f082888a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the profiler corresponding to the given network id.  <a href="#a76eaa5bd91bd3958ddbe1fe6f082888a">More...</a><br /></td></tr>
<tr class="separator:a76eaa5bd91bd3958ddbe1fe6f082888a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70a22690ce44dfc49511b30456764169"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#a70a22690ce44dfc49511b30456764169">RegisterDebugCallback</a> (<a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> networkId, const <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">DebugCallbackFunction</a> &amp;func)=0</td></tr>
<tr class="memdesc:a70a22690ce44dfc49511b30456764169"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers a callback function to debug layers performing custom computations on intermediate tensors.  <a href="#a70a22690ce44dfc49511b30456764169">More...</a><br /></td></tr>
<tr class="separator:a70a22690ce44dfc49511b30456764169"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a4646ef5dbce8d3aae30fc99638226069"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#a4646ef5dbce8d3aae30fc99638226069">CreateRaw</a> (const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">CreationOptions</a> &amp;<a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>)</td></tr>
<tr class="separator:a4646ef5dbce8d3aae30fc99638226069"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad44ecd3700748dc30dc4bbe34ba5bde7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearmnn.xhtml#a150468a02bd7b2d2d061c4aaaee939f0">IRuntimePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#ad44ecd3700748dc30dc4bbe34ba5bde7">Create</a> (const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">CreationOptions</a> &amp;<a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>)</td></tr>
<tr class="separator:ad44ecd3700748dc30dc4bbe34ba5bde7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a978f3d0d34a944b40240bd130d61e3b6"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#a978f3d0d34a944b40240bd130d61e3b6">Destroy</a> (<a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a> *runtime)</td></tr>
<tr class="separator:a978f3d0d34a944b40240bd130d61e3b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ad728a798fda08188df91623caebd527c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_runtime.xhtml#ad728a798fda08188df91623caebd527c">~IRuntime</a> ()</td></tr>
<tr class="separator:ad728a798fda08188df91623caebd527c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_i_runtime_8hpp_source.xhtml#l00039">39</a> of file <a class="el" href="_i_runtime_8hpp_source.xhtml">IRuntime.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad728a798fda08188df91623caebd527c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad728a798fda08188df91623caebd527c">&#9670;&nbsp;</a></span>~IRuntime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_runtime_8hpp_source.xhtml#l00172">172</a> of file <a class="el" href="_i_runtime_8hpp_source.xhtml">IRuntime.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ad44ecd3700748dc30dc4bbe34ba5bde7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad44ecd3700748dc30dc4bbe34ba5bde7">&#9670;&nbsp;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a150468a02bd7b2d2d061c4aaaee939f0">IRuntimePtr</a> Create </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">CreationOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_runtime_8cpp_source.xhtml#l00031">31</a> of file <a class="el" href="_runtime_8cpp_source.xhtml">Runtime.cpp</a>.</p>

<p class="reference">References <a class="el" href="_runtime_8cpp_source.xhtml#l00036">IRuntime::Destroy()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_end_to_end_test_8cpp_source.xhtml#l00017">BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_json_printer_test_impl_8cpp_source.xhtml#l00119">GetSoftmaxProfilerJson()</a>, <a class="el" href="_inference_model_8hpp_source.xhtml#l00378">InferenceModel&lt; IParser, TDataType &gt;::InferenceModel()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00009">main()</a>, <a class="el" href="_network_quantizer_8cpp_source.xhtml#l00061">NetworkQuantizer::Refine()</a>, and <a class="el" href="_network_execution_utils_8hpp_source.xhtml#l00875">RunCLTuning()</a>.</p>
<div class="fragment"><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a150468a02bd7b2d2d061c4aaaee939f0">IRuntimePtr</a>(<a class="code" href="classarmnn_1_1_i_runtime.xhtml#a4646ef5dbce8d3aae30fc99638226069">CreateRaw</a>(<a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>), &amp;<a class="code" href="classarmnn_1_1_i_runtime.xhtml#a978f3d0d34a944b40240bd130d61e3b6">IRuntime::Destroy</a>);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a150468a02bd7b2d2d061c4aaaee939f0"><div class="ttname"><a href="namespacearmnn.xhtml#a150468a02bd7b2d2d061c4aaaee939f0">armnn::IRuntimePtr</a></div><div class="ttdeci">std::unique_ptr&lt; IRuntime, void(*)(IRuntime *runtime)&gt; IRuntimePtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00025">IRuntime.hpp:25</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_runtime_xhtml_a978f3d0d34a944b40240bd130d61e3b6"><div class="ttname"><a href="classarmnn_1_1_i_runtime.xhtml#a978f3d0d34a944b40240bd130d61e3b6">armnn::IRuntime::Destroy</a></div><div class="ttdeci">static void Destroy(IRuntime *runtime)</div><div class="ttdef"><b>Definition:</b> <a href="_runtime_8cpp_source.xhtml#l00036">Runtime.cpp:36</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_runtime_xhtml_a4646ef5dbce8d3aae30fc99638226069"><div class="ttname"><a href="classarmnn_1_1_i_runtime.xhtml#a4646ef5dbce8d3aae30fc99638226069">armnn::IRuntime::CreateRaw</a></div><div class="ttdeci">static IRuntime * CreateRaw(const CreationOptions &amp;options)</div><div class="ttdef"><b>Definition:</b> <a href="_runtime_8cpp_source.xhtml#l00026">Runtime.cpp:26</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a6560146509197f3e197d8d36f76c1347"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a></div><div class="ttdeci">armnn::Runtime::CreationOptions::ExternalProfilingOptions options</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00106">FileOnlyProfilingDecoratorTests.cpp:106</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4646ef5dbce8d3aae30fc99638226069"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4646ef5dbce8d3aae30fc99638226069">&#9670;&nbsp;</a></span>CreateRaw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a> * CreateRaw </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">CreationOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_runtime_8cpp_source.xhtml#l00026">26</a> of file <a class="el" href="_runtime_8cpp_source.xhtml">Runtime.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classarmnn_1_1_runtime.xhtml">Runtime</a>(<a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_runtime_xhtml"><div class="ttname"><a href="classarmnn_1_1_runtime.xhtml">armnn::Runtime</a></div><div class="ttdef"><b>Definition:</b> <a href="_runtime_8hpp_source.xhtml#l00030">Runtime.hpp:30</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a6560146509197f3e197d8d36f76c1347"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a></div><div class="ttdeci">armnn::Runtime::CreationOptions::ExternalProfilingOptions options</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00106">FileOnlyProfilingDecoratorTests.cpp:106</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a978f3d0d34a944b40240bd130d61e3b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a978f3d0d34a944b40240bd130d61e3b6">&#9670;&nbsp;</a></span>Destroy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a> *&#160;</td>
          <td class="paramname"><em>runtime</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_runtime_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="_runtime_8cpp_source.xhtml">Runtime.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_runtime_8cpp_source.xhtml#l00031">IRuntime::Create()</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keyword">delete</span> PolymorphicDowncast&lt;Runtime*&gt;(runtime);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aec0dc8016a3b1e444dfc1ffb5f15195c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec0dc8016a3b1e444dfc1ffb5f15195c">&#9670;&nbsp;</a></span>EnqueueWorkload()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> EnqueueWorkload </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a>&#160;</td>
          <td class="paramname"><em>networkId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">InputTensors</a> &amp;&#160;</td>
          <td class="paramname"><em>inputTensors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#a8f091a512915d1cb29a4ebf13dfc53ea">OutputTensors</a> &amp;&#160;</td>
          <td class="paramname"><em>outputTensors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Evaluates a network using input in inputTensors and outputs filled into outputTensors. </p>

<p>Implemented in <a class="el" href="classarmnn_1_1_runtime.xhtml#ad3be3cca4ac08a262383b96868f7123d">Runtime</a>.</p>

</div>
</div>
<a id="a6f2ccbdacfac6eb983c519976a5ece54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f2ccbdacfac6eb983c519976a5ece54">&#9670;&nbsp;</a></span>GetDeviceSpec()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="classarmnn_1_1_i_device_spec.xhtml">IDeviceSpec</a>&amp; GetDeviceSpec </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarmnn_1_1_runtime.xhtml#a25505c77f282c0295765d81c86514539">Runtime</a>.</p>

</div>
</div>
<a id="a41ac6ca444d41e6147f48a71def60d61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41ac6ca444d41e6147f48a71def60d61">&#9670;&nbsp;</a></span>GetInputTensorInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> GetInputTensorInfo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a>&#160;</td>
          <td class="paramname"><em>networkId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a>&#160;</td>
          <td class="paramname"><em>layerId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarmnn_1_1_runtime.xhtml#a7d0ddcd74d6f6438283e511480b64cc1">Runtime</a>.</p>

</div>
</div>
<a id="a52b521ba6b78d819895a7dbaae83ed86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52b521ba6b78d819895a7dbaae83ed86">&#9670;&nbsp;</a></span>GetOutputTensorInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> GetOutputTensorInfo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a>&#160;</td>
          <td class="paramname"><em>networkId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a>&#160;</td>
          <td class="paramname"><em>layerId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarmnn_1_1_runtime.xhtml#a1d5d285b79758564ee68f234e02dd2b2">Runtime</a>.</p>

</div>
</div>
<a id="a76eaa5bd91bd3958ddbe1fe6f082888a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76eaa5bd91bd3958ddbe1fe6f082888a">&#9670;&nbsp;</a></span>GetProfiler()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_i_profiler.xhtml">IProfiler</a>&gt; GetProfiler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a>&#160;</td>
          <td class="paramname"><em>networkId</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the profiler corresponding to the given network id. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">networkId</td><td>The id of the network for which to get the profile. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the requested profiler, or nullptr if not found. </dd></dl>

<p>Implemented in <a class="el" href="classarmnn_1_1_runtime.xhtml#a4bcf6ecfacedc0567e1c044f1b0823f0">Runtime</a>.</p>

</div>
</div>
<a id="acf44b518011359b594bf20fe444d1165"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf44b518011359b594bf20fe444d1165">&#9670;&nbsp;</a></span>LoadNetwork() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> LoadNetwork </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> &amp;&#160;</td>
          <td class="paramname"><em>networkIdOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a>&#160;</td>
          <td class="paramname"><em>network</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Loads a complete network into the <a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">networkIdOut</td><td>- Unique identifier for the network is returned in this reference. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">network</td><td>- Complete network to load into the <a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>. The runtime takes ownership of the network once passed in. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b" title="enumeration ">armnn::Status</a> </dd></dl>

<p>Implemented in <a class="el" href="classarmnn_1_1_runtime.xhtml#ae225e29e38b44860a32d766053a383dc">Runtime</a>.</p>

</div>
</div>
<a id="a59c572133d8ff0136c8e13c98694fd30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59c572133d8ff0136c8e13c98694fd30">&#9670;&nbsp;</a></span>LoadNetwork() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> LoadNetwork </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> &amp;&#160;</td>
          <td class="paramname"><em>networkIdOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a>&#160;</td>
          <td class="paramname"><em>network</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>errorMessage</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Load a complete network into the <a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">networkIdOut</td><td>Unique identifier for the network is returned in this reference. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">network</td><td>Complete network to load into the <a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">errorMessage</td><td>Error message if there were any errors. The runtime takes ownership of the network once passed in. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b" title="enumeration ">armnn::Status</a> </dd></dl>

<p>Implemented in <a class="el" href="classarmnn_1_1_runtime.xhtml#a115d6e9020c106d938a431e92141456e">Runtime</a>.</p>

</div>
</div>
<a id="a7cc77101a5437bf82fb7891c5c4a7e69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cc77101a5437bf82fb7891c5c4a7e69">&#9670;&nbsp;</a></span>LoadNetwork() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> LoadNetwork </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a> &amp;&#160;</td>
          <td class="paramname"><em>networkIdOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a>&#160;</td>
          <td class="paramname"><em>network</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>errorMessage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_i_network_properties.xhtml">INetworkProperties</a> &amp;&#160;</td>
          <td class="paramname"><em>networkProperties</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarmnn_1_1_runtime.xhtml#aa1ca93de061aac0fb5b59082f1b8984e">Runtime</a>.</p>

</div>
</div>
<a id="a70a22690ce44dfc49511b30456764169"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70a22690ce44dfc49511b30456764169">&#9670;&nbsp;</a></span>RegisterDebugCallback()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void RegisterDebugCallback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a>&#160;</td>
          <td class="paramname"><em>networkId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">DebugCallbackFunction</a> &amp;&#160;</td>
          <td class="paramname"><em>func</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Registers a callback function to debug layers performing custom computations on intermediate tensors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">networkId</td><td>The id of the network to register the callback. </td></tr>
    <tr><td class="paramname">func</td><td>callback function to pass to the debug layer. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarmnn_1_1_runtime.xhtml#abb2506e9166cd0467deaa9651fdade77">Runtime</a>.</p>

</div>
</div>
<a id="a43a7ee9625c9c3f4140fa02c92199fd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43a7ee9625c9c3f4140fa02c92199fd1">&#9670;&nbsp;</a></span>UnloadNetwork()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> UnloadNetwork </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">NetworkId</a>&#160;</td>
          <td class="paramname"><em>networkId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unloads a network from the <a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>. </p>
<p>At the moment this only removes the network from the m_Impl-&gt;m_Network. This might need more work in the future to be AndroidNN compliant. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">networkId</td><td>- Unique identifier for the network to be unloaded. Generated in <a class="el" href="classarmnn_1_1_i_runtime.xhtml#acf44b518011359b594bf20fe444d1165" title="Loads a complete network into the IRuntime. ">LoadNetwork()</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b" title="enumeration ">armnn::Status</a> </dd></dl>

<p>Implemented in <a class="el" href="classarmnn_1_1_runtime.xhtml#ae54a3b358f009aec340d443d038805a4">Runtime</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnn/<a class="el" href="_i_runtime_8hpp_source.xhtml">IRuntime.hpp</a></li>
<li>src/armnn/<a class="el" href="_runtime_8cpp_source.xhtml">Runtime.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:52 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
