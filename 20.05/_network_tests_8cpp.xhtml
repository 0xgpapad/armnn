<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/NetworkTests.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_network_tests_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">NetworkTests.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_graph_utils_8hpp_source.xhtml">GraphUtils.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="_layer_visitor_base_8hpp_source.xhtml">armnn/LayerVisitorBase.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_network_8hpp_source.xhtml">Network.hpp</a>&gt;</code><br />
<code>#include &lt;boost/test/unit_test.hpp&gt;</code><br />
</div>
<p><a href="_network_tests_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a654a4d0b0a06a8a2bc64538e4c2b7ead"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_network_tests_8cpp.xhtml#a654a4d0b0a06a8a2bc64538e4c2b7ead">BOOST_AUTO_TEST_CASE</a> (LayerGuids)</td></tr>
<tr class="separator:a654a4d0b0a06a8a2bc64538e4c2b7ead"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69d6be9fe15ed0c2ec6478c9278ed3df"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_network_tests_8cpp.xhtml#a69d6be9fe15ed0c2ec6478c9278ed3df">BOOST_AUTO_TEST_CASE</a> (NetworkBasic)</td></tr>
<tr class="separator:a69d6be9fe15ed0c2ec6478c9278ed3df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f487c4f7040ee948a2a9dfc2f9edd40"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_network_tests_8cpp.xhtml#a0f487c4f7040ee948a2a9dfc2f9edd40">BOOST_AUTO_TEST_CASE</a> (LayerNamesAreOptionalForINetwork)</td></tr>
<tr class="separator:a0f487c4f7040ee948a2a9dfc2f9edd40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15c2c9a0a39db945304f2ef2453fa50a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_network_tests_8cpp.xhtml#a15c2c9a0a39db945304f2ef2453fa50a">BOOST_AUTO_TEST_CASE</a> (LayerNamesAreOptionalForNetwork)</td></tr>
<tr class="separator:a15c2c9a0a39db945304f2ef2453fa50a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9263985da8354d39b3d6fc5689f8b2dd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_network_tests_8cpp.xhtml#a9263985da8354d39b3d6fc5689f8b2dd">BOOST_AUTO_TEST_CASE</a> (NetworkModification)</td></tr>
<tr class="separator:a9263985da8354d39b3d6fc5689f8b2dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae064036cc8dace533f3df544baa6ac2e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_network_tests_8cpp.xhtml#ae064036cc8dace533f3df544baa6ac2e">BOOST_AUTO_TEST_CASE</a> (NetworkModification_SplitterConcat)</td></tr>
<tr class="separator:ae064036cc8dace533f3df544baa6ac2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfc1ae08aaaaf816ecb34515c0a0e44f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_network_tests_8cpp.xhtml#adfc1ae08aaaaf816ecb34515c0a0e44f">BOOST_AUTO_TEST_CASE</a> (NetworkModification_SplitterAddition)</td></tr>
<tr class="separator:adfc1ae08aaaaf816ecb34515c0a0e44f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb8fb95510550f39dc350f3df5d69b1d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_network_tests_8cpp.xhtml#afb8fb95510550f39dc350f3df5d69b1d">BOOST_AUTO_TEST_CASE</a> (NetworkModification_SplitterMultiplication)</td></tr>
<tr class="separator:afb8fb95510550f39dc350f3df5d69b1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3fb4bb4bb661f5a3376c01477feab7e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_network_tests_8cpp.xhtml#ab3fb4bb4bb661f5a3376c01477feab7e">BOOST_AUTO_TEST_CASE</a> (Network_AddQuantize)</td></tr>
<tr class="separator:ab3fb4bb4bb661f5a3376c01477feab7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a461a49d720e9a66c5ad9149b55fa3cda"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_network_tests_8cpp.xhtml#a461a49d720e9a66c5ad9149b55fa3cda">BOOST_AUTO_TEST_CASE</a> (Network_AddMerge)</td></tr>
<tr class="separator:a461a49d720e9a66c5ad9149b55fa3cda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05568755da3721faea2a0d3439057a18"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_network_tests_8cpp.xhtml#a05568755da3721faea2a0d3439057a18">BOOST_AUTO_TEST_CASE</a> (StandInLayerNetworkTest)</td></tr>
<tr class="separator:a05568755da3721faea2a0d3439057a18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa776b872d63883bb92381c88b87a4460"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_network_tests_8cpp.xhtml#aa776b872d63883bb92381c88b87a4460">BOOST_AUTO_TEST_CASE</a> (StandInLayerSingleInputMultipleOutputsNetworkTest)</td></tr>
<tr class="separator:aa776b872d63883bb92381c88b87a4460"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a654a4d0b0a06a8a2bc64538e4c2b7ead"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a654a4d0b0a06a8a2bc64538e4c2b7ead">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[1/12]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">LayerGuids&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_network_tests_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="_network_tests_8cpp_source.xhtml">NetworkTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_network_8cpp_source.xhtml#l01425">Network::AddAdditionLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01166">Network::AddInputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01435">Network::AddOutputLayer()</a>, and <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#afb5e65c770f6cee222db8af7581541a6">IConnectableLayer::GetGuid()</a>.</p>
<div class="fragment"><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="classarmnn_1_1_network.xhtml">armnn::Network</a> net;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_profiling_guid.xhtml">armnn::LayerGuid</a> inputId = net.<a class="code" href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">AddInputLayer</a>(0)-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#afb5e65c770f6cee222db8af7581541a6">GetGuid</a>();</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_profiling_guid.xhtml">armnn::LayerGuid</a> addId = net.<a class="code" href="classarmnn_1_1_network.xhtml#adb60c75544796e23d7abc1ce0476f6d9">AddAdditionLayer</a>()-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#afb5e65c770f6cee222db8af7581541a6">GetGuid</a>();</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_profiling_guid.xhtml">armnn::LayerGuid</a> outputId = net.<a class="code" href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">AddOutputLayer</a>(0)-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#afb5e65c770f6cee222db8af7581541a6">GetGuid</a>();</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    BOOST_TEST(inputId != addId);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    BOOST_TEST(addId != outputId);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    BOOST_TEST(inputId != outputId);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_network_xhtml_ad55ff20f4c7e60c18b849e61f28f0e2e"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">armnn::Network::AddOutputLayer</a></div><div class="ttdeci">IConnectableLayer * AddOutputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an output layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01435">Network.cpp:1435</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_guid_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_guid.xhtml">armnn::profiling::ProfilingGuid</a></div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00252">Types.hpp:252</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a90d8841cfbbc82ab02328f33fed24ac6"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">armnn::Network::AddInputLayer</a></div><div class="ttdeci">IConnectableLayer * AddInputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an input layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01166">Network.cpp:1166</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_afb5e65c770f6cee222db8af7581541a6"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#afb5e65c770f6cee222db8af7581541a6">armnn::IConnectableLayer::GetGuid</a></div><div class="ttdeci">virtual LayerGuid GetGuid() const =0</div><div class="ttdoc">Returns the unique id of the layer. </div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_network.xhtml">armnn::Network</a></div><div class="ttdoc">Private implementation of INetwork. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00028">Network.hpp:28</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_adb60c75544796e23d7abc1ce0476f6d9"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#adb60c75544796e23d7abc1ce0476f6d9">armnn::Network::AddAdditionLayer</a></div><div class="ttdeci">IConnectableLayer * AddAdditionLayer(const char *name=nullptr) override</div><div class="ttdoc">Adds an addition layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01425">Network.cpp:1425</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a69d6be9fe15ed0c2ec6478c9278ed3df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69d6be9fe15ed0c2ec6478c9278ed3df">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[2/12]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NetworkBasic&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_network_tests_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="_network_tests_8cpp_source.xhtml">NetworkTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_network_8cpp_source.xhtml#l01160">Network::PrintGraph()</a>, and <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38">armnn::Success</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarmnn_1_1_network.xhtml">armnn::Network</a> net;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    BOOST_TEST(net.<a class="code" href="classarmnn_1_1_network.xhtml#a9aa1b214fcaec2371fe4226bd126fb73">PrintGraph</a>() == <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38">armnn::Status::Success</a>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38"><div class="ttname"><a href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38">armnn::Status::Success</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a9aa1b214fcaec2371fe4226bd126fb73"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a9aa1b214fcaec2371fe4226bd126fb73">armnn::Network::PrintGraph</a></div><div class="ttdeci">Status PrintGraph() override</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01160">Network.cpp:1160</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_network.xhtml">armnn::Network</a></div><div class="ttdoc">Private implementation of INetwork. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00028">Network.hpp:28</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0f487c4f7040ee948a2a9dfc2f9edd40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f487c4f7040ee948a2a9dfc2f9edd40">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[3/12]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">LayerNamesAreOptionalForINetwork&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_network_tests_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="_network_tests_8cpp_source.xhtml">NetworkTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarmnn_1_1_i_network.xhtml#aea068f6094e1c3bfcdf8167b68112632">INetwork::AddActivationLayer()</a>, <a class="el" href="classarmnn_1_1_i_network.xhtml#a4812e0137ee610310d23059efed2cb84">INetwork::AddAdditionLayer()</a>, <a class="el" href="classarmnn_1_1_i_network.xhtml#a87d5ec72def73ca14bd2987a024bd569">INetwork::AddInputLayer()</a>, and <a class="el" href="classarmnn_1_1_i_network.xhtml#ad8582fba2ebeb65da43a56bc22d4f88b">INetwork::AddOutputLayer()</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarmnn_1_1_network.xhtml">armnn::Network</a> net;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="classarmnn_1_1_i_network.xhtml">armnn::INetwork</a>&amp; inet = net;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    inet.<a class="code" href="classarmnn_1_1_i_network.xhtml#a87d5ec72def73ca14bd2987a024bd569">AddInputLayer</a>(0);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    inet.<a class="code" href="classarmnn_1_1_i_network.xhtml#a4812e0137ee610310d23059efed2cb84">AddAdditionLayer</a>();</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    inet.<a class="code" href="classarmnn_1_1_i_network.xhtml#aea068f6094e1c3bfcdf8167b68112632">AddActivationLayer</a>(<a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a>());</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    inet.<a class="code" href="classarmnn_1_1_i_network.xhtml#ad8582fba2ebeb65da43a56bc22d4f88b">AddOutputLayer</a>(0);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_network_xhtml_aea068f6094e1c3bfcdf8167b68112632"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#aea068f6094e1c3bfcdf8167b68112632">armnn::INetwork::AddActivationLayer</a></div><div class="ttdeci">virtual IConnectableLayer * AddActivationLayer(const ActivationDescriptor &amp;activationDescriptor, const char *name=nullptr)=0</div><div class="ttdoc">Adds an activation layer to the network. </div></div>
<div class="ttc" id="classarmnn_1_1_i_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml">armnn::INetwork</a></div><div class="ttdoc">Main network class which provides the interface for building up a neural network. ...</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00105">INetwork.hpp:105</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_network_xhtml_ad8582fba2ebeb65da43a56bc22d4f88b"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#ad8582fba2ebeb65da43a56bc22d4f88b">armnn::INetwork::AddOutputLayer</a></div><div class="ttdeci">virtual IConnectableLayer * AddOutputLayer(LayerBindingId id, const char *name=nullptr)=0</div><div class="ttdoc">Adds an output layer to the network. </div></div>
<div class="ttc" id="classarmnn_1_1_i_network_xhtml_a4812e0137ee610310d23059efed2cb84"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a4812e0137ee610310d23059efed2cb84">armnn::INetwork::AddAdditionLayer</a></div><div class="ttdeci">virtual IConnectableLayer * AddAdditionLayer(const char *name=nullptr)=0</div><div class="ttdoc">Adds an addition layer to the network. </div></div>
<div class="ttc" id="structarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00020">Descriptors.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_network.xhtml">armnn::Network</a></div><div class="ttdoc">Private implementation of INetwork. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00028">Network.hpp:28</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_network_xhtml_a87d5ec72def73ca14bd2987a024bd569"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a87d5ec72def73ca14bd2987a024bd569">armnn::INetwork::AddInputLayer</a></div><div class="ttdeci">virtual IConnectableLayer * AddInputLayer(LayerBindingId id, const char *name=nullptr)=0</div><div class="ttdoc">Adds an input layer to the network. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a15c2c9a0a39db945304f2ef2453fa50a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15c2c9a0a39db945304f2ef2453fa50a">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[4/12]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">LayerNamesAreOptionalForNetwork&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_network_tests_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="_network_tests_8cpp_source.xhtml">NetworkTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_network_8cpp_source.xhtml#l01368">Network::AddActivationLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01425">Network::AddAdditionLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01166">Network::AddInputLayer()</a>, and <a class="el" href="_network_8cpp_source.xhtml#l01435">Network::AddOutputLayer()</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="classarmnn_1_1_network.xhtml">armnn::Network</a> net;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    net.<a class="code" href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">AddInputLayer</a>(0);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    net.<a class="code" href="classarmnn_1_1_network.xhtml#adb60c75544796e23d7abc1ce0476f6d9">AddAdditionLayer</a>();</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    net.<a class="code" href="classarmnn_1_1_network.xhtml#a36a40a1209689f39a5a283209991da3c">AddActivationLayer</a>(<a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a>());</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    net.<a class="code" href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">AddOutputLayer</a>(0);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_network_xhtml_ad55ff20f4c7e60c18b849e61f28f0e2e"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">armnn::Network::AddOutputLayer</a></div><div class="ttdeci">IConnectableLayer * AddOutputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an output layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01435">Network.cpp:1435</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a90d8841cfbbc82ab02328f33fed24ac6"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">armnn::Network::AddInputLayer</a></div><div class="ttdeci">IConnectableLayer * AddInputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an input layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01166">Network.cpp:1166</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a36a40a1209689f39a5a283209991da3c"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a36a40a1209689f39a5a283209991da3c">armnn::Network::AddActivationLayer</a></div><div class="ttdeci">IConnectableLayer * AddActivationLayer(const ActivationDescriptor &amp;activationDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Adds an activation layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01368">Network.cpp:1368</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00020">Descriptors.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_network.xhtml">armnn::Network</a></div><div class="ttdoc">Private implementation of INetwork. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00028">Network.hpp:28</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_adb60c75544796e23d7abc1ce0476f6d9"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#adb60c75544796e23d7abc1ce0476f6d9">armnn::Network::AddAdditionLayer</a></div><div class="ttdeci">IConnectableLayer * AddAdditionLayer(const char *name=nullptr) override</div><div class="ttdoc">Adds an addition layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01425">Network.cpp:1425</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9263985da8354d39b3d6fc5689f8b2dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9263985da8354d39b3d6fc5689f8b2dd">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[5/12]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NetworkModification&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_network_tests_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="_network_tests_8cpp_source.xhtml">NetworkTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_network_8cpp_source.xhtml#l01368">Network::AddActivationLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01425">Network::AddAdditionLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01440">Network::AddBatchNormalizationLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01264">Network::AddConvolution2dLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01211">Network::AddFullyConnectedLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01166">Network::AddInputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01430">Network::AddMultiplicationLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01380">Network::AddNormalizationLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01435">Network::AddOutputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01362">Network::AddPooling2dLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01392">Network::AddSoftmaxLayer()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">IOutputSlot::Connect()</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">IOutputSlot::GetConnection()</a>, <a class="el" href="_network_8hpp_source.xhtml#l00034">Network::GetGraph()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">IConnectableLayer::GetInputSlot()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">IOutputSlot::GetNumConnections()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">IConnectableLayer::GetNumInputSlots()</a>, <a class="el" href="_graph_8hpp_source.xhtml#l00188">Graph::GetNumLayers()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">IConnectableLayer::GetNumOutputSlots()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">IConnectableLayer::GetOutputSlot()</a>, and <a class="el" href="_graph_utils_8cpp_source.xhtml#l00010">GraphHasNamedLayer()</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarmnn_1_1_network.xhtml">armnn::Network</a> net;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> inputLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">AddInputLayer</a>(0, <span class="stringliteral">&quot;input layer&quot;</span>);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    BOOST_TEST(inputLayer);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dims[] = { 10,1,1,1 };</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    std::vector&lt;float&gt; convWeightsData(10);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a> weights(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(4, dims, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>), convWeightsData);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a> convDesc2d;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> convLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a865189c08aa64d448d05efc92a43725a">AddConvolution2dLayer</a>(convDesc2d,</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                                                          weights,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                                                          <a class="code" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>(),</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                                                          <span class="stringliteral">&quot;conv layer&quot;</span>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    BOOST_TEST(convLayer);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    inputLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(convLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a> fullyConnectedDesc;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> fullyConnectedLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a80dc86e975ff991ef63aa8b523d4fcdf">AddFullyConnectedLayer</a>(fullyConnectedDesc,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                                                                     weights,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                                                                     <a class="code" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>(),</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                                                                     <span class="stringliteral">&quot;fully connected&quot;</span>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    BOOST_TEST(fullyConnectedLayer);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    convLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(fullyConnectedLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a> pooling2dDesc;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> poolingLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#ab8b4e22c47ae0b0f259de353e760a4bf">AddPooling2dLayer</a>(pooling2dDesc, <span class="stringliteral">&quot;pooling2d&quot;</span>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    BOOST_TEST(poolingLayer);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    fullyConnectedLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(poolingLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a> activationDesc;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> activationLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a36a40a1209689f39a5a283209991da3c">AddActivationLayer</a>(activationDesc, <span class="stringliteral">&quot;activation&quot;</span>);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    BOOST_TEST(activationLayer);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    poolingLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(activationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a> normalizationDesc;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> normalizationLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a942922c1213c451e3286fb5cd31c6499">AddNormalizationLayer</a>(normalizationDesc, <span class="stringliteral">&quot;normalization&quot;</span>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    BOOST_TEST(normalizationLayer);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    activationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(normalizationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a> softmaxDesc;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> softmaxLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a8b1fbac089170c35fcb98d7012859428">AddSoftmaxLayer</a>(softmaxDesc, <span class="stringliteral">&quot;softmax&quot;</span>);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    BOOST_TEST(softmaxLayer);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    normalizationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmaxLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a> batchNormDesc;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> tensorInfo({ 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    std::vector&lt;float&gt; data(tensorInfo.GetNumBytes() / <span class="keyword">sizeof</span>(float));</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a> invalidTensor(tensorInfo, data);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> batchNormalizationLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#abd4965a5d1d28a91b975e6b0eef024c8">AddBatchNormalizationLayer</a>(batchNormDesc,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        invalidTensor,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        invalidTensor,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        invalidTensor,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        invalidTensor,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="stringliteral">&quot;batch norm&quot;</span>);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    BOOST_TEST(batchNormalizationLayer);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    softmaxLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(batchNormalizationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> additionLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#adb60c75544796e23d7abc1ce0476f6d9">AddAdditionLayer</a>(<span class="stringliteral">&quot;addition&quot;</span>);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    BOOST_TEST(additionLayer);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    batchNormalizationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(additionLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    batchNormalizationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(additionLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> multiplicationLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a6e6cb8fd00cb855c4f0d93c4a7a2bde2">AddMultiplicationLayer</a>(<span class="stringliteral">&quot;multiplication&quot;</span>);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    BOOST_TEST(multiplicationLayer);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    additionLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(multiplicationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    additionLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(multiplicationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> outputLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">AddOutputLayer</a>(0, <span class="stringliteral">&quot;output layer&quot;</span>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    BOOST_TEST(outputLayer);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    multiplicationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(outputLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment">//Tests that all layers are present in the graph.</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    BOOST_TEST(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>().<a class="code" href="classarmnn_1_1_graph.xhtml#afdf8eb85585a798ad0e936bde884d87b">GetNumLayers</a>() == 11);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="comment">//Tests that the vertices exist and have correct names.</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;input layer&quot;</span>));</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;conv layer&quot;</span>));</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;fully connected&quot;</span>));</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;pooling2d&quot;</span>));</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;activation&quot;</span>));</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;normalization&quot;</span>));</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;softmax&quot;</span>));</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;batch norm&quot;</span>));</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;addition&quot;</span>));</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;multiplication&quot;</span>));</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;output layer&quot;</span>));</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keyword">auto</span> checkOneOutputToOneInputConnection = []</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        (<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> srcLayer,</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> tgtLayer,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;         <span class="keywordtype">int</span> expectedSrcNumInputs = 1,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;         <span class="keywordtype">int</span> expectedDstNumOutputs = 1)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        {</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            BOOST_TEST(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>() == expectedSrcNumInputs);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            BOOST_TEST(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">GetNumOutputSlots</a>() == 1);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            BOOST_TEST(tgtLayer-&gt;GetNumInputSlots() == 1);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            BOOST_TEST(tgtLayer-&gt;GetNumOutputSlots() == expectedDstNumOutputs);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            BOOST_TEST(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">GetNumConnections</a>() == 1);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            BOOST_TEST(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(0) == &amp;tgtLayer-&gt;GetInputSlot(0));</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            BOOST_TEST(&amp;srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0) == tgtLayer-&gt;GetInputSlot(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>());</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        };</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keyword">auto</span> checkOneOutputToTwoInputsConnections = []</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        (<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> srcLayer,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> tgtLayer,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;         <span class="keywordtype">int</span> expectedSrcNumInputs,</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;         <span class="keywordtype">int</span> expectedDstNumOutputs = 1)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        {</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            BOOST_TEST(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>() == expectedSrcNumInputs);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            BOOST_TEST(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">GetNumOutputSlots</a>() == 1);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            BOOST_TEST(tgtLayer-&gt;GetNumInputSlots() == 2);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            BOOST_TEST(tgtLayer-&gt;GetNumOutputSlots() == expectedDstNumOutputs);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            BOOST_TEST(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">GetNumConnections</a>() == 2);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">GetNumConnections</a>(); ++i)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                BOOST_TEST(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(i) == &amp;tgtLayer-&gt;GetInputSlot(i));</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                BOOST_TEST(&amp;srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0) == tgtLayer-&gt;GetInputSlot(i).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>());</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        };</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    BOOST_TEST(AreAllLayerInputSlotsConnected(*convLayer));</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    BOOST_TEST(AreAllLayerInputSlotsConnected(*fullyConnectedLayer));</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    BOOST_TEST(AreAllLayerInputSlotsConnected(*poolingLayer));</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    BOOST_TEST(AreAllLayerInputSlotsConnected(*activationLayer));</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    BOOST_TEST(AreAllLayerInputSlotsConnected(*normalizationLayer));</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    BOOST_TEST(AreAllLayerInputSlotsConnected(*softmaxLayer));</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    BOOST_TEST(AreAllLayerInputSlotsConnected(*batchNormalizationLayer));</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    BOOST_TEST(AreAllLayerInputSlotsConnected(*additionLayer));</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    BOOST_TEST(AreAllLayerInputSlotsConnected(*multiplicationLayer));</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    BOOST_TEST(AreAllLayerInputSlotsConnected(*outputLayer));</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="comment">// Checks connectivity.</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    checkOneOutputToOneInputConnection(inputLayer, convLayer, 0);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    checkOneOutputToOneInputConnection(convLayer, fullyConnectedLayer);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    checkOneOutputToOneInputConnection(fullyConnectedLayer, poolingLayer);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    checkOneOutputToOneInputConnection(poolingLayer, activationLayer);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    checkOneOutputToOneInputConnection(activationLayer, normalizationLayer);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    checkOneOutputToOneInputConnection(normalizationLayer, softmaxLayer);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    checkOneOutputToOneInputConnection(softmaxLayer, batchNormalizationLayer);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    checkOneOutputToTwoInputsConnections(batchNormalizationLayer, additionLayer, 1);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    checkOneOutputToTwoInputsConnections(additionLayer, multiplicationLayer, 2);</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    checkOneOutputToOneInputConnection(multiplicationLayer, outputLayer, 2, 0);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_ac2dac3b61c94de52093616be4ab17f8d"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">armnn::IConnectableLayer::GetNumOutputSlots</a></div><div class="ttdeci">virtual unsigned int GetNumOutputSlots() const =0</div><div class="ttdoc">Returns the number of connectable output slots. </div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_ab8b4e22c47ae0b0f259de353e760a4bf"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#ab8b4e22c47ae0b0f259de353e760a4bf">armnn::Network::AddPooling2dLayer</a></div><div class="ttdeci">IConnectableLayer * AddPooling2dLayer(const Pooling2dDescriptor &amp;pooling2dDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Adds a pooling layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01362">Network.cpp:1362</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00061">INetwork.hpp:61</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_ad55ff20f4c7e60c18b849e61f28f0e2e"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">armnn::Network::AddOutputLayer</a></div><div class="ttdeci">IConnectableLayer * AddOutputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an output layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01435">Network.cpp:1435</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a9c2cba04b6d7ace4fc2a2436b82a5a63"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">armnn::IConnectableLayer::GetNumInputSlots</a></div><div class="ttdeci">virtual unsigned int GetNumInputSlots() const =0</div><div class="ttdoc">Returns the number of connectable input slots. </div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00053">Tensor.hpp:53</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00400">Descriptors.hpp:400</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_afe0a4f719f9752a405e71878da7012ba"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">armnn::Network::GetGraph</a></div><div class="ttdeci">const Graph &amp; GetGraph() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00034">Network.hpp:34</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_ac73a43305233b7e5f70debdb2d14a8d3"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a></div><div class="ttdeci">bool GraphHasNamedLayer(const armnn::Graph &amp;graph, const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00010">GraphUtils.cpp:10</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a90d8841cfbbc82ab02328f33fed24ac6"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">armnn::Network::AddInputLayer</a></div><div class="ttdeci">IConnectableLayer * AddInputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an input layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01166">Network.cpp:1166</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a9fffb92dc6d2edd5258d574a5862fc83"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">armnn::IOutputSlot::GetConnection</a></div><div class="ttdeci">virtual const IInputSlot * GetConnection(unsigned int index) const =0</div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a80dc86e975ff991ef63aa8b523d4fcdf"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a80dc86e975ff991ef63aa8b523d4fcdf">armnn::Network::AddFullyConnectedLayer</a></div><div class="ttdeci">IConnectableLayer * AddFullyConnectedLayer(const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</div><div class="ttdoc">Adds a fully connected layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01211">Network.cpp:1211</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a865189c08aa64d448d05efc92a43725a"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a865189c08aa64d448d05efc92a43725a">armnn::Network::AddConvolution2dLayer</a></div><div class="ttdeci">IConnectableLayer * AddConvolution2dLayer(const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</div><div class="ttdoc">Adds a 2D convolution layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01264">Network.cpp:1264</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00381">Descriptors.hpp:381</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00199">Tensor.hpp:199</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a36a40a1209689f39a5a283209991da3c"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a36a40a1209689f39a5a283209991da3c">armnn::Network::AddActivationLayer</a></div><div class="ttdeci">IConnectableLayer * AddActivationLayer(const ActivationDescriptor &amp;activationDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Adds an activation layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01368">Network.cpp:1368</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00020">Descriptors.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_network.xhtml">armnn::Network</a></div><div class="ttdoc">Private implementation of INetwork. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00028">Network.hpp:28</a></div></div>
<div class="ttc" id="structarmnn_1_1_empty_optional_xhtml"><div class="ttname"><a href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a></div><div class="ttdoc">EmptyOptional is used to initialize the Optional class in case we want to have default value for an O...</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00032">Optional.hpp:32</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_abd4965a5d1d28a91b975e6b0eef024c8"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#abd4965a5d1d28a91b975e6b0eef024c8">armnn::Network::AddBatchNormalizationLayer</a></div><div class="ttdeci">IConnectableLayer * AddBatchNormalizationLayer(const BatchNormalizationDescriptor &amp;desc, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr) override</div><div class="ttdoc">Adds a batch normalization layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01440">Network.cpp:1440</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_adb60c75544796e23d7abc1ce0476f6d9"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#adb60c75544796e23d7abc1ce0476f6d9">armnn::Network::AddAdditionLayer</a></div><div class="ttdeci">IConnectableLayer * AddAdditionLayer(const char *name=nullptr) override</div><div class="ttdoc">Adds an addition layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01425">Network.cpp:1425</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a6ec9e0eb66d7d6a01240492a0b18104c"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">armnn::IConnectableLayer::GetInputSlot</a></div><div class="ttdeci">virtual const IInputSlot &amp; GetInputSlot(unsigned int index) const =0</div><div class="ttdoc">Get a const input slot handle by slot index. </div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a6e6cb8fd00cb855c4f0d93c4a7a2bde2"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a6e6cb8fd00cb855c4f0d93c4a7a2bde2">armnn::Network::AddMultiplicationLayer</a></div><div class="ttdeci">IConnectableLayer * AddMultiplicationLayer(const char *name=nullptr) override</div><div class="ttdoc">Adds a multiplication layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01430">Network.cpp:1430</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_aab97b09d9ee85a105883949abcae52f3"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">armnn::IOutputSlot::GetNumConnections</a></div><div class="ttdeci">virtual unsigned int GetNumConnections() const =0</div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a942922c1213c451e3286fb5cd31c6499"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a942922c1213c451e3286fb5cd31c6499">armnn::Network::AddNormalizationLayer</a></div><div class="ttdeci">IConnectableLayer * AddNormalizationLayer(const NormalizationDescriptor &amp;normalizationDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Adds a normalization layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01380">Network.cpp:1380</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_ac1835f8756a9f03c02fcf9664e3a0fce"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">armnn::IOutputSlot::Connect</a></div><div class="ttdeci">virtual int Connect(IInputSlot &amp;destination)=0</div></div>
<div class="ttc" id="structarmnn_1_1_pooling2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a></div><div class="ttdoc">A Pooling2dDescriptor for the Pooling2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00321">Descriptors.hpp:321</a></div></div>
<div class="ttc" id="structarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00559">Descriptors.hpp:559</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_afdf8eb85585a798ad0e936bde884d87b"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#afdf8eb85585a798ad0e936bde884d87b">armnn::Graph::GetNumLayers</a></div><div class="ttdeci">size_t GetNumLayers() const</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00188">Graph.hpp:188</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a8b1fbac089170c35fcb98d7012859428"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a8b1fbac089170c35fcb98d7012859428">armnn::Network::AddSoftmaxLayer</a></div><div class="ttdeci">IConnectableLayer * AddSoftmaxLayer(const SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Adds a softmax layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01392">Network.cpp:1392</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00131">Descriptors.hpp:131</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00618">Descriptors.hpp:618</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae064036cc8dace533f3df544baa6ac2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae064036cc8dace533f3df544baa6ac2e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[6/12]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NetworkModification_SplitterConcat&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_network_tests_8cpp_source.xhtml#l00229">229</a> of file <a class="el" href="_network_tests_8cpp_source.xhtml">NetworkTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_network_8cpp_source.xhtml#l01236">Network::AddConcatLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01166">Network::AddInputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01435">Network::AddOutputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01392">Network::AddSoftmaxLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01398">Network::AddSplitterLayer()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">IOutputSlot::Connect()</a>, <a class="el" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">IInputSlot::GetConnection()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">IOutputSlot::GetConnection()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">IConnectableLayer::GetInputSlot()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">IConnectableLayer::GetNumInputSlots()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">IConnectableLayer::GetNumOutputSlots()</a>, and <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">IConnectableLayer::GetOutputSlot()</a>.</p>
<div class="fragment"><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;{</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="classarmnn_1_1_network.xhtml">armnn::Network</a> net;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="comment">// Adds an input layer and an input tensor descriptor.</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* inputLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">AddInputLayer</a>(0, <span class="stringliteral">&quot;input layer&quot;</span>);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    BOOST_TEST(inputLayer);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="comment">// Adds a splitter layer.</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a> splitterDesc(2,4);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* splitterLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#acb8e86be339d57b32f0ba3d9293c880b">AddSplitterLayer</a>(splitterDesc, <span class="stringliteral">&quot;splitter layer&quot;</span>);</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    BOOST_TEST(splitterLayer);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    inputLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="comment">// Adds a softmax layer 1.</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a> softmaxDescriptor;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* softmaxLayer1 = net.<a class="code" href="classarmnn_1_1_network.xhtml#a8b1fbac089170c35fcb98d7012859428">AddSoftmaxLayer</a>(softmaxDescriptor, <span class="stringliteral">&quot;softmax_1&quot;</span>);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    BOOST_TEST(softmaxLayer1);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="comment">// Adds a softmax layer 2.</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* softmaxLayer2 = net.<a class="code" href="classarmnn_1_1_network.xhtml#a8b1fbac089170c35fcb98d7012859428">AddSoftmaxLayer</a>(softmaxDescriptor, <span class="stringliteral">&quot;softmax_2&quot;</span>);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    BOOST_TEST(softmaxLayer2);</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(1).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="comment">// Adds a concat layer.</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <a class="code" href="structarmnn_1_1_origins_descriptor.xhtml">armnn::OriginsDescriptor</a> concatDesc(2, 4);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* concatLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a7b0396c132c4da95e80b210f9b6734e9">AddConcatLayer</a>(concatDesc, <span class="stringliteral">&quot;concat layer&quot;</span>);</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    BOOST_TEST(concatLayer);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="comment">// Adds an output layer.</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* outputLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">AddOutputLayer</a>(0, <span class="stringliteral">&quot;output layer&quot;</span>);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    BOOST_TEST(outputLayer);</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(outputLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    BOOST_TEST(splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">GetNumOutputSlots</a>() == 2);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    BOOST_TEST(splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(0) == &amp;softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    BOOST_TEST(&amp;splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0) == softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>());</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    BOOST_TEST(splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(1).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(0) == &amp;softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    BOOST_TEST(&amp;splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(1) == softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>());</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    BOOST_TEST(concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>() == 2);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    BOOST_TEST(softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(0) == &amp;concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    BOOST_TEST(&amp;softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0) == concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>());</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    BOOST_TEST(softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(0) == &amp;concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    BOOST_TEST(&amp;softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0) == concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>());</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_ac2dac3b61c94de52093616be4ab17f8d"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">armnn::IConnectableLayer::GetNumOutputSlots</a></div><div class="ttdeci">virtual unsigned int GetNumOutputSlots() const =0</div><div class="ttdoc">Returns the number of connectable output slots. </div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a></div><div class="ttdoc">A ViewsDescriptor for the SplitterLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00198">Descriptors.hpp:198</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00061">INetwork.hpp:61</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_ad55ff20f4c7e60c18b849e61f28f0e2e"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">armnn::Network::AddOutputLayer</a></div><div class="ttdeci">IConnectableLayer * AddOutputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an output layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01435">Network.cpp:1435</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a9c2cba04b6d7ace4fc2a2436b82a5a63"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">armnn::IConnectableLayer::GetNumInputSlots</a></div><div class="ttdeci">virtual unsigned int GetNumInputSlots() const =0</div><div class="ttdoc">Returns the number of connectable input slots. </div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a90d8841cfbbc82ab02328f33fed24ac6"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">armnn::Network::AddInputLayer</a></div><div class="ttdeci">IConnectableLayer * AddInputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an input layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01166">Network.cpp:1166</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a9fffb92dc6d2edd5258d574a5862fc83"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">armnn::IOutputSlot::GetConnection</a></div><div class="ttdeci">virtual const IInputSlot * GetConnection(unsigned int index) const =0</div></div>
<div class="ttc" id="structarmnn_1_1_origins_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml">armnn::OriginsDescriptor</a></div><div class="ttdoc">An OriginsDescriptor for the ConcatLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00155">Descriptors.hpp:155</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a7b0396c132c4da95e80b210f9b6734e9"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a7b0396c132c4da95e80b210f9b6734e9">armnn::Network::AddConcatLayer</a></div><div class="ttdeci">IConnectableLayer * AddConcatLayer(const ConcatDescriptor &amp;concatDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Adds a concatenation layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01236">Network.cpp:1236</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_acb8e86be339d57b32f0ba3d9293c880b"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#acb8e86be339d57b32f0ba3d9293c880b">armnn::Network::AddSplitterLayer</a></div><div class="ttdeci">IConnectableLayer * AddSplitterLayer(const ViewsDescriptor &amp;splitterDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Adds a splitter layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01398">Network.cpp:1398</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_network.xhtml">armnn::Network</a></div><div class="ttdoc">Private implementation of INetwork. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00028">Network.hpp:28</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a6ec9e0eb66d7d6a01240492a0b18104c"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">armnn::IConnectableLayer::GetInputSlot</a></div><div class="ttdeci">virtual const IInputSlot &amp; GetInputSlot(unsigned int index) const =0</div><div class="ttdoc">Get a const input slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_input_slot_xhtml_a81fbf6103761e55061b62ba989b00f10"><div class="ttname"><a href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">armnn::IInputSlot::GetConnection</a></div><div class="ttdeci">virtual const IOutputSlot * GetConnection() const =0</div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_ac1835f8756a9f03c02fcf9664e3a0fce"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">armnn::IOutputSlot::Connect</a></div><div class="ttdeci">virtual int Connect(IInputSlot &amp;destination)=0</div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a8b1fbac089170c35fcb98d7012859428"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a8b1fbac089170c35fcb98d7012859428">armnn::Network::AddSoftmaxLayer</a></div><div class="ttdeci">IConnectableLayer * AddSoftmaxLayer(const SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Adds a softmax layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01392">Network.cpp:1392</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00131">Descriptors.hpp:131</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="adfc1ae08aaaaf816ecb34515c0a0e44f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfc1ae08aaaaf816ecb34515c0a0e44f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[7/12]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NetworkModification_SplitterAddition&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_network_tests_8cpp_source.xhtml#l00286">286</a> of file <a class="el" href="_network_tests_8cpp_source.xhtml">NetworkTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_network_8cpp_source.xhtml#l01425">Network::AddAdditionLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01166">Network::AddInputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01435">Network::AddOutputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01392">Network::AddSoftmaxLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01398">Network::AddSplitterLayer()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">IOutputSlot::Connect()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">IConnectableLayer::GetInputSlot()</a>, and <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">IConnectableLayer::GetOutputSlot()</a>.</p>
<div class="fragment"><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;{</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <a class="code" href="classarmnn_1_1_network.xhtml">armnn::Network</a> net;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="comment">// Adds an input layer and an input tensor descriptor.</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">AddInputLayer</a>(0, <span class="stringliteral">&quot;input layer&quot;</span>);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    BOOST_TEST(layer);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="comment">// Adds a splitter layer.</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a> splitterDesc(2,4);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> splitterLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#acb8e86be339d57b32f0ba3d9293c880b">AddSplitterLayer</a>(splitterDesc, <span class="stringliteral">&quot;splitter layer&quot;</span>);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    BOOST_TEST(splitterLayer);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="comment">// Adds a softmax layer 1.</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a> softmaxDescriptor;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> softmax1Layer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a8b1fbac089170c35fcb98d7012859428">AddSoftmaxLayer</a>(softmaxDescriptor, <span class="stringliteral">&quot;softmax_1&quot;</span>);</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    BOOST_TEST(softmax1Layer);</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmax1Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="comment">// Adds a softmax layer 2.</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> softmax2Layer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a8b1fbac089170c35fcb98d7012859428">AddSoftmaxLayer</a>(softmaxDescriptor, <span class="stringliteral">&quot;softmax_2&quot;</span>);</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    BOOST_TEST(softmax2Layer);</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(1).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmax2Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="comment">// Adds addition layer.</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    layer = net.<a class="code" href="classarmnn_1_1_network.xhtml#adb60c75544796e23d7abc1ce0476f6d9">AddAdditionLayer</a>(<span class="stringliteral">&quot;add layer&quot;</span>);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    BOOST_TEST(layer);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    softmax1Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    softmax2Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="comment">// Adds an output layer.</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* prevLayer = layer;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    layer = net.<a class="code" href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">AddOutputLayer</a>(0, <span class="stringliteral">&quot;output layer&quot;</span>);</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    prevLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    BOOST_TEST(layer);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a></div><div class="ttdoc">A ViewsDescriptor for the SplitterLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00198">Descriptors.hpp:198</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00061">INetwork.hpp:61</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_ad55ff20f4c7e60c18b849e61f28f0e2e"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">armnn::Network::AddOutputLayer</a></div><div class="ttdeci">IConnectableLayer * AddOutputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an output layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01435">Network.cpp:1435</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a90d8841cfbbc82ab02328f33fed24ac6"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">armnn::Network::AddInputLayer</a></div><div class="ttdeci">IConnectableLayer * AddInputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an input layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01166">Network.cpp:1166</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_acb8e86be339d57b32f0ba3d9293c880b"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#acb8e86be339d57b32f0ba3d9293c880b">armnn::Network::AddSplitterLayer</a></div><div class="ttdeci">IConnectableLayer * AddSplitterLayer(const ViewsDescriptor &amp;splitterDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Adds a splitter layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01398">Network.cpp:1398</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_network.xhtml">armnn::Network</a></div><div class="ttdoc">Private implementation of INetwork. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00028">Network.hpp:28</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_adb60c75544796e23d7abc1ce0476f6d9"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#adb60c75544796e23d7abc1ce0476f6d9">armnn::Network::AddAdditionLayer</a></div><div class="ttdeci">IConnectableLayer * AddAdditionLayer(const char *name=nullptr) override</div><div class="ttdoc">Adds an addition layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01425">Network.cpp:1425</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a6ec9e0eb66d7d6a01240492a0b18104c"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">armnn::IConnectableLayer::GetInputSlot</a></div><div class="ttdeci">virtual const IInputSlot &amp; GetInputSlot(unsigned int index) const =0</div><div class="ttdoc">Get a const input slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_ac1835f8756a9f03c02fcf9664e3a0fce"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">armnn::IOutputSlot::Connect</a></div><div class="ttdeci">virtual int Connect(IInputSlot &amp;destination)=0</div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a8b1fbac089170c35fcb98d7012859428"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a8b1fbac089170c35fcb98d7012859428">armnn::Network::AddSoftmaxLayer</a></div><div class="ttdeci">IConnectableLayer * AddSoftmaxLayer(const SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Adds a softmax layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01392">Network.cpp:1392</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00131">Descriptors.hpp:131</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afb8fb95510550f39dc350f3df5d69b1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb8fb95510550f39dc350f3df5d69b1d">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[8/12]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">NetworkModification_SplitterMultiplication&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_network_tests_8cpp_source.xhtml#l00331">331</a> of file <a class="el" href="_network_tests_8cpp_source.xhtml">NetworkTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_network_8cpp_source.xhtml#l01166">Network::AddInputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01430">Network::AddMultiplicationLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01435">Network::AddOutputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01392">Network::AddSoftmaxLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01398">Network::AddSplitterLayer()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">IOutputSlot::Connect()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">IConnectableLayer::GetInputSlot()</a>, and <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">IConnectableLayer::GetOutputSlot()</a>.</p>
<div class="fragment"><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;{</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <a class="code" href="classarmnn_1_1_network.xhtml">armnn::Network</a> net;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="comment">// Adds an input layer and an input tensor descriptor.</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">AddInputLayer</a>(0, <span class="stringliteral">&quot;input layer&quot;</span>);</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    BOOST_TEST(layer);</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="comment">// Adds a splitter layer.</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a> splitterDesc(2,4);</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> splitterLayer = net.<a class="code" href="classarmnn_1_1_network.xhtml#acb8e86be339d57b32f0ba3d9293c880b">AddSplitterLayer</a>(splitterDesc, <span class="stringliteral">&quot;splitter layer&quot;</span>);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    BOOST_TEST(splitterLayer);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="comment">// Adds a softmax layer 1.</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a> softmaxDescriptor;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> softmax1Layer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a8b1fbac089170c35fcb98d7012859428">AddSoftmaxLayer</a>(softmaxDescriptor, <span class="stringliteral">&quot;softmax_1&quot;</span>);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    BOOST_TEST(softmax1Layer);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmax1Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="comment">// Adds a softmax layer 2.</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> softmax2Layer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a8b1fbac089170c35fcb98d7012859428">AddSoftmaxLayer</a>(softmaxDescriptor, <span class="stringliteral">&quot;softmax_2&quot;</span>);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    BOOST_TEST(softmax2Layer);</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(1).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmax2Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="comment">// Adds multiplication layer.</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    layer = net.<a class="code" href="classarmnn_1_1_network.xhtml#a6e6cb8fd00cb855c4f0d93c4a7a2bde2">AddMultiplicationLayer</a>(<span class="stringliteral">&quot;multiplication layer&quot;</span>);</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    BOOST_TEST(layer);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    softmax1Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    softmax2Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="comment">// Adds an output layer.</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* prevLayer = layer;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    layer = net.<a class="code" href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">AddOutputLayer</a>(0, <span class="stringliteral">&quot;output layer&quot;</span>);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    BOOST_TEST(layer);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    prevLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a></div><div class="ttdoc">A ViewsDescriptor for the SplitterLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00198">Descriptors.hpp:198</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00061">INetwork.hpp:61</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_ad55ff20f4c7e60c18b849e61f28f0e2e"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">armnn::Network::AddOutputLayer</a></div><div class="ttdeci">IConnectableLayer * AddOutputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an output layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01435">Network.cpp:1435</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a90d8841cfbbc82ab02328f33fed24ac6"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">armnn::Network::AddInputLayer</a></div><div class="ttdeci">IConnectableLayer * AddInputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an input layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01166">Network.cpp:1166</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_acb8e86be339d57b32f0ba3d9293c880b"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#acb8e86be339d57b32f0ba3d9293c880b">armnn::Network::AddSplitterLayer</a></div><div class="ttdeci">IConnectableLayer * AddSplitterLayer(const ViewsDescriptor &amp;splitterDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Adds a splitter layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01398">Network.cpp:1398</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_network.xhtml">armnn::Network</a></div><div class="ttdoc">Private implementation of INetwork. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00028">Network.hpp:28</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a6ec9e0eb66d7d6a01240492a0b18104c"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">armnn::IConnectableLayer::GetInputSlot</a></div><div class="ttdeci">virtual const IInputSlot &amp; GetInputSlot(unsigned int index) const =0</div><div class="ttdoc">Get a const input slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a6e6cb8fd00cb855c4f0d93c4a7a2bde2"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a6e6cb8fd00cb855c4f0d93c4a7a2bde2">armnn::Network::AddMultiplicationLayer</a></div><div class="ttdeci">IConnectableLayer * AddMultiplicationLayer(const char *name=nullptr) override</div><div class="ttdoc">Adds a multiplication layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01430">Network.cpp:1430</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_ac1835f8756a9f03c02fcf9664e3a0fce"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">armnn::IOutputSlot::Connect</a></div><div class="ttdeci">virtual int Connect(IInputSlot &amp;destination)=0</div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a8b1fbac089170c35fcb98d7012859428"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a8b1fbac089170c35fcb98d7012859428">armnn::Network::AddSoftmaxLayer</a></div><div class="ttdeci">IConnectableLayer * AddSoftmaxLayer(const SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Adds a softmax layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01392">Network.cpp:1392</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00131">Descriptors.hpp:131</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab3fb4bb4bb661f5a3376c01477feab7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3fb4bb4bb661f5a3376c01477feab7e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[9/12]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">Network_AddQuantize&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_network_tests_8cpp_source.xhtml#l00374">374</a> of file <a class="el" href="_network_tests_8cpp_source.xhtml">NetworkTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_network_8cpp_source.xhtml#l00050">INetwork::Create()</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">IInputSlot::GetConnection()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00095">TensorInfo::GetDataType()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">IConnectableLayer::GetInputSlot()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#afcc1c3a20bd2860e0ddd21674389246f">IConnectableLayer::GetName()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">IConnectableLayer::GetNumInputSlots()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">IConnectableLayer::GetNumOutputSlots()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">IConnectableLayer::GetOutputSlot()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">IOutputSlot::GetTensorInfo()</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="_layer_visitor_base_8hpp_source.xhtml#l00183">LayerVisitorBase&lt; DefaultPolicy &gt;::VisitQuantizeLayer()</a>.</p>
<div class="fragment"><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;{</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keyword">struct </span>Test : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml">armnn::LayerVisitorBase</a>&lt;armnn::VisitorNoThrowPolicy&gt;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    {</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a8a6db421f0be147916cb4894ad3885d1">VisitQuantizeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer, <span class="keyword">const</span> <span class="keywordtype">char</span>* name)<span class="keyword"> override</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            m_Visited = <span class="keyword">true</span>;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            BOOST_TEST(layer);</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            std::string expectedName = std::string(<span class="stringliteral">&quot;quantize&quot;</span>);</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            BOOST_TEST(std::string(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#afcc1c3a20bd2860e0ddd21674389246f">GetName</a>()) == expectedName);</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            BOOST_TEST(std::string(name) == expectedName);</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            BOOST_TEST(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>() == 1);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            BOOST_TEST(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">GetNumOutputSlots</a>() == 1);</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; infoIn = layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>();</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            BOOST_TEST((infoIn.GetDataType() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; infoOut = layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>();</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            BOOST_TEST((infoOut.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>));</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        }</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="keywordtype">bool</span> m_Visited = <span class="keyword">false</span>;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    };</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keyword">auto</span> graph = <a class="code" href="classarmnn_1_1_i_network.xhtml#a706f7345af3f18f4b16e226a672214c6">armnn::INetwork::Create</a>();</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keyword">auto</span> input = graph-&gt;AddInputLayer(0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="keyword">auto</span> quantize = graph-&gt;AddQuantizeLayer(<span class="stringliteral">&quot;quantize&quot;</span>);</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keyword">auto</span> output = graph-&gt;AddOutputLayer(1, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    input-&gt;GetOutputSlot(0).Connect(quantize-&gt;GetInputSlot(0));</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    quantize-&gt;GetOutputSlot(0).Connect(output-&gt;GetInputSlot(0));</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> infoIn({3,1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    input-&gt;GetOutputSlot(0).SetTensorInfo(infoIn);</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> infoOut({3,1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>);</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    quantize-&gt;GetOutputSlot(0).SetTensorInfo(infoOut);</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    Test testQuantize;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    graph-&gt;Accept(testQuantize);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    BOOST_TEST(testQuantize.m_Visited == <span class="keyword">true</span>);</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_ac2dac3b61c94de52093616be4ab17f8d"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">armnn::IConnectableLayer::GetNumOutputSlots</a></div><div class="ttdeci">virtual unsigned int GetNumOutputSlots() const =0</div><div class="ttdoc">Returns the number of connectable output slots. </div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00061">INetwork.hpp:61</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a9c2cba04b6d7ace4fc2a2436b82a5a63"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">armnn::IConnectableLayer::GetNumInputSlots</a></div><div class="ttdeci">virtual unsigned int GetNumInputSlots() const =0</div><div class="ttdoc">Returns the number of connectable input slots. </div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00053">Tensor.hpp:53</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a8a6db421f0be147916cb4894ad3885d1"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a8a6db421f0be147916cb4894ad3885d1">armnn::LayerVisitorBase::VisitQuantizeLayer</a></div><div class="ttdeci">void VisitQuantizeLayer(const IConnectableLayer *, const char *) override</div><div class="ttdoc">Function a quantize layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00183">LayerVisitorBase.hpp:183</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_aea909c7327109228ef618d459015def3"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">armnn::TensorInfo::GetDataType</a></div><div class="ttdeci">DataType GetDataType() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00095">Tensor.hpp:95</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml">armnn::LayerVisitorBase</a></div><div class="ttdoc">Visitor base class with empty implementations. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00025">LayerVisitorBase.hpp:25</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a6ec9e0eb66d7d6a01240492a0b18104c"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">armnn::IConnectableLayer::GetInputSlot</a></div><div class="ttdeci">virtual const IInputSlot &amp; GetInputSlot(unsigned int index) const =0</div><div class="ttdoc">Get a const input slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_input_slot_xhtml_a81fbf6103761e55061b62ba989b00f10"><div class="ttname"><a href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">armnn::IInputSlot::GetConnection</a></div><div class="ttdeci">virtual const IOutputSlot * GetConnection() const =0</div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a9943775a364fc4ab53b85ac88f311886"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">armnn::IOutputSlot::GetTensorInfo</a></div><div class="ttdeci">virtual const TensorInfo &amp; GetTensorInfo() const =0</div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_afcc1c3a20bd2860e0ddd21674389246f"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#afcc1c3a20bd2860e0ddd21674389246f">armnn::IConnectableLayer::GetName</a></div><div class="ttdeci">virtual const char * GetName() const =0</div><div class="ttdoc">Returns the name of the layer. </div></div>
<div class="ttc" id="classarmnn_1_1_i_network_xhtml_a706f7345af3f18f4b16e226a672214c6"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a706f7345af3f18f4b16e226a672214c6">armnn::INetwork::Create</a></div><div class="ttdeci">static INetworkPtr Create()</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00050">Network.cpp:50</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a461a49d720e9a66c5ad9149b55fa3cda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a461a49d720e9a66c5ad9149b55fa3cda">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[10/12]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">Network_AddMerge&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_network_tests_8cpp_source.xhtml#l00424">424</a> of file <a class="el" href="_network_tests_8cpp_source.xhtml">NetworkTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">IOutputSlot::Connect()</a>, <a class="el" href="_network_8cpp_source.xhtml#l00050">INetwork::Create()</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">IInputSlot::GetConnection()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00095">TensorInfo::GetDataType()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">IConnectableLayer::GetInputSlot()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#afcc1c3a20bd2860e0ddd21674389246f">IConnectableLayer::GetName()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">IConnectableLayer::GetNumInputSlots()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">IConnectableLayer::GetNumOutputSlots()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">IConnectableLayer::GetOutputSlot()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">IOutputSlot::GetTensorInfo()</a>, <a class="el" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::info</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">IOutputSlot::SetTensorInfo()</a>, and <a class="el" href="_layer_visitor_base_8hpp_source.xhtml#l00147">LayerVisitorBase&lt; DefaultPolicy &gt;::VisitMergeLayer()</a>.</p>
<div class="fragment"><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;{</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keyword">struct </span>Test : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml">armnn::LayerVisitorBase</a>&lt;armnn::VisitorNoThrowPolicy&gt;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    {</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#aafb62c879f0c78bfdc3c4e4f2cb82e68">VisitMergeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer, <span class="keyword">const</span> <span class="keywordtype">char</span>* name)<span class="keyword"> override</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            m_Visited = <span class="keyword">true</span>;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;            BOOST_TEST(layer);</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            std::string expectedName = std::string(<span class="stringliteral">&quot;merge&quot;</span>);</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            BOOST_TEST(std::string(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#afcc1c3a20bd2860e0ddd21674389246f">GetName</a>()) == expectedName);</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;            BOOST_TEST(std::string(name) == expectedName);</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            BOOST_TEST(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>() == 2);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            BOOST_TEST(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">GetNumOutputSlots</a>() == 1);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; infoIn0 = layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>();</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            BOOST_TEST((infoIn0.GetDataType() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; infoIn1 = layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>();</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            BOOST_TEST((infoIn1.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; infoOut = layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>();</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            BOOST_TEST((infoOut.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        }</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        <span class="keywordtype">bool</span> m_Visited = <span class="keyword">false</span>;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    };</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> network = <a class="code" href="classarmnn_1_1_i_network.xhtml#a706f7345af3f18f4b16e226a672214c6">armnn::INetwork::Create</a>();</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* input0 = network-&gt;AddInputLayer(0);</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* input1 = network-&gt;AddInputLayer(1);</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* merge = network-&gt;AddMergeLayer(<span class="stringliteral">&quot;merge&quot;</span>);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* output = network-&gt;AddOutputLayer(0);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    input0-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(merge-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    input1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(merge-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    merge-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(output-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>({3,1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    input0-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(info);</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    input1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(info);</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    merge-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(info);</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    Test testMerge;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    network-&gt;Accept(testMerge);</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    BOOST_TEST(testMerge.m_Visited == <span class="keyword">true</span>);</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_ac2dac3b61c94de52093616be4ab17f8d"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">armnn::IConnectableLayer::GetNumOutputSlots</a></div><div class="ttdeci">virtual unsigned int GetNumOutputSlots() const =0</div><div class="ttdoc">Returns the number of connectable output slots. </div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_aafb62c879f0c78bfdc3c4e4f2cb82e68"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#aafb62c879f0c78bfdc3c4e4f2cb82e68">armnn::LayerVisitorBase::VisitMergeLayer</a></div><div class="ttdeci">void VisitMergeLayer(const IConnectableLayer *, const char *) override</div><div class="ttdoc">Function that a merge layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00147">LayerVisitorBase.hpp:147</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00061">INetwork.hpp:61</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a9c2cba04b6d7ace4fc2a2436b82a5a63"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">armnn::IConnectableLayer::GetNumInputSlots</a></div><div class="ttdeci">virtual unsigned int GetNumInputSlots() const =0</div><div class="ttdoc">Returns the number of connectable input slots. </div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00053">Tensor.hpp:53</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a5ee4a6c9a2481245487b1b1a70d20fd0"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">armnn::IOutputSlot::SetTensorInfo</a></div><div class="ttdeci">virtual void SetTensorInfo(const TensorInfo &amp;tensorInfo)=0</div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_aea909c7327109228ef618d459015def3"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">armnn::TensorInfo::GetDataType</a></div><div class="ttdeci">DataType GetDataType() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00095">Tensor.hpp:95</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml">armnn::LayerVisitorBase</a></div><div class="ttdoc">Visitor base class with empty implementations. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00025">LayerVisitorBase.hpp:25</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a6ec9e0eb66d7d6a01240492a0b18104c"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">armnn::IConnectableLayer::GetInputSlot</a></div><div class="ttdeci">virtual const IInputSlot &amp; GetInputSlot(unsigned int index) const =0</div><div class="ttdoc">Get a const input slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_input_slot_xhtml_a81fbf6103761e55061b62ba989b00f10"><div class="ttname"><a href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">armnn::IInputSlot::GetConnection</a></div><div class="ttdeci">virtual const IOutputSlot * GetConnection() const =0</div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a9943775a364fc4ab53b85ac88f311886"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">armnn::IOutputSlot::GetTensorInfo</a></div><div class="ttdeci">virtual const TensorInfo &amp; GetTensorInfo() const =0</div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_afcc1c3a20bd2860e0ddd21674389246f"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#afcc1c3a20bd2860e0ddd21674389246f">armnn::IConnectableLayer::GetName</a></div><div class="ttdeci">virtual const char * GetName() const =0</div><div class="ttdoc">Returns the name of the layer. </div></div>
<div class="ttc" id="namespacearmnn_xhtml_ace74f6f9feb95a964a49d79458232703"><div class="ttname"><a href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; INetwork, void(*)(INetwork *network)&gt; INetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00101">INetwork.hpp:101</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_ac1835f8756a9f03c02fcf9664e3a0fce"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">armnn::IOutputSlot::Connect</a></div><div class="ttdeci">virtual int Connect(IInputSlot &amp;destination)=0</div></div>
<div class="ttc" id="classarmnn_1_1_i_network_xhtml_a706f7345af3f18f4b16e226a672214c6"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a706f7345af3f18f4b16e226a672214c6">armnn::INetwork::Create</a></div><div class="ttdeci">static INetworkPtr Create()</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00050">Network.cpp:50</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a05568755da3721faea2a0d3439057a18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05568755da3721faea2a0d3439057a18">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[11/12]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">StandInLayerNetworkTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_network_tests_8cpp_source.xhtml#l00476">476</a> of file <a class="el" href="_network_tests_8cpp_source.xhtml">NetworkTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_network_8cpp_source.xhtml#l01520">Network::AddFloorLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01166">Network::AddInputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01435">Network::AddOutputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01772">Network::AddStandInLayer()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">IOutputSlot::Connect()</a>, <a class="el" href="_network_8hpp_source.xhtml#l00034">Network::GetGraph()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">IConnectableLayer::GetOutputSlot()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00010">GraphHasNamedLayer()</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l01008">StandInDescriptor::m_NumInputs</a>, and <a class="el" href="_descriptors_8hpp_source.xhtml#l01010">StandInDescriptor::m_NumOutputs</a>.</p>
<div class="fragment"><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;{</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <span class="comment">// Create a simple network with a StandIn some place in it.</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <a class="code" href="classarmnn_1_1_network.xhtml">armnn::Network</a> net;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keyword">auto</span> input = net.<a class="code" href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">AddInputLayer</a>(0);</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="comment">// Add some valid layer.</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <span class="keyword">auto</span> floor = net.<a class="code" href="classarmnn_1_1_network.xhtml#a7b9879b0da1f561d10e4f5c545028143">AddFloorLayer</a>(<span class="stringliteral">&quot;Floor&quot;</span>);</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <span class="comment">// Add a standin layer</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a> standInDescriptor;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    standInDescriptor.<a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml#aed6086070440ceb94129bef06f70173f">m_NumInputs</a>  = 1;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    standInDescriptor.<a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml#abb8a2d2bb8cc594c26aaa70c820ac5cc">m_NumOutputs</a> = 1;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="keyword">auto</span> standIn = net.<a class="code" href="classarmnn_1_1_network.xhtml#a18aea8e0700f679353afb0a0cb9e0c84">AddStandInLayer</a>(standInDescriptor, <span class="stringliteral">&quot;StandIn&quot;</span>);</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="comment">// Finally the output.</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <span class="keyword">auto</span> output = net.<a class="code" href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">AddOutputLayer</a>(0);</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    <span class="comment">// Connect up the layers</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    input-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(floor-&gt;GetInputSlot(0));</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    floor-&gt;GetOutputSlot(0).Connect(standIn-&gt;GetInputSlot(0));</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    standIn-&gt;GetOutputSlot(0).Connect(output-&gt;GetInputSlot(0));</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="comment">// Check that the layer is there.</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;StandIn&quot;</span>));</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <span class="comment">// Check that it is connected as expected.</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    BOOST_TEST(input-&gt;GetOutputSlot(0).GetConnection(0) == &amp;floor-&gt;GetInputSlot(0));</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    BOOST_TEST(floor-&gt;GetOutputSlot(0).GetConnection(0) == &amp;standIn-&gt;GetInputSlot(0));</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    BOOST_TEST(standIn-&gt;GetOutputSlot(0).GetConnection(0) == &amp;output-&gt;GetInputSlot(0));</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_network_xhtml_ad55ff20f4c7e60c18b849e61f28f0e2e"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">armnn::Network::AddOutputLayer</a></div><div class="ttdeci">IConnectableLayer * AddOutputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an output layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01435">Network.cpp:1435</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_afe0a4f719f9752a405e71878da7012ba"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">armnn::Network::GetGraph</a></div><div class="ttdeci">const Graph &amp; GetGraph() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00034">Network.hpp:34</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a7b9879b0da1f561d10e4f5c545028143"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a7b9879b0da1f561d10e4f5c545028143">armnn::Network::AddFloorLayer</a></div><div class="ttdeci">IConnectableLayer * AddFloorLayer(const char *name=nullptr) override</div><div class="ttdoc">Adds a floor layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01520">Network.cpp:1520</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_ac73a43305233b7e5f70debdb2d14a8d3"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a></div><div class="ttdeci">bool GraphHasNamedLayer(const armnn::Graph &amp;graph, const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00010">GraphUtils.cpp:10</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a90d8841cfbbc82ab02328f33fed24ac6"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">armnn::Network::AddInputLayer</a></div><div class="ttdeci">IConnectableLayer * AddInputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an input layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01166">Network.cpp:1166</a></div></div>
<div class="ttc" id="structarmnn_1_1_stand_in_descriptor_xhtml_abb8a2d2bb8cc594c26aaa70c820ac5cc"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml#abb8a2d2bb8cc594c26aaa70c820ac5cc">armnn::StandInDescriptor::m_NumOutputs</a></div><div class="ttdeci">uint32_t m_NumOutputs</div><div class="ttdoc">Number of output tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01010">Descriptors.hpp:1010</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a18aea8e0700f679353afb0a0cb9e0c84"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a18aea8e0700f679353afb0a0cb9e0c84">armnn::Network::AddStandInLayer</a></div><div class="ttdeci">IConnectableLayer * AddStandInLayer(const StandInDescriptor &amp;descriptor, const char *name=nullptr) override</div><div class="ttdoc">Add a stand-in layer for a type unknown to the Arm NN framework. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01772">Network.cpp:1772</a></div></div>
<div class="ttc" id="structarmnn_1_1_stand_in_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a></div><div class="ttdoc">A StandInDescriptor for the StandIn layer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00992">Descriptors.hpp:992</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_network.xhtml">armnn::Network</a></div><div class="ttdoc">Private implementation of INetwork. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00028">Network.hpp:28</a></div></div>
<div class="ttc" id="structarmnn_1_1_stand_in_descriptor_xhtml_aed6086070440ceb94129bef06f70173f"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml#aed6086070440ceb94129bef06f70173f">armnn::StandInDescriptor::m_NumInputs</a></div><div class="ttdeci">uint32_t m_NumInputs</div><div class="ttdoc">Number of input tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01008">Descriptors.hpp:1008</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_ac1835f8756a9f03c02fcf9664e3a0fce"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">armnn::IOutputSlot::Connect</a></div><div class="ttdeci">virtual int Connect(IInputSlot &amp;destination)=0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa776b872d63883bb92381c88b87a4460"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa776b872d63883bb92381c88b87a4460">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[12/12]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">StandInLayerSingleInputMultipleOutputsNetworkTest&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_network_tests_8cpp_source.xhtml#l00509">509</a> of file <a class="el" href="_network_tests_8cpp_source.xhtml">NetworkTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_network_8cpp_source.xhtml#l01166">Network::AddInputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01435">Network::AddOutputLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01772">Network::AddStandInLayer()</a>, <a class="el" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">IOutputSlot::Connect()</a>, <a class="el" href="_network_8hpp_source.xhtml#l00034">Network::GetGraph()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">IConnectableLayer::GetOutputSlot()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00010">GraphHasNamedLayer()</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l01008">StandInDescriptor::m_NumInputs</a>, and <a class="el" href="_descriptors_8hpp_source.xhtml#l01010">StandInDescriptor::m_NumOutputs</a>.</p>
<div class="fragment"><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;{</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <span class="comment">// Another test with one input and two outputs on the StandIn layer.</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <a class="code" href="classarmnn_1_1_network.xhtml">armnn::Network</a> net;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <span class="comment">// Create the input.</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <span class="keyword">auto</span> input = net.<a class="code" href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">AddInputLayer</a>(0);</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="comment">// Add a standin layer</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a> standInDescriptor;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    standInDescriptor.<a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml#aed6086070440ceb94129bef06f70173f">m_NumInputs</a>  = 1;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    standInDescriptor.<a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml#abb8a2d2bb8cc594c26aaa70c820ac5cc">m_NumOutputs</a> = 2;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="keyword">auto</span> standIn = net.<a class="code" href="classarmnn_1_1_network.xhtml#a18aea8e0700f679353afb0a0cb9e0c84">AddStandInLayer</a>(standInDescriptor, <span class="stringliteral">&quot;StandIn&quot;</span>);</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="comment">// Add two outputs.</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <span class="keyword">auto</span> output0 = net.<a class="code" href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">AddOutputLayer</a>(0);</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    <span class="keyword">auto</span> output1 = net.<a class="code" href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">AddOutputLayer</a>(1);</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <span class="comment">// Connect up the layers</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    input-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(standIn-&gt;GetInputSlot(0));</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    <span class="comment">// Connect the two outputs of the Standin to the two outputs.</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    standIn-&gt;GetOutputSlot(0).Connect(output0-&gt;GetInputSlot(0));</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    standIn-&gt;GetOutputSlot(1).Connect(output1-&gt;GetInputSlot(0));</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <span class="comment">// Check that the layer is there.</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    BOOST_TEST(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;StandIn&quot;</span>));</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="comment">// Check that it is connected as expected.</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    BOOST_TEST(input-&gt;GetOutputSlot(0).GetConnection(0) == &amp;standIn-&gt;GetInputSlot(0));</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    BOOST_TEST(standIn-&gt;GetOutputSlot(0).GetConnection(0) == &amp;output0-&gt;GetInputSlot(0));</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    BOOST_TEST(standIn-&gt;GetOutputSlot(1).GetConnection(0) == &amp;output1-&gt;GetInputSlot(0));</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_network_xhtml_ad55ff20f4c7e60c18b849e61f28f0e2e"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#ad55ff20f4c7e60c18b849e61f28f0e2e">armnn::Network::AddOutputLayer</a></div><div class="ttdeci">IConnectableLayer * AddOutputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an output layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01435">Network.cpp:1435</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_afe0a4f719f9752a405e71878da7012ba"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#afe0a4f719f9752a405e71878da7012ba">armnn::Network::GetGraph</a></div><div class="ttdeci">const Graph &amp; GetGraph() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00034">Network.hpp:34</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_ac73a43305233b7e5f70debdb2d14a8d3"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a></div><div class="ttdeci">bool GraphHasNamedLayer(const armnn::Graph &amp;graph, const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00010">GraphUtils.cpp:10</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a90d8841cfbbc82ab02328f33fed24ac6"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a90d8841cfbbc82ab02328f33fed24ac6">armnn::Network::AddInputLayer</a></div><div class="ttdeci">IConnectableLayer * AddInputLayer(LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Adds an input layer to the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01166">Network.cpp:1166</a></div></div>
<div class="ttc" id="structarmnn_1_1_stand_in_descriptor_xhtml_abb8a2d2bb8cc594c26aaa70c820ac5cc"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml#abb8a2d2bb8cc594c26aaa70c820ac5cc">armnn::StandInDescriptor::m_NumOutputs</a></div><div class="ttdeci">uint32_t m_NumOutputs</div><div class="ttdoc">Number of output tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01010">Descriptors.hpp:1010</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml_a18aea8e0700f679353afb0a0cb9e0c84"><div class="ttname"><a href="classarmnn_1_1_network.xhtml#a18aea8e0700f679353afb0a0cb9e0c84">armnn::Network::AddStandInLayer</a></div><div class="ttdeci">IConnectableLayer * AddStandInLayer(const StandInDescriptor &amp;descriptor, const char *name=nullptr) override</div><div class="ttdoc">Add a stand-in layer for a type unknown to the Arm NN framework. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01772">Network.cpp:1772</a></div></div>
<div class="ttc" id="structarmnn_1_1_stand_in_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a></div><div class="ttdoc">A StandInDescriptor for the StandIn layer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00992">Descriptors.hpp:992</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_network.xhtml">armnn::Network</a></div><div class="ttdoc">Private implementation of INetwork. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00028">Network.hpp:28</a></div></div>
<div class="ttc" id="structarmnn_1_1_stand_in_descriptor_xhtml_aed6086070440ceb94129bef06f70173f"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml#aed6086070440ceb94129bef06f70173f">armnn::StandInDescriptor::m_NumInputs</a></div><div class="ttdeci">uint32_t m_NumInputs</div><div class="ttdoc">Number of input tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01008">Descriptors.hpp:1008</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_ac1835f8756a9f03c02fcf9664e3a0fce"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">armnn::IOutputSlot::Connect</a></div><div class="ttdeci">virtual int Connect(IInputSlot &amp;destination)=0</div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_network_tests_8cpp.xhtml">NetworkTests.cpp</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:47 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
