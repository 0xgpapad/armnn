<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/layers/LstmLayer.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_lstm_layer_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">LstmLayer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_lstm_layer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_lstm_layer_8hpp.xhtml">LstmLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_layer_clone_base_8hpp.xhtml">LayerCloneBase.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_lstm_params_8hpp.xhtml">armnn/LstmParams.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_types_utils_8hpp.xhtml">armnn/TypesUtils.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_cpu_tensor_handle_8hpp.xhtml">backendsCommon/CpuTensorHandle.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_workload_factory_8hpp.xhtml">backendsCommon/WorkloadFactory.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="classarmnn_1_1_lstm_layer.xhtml#adbb2663fc90c40c0845bb043c23eeae9">   17</a></span>&#160;<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#adbb2663fc90c40c0845bb043c23eeae9">LstmLayer::LstmLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp; param, <span class="keyword">const</span> <span class="keywordtype">char</span>* name)</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        : <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml">LayerWithParameters</a>(3, 4, <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a>::<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a06b091bc9aea697ba473c71f0bb55925">Lstm</a>, param, name)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;}</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classarmnn_1_1_lstm_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">   22</a></span>&#160;std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">LstmLayer::CreateWorkload</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">IWorkloadFactory</a>&amp; factory)<span class="keyword"> const</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml">LstmQueueDescriptor</a> descriptor;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="comment">// Basic parameters</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a3ea82566d98c5a657c76c3d851c47848">m_InputToForgetWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a5a0d8af26a6aad1e5be521ea7dc550eb">m_InputToForgetWeights</a>.get();</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a28ad98d17603fd8b12e046f8ece58970">m_InputToCellWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a14ab2bc78421c417c4f97a65b0bd78f9">m_InputToCellWeights</a>.get();</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a83dc9086b2e4a4e4cadb66bd874df798">m_InputToOutputWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#ae8d897b8d282f25a6eb784c4aaa98df6">m_InputToOutputWeights</a>.get();</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a45d73e66cbb2b65049e4016c20657ccf">m_RecurrentToForgetWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a3d5f129421bbe6479a66d4ed1356bf68">m_RecurrentToForgetWeights</a>.get();</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aea142bd50ffb93631c2e08324ec92a1e">m_RecurrentToCellWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a6e8c3db3c5474f0760553ff93fbc39e6">m_RecurrentToCellWeights</a>.get();</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#adebc1771e5a1f4b113a7aa594ea74d2c">m_RecurrentToOutputWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a91dda74af4085ae43913746ad817795a">m_RecurrentToOutputWeights</a>.get();</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aba3ffe91d818266b8785ce971548eb59">m_ForgetGateBias</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a0e0e17d5b494993407cb75d614455ddd">m_ForgetGateBias</a>.get();</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a75980b5795efd899a0c678a06a900c6d">m_CellBias</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a51255889cbc063130a3d691c1781c5d3">m_CellBias</a>.get();</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a332551528a4b3534c2d6c89ce816fcd9">m_OutputGateBias</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#aacb55e0992b6781a7bd3225ab6e6bb2f">m_OutputGateBias</a>.get();</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="comment">// Cifg parameters</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">m_InputToInputWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a4d731c5e73638c7cf7e63f65e9f8b550">m_InputToInputWeights</a>.get();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">m_RecurrentToInputWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a6e8971757790a032e5936da7847ba14b">m_RecurrentToInputWeights</a>.get();</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acb3aade8fae984f7293e222dcbe66030">m_InputGateBias</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a9945bc99f8a7400c0724117e29cb3abb">m_InputGateBias</a>.get();</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="comment">// Projection parameters</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">m_ProjectionEnabled</a>)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">m_ProjectionWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#a3ec2885c48ce888516e27c8b75a8cb83">m_ProjectionWeights</a>.get();</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">m_ProjectionBias</a>    = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#aa9f2880e4e2a1eb731f61c1e0941c6a7">m_ProjectionBias</a>.get();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">// Peephole parameters</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">m_PeepholeEnabled</a>)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">m_CellToInputWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a658f4245732f95c9fe756a934d370ca8">m_CellToInputWeights</a>.get();</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        }</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">m_CellToForgetWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a5d0ebbbb11b727a67877df40b59a628c">m_CellToForgetWeights</a>.get();</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">m_CellToOutputWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a310e133b0b51b93a74b83008893792e9">m_CellToOutputWeights</a>.get();</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment">// Layer normalisation parameters</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a4a8ec49f130084445d44297549254780">m_LayerNormEnabled</a>)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">m_InputLayerNormWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a706418b4d19614be07f2eca8230bfde0">m_InputLayerNormWeights</a>.get();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">m_ForgetLayerNormWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a559113765ea5e2ddbd9e9e5e2869a103">m_ForgetLayerNormWeights</a>.get();</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">m_CellLayerNormWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a3cab71ebbe91e75be538e5670a40fec5">m_CellLayerNormWeights</a>.get();</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">m_OutputLayerNormWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a69fdb952b874669cbb2a281815a20be2">m_OutputLayerNormWeights</a>.get();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">return</span> factory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#ab6bd7aaf685d4e956d780f8655a6f174">CreateLstm</a>(descriptor, <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#a30a858b2b26d651a066537e499fbf40d">PrepInfoAndDesc</a>(descriptor));</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classarmnn_1_1_lstm_layer.xhtml#ac6b352652fb2f722e56f5fd62c57ae09">   78</a></span>&#160;<a class="code" href="classarmnn_1_1_lstm_layer.xhtml">LstmLayer</a>* <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#ac6b352652fb2f722e56f5fd62c57ae09">LstmLayer::Clone</a>(<a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; graph)<span class="keyword"> const</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">auto</span> layer = CloneBase&lt;LstmLayer&gt;(graph, <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>, <a class="code" href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">GetName</a>());</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a5a0d8af26a6aad1e5be521ea7dc550eb">m_InputToForgetWeights</a> = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a5a0d8af26a6aad1e5be521ea7dc550eb">m_InputToForgetWeights</a> ?</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a5a0d8af26a6aad1e5be521ea7dc550eb">m_InputToForgetWeights</a>)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    layer-&gt;m_BasicParameters.m_InputToCellWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a14ab2bc78421c417c4f97a65b0bd78f9">m_InputToCellWeights</a> ?</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a14ab2bc78421c417c4f97a65b0bd78f9">m_InputToCellWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    layer-&gt;m_BasicParameters.m_InputToOutputWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#ae8d897b8d282f25a6eb784c4aaa98df6">m_InputToOutputWeights</a> ?</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#ae8d897b8d282f25a6eb784c4aaa98df6">m_InputToOutputWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    layer-&gt;m_BasicParameters.m_RecurrentToForgetWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a3d5f129421bbe6479a66d4ed1356bf68">m_RecurrentToForgetWeights</a> ?</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a3d5f129421bbe6479a66d4ed1356bf68">m_RecurrentToForgetWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    layer-&gt;m_BasicParameters.m_RecurrentToCellWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a6e8c3db3c5474f0760553ff93fbc39e6">m_RecurrentToCellWeights</a> ?</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a6e8c3db3c5474f0760553ff93fbc39e6">m_RecurrentToCellWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    layer-&gt;m_BasicParameters.m_RecurrentToOutputWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a91dda74af4085ae43913746ad817795a">m_RecurrentToOutputWeights</a> ?</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a91dda74af4085ae43913746ad817795a">m_RecurrentToOutputWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    layer-&gt;m_BasicParameters.m_ForgetGateBias = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a0e0e17d5b494993407cb75d614455ddd">m_ForgetGateBias</a> ?</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a0e0e17d5b494993407cb75d614455ddd">m_ForgetGateBias</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    layer-&gt;m_BasicParameters.m_CellBias = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a51255889cbc063130a3d691c1781c5d3">m_CellBias</a> ?</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a51255889cbc063130a3d691c1781c5d3">m_CellBias</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    layer-&gt;m_BasicParameters.m_OutputGateBias = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#aacb55e0992b6781a7bd3225ab6e6bb2f">m_OutputGateBias</a> ?</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#aacb55e0992b6781a7bd3225ab6e6bb2f">m_OutputGateBias</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">if</span> (!m_Param.m_CifgEnabled)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        layer-&gt;m_CifgParameters.m_InputToInputWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a4d731c5e73638c7cf7e63f65e9f8b550">m_InputToInputWeights</a> ?</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a4d731c5e73638c7cf7e63f65e9f8b550">m_InputToInputWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        layer-&gt;m_CifgParameters.m_RecurrentToInputWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a6e8971757790a032e5936da7847ba14b">m_RecurrentToInputWeights</a> ?</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a6e8971757790a032e5936da7847ba14b">m_RecurrentToInputWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        layer-&gt;m_CifgParameters.m_InputGateBias = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a9945bc99f8a7400c0724117e29cb3abb">m_InputGateBias</a> ?</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a9945bc99f8a7400c0724117e29cb3abb">m_InputGateBias</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">if</span> (m_Param.m_ProjectionEnabled)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        layer-&gt;m_ProjectionParameters.m_ProjectionWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#a3ec2885c48ce888516e27c8b75a8cb83">m_ProjectionWeights</a> ?</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;               std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#a3ec2885c48ce888516e27c8b75a8cb83">m_ProjectionWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        layer-&gt;m_ProjectionParameters.m_ProjectionBias = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#aa9f2880e4e2a1eb731f61c1e0941c6a7">m_ProjectionBias</a> ?</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;               std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#aa9f2880e4e2a1eb731f61c1e0941c6a7">m_ProjectionBias</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">if</span> (m_Param.m_PeepholeEnabled)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">if</span> (!m_Param.m_CifgEnabled)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            layer-&gt;m_PeepholeParameters.m_CellToInputWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a658f4245732f95c9fe756a934d370ca8">m_CellToInputWeights</a> ?</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a658f4245732f95c9fe756a934d370ca8">m_CellToInputWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        }</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        layer-&gt;m_PeepholeParameters.m_CellToForgetWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a5d0ebbbb11b727a67877df40b59a628c">m_CellToForgetWeights</a> ?</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;               std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a5d0ebbbb11b727a67877df40b59a628c">m_CellToForgetWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        layer-&gt;m_PeepholeParameters.m_CellToOutputWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a310e133b0b51b93a74b83008893792e9">m_CellToOutputWeights</a> ?</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;               std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a310e133b0b51b93a74b83008893792e9">m_CellToOutputWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">if</span> (m_Param.m_LayerNormEnabled)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    {</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        layer-&gt;m_LayerNormParameters.m_InputLayerNormWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a706418b4d19614be07f2eca8230bfde0">m_InputLayerNormWeights</a> ?</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;               std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a706418b4d19614be07f2eca8230bfde0">m_InputLayerNormWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        layer-&gt;m_LayerNormParameters.m_ForgetLayerNormWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a559113765ea5e2ddbd9e9e5e2869a103">m_ForgetLayerNormWeights</a> ?</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;               std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a559113765ea5e2ddbd9e9e5e2869a103">m_ForgetLayerNormWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        layer-&gt;m_LayerNormParameters.m_CellLayerNormWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a3cab71ebbe91e75be538e5670a40fec5">m_CellLayerNormWeights</a> ?</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;               std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a3cab71ebbe91e75be538e5670a40fec5">m_CellLayerNormWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        layer-&gt;m_LayerNormParameters.m_OutputLayerNormWeights = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a69fdb952b874669cbb2a281815a20be2">m_OutputLayerNormWeights</a> ?</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;               std::make_unique&lt;ScopedCpuTensorHandle&gt;(*<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a69fdb952b874669cbb2a281815a20be2">m_OutputLayerNormWeights</a>) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">return</span> std::move(layer);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classarmnn_1_1_lstm_layer.xhtml#a65ca562c882ad619684445a1402f415a">  148</a></span>&#160;std::vector&lt;TensorShape&gt; <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a65ca562c882ad619684445a1402f415a">LstmLayer::InferOutputShapes</a>(<span class="keyword">const</span> std::vector&lt;TensorShape&gt;&amp; inputShapes)<span class="keyword"> const</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a>(inputShapes.size() == 3);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="comment">// Get input values for validation</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batchSize = inputShapes[0][0];</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputSize = inputShapes[1][1];</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numUnits = inputShapes[2][1];</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    std::vector&lt;TensorShape&gt; outShapes;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    outShapes.push_back(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>({batchSize, numUnits * (<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a> ? 3 : 4)}));</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    outShapes.push_back(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>({batchSize, outputSize}));</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    outShapes.push_back(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>({batchSize, numUnits}));</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    outShapes.push_back(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>({batchSize, outputSize}));</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> outShapes;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classarmnn_1_1_lstm_layer.xhtml#a8c8f543d7e9729362c266d12ec169966">  166</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8c8f543d7e9729362c266d12ec169966">LstmLayer::ValidateTensorShapesFromInputs</a>()</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;{</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml#a0607e36e88f38c34c71c663164b76776">VerifyLayerConnections</a>(3, <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>());</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">auto</span> inferredShapes = <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a65ca562c882ad619684445a1402f415a">InferOutputShapes</a>( {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a3153abb7c0c0a84629079b2fac7db54f">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(),</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a3153abb7c0c0a84629079b2fac7db54f">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(),</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(2).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a3153abb7c0c0a84629079b2fac7db54f">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>()}</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    );</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a>(inferredShapes.size() == 4);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="comment">// Check if the weights are nullptr</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a5a0d8af26a6aad1e5be521ea7dc550eb">m_InputToForgetWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                     <span class="stringliteral">&quot;LstmLayer: m_BasicParameters.m_InputToForgetWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a14ab2bc78421c417c4f97a65b0bd78f9">m_InputToCellWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                     <span class="stringliteral">&quot;LstmLayer: m_BasicParameters.m_InputToCellWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#ae8d897b8d282f25a6eb784c4aaa98df6">m_InputToOutputWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                     <span class="stringliteral">&quot;LstmLayer: m_BasicParameters.m_InputToOutputWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a3d5f129421bbe6479a66d4ed1356bf68">m_RecurrentToForgetWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                     <span class="stringliteral">&quot;LstmLayer: m_BasicParameters.m_RecurrentToForgetWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a6e8c3db3c5474f0760553ff93fbc39e6">m_RecurrentToCellWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                     <span class="stringliteral">&quot;LstmLayer: m_BasicParameters.m_RecurrentToCellWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a91dda74af4085ae43913746ad817795a">m_RecurrentToOutputWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                     <span class="stringliteral">&quot;LstmLayer: m_BasicParameters.m_RecurrentToOutputWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a0e0e17d5b494993407cb75d614455ddd">m_ForgetGateBias</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                     <span class="stringliteral">&quot;LstmLayer: m_BasicParameters.m_ForgetGateBias should not be null.&quot;</span>);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a51255889cbc063130a3d691c1781c5d3">m_CellBias</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                     <span class="stringliteral">&quot;LstmLayer: m_BasicParameters.m_CellBias should not be null.&quot;</span>);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#aacb55e0992b6781a7bd3225ab6e6bb2f">m_OutputGateBias</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                     <span class="stringliteral">&quot;LstmLayer: m_BasicParameters.m_OutputGateBias should not be null.&quot;</span>);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a4d731c5e73638c7cf7e63f65e9f8b550">m_InputToInputWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                         <span class="stringliteral">&quot;LstmLayer: m_CifgParameters.m_InputToInputWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a6e8971757790a032e5936da7847ba14b">m_RecurrentToInputWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                         <span class="stringliteral">&quot;LstmLayer: m_CifgParameters.m_RecurrentToInputWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a9945bc99f8a7400c0724117e29cb3abb">m_InputGateBias</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                         <span class="stringliteral">&quot;LstmLayer: m_CifgParameters.m_InputGateBias should not be null.&quot;</span>);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        ConditionalThrowIfNotEqual&lt;LayerValidationException&gt;(</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                <span class="stringliteral">&quot;LstmLayer: TensorShape set on OutputSlot[0] does not match the inferred shape.&quot;</span>,</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                <a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(),</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                inferredShapes[0]);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    }</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    {</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a4d731c5e73638c7cf7e63f65e9f8b550">m_InputToInputWeights</a> == <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="stringliteral">&quot;LstmLayer: m_CifgParameters.m_InputToInputWeights should not have a value when CIFG is enabled.&quot;</span>);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a6e8971757790a032e5936da7847ba14b">m_RecurrentToInputWeights</a> == <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="stringliteral">&quot;LstmLayer: m_CifgParameters.m_RecurrentToInputWeights should not have a value when CIFG is enabled.&quot;</span>);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a9945bc99f8a7400c0724117e29cb3abb">m_InputGateBias</a> == <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="stringliteral">&quot;LstmLayer: m_CifgParameters.m_InputGateBias should not have a value when CIFG is enabled.&quot;</span>);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        ConditionalThrowIfNotEqual&lt;LayerValidationException&gt;(</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                <span class="stringliteral">&quot;LstmLayer: TensorShape set on OutputSlot[0] does not match the inferred shape.&quot;</span>,</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                <a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(),</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                inferredShapes[0]);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    }</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">m_ProjectionEnabled</a>)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#a3ec2885c48ce888516e27c8b75a8cb83">m_ProjectionWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                         <span class="stringliteral">&quot;LstmLayer: m_ProjectionParameters.m_ProjectionWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">m_PeepholeEnabled</a>)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a658f4245732f95c9fe756a934d370ca8">m_CellToInputWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                             <span class="stringliteral">&quot;LstmLayer: m_PeepholeParameters.m_CellToInputWeights should not be null &quot;</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                             <span class="stringliteral">&quot;when Peephole is enabled and CIFG is disabled.&quot;</span>);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        }</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a5d0ebbbb11b727a67877df40b59a628c">m_CellToForgetWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                         <span class="stringliteral">&quot;LstmLayer: m_PeepholeParameters.m_CellToForgetWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a310e133b0b51b93a74b83008893792e9">m_CellToOutputWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                         <span class="stringliteral">&quot;LstmLayer: m_PeepholeParameters.m_CellToOutputWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    ConditionalThrowIfNotEqual&lt;LayerValidationException&gt;(</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="stringliteral">&quot;LstmLayer: TensorShape set on OutputSlot[1] does not match the inferred shape.&quot;</span>,</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(1).<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(),</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            inferredShapes[1]);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    ConditionalThrowIfNotEqual&lt;LayerValidationException&gt;(</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="stringliteral">&quot;LstmLayer: TensorShape set on OutputSlot[2] does not match the inferred shape.&quot;</span>,</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            <a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(2).<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(),</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            inferredShapes[2]);</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    ConditionalThrowIfNotEqual&lt;LayerValidationException&gt;(</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="stringliteral">&quot;LstmLayer: TensorShape set on OutputSlot[3] does not match the inferred shape.&quot;</span>,</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(3).<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(),</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            inferredShapes[3]);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#a4a8ec49f130084445d44297549254780">m_LayerNormEnabled</a>)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    {</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="keywordflow">if</span>(!<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        {</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a706418b4d19614be07f2eca8230bfde0">m_InputLayerNormWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                             <span class="stringliteral">&quot;LstmLayer: m_LayerNormParameters.m_inputLayerNormWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a559113765ea5e2ddbd9e9e5e2869a103">m_ForgetLayerNormWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                         <span class="stringliteral">&quot;LstmLayer: m_LayerNormParameters.m_forgetLayerNormWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a3cab71ebbe91e75be538e5670a40fec5">m_CellLayerNormWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                         <span class="stringliteral">&quot;LstmLayer: m_LayerNormParameters.m_cellLayerNormWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a69fdb952b874669cbb2a281815a20be2">m_OutputLayerNormWeights</a> != <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                         <span class="stringliteral">&quot;LstmLayer: m_LayerNormParameters.m_outputLayerNormWeights should not be null.&quot;</span>);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    }</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;}</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="classarmnn_1_1_lstm_layer.xhtml#abe659a5afa7523f5dbc04bcba9b31f1a">  276</a></span>&#160;<a class="code" href="classarmnn_1_1_layer.xhtml#a585d59ec610af46a76487fd6c1c55ac1">Layer::ConstantTensors</a> <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#abe659a5afa7523f5dbc04bcba9b31f1a">LstmLayer::GetConstantTensorsByRef</a>()</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;{</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a5a0d8af26a6aad1e5be521ea7dc550eb">m_InputToForgetWeights</a>,</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a14ab2bc78421c417c4f97a65b0bd78f9">m_InputToCellWeights</a>,</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#ae8d897b8d282f25a6eb784c4aaa98df6">m_InputToOutputWeights</a>,</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a3d5f129421bbe6479a66d4ed1356bf68">m_RecurrentToForgetWeights</a>,</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a6e8c3db3c5474f0760553ff93fbc39e6">m_RecurrentToCellWeights</a>,</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a91dda74af4085ae43913746ad817795a">m_RecurrentToOutputWeights</a>,</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a0e0e17d5b494993407cb75d614455ddd">m_ForgetGateBias</a>,</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a51255889cbc063130a3d691c1781c5d3">m_CellBias</a>,</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#aacb55e0992b6781a7bd3225ab6e6bb2f">m_OutputGateBias</a>,</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <span class="comment">// Cifg parameters</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a4d731c5e73638c7cf7e63f65e9f8b550">m_InputToInputWeights</a>,</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a6e8971757790a032e5936da7847ba14b">m_RecurrentToInputWeights</a>,</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a9945bc99f8a7400c0724117e29cb3abb">m_InputGateBias</a>,</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            <span class="comment">// Projection parameters</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#a3ec2885c48ce888516e27c8b75a8cb83">m_ProjectionWeights</a>,</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#aa9f2880e4e2a1eb731f61c1e0941c6a7">m_ProjectionBias</a>,</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            <span class="comment">// Peephole parameters</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a658f4245732f95c9fe756a934d370ca8">m_CellToInputWeights</a>,</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a5d0ebbbb11b727a67877df40b59a628c">m_CellToForgetWeights</a>,</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a310e133b0b51b93a74b83008893792e9">m_CellToOutputWeights</a>,</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="comment">// Layer normalisation parameters</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a706418b4d19614be07f2eca8230bfde0">m_InputLayerNormWeights</a>,</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a559113765ea5e2ddbd9e9e5e2869a103">m_ForgetLayerNormWeights</a>,</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a3cab71ebbe91e75be538e5670a40fec5">m_CellLayerNormWeights</a>,</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a69fdb952b874669cbb2a281815a20be2">m_OutputLayerNormWeights</a>};</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;}</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="classarmnn_1_1_lstm_layer.xhtml#a75a50f464326fefa605ea84ae2c9be85">  309</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a75a50f464326fefa605ea84ae2c9be85">LstmLayer::Accept</a>(<a class="code" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a>&amp; visitor)<span class="keyword"> const</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a> inputParams;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> inputToInputWeightsTensor;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a4d731c5e73638c7cf7e63f65e9f8b550">m_InputToInputWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    {</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> inputToInputWeightsTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a4d731c5e73638c7cf7e63f65e9f8b550">m_InputToInputWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                                                  <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a4d731c5e73638c7cf7e63f65e9f8b550">m_InputToInputWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        inputToInputWeightsTensor = inputToInputWeightsTensorCopy;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#affcee5f4ab5994a21bee3b78b4e43de3">m_InputToInputWeights</a> = &amp;inputToInputWeightsTensor;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    }</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> inputToForgetWeightsTensor;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a5a0d8af26a6aad1e5be521ea7dc550eb">m_InputToForgetWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    {</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> inputToForgetWeightsTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a5a0d8af26a6aad1e5be521ea7dc550eb">m_InputToForgetWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                                                   <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a5a0d8af26a6aad1e5be521ea7dc550eb">m_InputToForgetWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        inputToForgetWeightsTensor = inputToForgetWeightsTensorCopy;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a31da1ead6794dd64571afdd0b6efc771">m_InputToForgetWeights</a> = &amp;inputToForgetWeightsTensor;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    }</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> inputToCellWeightsTensor;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a14ab2bc78421c417c4f97a65b0bd78f9">m_InputToCellWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    {</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> inputToCellWeightsTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a14ab2bc78421c417c4f97a65b0bd78f9">m_InputToCellWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                                                 <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a14ab2bc78421c417c4f97a65b0bd78f9">m_InputToCellWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        inputToCellWeightsTensor = inputToCellWeightsTensorCopy;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a49e11acda22742cbaf6f1b259ead0d84">m_InputToCellWeights</a> = &amp;inputToCellWeightsTensor;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    }</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> inputToOutputWeightsTensor;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#ae8d897b8d282f25a6eb784c4aaa98df6">m_InputToOutputWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    {</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> inputToOutputWeightsTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#ae8d897b8d282f25a6eb784c4aaa98df6">m_InputToOutputWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                                                   <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#ae8d897b8d282f25a6eb784c4aaa98df6">m_InputToOutputWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        inputToOutputWeightsTensor = inputToOutputWeightsTensorCopy;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a6e30c7b3451da3ea9cf4259fb602e6e6">m_InputToOutputWeights</a> = &amp;inputToOutputWeightsTensor;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    }</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> recurrentToInputWeightsTensor;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a6e8971757790a032e5936da7847ba14b">m_RecurrentToInputWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    {</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> recurrentToInputWeightsTensorCopy(</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a6e8971757790a032e5936da7847ba14b">m_RecurrentToInputWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a6e8971757790a032e5936da7847ba14b">m_RecurrentToInputWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        recurrentToInputWeightsTensor = recurrentToInputWeightsTensorCopy;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a435d3651482bbfcc11263b4e4e0c900f">m_RecurrentToInputWeights</a> = &amp;recurrentToInputWeightsTensor;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    }</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> recurrentToForgetWeightsTensor;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a3d5f129421bbe6479a66d4ed1356bf68">m_RecurrentToForgetWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    {</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> recurrentToForgetWeightsTensorCopy(</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a3d5f129421bbe6479a66d4ed1356bf68">m_RecurrentToForgetWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a3d5f129421bbe6479a66d4ed1356bf68">m_RecurrentToForgetWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        recurrentToForgetWeightsTensor = recurrentToForgetWeightsTensorCopy;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#ae83131e16df1cace69395a5f99bc5ecb">m_RecurrentToForgetWeights</a> = &amp;recurrentToForgetWeightsTensor;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    }</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> recurrentToCellWeightsTensor;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a6e8c3db3c5474f0760553ff93fbc39e6">m_RecurrentToCellWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    {</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> recurrentToCellWeightsTensorCopy(</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a6e8c3db3c5474f0760553ff93fbc39e6">m_RecurrentToCellWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a6e8c3db3c5474f0760553ff93fbc39e6">m_RecurrentToCellWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        recurrentToCellWeightsTensor = recurrentToCellWeightsTensorCopy;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a1759754ccb88ecc9af44f3aae6e244ee">m_RecurrentToCellWeights</a> = &amp;recurrentToCellWeightsTensor;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    }</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> recurrentToOutputWeightsTensor;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a91dda74af4085ae43913746ad817795a">m_RecurrentToOutputWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    {</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> recurrentToOutputWeightsTensorCopy(</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a91dda74af4085ae43913746ad817795a">m_RecurrentToOutputWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a91dda74af4085ae43913746ad817795a">m_RecurrentToOutputWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        recurrentToOutputWeightsTensor = recurrentToOutputWeightsTensorCopy;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a56b81ca8ba4b4937e0787e4951f043fc">m_RecurrentToOutputWeights</a> = &amp;recurrentToOutputWeightsTensor;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    }</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> cellToInputWeightsTensor;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a658f4245732f95c9fe756a934d370ca8">m_CellToInputWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    {</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> cellToInputWeightsTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a658f4245732f95c9fe756a934d370ca8">m_CellToInputWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                                                 <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a658f4245732f95c9fe756a934d370ca8">m_CellToInputWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        cellToInputWeightsTensor = cellToInputWeightsTensorCopy;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a484bafa2f8453a7c5a4a00b92a61b006">m_CellToInputWeights</a> = &amp;cellToInputWeightsTensor;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    }</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> cellToForgetWeightsTensor;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a5d0ebbbb11b727a67877df40b59a628c">m_CellToForgetWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    {</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> cellToForgetWeightsTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a5d0ebbbb11b727a67877df40b59a628c">m_CellToForgetWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                                                  <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a5d0ebbbb11b727a67877df40b59a628c">m_CellToForgetWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        cellToForgetWeightsTensor = cellToForgetWeightsTensorCopy;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a35b112e30c3eb153806a2a8c16d178e3">m_CellToForgetWeights</a> = &amp;cellToForgetWeightsTensor;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    }</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> cellToOutputWeightsTensor;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a310e133b0b51b93a74b83008893792e9">m_CellToOutputWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    {</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> cellToOutputWeightsTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a310e133b0b51b93a74b83008893792e9">m_CellToOutputWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                                                  <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">m_PeepholeParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a310e133b0b51b93a74b83008893792e9">m_CellToOutputWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        cellToOutputWeightsTensor = cellToOutputWeightsTensorCopy;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#afe204ca375b74e9a72640c9227918d0a">m_CellToOutputWeights</a> = &amp;cellToOutputWeightsTensor;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    }</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> inputGateBiasTensor;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a9945bc99f8a7400c0724117e29cb3abb">m_InputGateBias</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    {</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> inputGateBiasTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a9945bc99f8a7400c0724117e29cb3abb">m_InputGateBias</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                                        <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">m_CifgParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a9945bc99f8a7400c0724117e29cb3abb">m_InputGateBias</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        inputGateBiasTensor = inputGateBiasTensorCopy;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a9e081a9b94defb30d1558dc912507e0e">m_InputGateBias</a> = &amp;inputGateBiasTensor;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    }</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> forgetGateBiasTensor;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a0e0e17d5b494993407cb75d614455ddd">m_ForgetGateBias</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    {</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> forgetGateBiasTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a0e0e17d5b494993407cb75d614455ddd">m_ForgetGateBias</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                                             <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a0e0e17d5b494993407cb75d614455ddd">m_ForgetGateBias</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        forgetGateBiasTensor = forgetGateBiasTensorCopy;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#ace7a1f1f1041b412b7d8ef82b95ff352">m_ForgetGateBias</a> = &amp;forgetGateBiasTensor;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    }</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> cellBiasTensor;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a51255889cbc063130a3d691c1781c5d3">m_CellBias</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    {</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> cellBiasTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a51255889cbc063130a3d691c1781c5d3">m_CellBias</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                                       <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#a51255889cbc063130a3d691c1781c5d3">m_CellBias</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        cellBiasTensor = cellBiasTensorCopy;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a4a9d678146f572808a361dbdc5489f38">m_CellBias</a> = &amp;cellBiasTensor;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    }</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> outputGateBias;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#aacb55e0992b6781a7bd3225ab6e6bb2f">m_OutputGateBias</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    {</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> outputGateBiasCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#aacb55e0992b6781a7bd3225ab6e6bb2f">m_OutputGateBias</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                                       <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">m_BasicParameters</a>.<a class="code" href="structarmnn_1_1_lstm_basic_parameters.xhtml#aacb55e0992b6781a7bd3225ab6e6bb2f">m_OutputGateBias</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        outputGateBias = outputGateBiasCopy;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a8c0f6d48705f40c5590dde09be262222">m_OutputGateBias</a> = &amp;outputGateBias;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    }</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> projectionWeightsTensor;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#a3ec2885c48ce888516e27c8b75a8cb83">m_ProjectionWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    {</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> projectionWeightsTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#a3ec2885c48ce888516e27c8b75a8cb83">m_ProjectionWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                                                <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#a3ec2885c48ce888516e27c8b75a8cb83">m_ProjectionWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        projectionWeightsTensor = projectionWeightsTensorCopy;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#ab03e6e1514f74427916c892f473fe04c">m_ProjectionWeights</a> = &amp;projectionWeightsTensor;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    }</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> projectionBiasTensor;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#aa9f2880e4e2a1eb731f61c1e0941c6a7">m_ProjectionBias</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    {</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> projectionBiasTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#aa9f2880e4e2a1eb731f61c1e0941c6a7">m_ProjectionBias</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                                             <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">m_ProjectionParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#aa9f2880e4e2a1eb731f61c1e0941c6a7">m_ProjectionBias</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        projectionBiasTensor = projectionBiasTensorCopy;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a44b0e6b16708df7f0d2bbab141688aaa">m_ProjectionBias</a> = &amp;projectionBiasTensor;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    }</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> inputLayerNormTensor;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a706418b4d19614be07f2eca8230bfde0">m_InputLayerNormWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    {</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> inputLayerNormTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a706418b4d19614be07f2eca8230bfde0">m_InputLayerNormWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                                             <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a706418b4d19614be07f2eca8230bfde0">m_InputLayerNormWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        inputLayerNormTensor = inputLayerNormTensorCopy;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a0cd848f65ec31778d708852f0042fe37">m_InputLayerNormWeights</a> = &amp;inputLayerNormTensor;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    }</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> forgetLayerNormTensor;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a559113765ea5e2ddbd9e9e5e2869a103">m_ForgetLayerNormWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    {</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> forgetLayerNormTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a559113765ea5e2ddbd9e9e5e2869a103">m_ForgetLayerNormWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                                             <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a559113765ea5e2ddbd9e9e5e2869a103">m_ForgetLayerNormWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        forgetLayerNormTensor = forgetLayerNormTensorCopy;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#af0f796fba1a2be9c56b4c9ee534577ee">m_ForgetLayerNormWeights</a> = &amp;forgetLayerNormTensor;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    }</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> cellLayerNormTensor;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a3cab71ebbe91e75be538e5670a40fec5">m_CellLayerNormWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    {</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> cellLayerNormTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a3cab71ebbe91e75be538e5670a40fec5">m_CellLayerNormWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                                              <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a3cab71ebbe91e75be538e5670a40fec5">m_CellLayerNormWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        cellLayerNormTensor = cellLayerNormTensorCopy;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#ad0b8c32bb5381f4cc999093ba3b98b43">m_CellLayerNormWeights</a> = &amp;cellLayerNormTensor;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    }</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> outputLayerNormTensor;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a69fdb952b874669cbb2a281815a20be2">m_OutputLayerNormWeights</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    {</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> outputLayerNormTensorCopy(<a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a69fdb952b874669cbb2a281815a20be2">m_OutputLayerNormWeights</a>-&gt;GetTensorInfo(),</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                                            <a class="code" href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">m_LayerNormParameters</a>.<a class="code" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a69fdb952b874669cbb2a281815a20be2">m_OutputLayerNormWeights</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        outputLayerNormTensor = outputLayerNormTensorCopy;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a9b18daea2e9f42386055326fd016519a">m_OutputLayerNormWeights</a> = &amp;outputLayerNormTensor;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    }</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    visitor.<a class="code" href="classarmnn_1_1_i_layer_visitor.xhtml#aed730aaef50861ea8b7b6276ce880c9a">VisitLstmLayer</a>(<span class="keyword">this</span>, <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#a502c06a1b13e6d90a6cbf47c081f1444">GetParameters</a>(), inputParams, <a class="code" href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">GetName</a>());</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;}</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="structarmnn_1_1_lstm_basic_parameters_xhtml_a0e0e17d5b494993407cb75d614455ddd"><div class="ttname"><a href="structarmnn_1_1_lstm_basic_parameters.xhtml#a0e0e17d5b494993407cb75d614455ddd">armnn::LstmBasicParameters::m_ForgetGateBias</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_ForgetGateBias</div><div class="ttdoc">A unique pointer to represent 1D weights tensor with dimensions [num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00069">LstmLayer.hpp:69</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_basic_parameters_xhtml_ae8d897b8d282f25a6eb784c4aaa98df6"><div class="ttname"><a href="structarmnn_1_1_lstm_basic_parameters.xhtml#ae8d897b8d282f25a6eb784c4aaa98df6">armnn::LstmBasicParameters::m_InputToOutputWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_InputToOutputWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [input_size, num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00061">LstmLayer.hpp:61</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_basic_parameters_xhtml_a6e8c3db3c5474f0760553ff93fbc39e6"><div class="ttname"><a href="structarmnn_1_1_lstm_basic_parameters.xhtml#a6e8c3db3c5474f0760553ff93fbc39e6">armnn::LstmBasicParameters::m_RecurrentToCellWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_RecurrentToCellWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [output_size, num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00065">LstmLayer.hpp:65</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml_a6c9de81fc65b3c4924cab11907075a17"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">armnn::LstmDescriptor::m_ProjectionEnabled</a></div><div class="ttdeci">bool m_ProjectionEnabled</div><div class="ttdoc">Enable/disable the projection layer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00883">Descriptors.hpp:883</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml_a8838b317568861294a9df608221f185e"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml#a8838b317568861294a9df608221f185e">armnn::LstmLayer::m_BasicParameters</a></div><div class="ttdeci">LstmBasicParameters m_BasicParameters</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00081">LstmLayer.hpp:81</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_ab03e6e1514f74427916c892f473fe04c"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#ab03e6e1514f74427916c892f473fe04c">armnn::LstmInputParams::m_ProjectionWeights</a></div><div class="ttdeci">const ConstTensor * m_ProjectionWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00055">LstmParams.hpp:55</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a4a9d678146f572808a361dbdc5489f38"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a4a9d678146f572808a361dbdc5489f38">armnn::LstmInputParams::m_CellBias</a></div><div class="ttdeci">const ConstTensor * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00053">LstmParams.hpp:53</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_ad32ac22bc72e28dfd6b466d143c8e262"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">armnn::LayerWithParameters&lt; LstmDescriptor &gt;::m_Param</a></div><div class="ttdeci">LstmDescriptor m_Param</div><div class="ttdoc">The parameters for the layer (not including tensor-valued weights etc.). </div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00050">LayerWithParameters.hpp:50</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_a502c06a1b13e6d90a6cbf47c081f1444"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#a502c06a1b13e6d90a6cbf47c081f1444">armnn::LayerWithParameters&lt; LstmDescriptor &gt;::GetParameters</a></div><div class="ttdeci">const LstmDescriptor &amp; GetParameters() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00018">LayerWithParameters.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00088">Tensor.hpp:88</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_opt_cifg_parameters_xhtml_a4d731c5e73638c7cf7e63f65e9f8b550"><div class="ttname"><a href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a4d731c5e73638c7cf7e63f65e9f8b550">armnn::LstmOptCifgParameters::m_InputToInputWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_InputToInputWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [input_size, num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00029">LstmLayer.hpp:29</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a45d73e66cbb2b65049e4016c20657ccf"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a45d73e66cbb2b65049e4016c20657ccf">armnn::LstmQueueDescriptor::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00390">WorkloadData.hpp:390</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a6f74071b0e07bbe2cb20a8f78826e084"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6f74071b0e07bbe2cb20a8f78826e084">armnn::LstmQueueDescriptor::m_CellToOutputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00395">WorkloadData.hpp:395</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_afe204ca375b74e9a72640c9227918d0a"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#afe204ca375b74e9a72640c9227918d0a">armnn::LstmInputParams::m_CellToOutputWeights</a></div><div class="ttdeci">const ConstTensor * m_CellToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00050">LstmParams.hpp:50</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a28ad98d17603fd8b12e046f8ece58970"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a28ad98d17603fd8b12e046f8ece58970">armnn::LstmQueueDescriptor::m_InputToCellWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00387">WorkloadData.hpp:387</a></div></div>
<div class="ttc" id="_workload_factory_8hpp_xhtml"><div class="ttname"><a href="_workload_factory_8hpp.xhtml">WorkloadFactory.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a83dc9086b2e4a4e4cadb66bd874df798"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a83dc9086b2e4a4e4cadb66bd874df798">armnn::LstmQueueDescriptor::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00388">WorkloadData.hpp:388</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8hpp_source.xhtml#l00021">WorkloadFactory.hpp:21</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_opt_layer_norm_parameters_xhtml_a3cab71ebbe91e75be538e5670a40fec5"><div class="ttname"><a href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a3cab71ebbe91e75be538e5670a40fec5">armnn::LstmOptLayerNormParameters::m_CellLayerNormWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_CellLayerNormWeights</div><div class="ttdoc">A unique pointer to represent 1D weights tensor with dimensions [num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00021">LstmLayer.hpp:21</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_visitor_xhtml_aed730aaef50861ea8b7b6276ce880c9a"><div class="ttname"><a href="classarmnn_1_1_i_layer_visitor.xhtml#aed730aaef50861ea8b7b6276ce880c9a">armnn::ILayerVisitor::VisitLstmLayer</a></div><div class="ttdeci">virtual void VisitLstmLayer(const IConnectableLayer *layer, const LstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)=0</div><div class="ttdoc">Function an Lstm layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div></div>
<div class="ttc" id="structarmnn_1_1_lstm_basic_parameters_xhtml_a3d5f129421bbe6479a66d4ed1356bf68"><div class="ttname"><a href="structarmnn_1_1_lstm_basic_parameters.xhtml#a3d5f129421bbe6479a66d4ed1356bf68">armnn::LstmBasicParameters::m_RecurrentToForgetWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_RecurrentToForgetWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [output_size, num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00063">LstmLayer.hpp:63</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a2ba352eb1fdf6dc5ecf7f2e6b6b48f94"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a2ba352eb1fdf6dc5ecf7f2e6b6b48f94">armnn::LstmQueueDescriptor::m_ProjectionBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ProjectionBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00401">WorkloadData.hpp:401</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_ab6bd7aaf685d4e956d780f8655a6f174"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#ab6bd7aaf685d4e956d780f8655a6f174">armnn::IWorkloadFactory::CreateLstm</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateLstm(const LstmQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01382">WorkloadFactory.cpp:1382</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a484bafa2f8453a7c5a4a00b92a61b006"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a484bafa2f8453a7c5a4a00b92a61b006">armnn::LstmInputParams::m_CellToInputWeights</a></div><div class="ttdeci">const ConstTensor * m_CellToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00048">LstmParams.hpp:48</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a332551528a4b3534c2d6c89ce816fcd9"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a332551528a4b3534c2d6c89ce816fcd9">armnn::LstmQueueDescriptor::m_OutputGateBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00399">WorkloadData.hpp:399</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a9e081a9b94defb30d1558dc912507e0e"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a9e081a9b94defb30d1558dc912507e0e">armnn::LstmInputParams::m_InputGateBias</a></div><div class="ttdeci">const ConstTensor * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00051">LstmParams.hpp:51</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a5c1c0a7ead7273788976c9e97cffaab7"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5c1c0a7ead7273788976c9e97cffaab7">armnn::LstmQueueDescriptor::m_CellToInputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00393">WorkloadData.hpp:393</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_basic_parameters_xhtml_aacb55e0992b6781a7bd3225ab6e6bb2f"><div class="ttname"><a href="structarmnn_1_1_lstm_basic_parameters.xhtml#aacb55e0992b6781a7bd3225ab6e6bb2f">armnn::LstmBasicParameters::m_OutputGateBias</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_OutputGateBias</div><div class="ttdoc">A unique pointer to represent 1D weights tensor with dimensions [num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00073">LstmLayer.hpp:73</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a1759754ccb88ecc9af44f3aae6e244ee"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a1759754ccb88ecc9af44f3aae6e244ee">armnn::LstmInputParams::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstTensor * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00046">LstmParams.hpp:46</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml_adfa912d0c4c6c00f1af2cbfa799572b7"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">armnn::LstmLayer::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(const IWorkloadFactory &amp;factory) const override</div><div class="ttdoc">Makes a workload for the LSTM type. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8cpp_source.xhtml#l00022">LstmLayer.cpp:22</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a518f0195d0278a892b49649b8860d17f"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a518f0195d0278a892b49649b8860d17f">armnn::LstmQueueDescriptor::m_CellLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00404">WorkloadData.hpp:404</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_opt_layer_norm_parameters_xhtml_a706418b4d19614be07f2eca8230bfde0"><div class="ttname"><a href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a706418b4d19614be07f2eca8230bfde0">armnn::LstmOptLayerNormParameters::m_InputLayerNormWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_InputLayerNormWeights</div><div class="ttdoc">A unique pointer to represent 1D weights tensor with dimensions [num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00017">LstmLayer.hpp:17</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_af0f796fba1a2be9c56b4c9ee534577ee"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#af0f796fba1a2be9c56b4c9ee534577ee">armnn::LstmInputParams::m_ForgetLayerNormWeights</a></div><div class="ttdeci">const ConstTensor * m_ForgetLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00058">LstmParams.hpp:58</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a35b112e30c3eb153806a2a8c16d178e3"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a35b112e30c3eb153806a2a8c16d178e3">armnn::LstmInputParams::m_CellToForgetWeights</a></div><div class="ttdeci">const ConstTensor * m_CellToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00049">LstmParams.hpp:49</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2020 ARM Limited. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00025">00_introduction.dox:25</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml">armnn::LstmLayer</a></div><div class="ttdoc">This layer represents a LSTM operation. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00077">LstmLayer.hpp:77</a></div></div>
<div class="ttc" id="_lstm_params_8hpp_xhtml"><div class="ttname"><a href="_lstm_params_8hpp.xhtml">LstmParams.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_acefa49d7faf26933e27e473e7bdb4175"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acefa49d7faf26933e27e473e7bdb4175">armnn::LstmQueueDescriptor::m_CellToForgetWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00394">WorkloadData.hpp:394</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_slot_xhtml_a3153abb7c0c0a84629079b2fac7db54f"><div class="ttname"><a href="classarmnn_1_1_input_slot.xhtml#a3153abb7c0c0a84629079b2fac7db54f">armnn::InputSlot::GetConnection</a></div><div class="ttdeci">const IOutputSlot * GetConnection() const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00199">Layer.hpp:199</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a75980b5795efd899a0c678a06a900c6d"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a75980b5795efd899a0c678a06a900c6d">armnn::LstmQueueDescriptor::m_CellBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00398">WorkloadData.hpp:398</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a98d377149071d8842d610cc0734d1cfe"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a98d377149071d8842d610cc0734d1cfe">armnn::LstmQueueDescriptor::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00389">WorkloadData.hpp:389</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_basic_parameters_xhtml_a51255889cbc063130a3d691c1781c5d3"><div class="ttname"><a href="structarmnn_1_1_lstm_basic_parameters.xhtml#a51255889cbc063130a3d691c1781c5d3">armnn::LstmBasicParameters::m_CellBias</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_CellBias</div><div class="ttdoc">A unique pointer to represent 1D weights tensor with dimensions [num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00071">LstmLayer.hpp:71</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a8c0f6d48705f40c5590dde09be262222"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a8c0f6d48705f40c5590dde09be262222">armnn::LstmInputParams::m_OutputGateBias</a></div><div class="ttdeci">const ConstTensor * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00054">LstmParams.hpp:54</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a0607e36e88f38c34c71c663164b76776"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a0607e36e88f38c34c71c663164b76776">armnn::Layer::VerifyLayerConnections</a></div><div class="ttdeci">void VerifyLayerConnections(unsigned int expectedConnections, const CheckLocation &amp;location) const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00339">Layer.cpp:339</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_opt_peephole_parameters_xhtml_a5d0ebbbb11b727a67877df40b59a628c"><div class="ttname"><a href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a5d0ebbbb11b727a67877df40b59a628c">armnn::LstmOptPeepholeParameters::m_CellToForgetWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_CellToForgetWeights</div><div class="ttdoc">A unique pointer to represent 1D weights tensor with dimensions [num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00049">LstmLayer.hpp:49</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_acf8b8e23bf647836592982f97088d375"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">armnn::Layer::GetInputSlot</a></div><div class="ttdeci">const InputSlot &amp; GetInputSlot(unsigned int index) const override</div><div class="ttdoc">Get a const input slot handle by slot index. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00310">Layer.hpp:310</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a0cd848f65ec31778d708852f0042fe37"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a0cd848f65ec31778d708852f0042fe37">armnn::LstmInputParams::m_InputLayerNormWeights</a></div><div class="ttdeci">const ConstTensor * m_InputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00057">LstmParams.hpp:57</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_opt_layer_norm_parameters_xhtml_a69fdb952b874669cbb2a281815a20be2"><div class="ttname"><a href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a69fdb952b874669cbb2a281815a20be2">armnn::LstmOptLayerNormParameters::m_OutputLayerNormWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_OutputLayerNormWeights</div><div class="ttdoc">A unique pointer to represent 1D weights tensor with dimensions [num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00023">LstmLayer.hpp:23</a></div></div>
<div class="ttc" id="_types_utils_8hpp_xhtml"><div class="ttname"><a href="_types_utils_8hpp.xhtml">TypesUtils.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a9cc28aa4fff6ba9a8abdb340c1abdd57"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a9cc28aa4fff6ba9a8abdb340c1abdd57">armnn::LstmQueueDescriptor::m_InputLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00402">WorkloadData.hpp:402</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml_a8c8f543d7e9729362c266d12ec169966"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml#a8c8f543d7e9729362c266d12ec169966">armnn::LstmLayer::ValidateTensorShapesFromInputs</a></div><div class="ttdeci">void ValidateTensorShapesFromInputs() override</div><div class="ttdoc">Check if the input tensor shape(s) will lead to a valid configuration of LstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8cpp_source.xhtml#l00166">LstmLayer.cpp:166</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_aa3f07e27230d6d99adc2c82ba681df2b"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa3f07e27230d6d99adc2c82ba681df2b">armnn::LstmQueueDescriptor::m_OutputLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_OutputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00405">WorkloadData.hpp:405</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a56b81ca8ba4b4937e0787e4951f043fc"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a56b81ca8ba4b4937e0787e4951f043fc">armnn::LstmInputParams::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstTensor * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00047">LstmParams.hpp:47</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml_ac6b352652fb2f722e56f5fd62c57ae09"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml#ac6b352652fb2f722e56f5fd62c57ae09">armnn::LstmLayer::Clone</a></div><div class="ttdeci">LstmLayer * Clone(Graph &amp;graph) const override</div><div class="ttdoc">Creates a dynamically-allocated copy of this layer. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8cpp_source.xhtml#l00078">LstmLayer.cpp:78</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a></div><div class="ttdoc">An LstmDescriptor for the LstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00849">Descriptors.hpp:849</a></div></div>
<div class="ttc" id="_assert_8hpp_xhtml_a91c4dfde57907d7698c7531785690a7f"><div class="ttname"><a href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a></div><div class="ttdeci">#define ARMNN_ASSERT_MSG(COND, MSG)</div><div class="ttdef"><b>Definition:</b> <a href="_assert_8hpp_source.xhtml#l00015">Assert.hpp:15</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml">armnn::LstmQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00358">WorkloadData.hpp:358</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_aba3ffe91d818266b8785ce971548eb59"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aba3ffe91d818266b8785ce971548eb59">armnn::LstmQueueDescriptor::m_ForgetGateBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00397">WorkloadData.hpp:397</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a44b0e6b16708df7f0d2bbab141688aaa"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a44b0e6b16708df7f0d2bbab141688aaa">armnn::LstmInputParams::m_ProjectionBias</a></div><div class="ttdeci">const ConstTensor * m_ProjectionBias</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00056">LstmParams.hpp:56</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_opt_peephole_parameters_xhtml_a658f4245732f95c9fe756a934d370ca8"><div class="ttname"><a href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a658f4245732f95c9fe756a934d370ca8">armnn::LstmOptPeepholeParameters::m_CellToInputWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_CellToInputWeights</div><div class="ttdoc">A unique pointer to represent 1D weights tensor with dimensions [num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00047">LstmLayer.hpp:47</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a08a1932be591c315a512a877d38b22df"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a08a1932be591c315a512a877d38b22df">armnn::LstmQueueDescriptor::m_InputToInputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00385">WorkloadData.hpp:385</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00199">Tensor.hpp:199</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml">armnn::LstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00013">LstmParams.hpp:13</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml_a2837b4396f20c956952d1a7286cab5f8"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">armnn::LstmDescriptor::m_PeepholeEnabled</a></div><div class="ttdeci">bool m_PeepholeEnabled</div><div class="ttdoc">Enable/disable peephole. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00881">Descriptors.hpp:881</a></div></div>
<div class="ttc" id="_assert_8hpp_xhtml_a5698be69cbd5dfe6c28fcd9867e8cbed"><div class="ttname"><a href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a></div><div class="ttdeci">#define ARMNN_ASSERT(COND)</div><div class="ttdef"><b>Definition:</b> <a href="_assert_8hpp_source.xhtml#l00014">Assert.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml_a46864a690d016b7e00eb51a5bfe8e966"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml#a46864a690d016b7e00eb51a5bfe8e966">armnn::LstmLayer::m_LayerNormParameters</a></div><div class="ttdeci">LstmOptLayerNormParameters m_LayerNormParameters</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00085">LstmLayer.hpp:85</a></div></div>
<div class="ttc" id="_exceptions_8hpp_xhtml_aa3be76aec4ce713822a5ea1ecbb7bc61"><div class="ttname"><a href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a></div><div class="ttdeci">#define CHECK_LOCATION()</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00192">Exceptions.hpp:192</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_opt_cifg_parameters_xhtml_a6e8971757790a032e5936da7847ba14b"><div class="ttname"><a href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a6e8971757790a032e5936da7847ba14b">armnn::LstmOptCifgParameters::m_RecurrentToInputWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_RecurrentToInputWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [input_size, num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00031">LstmLayer.hpp:31</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml_abe659a5afa7523f5dbc04bcba9b31f1a"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml#abe659a5afa7523f5dbc04bcba9b31f1a">armnn::LstmLayer::GetConstantTensorsByRef</a></div><div class="ttdeci">Layer::ConstantTensors GetConstantTensorsByRef() override</div><div class="ttdoc">Retrieve the handles to the constant values stored by the layer. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8cpp_source.xhtml#l00276">LstmLayer.cpp:276</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_basic_parameters_xhtml_a91dda74af4085ae43913746ad817795a"><div class="ttname"><a href="structarmnn_1_1_lstm_basic_parameters.xhtml#a91dda74af4085ae43913746ad817795a">armnn::LstmBasicParameters::m_RecurrentToOutputWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_RecurrentToOutputWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [output_size, num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00067">LstmLayer.hpp:67</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml_a4efa0f4d46817ab94e36c8507c26f276"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml#a4efa0f4d46817ab94e36c8507c26f276">armnn::LstmLayer::m_PeepholeParameters</a></div><div class="ttdeci">LstmOptPeepholeParameters m_PeepholeParameters</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00084">LstmLayer.hpp:84</a></div></div>
<div class="ttc" id="_cpu_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="_cpu_tensor_handle_8hpp.xhtml">CpuTensorHandle.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_ad0b8c32bb5381f4cc999093ba3b98b43"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#ad0b8c32bb5381f4cc999093ba3b98b43">armnn::LstmInputParams::m_CellLayerNormWeights</a></div><div class="ttdeci">const ConstTensor * m_CellLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00059">LstmParams.hpp:59</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_ace7a1f1f1041b412b7d8ef82b95ff352"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#ace7a1f1f1041b412b7d8ef82b95ff352">armnn::LstmInputParams::m_ForgetGateBias</a></div><div class="ttdeci">const ConstTensor * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00052">LstmParams.hpp:52</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a49e11acda22742cbaf6f1b259ead0d84"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a49e11acda22742cbaf6f1b259ead0d84">armnn::LstmInputParams::m_InputToCellWeights</a></div><div class="ttdeci">const ConstTensor * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00042">LstmParams.hpp:42</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a6e30c7b3451da3ea9cf4259fb602e6e6"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a6e30c7b3451da3ea9cf4259fb602e6e6">armnn::LstmInputParams::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstTensor * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00043">LstmParams.hpp:43</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml_a3d3e6d0c3e6e570d9f831489c3bd14ce"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml#a3d3e6d0c3e6e570d9f831489c3bd14ce">armnn::LstmLayer::m_ProjectionParameters</a></div><div class="ttdeci">LstmOptProjectionParameters m_ProjectionParameters</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00083">LstmLayer.hpp:83</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_opt_projection_parameters_xhtml_aa9f2880e4e2a1eb731f61c1e0941c6a7"><div class="ttname"><a href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#aa9f2880e4e2a1eb731f61c1e0941c6a7">armnn::LstmOptProjectionParameters::m_ProjectionBias</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_ProjectionBias</div><div class="ttdoc">A unique pointer to represent 1D weights tensor with dimensions [output_size]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00041">LstmLayer.hpp:41</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml_ad474e5c51a0b194ef32e812b86c0cbdb"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">armnn::LstmDescriptor::m_CifgEnabled</a></div><div class="ttdeci">bool m_CifgEnabled</div><div class="ttdoc">Enable/disable cifg (coupled input &amp; forget gate). </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00879">Descriptors.hpp:879</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_adebc1771e5a1f4b113a7aa594ea74d2c"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#adebc1771e5a1f4b113a7aa594ea74d2c">armnn::LstmQueueDescriptor::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00392">WorkloadData.hpp:392</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml_a75a50f464326fefa605ea84ae2c9be85"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml#a75a50f464326fefa605ea84ae2c9be85">armnn::LstmLayer::Accept</a></div><div class="ttdeci">void Accept(ILayerVisitor &amp;visitor) const override</div><div class="ttdoc">Apply a visitor to this layer. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8cpp_source.xhtml#l00309">LstmLayer.cpp:309</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_basic_parameters_xhtml_a14ab2bc78421c417c4f97a65b0bd78f9"><div class="ttname"><a href="structarmnn_1_1_lstm_basic_parameters.xhtml#a14ab2bc78421c417c4f97a65b0bd78f9">armnn::LstmBasicParameters::m_InputToCellWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_InputToCellWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [input_size, num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00059">LstmLayer.hpp:59</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_ae83131e16df1cace69395a5f99bc5ecb"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#ae83131e16df1cace69395a5f99bc5ecb">armnn::LstmInputParams::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstTensor * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00045">LstmParams.hpp:45</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a453a4af385d0c060c9aac990fceaa1ef"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a453a4af385d0c060c9aac990fceaa1ef">armnn::LstmQueueDescriptor::m_ForgetLayerNormWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ForgetLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00403">WorkloadData.hpp:403</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a435d3651482bbfcc11263b4e4e0c900f"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a435d3651482bbfcc11263b4e4e0c900f">armnn::LstmInputParams::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstTensor * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00044">LstmParams.hpp:44</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_a30a858b2b26d651a066537e499fbf40d"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#a30a858b2b26d651a066537e499fbf40d">armnn::LayerWithParameters&lt; LstmDescriptor &gt;::PrepInfoAndDesc</a></div><div class="ttdeci">WorkloadInfo PrepInfoAndDesc(QueueDescriptor &amp;descriptor) const</div><div class="ttdoc">Helper function to reduce duplication in *LayerCreateWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00043">LayerWithParameters.hpp:43</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a06b091bc9aea697ba473c71f0bb55925"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a06b091bc9aea697ba473c71f0bb55925">armnn::LayerType::Lstm</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_layer_visitor.xhtml">armnn::ILayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_visitor_8hpp_source.xhtml#l00016">ILayerVisitor.hpp:16</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_acb3aade8fae984f7293e222dcbe66030"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#acb3aade8fae984f7293e222dcbe66030">armnn::LstmQueueDescriptor::m_InputGateBias</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00396">WorkloadData.hpp:396</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_opt_peephole_parameters_xhtml_a310e133b0b51b93a74b83008893792e9"><div class="ttname"><a href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml#a310e133b0b51b93a74b83008893792e9">armnn::LstmOptPeepholeParameters::m_CellToOutputWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_CellToOutputWeights</div><div class="ttdoc">A unique pointer to represent 1D weights tensor with dimensions [num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00051">LstmLayer.hpp:51</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml_adbb2663fc90c40c0845bb043c23eeae9"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml#adbb2663fc90c40c0845bb043c23eeae9">armnn::LstmLayer::LstmLayer</a></div><div class="ttdeci">LstmLayer(const LstmDescriptor &amp;param, const char *name)</div><div class="ttdoc">Constructor to create a LstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8cpp_source.xhtml#l00017">LstmLayer.cpp:17</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml_a4a8ec49f130084445d44297549254780"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml#a4a8ec49f130084445d44297549254780">armnn::LstmDescriptor::m_LayerNormEnabled</a></div><div class="ttdeci">bool m_LayerNormEnabled</div><div class="ttdoc">Enable/disable layer normalization. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00885">Descriptors.hpp:885</a></div></div>
<div class="ttc" id="_lstm_layer_8hpp_xhtml"><div class="ttname"><a href="_lstm_layer_8hpp.xhtml">LstmLayer.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a0e36688a43c35668d8db5257274c68fe"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">armnn::Layer::GetOutputSlot</a></div><div class="ttdeci">const OutputSlot &amp; GetOutputSlot(unsigned int index=0) const override</div><div class="ttdoc">Get the const output slot handle by slot index. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00312">Layer.hpp:312</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_opt_projection_parameters_xhtml_a3ec2885c48ce888516e27c8b75a8cb83"><div class="ttname"><a href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml#a3ec2885c48ce888516e27c8b75a8cb83">armnn::LstmOptProjectionParameters::m_ProjectionWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_ProjectionWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [output_size, num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00039">LstmLayer.hpp:39</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a9943775a364fc4ab53b85ac88f311886"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">armnn::IOutputSlot::GetTensorInfo</a></div><div class="ttdeci">virtual const TensorInfo &amp; GetTensorInfo() const =0</div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_aea142bd50ffb93631c2e08324ec92a1e"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aea142bd50ffb93631c2e08324ec92a1e">armnn::LstmQueueDescriptor::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00391">WorkloadData.hpp:391</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_opt_layer_norm_parameters_xhtml_a559113765ea5e2ddbd9e9e5e2869a103"><div class="ttname"><a href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml#a559113765ea5e2ddbd9e9e5e2869a103">armnn::LstmOptLayerNormParameters::m_ForgetLayerNormWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_ForgetLayerNormWeights</div><div class="ttdoc">A unique pointer to represent 1D weights tensor with dimensions [num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00019">LstmLayer.hpp:19</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml_a0e940dfa428f4eb429f8bc0d138b20af"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml#a0e940dfa428f4eb429f8bc0d138b20af">armnn::LstmLayer::m_CifgParameters</a></div><div class="ttdeci">LstmOptCifgParameters m_CifgParameters</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00082">LstmLayer.hpp:82</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a7ddf0cf6f620d59c10e63495ace795d0"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">armnn::Layer::GetName</a></div><div class="ttdeci">const char * GetName() const override</div><div class="ttdoc">Returns the name of the layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00305">Layer.hpp:305</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml">armnn::LayerWithParameters</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00013">LayerWithParameters.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_layer_xhtml_a65ca562c882ad619684445a1402f415a"><div class="ttname"><a href="classarmnn_1_1_lstm_layer.xhtml#a65ca562c882ad619684445a1402f415a">armnn::LstmLayer::InferOutputShapes</a></div><div class="ttdeci">std::vector&lt; TensorShape &gt; InferOutputShapes(const std::vector&lt; TensorShape &gt; &amp;inputShapes) const override</div><div class="ttdoc">By default returns inputShapes if the number of inputs are equal to number of outputs, otherwise infers the output shapes from given input shapes and layer properties. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8cpp_source.xhtml#l00148">LstmLayer.cpp:148</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a9b18daea2e9f42386055326fd016519a"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a9b18daea2e9f42386055326fd016519a">armnn::LstmInputParams::m_OutputLayerNormWeights</a></div><div class="ttdeci">const ConstTensor * m_OutputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00060">LstmParams.hpp:60</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a585d59ec610af46a76487fd6c1c55ac1"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a585d59ec610af46a76487fd6c1c55ac1">armnn::Layer::ConstantTensors</a></div><div class="ttdeci">std::vector&lt; std::reference_wrapper&lt; std::unique_ptr&lt; ScopedCpuTensorHandle &gt; &gt;&gt; ConstantTensors</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00363">Layer.hpp:363</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_slot_xhtml_ada2ad7d1caeeb4ef6195c8925fad6a65"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">armnn::OutputSlot::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo() const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00063">Layer.cpp:63</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_basic_parameters_xhtml_a5a0d8af26a6aad1e5be521ea7dc550eb"><div class="ttname"><a href="structarmnn_1_1_lstm_basic_parameters.xhtml#a5a0d8af26a6aad1e5be521ea7dc550eb">armnn::LstmBasicParameters::m_InputToForgetWeights</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_InputToForgetWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [input_size, num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00057">LstmLayer.hpp:57</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_opt_cifg_parameters_xhtml_a9945bc99f8a7400c0724117e29cb3abb"><div class="ttname"><a href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml#a9945bc99f8a7400c0724117e29cb3abb">armnn::LstmOptCifgParameters::m_InputGateBias</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_InputGateBias</div><div class="ttdoc">A unique pointer to represent 1D weights tensor with dimensions [num_units]. </div><div class="ttdef"><b>Definition:</b> <a href="_lstm_layer_8hpp_source.xhtml#l00033">LstmLayer.hpp:33</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_af3c52626a6f05597d82ed095d0765962"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#af3c52626a6f05597d82ed095d0765962">armnn::LstmQueueDescriptor::m_ProjectionWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_ProjectionWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00400">WorkloadData.hpp:400</a></div></div>
<div class="ttc" id="_layer_clone_base_8hpp_xhtml"><div class="ttname"><a href="_layer_clone_base_8hpp.xhtml">LayerCloneBase.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a31da1ead6794dd64571afdd0b6efc771"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a31da1ead6794dd64571afdd0b6efc771">armnn::LstmInputParams::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstTensor * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00041">LstmParams.hpp:41</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdef"><b>Definition:</b> <a href="_internal_types_8hpp_source.xhtml#l00081">InternalTypes.hpp:81</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_affcee5f4ab5994a21bee3b78b4e43de3"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#affcee5f4ab5994a21bee3b78b4e43de3">armnn::LstmInputParams::m_InputToInputWeights</a></div><div class="ttdeci">const ConstTensor * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00040">LstmParams.hpp:40</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a3ea82566d98c5a657c76c3d851c47848"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a3ea82566d98c5a657c76c3d851c47848">armnn::LstmQueueDescriptor::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00386">WorkloadData.hpp:386</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9da6642ce0fd5a8c83524f1b621275be.xhtml">layers</a></li><li class="navelem"><a class="el" href="_lstm_layer_8cpp.xhtml">LstmLayer.cpp</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:41 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
