<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/profiling/test/FileOnlyProfilingDecoratorTests.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_file_only_profiling_decorator_tests_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">FileOnlyProfilingDecoratorTests.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="_filesystem_8hpp_source.xhtml">Filesystem.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_profiling_service_8hpp_source.xhtml">ProfilingService.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_runtime_8hpp_source.xhtml">Runtime.hpp</a>&gt;</code><br />
<code>#include &quot;<a class="el" href="_print_packet_header_handler_8hpp_source.xhtml">PrintPacketHeaderHandler.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_test_timeline_packet_handler_8hpp_source.xhtml">TestTimelinePacketHandler.hpp</a>&quot;</code><br />
<code>#include &lt;boost/filesystem.hpp&gt;</code><br />
<code>#include &lt;boost/numeric/conversion/cast.hpp&gt;</code><br />
<code>#include &lt;boost/test/unit_test.hpp&gt;</code><br />
<code>#include &lt;cstdio&gt;</code><br />
<code>#include &lt;sstream&gt;</code><br />
<code>#include &lt;sys/stat.h&gt;</code><br />
</div>
<p><a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a35f8c5b0911f87463330196366f3754e"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a35f8c5b0911f87463330196366f3754e">UniqueFileName</a> ()</td></tr>
<tr class="separator:a35f8c5b0911f87463330196366f3754e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c5eec3424683a2c93a72995ce400da9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c5eec3424683a2c93a72995ce400da9">BOOST_AUTO_TEST_CASE</a> (TestFileOnlyProfiling)</td></tr>
<tr class="separator:a0c5eec3424683a2c93a72995ce400da9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4df85cbd8e6f68f189bc6a28fe3a00d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ac3b2ed181156194522b1a46ffd8b50b5">profilingService</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#af4df85cbd8e6f68f189bc6a28fe3a00d">ResetExternalProfilingOptions</a> (<a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>, <a class="el" href="_ref_layer_tests_8cpp.xhtml#a88d84cc49602ca19491dea9c998035fe">true</a>)</td></tr>
<tr class="separator:af4df85cbd8e6f68f189bc6a28fe3a00d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa104b52a24929c46896b0f7df4cedab3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ac3b2ed181156194522b1a46ffd8b50b5">profilingService</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aa104b52a24929c46896b0f7df4cedab3">Update</a> ()</td></tr>
<tr class="separator:aa104b52a24929c46896b0f7df4cedab3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c262ba6f6c189a2d092d127c1b7627b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK</a> (profilingService.GetCurrentState()==ProfilingState::WaitingForAck)</td></tr>
<tr class="separator:a0c262ba6f6c189a2d092d127c1b7627b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb41e29e05a71ba26a6fe5291477b4f9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aeb41e29e05a71ba26a6fe5291477b4f9">while</a> (profilingService.GetCurrentState() !=ProfilingState::Active &amp;&amp;<a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ae92a562353e3e0f6db4b9c6f4c573587">packetCount</a>&lt; 3)</td></tr>
<tr class="separator:aeb41e29e05a71ba26a6fe5291477b4f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65dcbdfabf451423547499c650422cd9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a65dcbdfabf451423547499c650422cd9">BOOST_CHECK</a> (boost::filesystem::exists(tempPath.c_str())==<a class="el" href="_ref_layer_tests_8cpp.xhtml#a88d84cc49602ca19491dea9c998035fe">true</a>)</td></tr>
<tr class="separator:a65dcbdfabf451423547499c650422cd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a775e0c59b1d5cd30212c0333f46ab13c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a775e0c59b1d5cd30212c0333f46ab13c">BOOST_CHECK</a> (profilingService.IsCounterRegistered(0)==<a class="el" href="_ref_layer_tests_8cpp.xhtml#a88d84cc49602ca19491dea9c998035fe">true</a>)</td></tr>
<tr class="separator:a775e0c59b1d5cd30212c0333f46ab13c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff5f960f1b95a5cb9d64b3d53a7c6b93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ac3b2ed181156194522b1a46ffd8b50b5">profilingService</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aff5f960f1b95a5cb9d64b3d53a7c6b93">IncrementCounterValue</a> (0)</td></tr>
<tr class="separator:aff5f960f1b95a5cb9d64b3d53a7c6b93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d31710a3df75b16bd7045e17f4e7ec8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a8d31710a3df75b16bd7045e17f4e7ec8">BOOST_CHECK</a> (profilingService.GetAbsoluteCounterValue(0) &gt; 0)</td></tr>
<tr class="separator:a8d31710a3df75b16bd7045e17f4e7ec8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9873e084badb22c4b5790529a9c7b704"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a07b3da250d2239acfc6005ff63f1625c">helper</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a9873e084badb22c4b5790529a9c7b704">WaitForPacketsSent</a> ()</td></tr>
<tr class="separator:a9873e084badb22c4b5790529a9c7b704"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2942628ad8bb615f4062232103a6b79"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#af2942628ad8bb615f4062232103a6b79">BOOST_CHECK</a> (<a class="el" href="namespacearmnn_utils_1_1_filesystem.xhtml#a1c541d9c526205112781efcf3224f29c">armnnUtils::Filesystem::GetFileSize</a>(tempPath.string().c_str()) &gt; 0)</td></tr>
<tr class="separator:af2942628ad8bb615f4062232103a6b79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d7456367b1144ba3977085b07519b2d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a8d7456367b1144ba3977085b07519b2d">BOOST_CHECK</a> (<a class="el" href="namespacearmnn_utils_1_1_filesystem.xhtml#a7d64caad10c705910e723dd8920a9dba">armnnUtils::Filesystem::Remove</a>(tempPath.string().c_str()))</td></tr>
<tr class="separator:a8d7456367b1144ba3977085b07519b2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:aea1c98db5f166be1d82cbabcbc4d8c12"><td class="memItemLeft" align="right" valign="top">boost::filesystem::path&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aea1c98db5f166be1d82cbabcbc4d8c12">tempFile</a> = <a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a35f8c5b0911f87463330196366f3754e">UniqueFileName</a>()</td></tr>
<tr class="separator:aea1c98db5f166be1d82cbabcbc4d8c12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b7be354d3c06a46dc247e0e3341198d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a1b7be354d3c06a46dc247e0e3341198d">tempPath</a> = tempPath / <a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aea1c98db5f166be1d82cbabcbc4d8c12">tempFile</a></td></tr>
<tr class="separator:a1b7be354d3c06a46dc247e0e3341198d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6560146509197f3e197d8d36f76c1347"><td class="memItemLeft" align="right" valign="top">armnn::Runtime::CreationOptions::ExternalProfilingOptions&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a></td></tr>
<tr class="separator:a6560146509197f3e197d8d36f76c1347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affc4c5e8c0f3e0fac268deec9b481941"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#affc4c5e8c0f3e0fac268deec9b481941">m_EnableProfiling</a> = <a class="el" href="_ref_layer_tests_8cpp.xhtml#a88d84cc49602ca19491dea9c998035fe">true</a></td></tr>
<tr class="separator:affc4c5e8c0f3e0fac268deec9b481941"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73b5da4091289681d269007956523e9a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a73b5da4091289681d269007956523e9a">m_FileOnly</a> = <a class="el" href="_ref_layer_tests_8cpp.xhtml#a88d84cc49602ca19491dea9c998035fe">true</a></td></tr>
<tr class="separator:a73b5da4091289681d269007956523e9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af38445f045fb017409cb3e54916b49ac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#af38445f045fb017409cb3e54916b49ac">m_IncomingCaptureFile</a> = &quot;&quot;</td></tr>
<tr class="separator:af38445f045fb017409cb3e54916b49ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1650fc89b05bd1d5aaa8d42eb11fb337"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a1650fc89b05bd1d5aaa8d42eb11fb337">m_OutgoingCaptureFile</a> = tempPath.string()</td></tr>
<tr class="separator:a1650fc89b05bd1d5aaa8d42eb11fb337"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a702f9af6f619f04b6accd536581917"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a9a702f9af6f619f04b6accd536581917">m_CapturePeriod</a> = 100</td></tr>
<tr class="separator:a9a702f9af6f619f04b6accd536581917"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07b3da250d2239acfc6005ff63f1625c"><td class="memItemLeft" align="right" valign="top">FileOnlyHelperService&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a07b3da250d2239acfc6005ff63f1625c">helper</a></td></tr>
<tr class="separator:a07b3da250d2239acfc6005ff63f1625c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3b2ed181156194522b1a46ffd8b50b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">armnn::profiling::ProfilingService</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ac3b2ed181156194522b1a46ffd8b50b5">profilingService</a></td></tr>
<tr class="separator:ac3b2ed181156194522b1a46ffd8b50b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae92a562353e3e0f6db4b9c6f4c573587"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ae92a562353e3e0f6db4b9c6f4c573587">packetCount</a> = 0</td></tr>
<tr class="separator:ae92a562353e3e0f6db4b9c6f4c573587"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a0c5eec3424683a2c93a72995ce400da9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c5eec3424683a2c93a72995ce400da9">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">TestFileOnlyProfiling&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_backend_registry_8cpp_source.xhtml#l00013">armnn::BackendRegistryInstance()</a>, <a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00268">armnn::BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">IOutputSlot::Connect()</a>, <a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::CpuRef</a>, <a class="el" href="_network_8cpp_source.xhtml#l00050">INetwork::Create()</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_runtime_8hpp_source.xhtml#l00071">Runtime::GetDeviceSpec()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">IConnectableLayer::GetInputSlot()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">IConnectableLayer::GetOutputSlot()</a>, <a class="el" href="_runtime_8cpp_source.xhtml#l00046">Runtime::LoadNetwork()</a>, <a class="el" href="_i_runtime_8hpp_source.xhtml#l00079">IRuntime::CreationOptions::ExternalProfilingOptions::m_CapturePeriod</a>, <a class="el" href="_i_runtime_8hpp_source.xhtml#l00074">IRuntime::CreationOptions::ExternalProfilingOptions::m_EnableProfiling</a>, <a class="el" href="_i_runtime_8hpp_source.xhtml#l00078">IRuntime::CreationOptions::ExternalProfilingOptions::m_FileOnly</a>, <a class="el" href="_i_runtime_8hpp_source.xhtml#l00081">IRuntime::CreationOptions::ExternalProfilingOptions::m_LocalPacketHandlers</a>, <a class="el" href="_i_runtime_8hpp_source.xhtml#l00083">IRuntime::CreationOptions::m_ProfilingOptions</a>, <a class="el" href="_i_runtime_8hpp_source.xhtml#l00075">IRuntime::CreationOptions::ExternalProfilingOptions::m_TimelineEnabled</a>, <a class="el" href="_network_8cpp_source.xhtml#l01003">armnn::Optimize()</a>, <a class="el" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">IOutputSlot::SetTensorInfo()</a>, <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38">armnn::Success</a>, <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00104">tempFile</a>, <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00105">tempPath</a>, and <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00038">UniqueFileName()</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">// This test requires the CpuRef backend to be enabled</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="namespacearmnn.xhtml#ac2807505b850738bc8a1991ce669dd47">BackendRegistryInstance</a>().IsBackendRegistered(<span class="stringliteral">&quot;CpuRef&quot;</span>))</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// Create a temporary file name.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    boost::filesystem::path <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a1b7be354d3c06a46dc247e0e3341198d">tempPath</a> = boost::filesystem::temp_directory_path();</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    boost::filesystem::path <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aea1c98db5f166be1d82cbabcbc4d8c12">tempFile</a> = <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a35f8c5b0911f87463330196366f3754e">UniqueFileName</a>();</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    tempPath                         = tempPath / <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aea1c98db5f166be1d82cbabcbc4d8c12">tempFile</a>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::Runtime::CreationOptions</a> creationOptions;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    creationOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">m_ProfilingOptions</a>.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a26d42007440bb01a1a6d0ab3b5a657ee">m_EnableProfiling</a>     = <span class="keyword">true</span>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    creationOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">m_ProfilingOptions</a>.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#ad8f8cb971cad412664cd7df58df7eb1e">m_FileOnly</a>            = <span class="keyword">true</span>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    creationOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">m_ProfilingOptions</a>.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a2239347f38747f993c324bdd8b1eb146">m_CapturePeriod</a>       = 100;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    creationOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">m_ProfilingOptions</a>.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a5b304d775657afbf1fb724af57add374">m_TimelineEnabled</a>     = <span class="keyword">true</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="namespacearmnn_1_1profiling.xhtml#a96b0827ffefa36d7ec2b4ac34a922d12">ILocalPacketHandlerSharedPtr</a> localPacketHandlerPtr = std::make_shared&lt;TestTimelinePacketHandler&gt;();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    creationOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">m_ProfilingOptions</a>.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a3c0e8ba6298293937517b6e5c6a79264">m_LocalPacketHandlers</a>.push_back(localPacketHandlerPtr);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="classarmnn_1_1_runtime.xhtml">armnn::Runtime</a> runtime(creationOptions);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="comment">// Load a simple network</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// build up the structure of the network</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">INetworkPtr</a> net(INetwork::Create());</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* input = net-&gt;AddInputLayer(0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a> descriptor;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* normalize = net-&gt;AddNormalizationLayer(descriptor, <span class="stringliteral">&quot;normalization&quot;</span>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* output = net-&gt;AddOutputLayer(0, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    input-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(normalize-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    normalize-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(output-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    input-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({ 1, 1, 4, 4 }, DataType::Float32));</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    normalize-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({ 1, 1, 4, 4 }, DataType::Float32));</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// optimize the network</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    std::vector&lt;armnn::BackendId&gt; backends = { <a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::Compute::CpuRef</a> };</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> optNet = <a class="code" href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685">Optimize</a>(*net, backends, runtime.GetDeviceSpec());</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="comment">// Load it into the runtime. It should succeed.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">armnn::NetworkId</a> netId;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    BOOST_TEST(runtime.LoadNetwork(netId, std::move(optNet)) == Status::Success);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml">TestTimelinePacketHandler</a>*<span class="keyword">&gt;</span>(localPacketHandlerPtr.get())-&gt;WaitOnInferenceCompletion(3000);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div><div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a96b0827ffefa36d7ec2b4ac34a922d12"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a96b0827ffefa36d7ec2b4ac34a922d12">armnn::profiling::ILocalPacketHandlerSharedPtr</a></div><div class="ttdeci">std::shared_ptr&lt; ILocalPacketHandler &gt; ILocalPacketHandlerSharedPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_local_packet_handler_8hpp_source.xhtml#l00044">ILocalPacketHandler.hpp:44</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00061">INetwork.hpp:61</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64"><div class="ttname"><a href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::Compute::CpuRef</a></div><div class="ttdoc">CPU Execution: Reference C++ kernels. </div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00053">Tensor.hpp:53</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a35f8c5b0911f87463330196366f3754e"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a35f8c5b0911f87463330196366f3754e">UniqueFileName</a></div><div class="ttdeci">std::string UniqueFileName()</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00038">FileOnlyProfilingDecoratorTests.cpp:38</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ac2807505b850738bc8a1991ce669dd47"><div class="ttname"><a href="namespacearmnn.xhtml#ac2807505b850738bc8a1991ce669dd47">armnn::BackendRegistryInstance</a></div><div class="ttdeci">BackendRegistry &amp; BackendRegistryInstance()</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00013">BackendRegistry.cpp:13</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a83015160d8c67d5d77735eb0d4033d9a"><div class="ttname"><a href="namespacearmnn.xhtml#a83015160d8c67d5d77735eb0d4033d9a">armnn::NetworkId</a></div><div class="ttdeci">int NetworkId</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00020">IRuntime.hpp:20</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a26d42007440bb01a1a6d0ab3b5a657ee"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a26d42007440bb01a1a6d0ab3b5a657ee">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_EnableProfiling</a></div><div class="ttdeci">bool m_EnableProfiling</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00074">IRuntime.hpp:74</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_ad8f8cb971cad412664cd7df58df7eb1e"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#ad8f8cb971cad412664cd7df58df7eb1e">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_FileOnly</a></div><div class="ttdeci">bool m_FileOnly</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00078">IRuntime.hpp:78</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a5ee4a6c9a2481245487b1b1a70d20fd0"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">armnn::IOutputSlot::SetTensorInfo</a></div><div class="ttdeci">virtual void SetTensorInfo(const TensorInfo &amp;tensorInfo)=0</div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_test_timeline_packet_handler_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_test_timeline_packet_handler.xhtml">armnn::profiling::TestTimelinePacketHandler</a></div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8hpp_source.xhtml#l00045">TestTimelinePacketHandler.hpp:45</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a3c0e8ba6298293937517b6e5c6a79264"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a3c0e8ba6298293937517b6e5c6a79264">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_LocalPacketHandlers</a></div><div class="ttdeci">std::vector&lt; armnn::profiling::ILocalPacketHandlerSharedPtr &gt; m_LocalPacketHandlers</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00081">IRuntime.hpp:81</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a1b7be354d3c06a46dc247e0e3341198d"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a1b7be354d3c06a46dc247e0e3341198d">tempPath</a></div><div class="ttdeci">tempPath</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00105">FileOnlyProfilingDecoratorTests.cpp:105</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a82e98ef05fd67036d1195ba17174d685"><div class="ttname"><a href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685">armnn::Optimize</a></div><div class="ttdeci">IOptimizedNetworkPtr Optimize(const INetwork &amp;network, const std::vector&lt; BackendId &gt; &amp;backendPreferences, const IDeviceSpec &amp;deviceSpec, const OptimizerOptions &amp;options=OptimizerOptions(), Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; messages=EmptyOptional())</div><div class="ttdoc">Create an optimized version of the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01003">Network.cpp:1003</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_aea1c98db5f166be1d82cbabcbc4d8c12"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#aea1c98db5f166be1d82cbabcbc4d8c12">tempFile</a></div><div class="ttdeci">boost::filesystem::path tempFile</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00104">FileOnlyProfilingDecoratorTests.cpp:104</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a674efcf6cbdb9e831d653ff0e821fb38"><div class="ttname"><a href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">armnn::IOptimizedNetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IOptimizedNetwork, void(*)(IOptimizedNetwork *network)&gt; IOptimizedNetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00573">INetwork.hpp:573</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00042">IRuntime.hpp:42</a></div></div>
<div class="ttc" id="classarmnn_1_1_runtime_xhtml"><div class="ttname"><a href="classarmnn_1_1_runtime.xhtml">armnn::Runtime</a></div><div class="ttdef"><b>Definition:</b> <a href="_runtime_8hpp_source.xhtml#l00030">Runtime.hpp:30</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a6ec9e0eb66d7d6a01240492a0b18104c"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">armnn::IConnectableLayer::GetInputSlot</a></div><div class="ttdeci">virtual const IInputSlot &amp; GetInputSlot(unsigned int index) const =0</div><div class="ttdoc">Get a const input slot handle by slot index. </div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a2239347f38747f993c324bdd8b1eb146"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a2239347f38747f993c324bdd8b1eb146">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_CapturePeriod</a></div><div class="ttdeci">uint32_t m_CapturePeriod</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00079">IRuntime.hpp:79</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a5b304d775657afbf1fb724af57add374"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a5b304d775657afbf1fb724af57add374">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_TimelineEnabled</a></div><div class="ttdeci">bool m_TimelineEnabled</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00075">IRuntime.hpp:75</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index. </div></div>
<div class="ttc" id="namespacearmnn_xhtml_ace74f6f9feb95a964a49d79458232703"><div class="ttname"><a href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; INetwork, void(*)(INetwork *network)&gt; INetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00101">INetwork.hpp:101</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_ac1835f8756a9f03c02fcf9664e3a0fce"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">armnn::IOutputSlot::Connect</a></div><div class="ttdeci">virtual int Connect(IInputSlot &amp;destination)=0</div></div>
<div class="ttc" id="structarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00559">Descriptors.hpp:559</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_a30412a91cadff138686eaeb12f5357cc"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a30412a91cadff138686eaeb12f5357cc">armnn::IRuntime::CreationOptions::m_ProfilingOptions</a></div><div class="ttdeci">ExternalProfilingOptions m_ProfilingOptions</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00083">IRuntime.hpp:83</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0c262ba6f6c189a2d092d127c1b7627b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c262ba6f6c189a2d092d127c1b7627b">&#9670;&nbsp;</a></span>BOOST_CHECK() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_CHECK </td>
          <td>(</td>
          <td class="paramtype">profilingService.&#160;</td>
          <td class="paramname"><em>GetCurrentState</em>() = <code>=ProfilingState::WaitingForAck</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00085">ArgMinMaxInferOutputShape1dTest()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00066">ArgMinMaxInferOutputShape2dTest()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00047">ArgMinMaxInferOutputShape3dTest()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00028">ArgMinMaxInferOutputShape4dTest()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00104">BatchToSpaceInferOutputShapeTest()</a>, <a class="el" href="_end_to_end_test_8cpp_source.xhtml#l00017">BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_quantizer_test_8cpp_source.xhtml#l00346">armnn::BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_csv_reader_test_8cpp_source.xhtml#l00082">BOOST_FIXTURE_TEST_CASE()</a>, <a class="el" href="_test_layer_visitor_8cpp_source.xhtml#l00033">TestLayerVisitor::CheckConstTensors()</a>, <a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00014">TestConvolution2dLayerVisitor::CheckDescriptor()</a>, <a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00026">TestDepthwiseConvolution2dLayerVisitor::CheckDescriptor()</a>, <a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00039">TestFullyConnectedLayerVistor::CheckDescriptor()</a>, <a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00045">TestBatchNormalizationLayerVisitor::CheckDescriptor()</a>, <a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00051">TestLstmLayerVisitor::CheckDescriptor()</a>, <a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00128">TestQLstmLayerVisitor::CheckDescriptor()</a>, <a class="el" href="_test_layer_visitor_8cpp_source.xhtml#l00012">TestLayerVisitor::CheckLayerName()</a>, <a class="el" href="_test_layer_visitor_8cpp_source.xhtml#l00028">TestLayerVisitor::CheckLayerPointer()</a>, <a class="el" href="_test_layer_visitor_8cpp_source.xhtml#l00051">TestLayerVisitor::CheckOptionalConstTensors()</a>, <a class="el" href="_parser_flatbuffers_fixture_8hpp_source.xhtml#l00193">ParserFlatbuffersFixture::CheckTensors()</a>, <a class="el" href="_gatord_mock_tests_8cpp_source.xhtml#l00125">CheckTimelineDirectory()</a>, <a class="el" href="_gatord_mock_tests_8cpp_source.xhtml#l00187">CheckTimelinePackets()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00434">Convolution2dInferOutputShapeTest()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00498">DepthwiseConvolution2dInferOutputShapeTest()</a>, <a class="el" href="_dynamic_backend_tests_8hpp_source.xhtml#l00105">GetBasePath()</a>, <a class="el" href="_json_printer_test_impl_8cpp_source.xhtml#l00119">GetSoftmaxProfilerJson()</a>, <a class="el" href="_dynamic_backend_tests_8hpp_source.xhtml#l00149">GetTestFilePath()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00197">PreluInferOutputShapeAlphaBiggerTest()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00177">PreluInferOutputShapeInputBiggerTest()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00217">PreluInferOutputShapeNoMatchTest()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00157">PreluInferOutputShapeSameDimsTest()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00541">QLstmInferOutputShapeTest()</a>, <a class="el" href="_quantized_lstm_end_to_end_test_impl_8cpp_source.xhtml#l00179">QuantizedLstmEndToEnd()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00597">QuantizedLstmInferOutputShapeTest()</a>, <a class="el" href="_json_printer_test_impl_8cpp_source.xhtml#l00245">RunSoftmaxProfilerJsonPrinterTest()</a>, <a class="el" href="_timeline_tests_8cpp_source.xhtml#l00023">SendTimelinePacketToCommandHandler()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00127">SpaceToDepthInferOutputShapeTest()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00290">StackInferOutputShapeFromInputsMatchTest()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00320">StackInferOutputShapeFromInputsNoMatchTest()</a>, <a class="el" href="_profiling_tests_8cpp_source.xhtml#l02192">StringToSwTraceStringTestHelper()</a>, <a class="el" href="_profiling_tests_8hpp_source.xhtml#l00207">SwapProfilingConnectionFactoryHelper::SwapProfilingConnectionFactoryHelper()</a>, <a class="el" href="_infer_output_tests_8hpp_source.xhtml#l00467">TransposeConvolution2dInferOutputShapeTest()</a>, <a class="el" href="_json_printer_test_impl_8cpp_source.xhtml#l00201">ValidateProfilerJson()</a>, <a class="el" href="_profiling_test_utils_8cpp_source.xhtml#l00312">VerifyPostOptimisationStructureTestImpl()</a>, <a class="el" href="_profiling_test_utils_8cpp_source.xhtml#l00224">VerifyTimelineEntityBinaryPacketData()</a>, <a class="el" href="_profiling_test_utils_8cpp_source.xhtml#l00255">VerifyTimelineEventBinaryPacket()</a>, <a class="el" href="_profiling_test_utils_8cpp_source.xhtml#l00120">VerifyTimelineEventClassBinaryPacketData()</a>, <a class="el" href="_profiling_test_utils_8cpp_source.xhtml#l00050">VerifyTimelineHeaderBinary()</a>, <a class="el" href="_profiling_test_utils_8cpp_source.xhtml#l00078">VerifyTimelineLabelBinaryPacketData()</a>, <a class="el" href="_profiling_test_utils_8cpp_source.xhtml#l00143">VerifyTimelineRelationshipBinaryPacketData()</a>, <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00130">while()</a>, and <a class="el" href="_profiling_tests_8hpp_source.xhtml#l00220">SwapProfilingConnectionFactoryHelper::~SwapProfilingConnectionFactoryHelper()</a>.</p>

</div>
</div>
<a id="a65dcbdfabf451423547499c650422cd9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65dcbdfabf451423547499c650422cd9">&#9670;&nbsp;</a></span>BOOST_CHECK() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_CHECK </td>
          <td>(</td>
          <td class="paramtype">boost::filesystem::exists(tempPath.c_str())&#160;</td>
          <td class="paramname"> = <code>=<a class="el" href="_ref_layer_tests_8cpp.xhtml#a88d84cc49602ca19491dea9c998035fe">true</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a775e0c59b1d5cd30212c0333f46ab13c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a775e0c59b1d5cd30212c0333f46ab13c">&#9670;&nbsp;</a></span>BOOST_CHECK() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_CHECK </td>
          <td>(</td>
          <td class="paramtype">profilingService.&#160;</td>
          <td class="paramname"><em>IsCounterRegistered</em>0 = <code>=<a class="el" href="_ref_layer_tests_8cpp.xhtml#a88d84cc49602ca19491dea9c998035fe">true</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8d31710a3df75b16bd7045e17f4e7ec8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d31710a3df75b16bd7045e17f4e7ec8">&#9670;&nbsp;</a></span>BOOST_CHECK() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_CHECK </td>
          <td>(</td>
          <td class="paramtype">profilingService.&#160;</td>
          <td class="paramname"><em>GetAbsoluteCounterValue</em>0, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af2942628ad8bb615f4062232103a6b79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2942628ad8bb615f4062232103a6b79">&#9670;&nbsp;</a></span>BOOST_CHECK() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_CHECK </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn_utils_1_1_filesystem.xhtml#a1c541d9c526205112781efcf3224f29c">armnnUtils::Filesystem::GetFileSize</a>(tempPath.string().c_str())&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">0&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8d7456367b1144ba3977085b07519b2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d7456367b1144ba3977085b07519b2d">&#9670;&nbsp;</a></span>BOOST_CHECK() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_CHECK </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn_utils_1_1_filesystem.xhtml#a7d64caad10c705910e723dd8920a9dba">armnnUtils::Filesystem::Remove</a>(tempPath.string().c_str())&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aff5f960f1b95a5cb9d64b3d53a7c6b93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff5f960f1b95a5cb9d64b3d53a7c6b93">&#9670;&nbsp;</a></span>IncrementCounterValue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ac3b2ed181156194522b1a46ffd8b50b5">profilingService</a> IncrementCounterValue </td>
          <td>(</td>
          <td class="paramtype">0&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="_i_counter_values_8hpp_source.xhtml#l00030">IWriteCounterValues::~IWriteCounterValues()</a>.</p>

</div>
</div>
<a id="af4df85cbd8e6f68f189bc6a28fe3a00d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4df85cbd8e6f68f189bc6a28fe3a00d">&#9670;&nbsp;</a></span>ResetExternalProfilingOptions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ac3b2ed181156194522b1a46ffd8b50b5">profilingService</a> ResetExternalProfilingOptions </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_ref_layer_tests_8cpp.xhtml#a88d84cc49602ca19491dea9c998035fe">true</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a35f8c5b0911f87463330196366f3754e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35f8c5b0911f87463330196366f3754e">&#9670;&nbsp;</a></span>UniqueFileName()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string UniqueFileName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00050">BOOST_AUTO_TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    std::time_t t = std::time(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordtype">char</span> mbstr[100];</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    std::strftime(mbstr, <span class="keyword">sizeof</span>(mbstr), <span class="stringliteral">&quot;%Y_%m_%d_%H_%M_%S_&quot;</span>, std::localtime(&amp;t));</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    std::stringstream ss;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    ss &lt;&lt; mbstr;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    ss &lt;&lt; t;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    ss &lt;&lt; <span class="stringliteral">&quot;.bin&quot;</span>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> ss.str();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa104b52a24929c46896b0f7df4cedab3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa104b52a24929c46896b0f7df4cedab3">&#9670;&nbsp;</a></span>Update()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ac3b2ed181156194522b1a46ffd8b50b5">profilingService</a> Update </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9873e084badb22c4b5790529a9c7b704"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9873e084badb22c4b5790529a9c7b704">&#9670;&nbsp;</a></span>WaitForPacketsSent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a07b3da250d2239acfc6005ff63f1625c">helper</a> WaitForPacketsSent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aeb41e29e05a71ba26a6fe5291477b4f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb41e29e05a71ba26a6fe5291477b4f9">&#9670;&nbsp;</a></span>while()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">while </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00130">130</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d">armnn::profiling::Active</a>, <a class="el" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END()</a>, <a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a0c262ba6f6c189a2d092d127c1b7627b">BOOST_CHECK()</a>, <a class="el" href="_profiling_service_8cpp_source.xhtml#l00238">ProfilingService::GetAbsoluteCounterValue()</a>, <a class="el" href="_profiling_service_8cpp_source.xhtml#l00223">ProfilingService::GetCurrentState()</a>, <a class="el" href="_profiling_service_8cpp_source.xhtml#l00246">ProfilingService::GetDeltaCounterValue()</a>, <a class="el" href="_filesystem_8cpp_source.xhtml#l00021">armnnUtils::Filesystem::GetFileSize()</a>, <a class="el" href="_profiling_service_8cpp_source.xhtml#l00302">ProfilingService::IncrementCounterValue()</a>, <a class="el" href="_profiling_service_8cpp_source.xhtml#l00233">ProfilingService::IsCounterRegistered()</a>, <a class="el" href="_filesystem_8cpp_source.xhtml#l00047">armnnUtils::Filesystem::Remove()</a>, and <a class="el" href="_profiling_service_8cpp_source.xhtml#l00032">ProfilingService::ResetExternalProfilingOptions()</a>.</p>
<div class="fragment"><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">if</span>(!<a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a07b3da250d2239acfc6005ff63f1625c">helper</a>.WaitForPacketsSent())</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            BOOST_FAIL(<span class="stringliteral">&quot;Timeout waiting for packets&quot;</span>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#ae92a562353e3e0f6db4b9c6f4c573587">packetCount</a>++;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div><div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_ae92a562353e3e0f6db4b9c6f4c573587"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#ae92a562353e3e0f6db4b9c6f4c573587">packetCount</a></div><div class="ttdeci">uint32_t packetCount</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00129">FileOnlyProfilingDecoratorTests.cpp:129</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a07b3da250d2239acfc6005ff63f1625c"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a07b3da250d2239acfc6005ff63f1625c">helper</a></div><div class="ttdeci">FileOnlyHelperService helper</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00113">FileOnlyProfilingDecoratorTests.cpp:113</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a07b3da250d2239acfc6005ff63f1625c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07b3da250d2239acfc6005ff63f1625c">&#9670;&nbsp;</a></span>helper</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">FileOnlyHelperService helper</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00113">113</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_registry_tests_8cpp_source.xhtml#l00037">BOOST_AUTO_TEST_CASE()</a>.</p>

</div>
</div>
<a id="a9a702f9af6f619f04b6accd536581917"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a702f9af6f619f04b6accd536581917">&#9670;&nbsp;</a></span>m_CapturePeriod</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a> m_CapturePeriod = 100</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_mock_backend_8hpp_source.xhtml#l00065">MockBackendProfilingContext::ActivateCounters()</a>, <a class="el" href="_mock_backend_8hpp_source.xhtml#l00080">MockBackendProfilingContext::ReportCounterValues()</a>, and <a class="el" href="_mock_backend_8hpp_source.xhtml#l00107">MockBackendProfilingContext::TimelineReportingEnabled()</a>.</p>

</div>
</div>
<a id="affc4c5e8c0f3e0fac268deec9b481941"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affc4c5e8c0f3e0fac268deec9b481941">&#9670;&nbsp;</a></span>m_EnableProfiling</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a> m_EnableProfiling = <a class="el" href="_ref_layer_tests_8cpp.xhtml#a88d84cc49602ca19491dea9c998035fe">true</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00107">107</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_inference_model_8hpp_source.xhtml#l00567">InferenceModel&lt; IParser, TDataType &gt;::GetAllQuantizationParams()</a>, <a class="el" href="_inference_model_8hpp_source.xhtml#l00378">InferenceModel&lt; IParser, TDataType &gt;::InferenceModel()</a>, and <a class="el" href="_inference_model_8hpp_source.xhtml#l00478">InferenceModel&lt; IParser, TDataType &gt;::Run()</a>.</p>

</div>
</div>
<a id="a73b5da4091289681d269007956523e9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73b5da4091289681d269007956523e9a">&#9670;&nbsp;</a></span>m_FileOnly</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a> m_FileOnly = <a class="el" href="_ref_layer_tests_8cpp.xhtml#a88d84cc49602ca19491dea9c998035fe">true</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00108">108</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

</div>
</div>
<a id="af38445f045fb017409cb3e54916b49ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af38445f045fb017409cb3e54916b49ac">&#9670;&nbsp;</a></span>m_IncomingCaptureFile</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a> m_IncomingCaptureFile = &quot;&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

</div>
</div>
<a id="a1650fc89b05bd1d5aaa8d42eb11fb337"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1650fc89b05bd1d5aaa8d42eb11fb337">&#9670;&nbsp;</a></span>m_OutgoingCaptureFile</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a> m_OutgoingCaptureFile = tempPath.string()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00110">110</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

</div>
</div>
<a id="a6560146509197f3e197d8d36f76c1347"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6560146509197f3e197d8d36f76c1347">&#9670;&nbsp;</a></span>options</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">armnn::Runtime::CreationOptions::ExternalProfilingOptions options</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00106">106</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_end_to_end_test_8cpp_source.xhtml#l00017">BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_quantizer_test_8cpp_source.xhtml#l00226">armnn::BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l02594">armnnTfLiteParser::ComputeWrappedIndex()</a>, <a class="el" href="_inference_model_8hpp_source.xhtml#l00119">CreateNetworkImpl&lt; IParser &gt;::Create()</a>, <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00608">TfLiteParser::CreateNetworkFromBinary()</a>, <a class="el" href="_runtime_8hpp_source.xhtml#l00071">Runtime::GetDeviceSpec()</a>, <a class="el" href="_profiling_connection_factory_8cpp_source.xhtml#l00018">ProfilingConnectionFactory::GetProfilingConnection()</a>, <a class="el" href="_json_printer_test_impl_8cpp_source.xhtml#l00119">GetSoftmaxProfilerJson()</a>, <a class="el" href="_inference_model_8hpp_source.xhtml#l00378">InferenceModel&lt; IParser, TDataType &gt;::InferenceModel()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00009">main()</a>, <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l01928">TfLiteParser::OutputShapeOfReshape()</a>, <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l01493">TfLiteParser::OutputShapeOfSqueeze()</a>, <a class="el" href="_parser_flatbuffers_fixture_8hpp_source.xhtml#l00039">ParserFlatbuffersFixture::ParserFlatbuffersFixture()</a>, <a class="el" href="_quantizer_test_8cpp_source.xhtml#l02927">armnn::PreserveTypeTestImpl()</a>, <a class="el" href="_profiling_service_8hpp_source.xhtml#l00058">ProfilingService::ProfilingService()</a>, <a class="el" href="_q_lstm_end_to_end_test_impl_8cpp_source.xhtml#l00036">QLstmEndToEnd()</a>, <a class="el" href="_quantized_lstm_end_to_end_test_impl_8cpp_source.xhtml#l00179">QuantizedLstmEndToEnd()</a>, <a class="el" href="_network_quantizer_8cpp_source.xhtml#l00061">NetworkQuantizer::Refine()</a>, <a class="el" href="_profiling_service_8cpp_source.xhtml#l00032">ProfilingService::ResetExternalProfilingOptions()</a>, <a class="el" href="_network_execution_utils_8hpp_source.xhtml#l00875">RunCLTuning()</a>, <a class="el" href="_quantizer_test_8cpp_source.xhtml#l01156">armnn::TestQuantizeConvolution2d()</a>, <a class="el" href="_quantizer_test_8cpp_source.xhtml#l01242">armnn::TestQuantizeDepthwiseConvolution2d()</a>, <a class="el" href="_quantizer_test_8cpp_source.xhtml#l02598">armnn::TestQuantizeTransposeConvolution2d()</a>, <a class="el" href="_quantizer_test_8cpp_source.xhtml#l01099">armnn::ValidateFullyConnectedLayer()</a>, <a class="el" href="_profiling_test_utils_8cpp_source.xhtml#l00312">VerifyPostOptimisationStructureTestImpl()</a>, <a class="el" href="_quantizer_test_8cpp_source.xhtml#l00192">armnn::VisitLayersTopologically()</a>, <a class="el" href="_inference_test_8hpp_source.xhtml#l00084">IInferenceTestCase::~IInferenceTestCase()</a>, and <a class="el" href="_i_profiling_connection_factory_8hpp_source.xhtml#l00026">IProfilingConnectionFactory::~IProfilingConnectionFactory()</a>.</p>

</div>
</div>
<a id="ae92a562353e3e0f6db4b9c6f4c573587"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae92a562353e3e0f6db4b9c6f4c573587">&#9670;&nbsp;</a></span>packetCount</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t packetCount = 0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00129">129</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_profiling_tests_8hpp_source.xhtml#l00240">SwapProfilingConnectionFactoryHelper::WaitForPacketsSent()</a>.</p>

</div>
</div>
<a id="ac3b2ed181156194522b1a46ffd8b50b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3b2ed181156194522b1a46ffd8b50b5">&#9670;&nbsp;</a></span>profilingService</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">armnn::profiling::ProfilingService</a> profilingService</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00116">116</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_profiling_tests_8cpp_source.xhtml#l00140">BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l00083">LoadedNetwork::MakeLoadedNetwork()</a>, <a class="el" href="_backend_registry_8cpp_source.xhtml#l00104">BackendRegistry::SetProfilingService()</a>, <a class="el" href="_profiling_test_utils_8cpp_source.xhtml#l00078">VerifyTimelineLabelBinaryPacketData()</a>, and <a class="el" href="_loaded_network_8hpp_source.xhtml#l00038">LoadedNetwork::~LoadedNetwork()</a>.</p>

</div>
</div>
<a id="aea1c98db5f166be1d82cbabcbc4d8c12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea1c98db5f166be1d82cbabcbc4d8c12">&#9670;&nbsp;</a></span>tempFile</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">boost::filesystem::path tempFile = <a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a35f8c5b0911f87463330196366f3754e">UniqueFileName</a>()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00104">104</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00050">BOOST_AUTO_TEST_CASE()</a>.</p>

</div>
</div>
<a id="a1b7be354d3c06a46dc247e0e3341198d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b7be354d3c06a46dc247e0e3341198d">&#9670;&nbsp;</a></span>tempPath</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">tempPath = tempPath / <a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#aea1c98db5f166be1d82cbabcbc4d8c12">tempFile</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00105">105</a> of file <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml">FileOnlyProfilingDecoratorTests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00050">BOOST_AUTO_TEST_CASE()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_637c692f14729569dd2eac0c18e2a54a.xhtml">profiling</a></li><li class="navelem"><a class="el" href="dir_6b1198f6e738611120ec65b09506d2f8.xhtml">test</a></li><li class="navelem"><a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml">FileOnlyProfilingDecoratorTests.cpp</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:49 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
