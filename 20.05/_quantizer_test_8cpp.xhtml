<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/QuantizerTest.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_quantizer_test_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">QuantizerTest.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_graph_8hpp_source.xhtml">../Graph.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_network_8hpp_source.xhtml">../Network.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_network_quantizer_utils_8hpp_source.xhtml">../NetworkQuantizerUtils.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_override_input_range_visitor_8hpp_source.xhtml">../OverrideInputRangeVisitor.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_range_tracker_8hpp_source.xhtml">../RangeTracker.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="src_2armnn_quantizer_2_command_line_processor_8hpp_source.xhtml">../../armnnQuantizer/CommandLineProcessor.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="_i_network_8hpp_source.xhtml">armnn/INetwork.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_layer_visitor_base_8hpp_source.xhtml">armnn/LayerVisitorBase.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_tensor_8hpp_source.xhtml">armnn/Tensor.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_types_8hpp_source.xhtml">armnn/Types.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_ignore_unused_8hpp_source.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_polymorphic_downcast_8hpp_source.xhtml">armnn/utility/PolymorphicDowncast.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_network_quantizer_8hpp_source.xhtml">armnnQuantizer/INetworkQuantizer.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_quantize_helper_8hpp_source.xhtml">QuantizeHelper.hpp</a>&gt;</code><br />
<code>#include &lt;boost/test/unit_test.hpp&gt;</code><br />
<code>#include &lt;unordered_map&gt;</code><br />
</div>
<p><a href="_quantizer_test_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearmnn"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml">armnn</a></td></tr>
<tr class="memdesc:namespacearmnn"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2020 ARM Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a997e96288bdb106c922202e3f33d5d7b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a997e96288bdb106c922202e3f33d5d7b">MinMaxRange</a> = std::pair&lt; float, float &gt;</td></tr>
<tr class="separator:a997e96288bdb106c922202e3f33d5d7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac757baefa4b72b54c38f713f86418f8a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ac757baefa4b72b54c38f713f86418f8a">MinMaxRanges</a> = std::vector&lt; MinMaxRange &gt;</td></tr>
<tr class="separator:ac757baefa4b72b54c38f713f86418f8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a061aafb62b3769f55369845c3990ec7a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a061aafb62b3769f55369845c3990ec7a">MinMaxRangeMap</a> = std::unordered_map&lt; LayerGuid, MinMaxRanges &gt;</td></tr>
<tr class="separator:a061aafb62b3769f55369845c3990ec7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a6482907b4c57873e197324f5cb66fd4d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a6482907b4c57873e197324f5cb66fd4d">VisitLayersTopologically</a> (const INetwork *inputNetwork, ILayerVisitor &amp;visitor)</td></tr>
<tr class="separator:a6482907b4c57873e197324f5cb66fd4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8baf97065d802063eb9bcdd1a066dc86"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a8baf97065d802063eb9bcdd1a066dc86">BOOST_AUTO_TEST_CASE</a> (QuantizeAddition)</td></tr>
<tr class="separator:a8baf97065d802063eb9bcdd1a066dc86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fbc1479db5f4ff70a750cf02d58971b"><td class="memItemLeft" align="right" valign="top">INetworkPtr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a5fbc1479db5f4ff70a750cf02d58971b">CreateNetworkWithActivationLayer</a> (const ActivationDescriptor &amp;descriptor, const TensorShape &amp;shape)</td></tr>
<tr class="separator:a5fbc1479db5f4ff70a750cf02d58971b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9c6c1a7b5380a99a536f4740f87dd59"><td class="memItemLeft" align="right" valign="top">INetworkPtr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#aa9c6c1a7b5380a99a536f4740f87dd59">CreateNetworkWithInputOutputLayers</a> ()</td></tr>
<tr class="separator:aa9c6c1a7b5380a99a536f4740f87dd59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae52296dff1f4879854f320d59f92574e"><td class="memItemLeft" align="right" valign="top">TensorInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ae52296dff1f4879854f320d59f92574e">GetInputTensorInfo</a> (const Network *network)</td></tr>
<tr class="separator:ae52296dff1f4879854f320d59f92574e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cec088786b209989fe9e04e1be9636d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a9cec088786b209989fe9e04e1be9636d">BOOST_AUTO_TEST_CASE</a> (InputOutputLayerDynamicQuant)</td></tr>
<tr class="separator:a9cec088786b209989fe9e04e1be9636d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7db6a78bb6eedbea7f0525f1fe59de28"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a7db6a78bb6eedbea7f0525f1fe59de28">BOOST_AUTO_TEST_CASE</a> (QuantizeAbsActivation)</td></tr>
<tr class="separator:a7db6a78bb6eedbea7f0525f1fe59de28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2df3b432de50a9b9e8b486aa53e11cc5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a2df3b432de50a9b9e8b486aa53e11cc5">BOOST_AUTO_TEST_CASE</a> (QuantizeLinearActivation)</td></tr>
<tr class="separator:a2df3b432de50a9b9e8b486aa53e11cc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dd219b394b8186d1849ee595193268d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a3dd219b394b8186d1849ee595193268d">BOOST_AUTO_TEST_CASE</a> (QuantizeReLuActivation)</td></tr>
<tr class="separator:a3dd219b394b8186d1849ee595193268d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52e948b4bffc16a3933d812dbc384833"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a52e948b4bffc16a3933d812dbc384833">BOOST_AUTO_TEST_CASE</a> (QuantizeSoftReLuActivation)</td></tr>
<tr class="separator:a52e948b4bffc16a3933d812dbc384833"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf109580225cb949565c8223bceadd5d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#abf109580225cb949565c8223bceadd5d">BOOST_AUTO_TEST_CASE</a> (QuantizeBoundedReluActivation)</td></tr>
<tr class="separator:abf109580225cb949565c8223bceadd5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbf871a6ec0726bfe2746e761a278108"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#acbf871a6ec0726bfe2746e761a278108">BOOST_AUTO_TEST_CASE</a> (QuantizeTanHActivation)</td></tr>
<tr class="separator:acbf871a6ec0726bfe2746e761a278108"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32068047cc7b37f1bed1830508891526"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a32068047cc7b37f1bed1830508891526">BOOST_AUTO_TEST_CASE</a> (QuantizeLeakyReLuActivation)</td></tr>
<tr class="separator:a32068047cc7b37f1bed1830508891526"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c08ed3db08fcfca0592c62cd6080b76"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a6c08ed3db08fcfca0592c62cd6080b76">BOOST_AUTO_TEST_CASE</a> (QuantizeELuActivation)</td></tr>
<tr class="separator:a6c08ed3db08fcfca0592c62cd6080b76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab182b6a1d2348a86472001c92586717a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ab182b6a1d2348a86472001c92586717a">BOOST_AUTO_TEST_CASE</a> (QuantizeHardSwishActivation)</td></tr>
<tr class="separator:ab182b6a1d2348a86472001c92586717a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf59f87645d301e9b56dd70aed350e54"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#adf59f87645d301e9b56dd70aed350e54">BOOST_AUTO_TEST_CASE</a> (QuantizeBatchNorm)</td></tr>
<tr class="separator:adf59f87645d301e9b56dd70aed350e54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae91bc23bf56bb5f9c2e0ddb1fc7be75e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ae91bc23bf56bb5f9c2e0ddb1fc7be75e">BOOST_AUTO_TEST_CASE</a> (QuantizeDepthToSpace)</td></tr>
<tr class="separator:ae91bc23bf56bb5f9c2e0ddb1fc7be75e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6281ed3090b74167170c8f692688de5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#aa6281ed3090b74167170c8f692688de5">BOOST_AUTO_TEST_CASE</a> (OverrideInputRangeEmptyNetwork)</td></tr>
<tr class="separator:aa6281ed3090b74167170c8f692688de5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad432424d97021ae6c81e38130b1ec5d6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ad432424d97021ae6c81e38130b1ec5d6">BOOST_AUTO_TEST_CASE</a> (OverrideInputRangeNoInputLayers)</td></tr>
<tr class="separator:ad432424d97021ae6c81e38130b1ec5d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e97e093453fc053a5c82386927a0d6c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a6e97e093453fc053a5c82386927a0d6c">BOOST_AUTO_TEST_CASE</a> (OverrideInputRangeInputLayers)</td></tr>
<tr class="separator:a6e97e093453fc053a5c82386927a0d6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad4b8cb9a4d882a48bc21510f0d1a938"><td class="memItemLeft" align="right" valign="top">INetworkPtr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#aad4b8cb9a4d882a48bc21510f0d1a938">CreateNetworkWithFullyConnectedLayer</a> (const bool biasEnabled, const TensorShape &amp;inputShape, const TensorShape &amp;outputShape)</td></tr>
<tr class="separator:aad4b8cb9a4d882a48bc21510f0d1a938"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a245661fc96c9c4a9b898e1d98c8c6962"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a245661fc96c9c4a9b898e1d98c8c6962">ValidateFullyConnectedLayer</a> (const bool biasEnabled)</td></tr>
<tr class="separator:a245661fc96c9c4a9b898e1d98c8c6962"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a881ab05533f917737509402730668e4a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a881ab05533f917737509402730668e4a">BOOST_AUTO_TEST_CASE</a> (QuantizeFullyConnected)</td></tr>
<tr class="separator:a881ab05533f917737509402730668e4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69dd8c7608ff0935a247f3aa07f98212"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a69dd8c7608ff0935a247f3aa07f98212">BOOST_AUTO_TEST_CASE</a> (QuantizeFullyConnectedBiasEnabled)</td></tr>
<tr class="separator:a69dd8c7608ff0935a247f3aa07f98212"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14cfd39cfc30682fa821ade3dd298426"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a14cfd39cfc30682fa821ade3dd298426">TestQuantizeConvolution2d</a> (bool useBiases)</td></tr>
<tr class="separator:a14cfd39cfc30682fa821ade3dd298426"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa117e0112fdc02a7a011cfb39dc596ab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#aa117e0112fdc02a7a011cfb39dc596ab">BOOST_AUTO_TEST_CASE</a> (QuantizeConvolution2d)</td></tr>
<tr class="separator:aa117e0112fdc02a7a011cfb39dc596ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9827adb2cf787460578999e0484568fa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a9827adb2cf787460578999e0484568fa">BOOST_AUTO_TEST_CASE</a> (QuantizeConvolution2dWithBiases)</td></tr>
<tr class="separator:a9827adb2cf787460578999e0484568fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5abbe8a9ee003c1379a921dbe2745b81"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a5abbe8a9ee003c1379a921dbe2745b81">TestQuantizeDepthwiseConvolution2d</a> (bool useBiases)</td></tr>
<tr class="separator:a5abbe8a9ee003c1379a921dbe2745b81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1db5d836b83fc71602a7993616de5b42"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a1db5d836b83fc71602a7993616de5b42">BOOST_AUTO_TEST_CASE</a> (QuantizeDepthwiseConvolution2d)</td></tr>
<tr class="separator:a1db5d836b83fc71602a7993616de5b42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a891abdb9079715cbcf85792e2b450652"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a891abdb9079715cbcf85792e2b450652">BOOST_AUTO_TEST_CASE</a> (QuantizeDepthwiseConvolution2dWithBiases)</td></tr>
<tr class="separator:a891abdb9079715cbcf85792e2b450652"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd033569519fec65077ea983f6c75a9d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#abd033569519fec65077ea983f6c75a9d">BOOST_AUTO_TEST_CASE</a> (QuantizeInstanceNormalization)</td></tr>
<tr class="separator:abd033569519fec65077ea983f6c75a9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46d045b35ad6b8c2ffe0c04684f97779"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a46d045b35ad6b8c2ffe0c04684f97779">BOOST_AUTO_TEST_CASE</a> (QuantizeLogSoftmax)</td></tr>
<tr class="separator:a46d045b35ad6b8c2ffe0c04684f97779"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c91b774c3089c55df77cc3a42da72de"><td class="memItemLeft" align="right" valign="top">INetworkPtr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a9c91b774c3089c55df77cc3a42da72de">CreateNetworkWithSoftmaxLayer</a> (const SoftmaxDescriptor &amp;descriptor, const TensorShape &amp;shape)</td></tr>
<tr class="separator:a9c91b774c3089c55df77cc3a42da72de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e94e9ab356805c498f5fc2fba87e4e6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a7e94e9ab356805c498f5fc2fba87e4e6">BOOST_AUTO_TEST_CASE</a> (QuantizeSoftmax)</td></tr>
<tr class="separator:a7e94e9ab356805c498f5fc2fba87e4e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4734542212b5811d0511ea6b16f35168"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a4734542212b5811d0511ea6b16f35168">BOOST_AUTO_TEST_CASE</a> (QuantizeStandIn)</td></tr>
<tr class="separator:a4734542212b5811d0511ea6b16f35168"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a120c131df35d78b3a56cb0f07decaf35"><td class="memItemLeft" align="right" valign="top">IConnectableLayer *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a120c131df35d78b3a56cb0f07decaf35">CreateStartOfLeakyReluNetwork</a> (INetwork *network, const TensorInfo &amp;info)</td></tr>
<tr class="separator:a120c131df35d78b3a56cb0f07decaf35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fff4b4b1b5d4d37c9cf53d0e31c05dd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a6fff4b4b1b5d4d37c9cf53d0e31c05dd">CompleteLeakyReluNetwork</a> (INetwork *network, IConnectableLayer *activation, IConnectableLayer *layerUnderTest, const TensorInfo &amp;info)</td></tr>
<tr class="separator:a6fff4b4b1b5d4d37c9cf53d0e31c05dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add22da50dd35a100548dde4c57ae89d1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#add22da50dd35a100548dde4c57ae89d1">BOOST_AUTO_TEST_CASE</a> (QuantizePermute)</td></tr>
<tr class="separator:add22da50dd35a100548dde4c57ae89d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a6bc66017eb7c132fd6e13ff0dcb540"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a9a6bc66017eb7c132fd6e13ff0dcb540">BOOST_AUTO_TEST_CASE</a> (QuantizeSpaceToBatch)</td></tr>
<tr class="separator:a9a6bc66017eb7c132fd6e13ff0dcb540"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa78ce2bbe65cae8f3d60839467dbfc83"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#aa78ce2bbe65cae8f3d60839467dbfc83">BOOST_AUTO_TEST_CASE</a> (QuantizeSpaceToDepth)</td></tr>
<tr class="separator:aa78ce2bbe65cae8f3d60839467dbfc83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa86b6903e41d2d2828e00b32f872375"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#aaa86b6903e41d2d2828e00b32f872375">BOOST_AUTO_TEST_CASE</a> (QuantizePooling2d)</td></tr>
<tr class="separator:aaa86b6903e41d2d2828e00b32f872375"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a369051e180246c66b20c93de5fecee8c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a369051e180246c66b20c93de5fecee8c">BOOST_AUTO_TEST_CASE</a> (QuantizeConstant)</td></tr>
<tr class="separator:a369051e180246c66b20c93de5fecee8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3af95ea62252012cf93a98167afef64"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ae3af95ea62252012cf93a98167afef64">BOOST_AUTO_TEST_CASE</a> (QuantizeArgMinMax)</td></tr>
<tr class="separator:ae3af95ea62252012cf93a98167afef64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab83f837cdd5bfcff537dae72a96d6fc8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ab83f837cdd5bfcff537dae72a96d6fc8">BOOST_AUTO_TEST_CASE</a> (QuantizeComparison)</td></tr>
<tr class="separator:ab83f837cdd5bfcff537dae72a96d6fc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add47ebcd4a59304a25c71996aea2b38b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#add47ebcd4a59304a25c71996aea2b38b">BOOST_AUTO_TEST_CASE</a> (QuantizeConcat)</td></tr>
<tr class="separator:add47ebcd4a59304a25c71996aea2b38b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9258afcd4c6d8443c9130d8c9bf26442"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a9258afcd4c6d8443c9130d8c9bf26442">BOOST_AUTO_TEST_CASE</a> (QuantizeReshape)</td></tr>
<tr class="separator:a9258afcd4c6d8443c9130d8c9bf26442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23a4f3c387a2a3a035e97764e34277c6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a23a4f3c387a2a3a035e97764e34277c6">BOOST_AUTO_TEST_CASE</a> (QuantizeSplitter)</td></tr>
<tr class="separator:a23a4f3c387a2a3a035e97764e34277c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a102f37a09de1b0d4d78740a3c12902bf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a102f37a09de1b0d4d78740a3c12902bf">BOOST_AUTO_TEST_CASE</a> (QuantizeResize)</td></tr>
<tr class="separator:a102f37a09de1b0d4d78740a3c12902bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f9c6094ae666c8e14907307d0481fac"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a5f9c6094ae666c8e14907307d0481fac">BOOST_AUTO_TEST_CASE</a> (QuantizeStridedSlice)</td></tr>
<tr class="separator:a5f9c6094ae666c8e14907307d0481fac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec7cf8e3927ee7d24f8b19d206ce3e84"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#aec7cf8e3927ee7d24f8b19d206ce3e84">BOOST_AUTO_TEST_CASE</a> (QuantizeBatchToSpace)</td></tr>
<tr class="separator:aec7cf8e3927ee7d24f8b19d206ce3e84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a733ef16d4eaaf8cce338320fa042f526"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a733ef16d4eaaf8cce338320fa042f526">BOOST_AUTO_TEST_CASE</a> (QuantizePrelu)</td></tr>
<tr class="separator:a733ef16d4eaaf8cce338320fa042f526"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa7a0a639e2772ff2ced67d77be810c0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#afa7a0a639e2772ff2ced67d77be810c0">TestQuantizeTransposeConvolution2d</a> (bool useBiases)</td></tr>
<tr class="separator:afa7a0a639e2772ff2ced67d77be810c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e66fe270ca921faeecd26735192d08b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a5e66fe270ca921faeecd26735192d08b">BOOST_AUTO_TEST_CASE</a> (QuantizeTransposeConvolution2d)</td></tr>
<tr class="separator:a5e66fe270ca921faeecd26735192d08b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec82007c45313f59d24b304e35b3db6c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#aec82007c45313f59d24b304e35b3db6c">BOOST_AUTO_TEST_CASE</a> (QuantizeTransposeConvolution2dWithBiases)</td></tr>
<tr class="separator:aec82007c45313f59d24b304e35b3db6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77cba79eef903eb3d758b4edbcc626ef"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a77cba79eef903eb3d758b4edbcc626ef">BOOST_AUTO_TEST_CASE</a> (QuantizeStack)</td></tr>
<tr class="separator:a77cba79eef903eb3d758b4edbcc626ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46f313720b601ca97a9c2a5158814bff"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a46f313720b601ca97a9c2a5158814bff">BOOST_AUTO_TEST_CASE</a> (QuantizeSlice)</td></tr>
<tr class="separator:a46f313720b601ca97a9c2a5158814bff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52cbff9d344ba4a1fe01d4da2c1f7ba2"><td class="memItemLeft" align="right" valign="top">std::vector&lt; uint8_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a52cbff9d344ba4a1fe01d4da2c1f7ba2">SetupQuantize</a> (float value)</td></tr>
<tr class="separator:a52cbff9d344ba4a1fe01d4da2c1f7ba2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a728153b62fa66e6ed1243e09144bfe8c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a728153b62fa66e6ed1243e09144bfe8c">BOOST_AUTO_TEST_CASE</a> (QuantizeInf)</td></tr>
<tr class="separator:a728153b62fa66e6ed1243e09144bfe8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a898305dc4cdb78a5fbed481250f6cd35"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a898305dc4cdb78a5fbed481250f6cd35">BOOST_AUTO_TEST_CASE</a> (QuantizeNegativeInf)</td></tr>
<tr class="separator:a898305dc4cdb78a5fbed481250f6cd35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe34cf42d7c8515ecd15d11f4aeb399c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#abe34cf42d7c8515ecd15d11f4aeb399c">PreserveTypeTestImpl</a> (const DataType &amp;dataType)</td></tr>
<tr class="separator:abe34cf42d7c8515ecd15d11f4aeb399c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94eb3bdf0e1c8c748c2e29dce048ace4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a94eb3bdf0e1c8c748c2e29dce048ace4">BOOST_AUTO_TEST_CASE</a> (PreserveTypeFloat32)</td></tr>
<tr class="separator:a94eb3bdf0e1c8c748c2e29dce048ace4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab242670b85e047e79bb297cdb192cc93"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ab242670b85e047e79bb297cdb192cc93">BOOST_AUTO_TEST_CASE</a> (PreserveTypeQAsymmU8)</td></tr>
<tr class="separator:ab242670b85e047e79bb297cdb192cc93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a061891029598224370aae4cd18b78406"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a061891029598224370aae4cd18b78406">BOOST_AUTO_TEST_CASE</a> (PreserveTypeQsymm8)</td></tr>
<tr class="separator:a061891029598224370aae4cd18b78406"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d4386cbb19dbc551e423992ecdd0d61"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a4d4386cbb19dbc551e423992ecdd0d61">BOOST_AUTO_TEST_CASE</a> (PreserveTypeQsymm16)</td></tr>
<tr class="separator:a4d4386cbb19dbc551e423992ecdd0d61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c09fbb75d2c2dea48926a540fc5cce9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a8c09fbb75d2c2dea48926a540fc5cce9">BOOST_AUTO_TEST_CASE</a> (TestConnectionPreservationAfterDynamicQuant)</td></tr>
<tr class="separator:a8c09fbb75d2c2dea48926a540fc5cce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a19994153bdbd7710f0af3973403bc4cc"><td class="memItemLeft" align="right" valign="top">const float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a19994153bdbd7710f0af3973403bc4cc">g_AsymmU8QuantizationBase</a> = 255.0f</td></tr>
<tr class="separator:a19994153bdbd7710f0af3973403bc4cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09bdfaa922d72ce0d9ec014dfa8f8c95"><td class="memItemLeft" align="right" valign="top">const float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a09bdfaa922d72ce0d9ec014dfa8f8c95">g_AsymmS8QuantizationBase</a> = 255.0f</td></tr>
<tr class="separator:a09bdfaa922d72ce0d9ec014dfa8f8c95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd7f8820d124166a38c95bc8ad38811b"><td class="memItemLeft" align="right" valign="top">const float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#acd7f8820d124166a38c95bc8ad38811b">g_SymmS8QuantizationBase</a> = 127.0f</td></tr>
<tr class="separator:acd7f8820d124166a38c95bc8ad38811b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1465480794787d2278d3f0d2e6d887b4"><td class="memItemLeft" align="right" valign="top">const float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a1465480794787d2278d3f0d2e6d887b4">g_SymmS16QuantizationBase</a> = 32767.0f</td></tr>
<tr class="separator:a1465480794787d2278d3f0d2e6d887b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a9a6dea47de10df8e3c76dd45df56fb"><td class="memItemLeft" align="right" valign="top">const float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a1a9a6dea47de10df8e3c76dd45df56fb">g_TestTolerance</a> = 0.000001f</td></tr>
<tr class="separator:a1a9a6dea47de10df8e3c76dd45df56fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_quantizer_test_8cpp.xhtml">QuantizerTest.cpp</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:47 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
