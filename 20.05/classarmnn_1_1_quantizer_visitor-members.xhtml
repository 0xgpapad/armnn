<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_quantizer_visitor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">QuantizerVisitor Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a4549b1bbb63fa26700d74854e388784f">FinishVisit</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a27fa880bce96ac7355284a7681f2377e">ILayerVisitor</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#aec6644c81f84f086262dfd06088acd99">LayerVisitorBase</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a72d00eb366b367af08007d472d5edebb">QuantizerVisitor</a>(const RangeTracker &amp;rangeTracker, const IQuantizationScheme *quantizationScheme, bool preserveType=false)</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#ae25c71d0c8fceed87f0b84fc032f71c8">RetrieveFinalNetwork</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a463965a96896bf0d261b44eea5172c7b">StartVisit</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a4abca3536debe2dac00f1d6a0b14a435">VisitAbsLayer</a>(const IConnectableLayer *layer, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#af493528dec93f39f5081dbefb40bff75">VisitActivationLayer</a>(const IConnectableLayer *layer, const ActivationDescriptor &amp;activationDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a7cb4ef1bc9588c4319144460c288022f">VisitAdditionLayer</a>(const IConnectableLayer *layer, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a2482bba03a17e59a8ead45530e8efea5">VisitArgMinMaxLayer</a>(const IConnectableLayer *layer, const ArgMinMaxDescriptor &amp;argMinMaxDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a1532cb8f551812e784ccc14faae407b9">VisitBatchNormalizationLayer</a>(const IConnectableLayer *layer, const BatchNormalizationDescriptor &amp;desc, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#af5d09e03a578afa9c0bb8afd11c65485">VisitBatchToSpaceNdLayer</a>(const IConnectableLayer *layer, const BatchToSpaceNdDescriptor &amp;batchToSpaceNdDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a6a1adf7bf81e5cbb74b4cc4e8946c653">VisitComparisonLayer</a>(const IConnectableLayer *layer, const ComparisonDescriptor &amp;comparisonDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#afb527e0c7c30b56da911fee8c7b7a011">VisitConcatLayer</a>(const IConnectableLayer *layer, const OriginsDescriptor &amp;originsDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#aeb652d74e4b3596e85b22c2d52144f73">VisitConstantLayer</a>(const IConnectableLayer *layer, const ConstTensor &amp;input, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#ac2f379ba77b06095e0c024e232ec1fd4">VisitConvolution2dLayer</a>(const IConnectableLayer *layer, const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#ac0daac0e6ce49805580a8a50a8d3d514">VisitDepthToSpaceLayer</a>(const IConnectableLayer *layer, const DepthToSpaceDescriptor &amp;depthToSpaceDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a554e88817e6fd98645388873a108f868">VisitDepthwiseConvolution2dLayer</a>(const IConnectableLayer *layer, const DepthwiseConvolution2dDescriptor &amp;desc, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#aa27cc900d32dcc4a92f59e3bab4f4653">VisitDequantizeLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a88bad2eef809ccf6f2129f9ed4a6f3a7">VisitDetectionPostProcessLayer</a>(const IConnectableLayer *, const DetectionPostProcessDescriptor &amp;, const ConstTensor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a7450859464a381eafaedb33adc582f75">VisitDivisionLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a237f88794e504388160a87813b66b9e3">VisitElementwiseUnaryLayer</a>(const IConnectableLayer *layer, const ElementwiseUnaryDescriptor &amp;elementwiseUnaryDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a3249cd1186dc7e700a0ec0884fb9d5fa">VisitEqualLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a060c3a3f978fec03212afaff1fe1648d">VisitFloorLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#abbdd655f9e0bec625369079ed97f1328">VisitFullyConnectedLayer</a>(const IConnectableLayer *layer, const FullyConnectedDescriptor &amp;desc, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ae7639178bd8c29ffa83162dfd108b725">VisitGatherLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a2a28dbfcd1e83bc8158d78feb93d4a0c">VisitGreaterLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a2ca539d734553e606c0134940e444298">VisitInputLayer</a>(const IConnectableLayer *layer, LayerBindingId id, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#ac6da520014db9cd2d4bede451e37ca0a">VisitInstanceNormalizationLayer</a>(const IConnectableLayer *layer, const InstanceNormalizationDescriptor &amp;instanceNormalizationDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ae68e2b431ea3d2822f19ad4ac806fdaa">VisitL2NormalizationLayer</a>(const IConnectableLayer *, const L2NormalizationDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#abe0c29cd370a84c3e669d28dda18afb7">VisitLogSoftmaxLayer</a>(const IConnectableLayer *layer, const LogSoftmaxDescriptor &amp;logSoftmaxDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#aaf1a238ec5b6bb172bc4cd3811f08b28">VisitLstmLayer</a>(const IConnectableLayer *, const LstmDescriptor &amp;, const LstmInputParams &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a778e1b2219e3eb2d790d6e6e653a9f25">VisitMaximumLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a0a2f55bda910ccf8816d2678b7c980b6">VisitMeanLayer</a>(const IConnectableLayer *layer, const MeanDescriptor &amp;meanDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#aafb62c879f0c78bfdc3c4e4f2cb82e68">VisitMergeLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#acef69a3870409ca9a6130db91047e729">VisitMergerLayer</a>(const IConnectableLayer *, const MergerDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a1e24e9a7bf52efc1699c126435574e95">VisitMinimumLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a1c587861e672cedaedd1f32bbce44afc">VisitMultiplicationLayer</a>(const IConnectableLayer *layer, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#ab0946e6e13740185d7b7939720f347f1">VisitNormalizationLayer</a>(const IConnectableLayer *layer, const NormalizationDescriptor &amp;normalizationDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#ac75d60924c52b96ea6f9567fcfa2db10">VisitOutputLayer</a>(const IConnectableLayer *layer, LayerBindingId id, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a0b4b2e9b5578bf50197c6929a6a48071">VisitPadLayer</a>(const IConnectableLayer *, const PadDescriptor &amp;, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a8667c9d0c42575e31c7a630fea8c7256">VisitPermuteLayer</a>(const IConnectableLayer *layer, const PermuteDescriptor &amp;permuteDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#aaee763832ceb783dcffde56e1c1a6d93">VisitPooling2dLayer</a>(const IConnectableLayer *layer, const Pooling2dDescriptor &amp;pooling2dDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a34f5745a60988b4a109ec213f8d0cb77">VisitPreluLayer</a>(const IConnectableLayer *layer, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ab80f8f2c2202a4651c63757b307a21b7">VisitQLstmLayer</a>(const IConnectableLayer *, const QLstmDescriptor &amp;, const LstmInputParams &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a2fdb21a22a95af72177b4e909741b5c7">VisitQuantizedLstmLayer</a>(const IConnectableLayer *, const QuantizedLstmInputParams &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a8a6db421f0be147916cb4894ad3885d1">VisitQuantizeLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a4a7f7f33591fd91e8fb1c08d06c0733a">VisitReshapeLayer</a>(const IConnectableLayer *layer, const ReshapeDescriptor &amp;reshapeDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a5abbca55c908440acecfa6e0f921092d">VisitResizeBilinearLayer</a>(const IConnectableLayer *layer, const ResizeBilinearDescriptor &amp;resizeDesc, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a7eea0e93f066099f3549fef15881a4cb">VisitResizeLayer</a>(const IConnectableLayer *layer, const ResizeDescriptor &amp;resizeDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a990bfe643729a7dedcc55da1f7d1b3bf">VisitRsqrtLayer</a>(const IConnectableLayer *, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a20a228046c2aacd8664e50841af84e2b">VisitSliceLayer</a>(const IConnectableLayer *layer, const SliceDescriptor &amp;sliceDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a98f34d2511f43324833060154cbdba8d">VisitSoftmaxLayer</a>(const IConnectableLayer *layer, const SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a8e327cc6432697fd55d6b91e554360d9">VisitSpaceToBatchNdLayer</a>(const IConnectableLayer *layer, const SpaceToBatchNdDescriptor &amp;spaceToBatchNdDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a2c416fbd39598732dd3c6255ceaf1b66">VisitSpaceToDepthLayer</a>(const IConnectableLayer *layer, const SpaceToDepthDescriptor &amp;spaceToDepthDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#afbea8aa2295f2ab71ea5bb64ccd47871">VisitSplitterLayer</a>(const IConnectableLayer *layer, const SplitterDescriptor &amp;splitterDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a1b4325b20242a2db0922f68aea195d00">VisitStackLayer</a>(const IConnectableLayer *layer, const StackDescriptor &amp;stackDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a3c15053a7e295099a1a34c4add5a03b8">VisitStandInLayer</a>(const IConnectableLayer *, const StandInDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a61b7aa0305e7c45a625f7835fa26b9b6">VisitStridedSliceLayer</a>(const IConnectableLayer *layer, const StridedSliceDescriptor &amp;stridedSliceDescriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#abffdcc9b528d64b510103f5b280e246e">VisitSubtractionLayer</a>(const IConnectableLayer *layer, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a877d400155151a5afba9f0b17fbcf8f3">VisitSwitchLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a9e7ddd6c869af052317c6de0df53c942">VisitTransposeConvolution2dLayer</a>(const IConnectableLayer *layer, const TransposeConvolution2dDescriptor &amp;descriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a8c918592332c5e8339d43a9288350964">VisitTransposeLayer</a>(const IConnectableLayer *layer, const TransposeDescriptor &amp;descriptor, const char *name=nullptr) override</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml#a7ad7aeeaf26228ef11c15fa5d4507d8a">~ILayerVisitor</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ab59e5e8c65aa44857c27db70fc412baa">~LayerVisitorBase</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; VisitorThrowingPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml#a78cb6c9b6239cd69574c65dab44eb3b1">~QuantizerVisitor</a>()=default</td><td class="entry"><a class="el" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Fri May 29 2020 10:20:53 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
