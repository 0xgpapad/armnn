<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: ConstTensor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_const_tensor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_const_tensor-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ConstTensor Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A tensor defined by a <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> (shape and data type) and an immutable backing store.  
 <a href="classarmnn_1_1_const_tensor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ConstTensor:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_const_tensor.png" usemap="#ConstTensor_map" alt=""/>
  <map id="ConstTensor_map" name="ConstTensor_map">
<area href="classarmnn_1_1_base_tensor.xhtml" alt="BaseTensor&lt; const void *&gt;" shape="rect" coords="0,0,169,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6b6561873c02b1bd9b7a7ae8dd4a339c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor.xhtml#a6b6561873c02b1bd9b7a7ae8dd4a339c">ConstTensor</a> ()</td></tr>
<tr class="separator:a6b6561873c02b1bd9b7a7ae8dd4a339c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42aec46c635aa2e38932ca103d2064ed"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor.xhtml#a42aec46c635aa2e38932ca103d2064ed">ConstTensor</a> (const <a class="el" href="classarmnn_1_1_tensor.xhtml">Tensor</a> &amp;other)</td></tr>
<tr class="memdesc:a42aec46c635aa2e38932ca103d2064ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Can be implicitly constructed from non-const <a class="el" href="classarmnn_1_1_tensor.xhtml" title="A tensor defined by a TensorInfo (shape and data type) and a mutable backing store. ">Tensor</a>.  <a href="#a42aec46c635aa2e38932ca103d2064ed">More...</a><br /></td></tr>
<tr class="separator:a42aec46c635aa2e38932ca103d2064ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa04de06d072895b6df9125338d55c205"><td class="memTemplParams" colspan="2">template&lt;template&lt; typename, typename... &gt; class ContainerType, typename T , typename... ContainerArgs&gt; </td></tr>
<tr class="memitem:aa04de06d072895b6df9125338d55c205"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor.xhtml#aa04de06d072895b6df9125338d55c205">ConstTensor</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>, const ContainerType&lt; T, ContainerArgs... &gt; &amp;container)</td></tr>
<tr class="memdesc:aa04de06d072895b6df9125338d55c205"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor from a backing container.  <a href="#aa04de06d072895b6df9125338d55c205">More...</a><br /></td></tr>
<tr class="separator:aa04de06d072895b6df9125338d55c205"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_base_tensor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_base_tensor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor&lt; const void *&gt;</a></td></tr>
<tr class="memitem:aca0044508ebeb3b236a777db828910ed inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#aca0044508ebeb3b236a777db828910ed">BaseTensor</a> ()</td></tr>
<tr class="memdesc:aca0044508ebeb3b236a777db828910ed inherit pub_methods_classarmnn_1_1_base_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Empty (invalid) constructor.  <a href="classarmnn_1_1_base_tensor.xhtml#aca0044508ebeb3b236a777db828910ed">More...</a><br /></td></tr>
<tr class="separator:aca0044508ebeb3b236a777db828910ed inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa84008eafa57252bcb4cc4b2d779a6f4 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#aa84008eafa57252bcb4cc4b2d779a6f4">BaseTensor</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;info, const void * memoryArea)</td></tr>
<tr class="memdesc:aa84008eafa57252bcb4cc4b2d779a6f4 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor from a raw memory pointer.  <a href="classarmnn_1_1_base_tensor.xhtml#aa84008eafa57252bcb4cc4b2d779a6f4">More...</a><br /></td></tr>
<tr class="separator:aa84008eafa57252bcb4cc4b2d779a6f4 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb147b6b672ce7ed642e1d12727e749f inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#afb147b6b672ce7ed642e1d12727e749f">BaseTensor</a> (const <a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a> &amp;other)</td></tr>
<tr class="memdesc:afb147b6b672ce7ed642e1d12727e749f inherit pub_methods_classarmnn_1_1_base_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tensors are copyable.  <a href="classarmnn_1_1_base_tensor.xhtml#afb147b6b672ce7ed642e1d12727e749f">More...</a><br /></td></tr>
<tr class="separator:afb147b6b672ce7ed642e1d12727e749f inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a844fc6ba8f5435b5a200072a3ec163af inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#a844fc6ba8f5435b5a200072a3ec163af">operator=</a> (const <a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a> &amp;)</td></tr>
<tr class="memdesc:a844fc6ba8f5435b5a200072a3ec163af inherit pub_methods_classarmnn_1_1_base_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tensors are copyable.  <a href="classarmnn_1_1_base_tensor.xhtml#a844fc6ba8f5435b5a200072a3ec163af">More...</a><br /></td></tr>
<tr class="separator:a844fc6ba8f5435b5a200072a3ec163af inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8aeddebdcf02e1832b22203c08a6b678 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#a8aeddebdcf02e1832b22203c08a6b678">GetInfo</a> () const</td></tr>
<tr class="separator:a8aeddebdcf02e1832b22203c08a6b678 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2e02564acd2ce6db36de310702a75de inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#ab2e02564acd2ce6db36de310702a75de">GetInfo</a> ()</td></tr>
<tr class="separator:ab2e02564acd2ce6db36de310702a75de inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b5d0f8a24e9d9238f412260a552acf8 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a> () const</td></tr>
<tr class="separator:a8b5d0f8a24e9d9238f412260a552acf8 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a350bcc7d86f7d9333340a0a04be078f6 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#a350bcc7d86f7d9333340a0a04be078f6">GetShape</a> ()</td></tr>
<tr class="separator:a350bcc7d86f7d9333340a0a04be078f6 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea909c7327109228ef618d459015def3 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a> () const</td></tr>
<tr class="separator:aea909c7327109228ef618d459015def3 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a157e27d41e9f6b21f0d3c025fa47dc24 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#a157e27d41e9f6b21f0d3c025fa47dc24">GetNumDimensions</a> () const</td></tr>
<tr class="separator:a157e27d41e9f6b21f0d3c025fa47dc24 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcbdfb544ece4c31d0b37715ad0f3be0 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#abcbdfb544ece4c31d0b37715ad0f3be0">GetNumBytes</a> () const</td></tr>
<tr class="separator:abcbdfb544ece4c31d0b37715ad0f3be0 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8846406ac37fbd2204f0be16ee05d5b7 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a> () const</td></tr>
<tr class="separator:a8846406ac37fbd2204f0be16ee05d5b7 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa81f67ac64f0c249e26499600c45d996 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top">const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#aa81f67ac64f0c249e26499600c45d996">GetMemoryArea</a> () const</td></tr>
<tr class="separator:aa81f67ac64f0c249e26499600c45d996 inherit pub_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classarmnn_1_1_base_tensor"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classarmnn_1_1_base_tensor')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor&lt; const void *&gt;</a></td></tr>
<tr class="memitem:abac025efeffc6e099a365bdb17b5ca3e inherit pro_methods_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#abac025efeffc6e099a365bdb17b5ca3e">~BaseTensor</a> ()</td></tr>
<tr class="memdesc:abac025efeffc6e099a365bdb17b5ca3e inherit pro_methods_classarmnn_1_1_base_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Protected destructor to stop users from making these (could still new one on the heap and then leak it...)  <a href="classarmnn_1_1_base_tensor.xhtml#abac025efeffc6e099a365bdb17b5ca3e">More...</a><br /></td></tr>
<tr class="separator:abac025efeffc6e099a365bdb17b5ca3e inherit pro_methods_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classarmnn_1_1_base_tensor"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classarmnn_1_1_base_tensor')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor&lt; const void *&gt;</a></td></tr>
<tr class="memitem:aba26e5decca8be8786d8a5faf2e06a49 inherit pro_attribs_classarmnn_1_1_base_tensor"><td class="memItemLeft" align="right" valign="top">const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#aba26e5decca8be8786d8a5faf2e06a49">m_MemoryArea</a></td></tr>
<tr class="separator:aba26e5decca8be8786d8a5faf2e06a49 inherit pro_attribs_classarmnn_1_1_base_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A tensor defined by a <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> (shape and data type) and an immutable backing store. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00199">199</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a6b6561873c02b1bd9b7a7ae8dd4a339c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b6561873c02b1bd9b7a7ae8dd4a339c">&#9670;&nbsp;</a></span>ConstTensor() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00204">204</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;: BaseTensor&lt;const void*&gt;() {} <span class="comment">// This needs to be redefined explicitly??</span></div></div><!-- fragment -->
</div>
</div>
<a id="a42aec46c635aa2e38932ca103d2064ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42aec46c635aa2e38932ca103d2064ed">&#9670;&nbsp;</a></span>ConstTensor() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor.xhtml">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Can be implicitly constructed from non-const <a class="el" href="classarmnn_1_1_tensor.xhtml" title="A tensor defined by a TensorInfo (shape and data type) and a mutable backing store. ">Tensor</a>. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00207">207</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;: BaseTensor&lt;const void*&gt;(other.GetInfo(), other.GetMemoryArea()) {}</div></div><!-- fragment -->
</div>
</div>
<a id="aa04de06d072895b6df9125338d55c205"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa04de06d072895b6df9125338d55c205">&#9670;&nbsp;</a></span>ConstTensor() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ContainerType&lt; T, ContainerArgs... &gt; &amp;&#160;</td>
          <td class="paramname"><em>container</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor from a backing container. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">container</td><td>- An stl-like container type which implements data() and size() methods. Presence of data() and size() is a strong indicator of the continuous memory layout of the container, which is a requirement for <a class="el" href="classarmnn_1_1_tensor.xhtml" title="A tensor defined by a TensorInfo (shape and data type) and a mutable backing store. ">Tensor</a> data. <a class="el" href="classarmnn_1_1_tensor.xhtml" title="A tensor defined by a TensorInfo (shape and data type) and a mutable backing store. ">Tensor</a> instances do not claim ownership of referenced memory regions, that is, no attempt will be made by ArmNN to free these memory regions automatically. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00215">215</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_8cpp_source.xhtml#l00214">TensorInfo::GetNumBytes()</a>.</p>
<div class="fragment"><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        : BaseTensor&lt;const void*&gt;(<a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>, container.data())</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">if</span> (container.size() * <span class="keyword">sizeof</span>(T) != <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>.GetNumBytes())</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        {</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keywordflow">throw</span> InvalidArgumentException(<span class="stringliteral">&quot;Container size is not correct&quot;</span>);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    }</div><div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/armnn/<a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:51 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
