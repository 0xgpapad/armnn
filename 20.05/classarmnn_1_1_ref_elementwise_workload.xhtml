<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: RefElementwiseWorkload&lt; Functor, ParentDescriptor, DebugString &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_ref_elementwise_workload.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_ref_elementwise_workload-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">RefElementwiseWorkload&lt; Functor, ParentDescriptor, DebugString &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_ref_elementwise_workload_8hpp_source.xhtml">RefElementwiseWorkload.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for RefElementwiseWorkload&lt; Functor, ParentDescriptor, DebugString &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_ref_elementwise_workload.png" usemap="#RefElementwiseWorkload_3C_20Functor_2C_20ParentDescriptor_2C_20DebugString_20_3E_map" alt=""/>
  <map id="RefElementwiseWorkload_3C_20Functor_2C_20ParentDescriptor_2C_20DebugString_20_3E_map" name="RefElementwiseWorkload_3C_20Functor_2C_20ParentDescriptor_2C_20DebugString_20_3E_map">
<area href="classarmnn_1_1_base_workload.xhtml" alt="BaseWorkload&lt; ParentDescriptor &gt;" shape="rect" coords="0,56,405,80"/>
<area href="classarmnn_1_1_i_workload.xhtml" title="Workload interface to enqueue a layer computation. " alt="IWorkload" shape="rect" coords="0,0,405,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a3856c9de851feee182d4a086c0ce055e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml#a3856c9de851feee182d4a086c0ce055e">InType</a> = typename <a class="el" href="structarmnn_1_1_elementwise_binary_function.xhtml">ElementwiseBinaryFunction</a>&lt; Functor &gt;::<a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml#a3856c9de851feee182d4a086c0ce055e">InType</a></td></tr>
<tr class="separator:a3856c9de851feee182d4a086c0ce055e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ea9af98cc6488e0bd35cd371d14532e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml#a8ea9af98cc6488e0bd35cd371d14532e">OutType</a> = typename <a class="el" href="structarmnn_1_1_elementwise_binary_function.xhtml">ElementwiseBinaryFunction</a>&lt; Functor &gt;::<a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml#a8ea9af98cc6488e0bd35cd371d14532e">OutType</a></td></tr>
<tr class="separator:a8ea9af98cc6488e0bd35cd371d14532e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac83ce3bbc9b9f99eb615261c618ecacb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml#ac83ce3bbc9b9f99eb615261c618ecacb">RefElementwiseWorkload</a> (const ParentDescriptor &amp;descriptor, const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;<a class="el" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>)</td></tr>
<tr class="separator:ac83ce3bbc9b9f99eb615261c618ecacb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81627f96ba06d76e147f7d392a8117ed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml#a81627f96ba06d76e147f7d392a8117ed">PostAllocationConfigure</a> () override</td></tr>
<tr class="separator:a81627f96ba06d76e147f7d392a8117ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae071e8822437c78baea75c3aef3a263a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml#ae071e8822437c78baea75c3aef3a263a">Execute</a> () const override</td></tr>
<tr class="separator:ae071e8822437c78baea75c3aef3a263a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_base_workload"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_base_workload')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_base_workload.xhtml">BaseWorkload&lt; ParentDescriptor &gt;</a></td></tr>
<tr class="memitem:af2ef420610280dc5a661cd3d4836d5a2 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#af2ef420610280dc5a661cd3d4836d5a2">BaseWorkload</a> (const ParentDescriptor &amp;descriptor, const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;info)</td></tr>
<tr class="separator:af2ef420610280dc5a661cd3d4836d5a2 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81627f96ba06d76e147f7d392a8117ed inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a81627f96ba06d76e147f7d392a8117ed">PostAllocationConfigure</a> () override</td></tr>
<tr class="separator:a81627f96ba06d76e147f7d392a8117ed inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a965cf380c7adf547d0f14b3f6d1da249 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">const ParentDescriptor &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a965cf380c7adf547d0f14b3f6d1da249">GetData</a> () const</td></tr>
<tr class="separator:a965cf380c7adf547d0f14b3f6d1da249 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29c2c6dd77c6fe10674fc6876751cbce inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_guid.xhtml">profiling::ProfilingGuid</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a29c2c6dd77c6fe10674fc6876751cbce">GetGuid</a> () const final</td></tr>
<tr class="separator:a29c2c6dd77c6fe10674fc6876751cbce inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_i_workload"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_i_workload')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_i_workload.xhtml">IWorkload</a></td></tr>
<tr class="memitem:a69c83c02ae8de866bc7a46c49e69c1ba inherit pub_methods_classarmnn_1_1_i_workload"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_workload.xhtml#a69c83c02ae8de866bc7a46c49e69c1ba">~IWorkload</a> ()</td></tr>
<tr class="separator:a69c83c02ae8de866bc7a46c49e69c1ba inherit pub_methods_classarmnn_1_1_i_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab81312bd5e64cbae2803de9f243bdb32 inherit pub_methods_classarmnn_1_1_i_workload"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_workload.xhtml#ab81312bd5e64cbae2803de9f243bdb32">RegisterDebugCallback</a> (const <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">DebugCallbackFunction</a> &amp;)</td></tr>
<tr class="separator:ab81312bd5e64cbae2803de9f243bdb32 inherit pub_methods_classarmnn_1_1_i_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classarmnn_1_1_base_workload"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classarmnn_1_1_base_workload')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classarmnn_1_1_base_workload.xhtml">BaseWorkload&lt; ParentDescriptor &gt;</a></td></tr>
<tr class="memitem:a0a487c549c63319505095b855ea3c195 inherit pro_attribs_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">const ParentDescriptor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a></td></tr>
<tr class="separator:a0a487c549c63319505095b855ea3c195 inherit pro_attribs_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a902044db290170b8467ed4697b7fed24 inherit pro_attribs_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1profiling_1_1_profiling_guid.xhtml">profiling::ProfilingGuid</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a902044db290170b8467ed4697b7fed24">m_Guid</a></td></tr>
<tr class="separator:a902044db290170b8467ed4697b7fed24 inherit pro_attribs_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename Functor, typename ParentDescriptor, typename armnn::StringMapping::Id DebugString&gt;<br />
class armnn::RefElementwiseWorkload&lt; Functor, ParentDescriptor, DebugString &gt;</h3>


<p class="definition">Definition at line <a class="el" href="_ref_elementwise_workload_8hpp_source.xhtml#l00021">21</a> of file <a class="el" href="_ref_elementwise_workload_8hpp_source.xhtml">RefElementwiseWorkload.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a3856c9de851feee182d4a086c0ce055e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3856c9de851feee182d4a086c0ce055e">&#9670;&nbsp;</a></span>InType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml#a3856c9de851feee182d4a086c0ce055e">InType</a> =  typename <a class="el" href="structarmnn_1_1_elementwise_binary_function.xhtml">ElementwiseBinaryFunction</a>&lt;Functor&gt;::<a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml#a3856c9de851feee182d4a086c0ce055e">InType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_elementwise_workload_8hpp_source.xhtml#l00024">24</a> of file <a class="el" href="_ref_elementwise_workload_8hpp_source.xhtml">RefElementwiseWorkload.hpp</a>.</p>

</div>
</div>
<a id="a8ea9af98cc6488e0bd35cd371d14532e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ea9af98cc6488e0bd35cd371d14532e">&#9670;&nbsp;</a></span>OutType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml#a8ea9af98cc6488e0bd35cd371d14532e">OutType</a> =  typename <a class="el" href="structarmnn_1_1_elementwise_binary_function.xhtml">ElementwiseBinaryFunction</a>&lt;Functor&gt;::<a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml#a8ea9af98cc6488e0bd35cd371d14532e">OutType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_elementwise_workload_8hpp_source.xhtml#l00025">25</a> of file <a class="el" href="_ref_elementwise_workload_8hpp_source.xhtml">RefElementwiseWorkload.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac83ce3bbc9b9f99eb615261c618ecacb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac83ce3bbc9b9f99eb615261c618ecacb">&#9670;&nbsp;</a></span>RefElementwiseWorkload()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml">RefElementwiseWorkload</a> </td>
          <td>(</td>
          <td class="paramtype">const ParentDescriptor &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_elementwise_workload_8cpp_source.xhtml#l00021">21</a> of file <a class="el" href="_ref_elementwise_workload_8cpp_source.xhtml">RefElementwiseWorkload.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    : BaseWorkload&lt;ParentDescriptor&gt;(desc, <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>)</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae071e8822437c78baea75c3aef3a263a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae071e8822437c78baea75c3aef3a263a">&#9670;&nbsp;</a></span>Execute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Execute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_workload.xhtml#a72ae00e6604850c8798c5e0d825ee7e4">IWorkload</a>.</p>

<p class="definition">Definition at line <a class="el" href="_ref_elementwise_workload_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="_ref_elementwise_workload_8cpp_source.xhtml">RefElementwiseWorkload.cpp</a>.</p>

<p class="reference">References <a class="el" href="_profiling_8hpp_source.xhtml#l00169">ARMNN_SCOPED_PROFILING_EVENT</a>, <a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::CpuRef</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00088">TensorInfo::GetShape()</a>, <a class="el" href="_ref_workload_utils_8hpp_source.xhtml#l00026">armnn::GetTensorInfo()</a>, <a class="el" href="_string_mapping_8cpp_source.xhtml#l00011">StringMapping::Instance()</a>, <a class="el" href="_workload_8hpp_source.xhtml#l00046">BaseWorkload&lt; ParentDescriptor &gt;::m_Data</a>, <a class="el" href="_string_mapping_8hpp_source.xhtml#l00020">StringMapping::RefAdditionWorkload_Execute</a>, <a class="el" href="_string_mapping_8hpp_source.xhtml#l00021">StringMapping::RefDivisionWorkload_Execute</a>, <a class="el" href="_string_mapping_8hpp_source.xhtml#l00022">StringMapping::RefMaximumWorkload_Execute</a>, <a class="el" href="_string_mapping_8hpp_source.xhtml#l00023">StringMapping::RefMinimumWorkload_Execute</a>, <a class="el" href="_string_mapping_8hpp_source.xhtml#l00024">StringMapping::RefMultiplicationWorkload_Execute</a>, and <a class="el" href="_string_mapping_8hpp_source.xhtml#l00025">StringMapping::RefSubtractionWorkload_Execute</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="_profiling_8hpp.xhtml#a5ccc65e2c464ac05ce311fdae7ede03a">ARMNN_SCOPED_PROFILING_EVENT</a>(<a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">Compute::CpuRef</a>, <a class="code" href="structarmnn_1_1_string_mapping.xhtml#a22e7356b65f6ea09a28e6972ca9bdb23">StringMapping::Instance</a>().Get(DebugString));</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">const</span> TensorInfo&amp; inputInfo0 = <a class="code" href="namespacearmnn.xhtml#a93d269806f34407695dc10f510001c30">GetTensorInfo</a>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.m_Inputs[0]);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">const</span> TensorInfo&amp; inputInfo1 = <a class="code" href="namespacearmnn.xhtml#a93d269806f34407695dc10f510001c30">GetTensorInfo</a>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.m_Inputs[1]);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">const</span> TensorInfo&amp; outputInfo = <a class="code" href="namespacearmnn.xhtml#a93d269806f34407695dc10f510001c30">GetTensorInfo</a>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.m_Outputs[0]);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">const</span> TensorShape&amp; inShape0 = inputInfo0.GetShape();</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">const</span> TensorShape&amp; inShape1 = inputInfo1.GetShape();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">const</span> TensorShape&amp; outShape = outputInfo.GetShape();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    m_Input0-&gt;Reset(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.m_Inputs[0]-&gt;Map());</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    m_Input1-&gt;Reset(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.m_Inputs[1]-&gt;Map());</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    m_Output-&gt;Reset(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.m_Outputs[0]-&gt;Map());</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    ElementwiseBinaryFunction&lt;Functor&gt;(inShape0,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                       inShape1,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                       outShape,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                       *m_Input0,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                       *m_Input1,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                       *m_Output);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64"><div class="ttname"><a href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::Compute::CpuRef</a></div><div class="ttdoc">CPU Execution: Reference C++ kernels. </div></div>
<div class="ttc" id="classarmnn_1_1_base_workload_xhtml_a0a487c549c63319505095b855ea3c195"><div class="ttname"><a href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">armnn::BaseWorkload&lt; ParentDescriptor &gt;::m_Data</a></div><div class="ttdeci">const ParentDescriptor m_Data</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8hpp_source.xhtml#l00046">Workload.hpp:46</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a93d269806f34407695dc10f510001c30"><div class="ttname"><a href="namespacearmnn.xhtml#a93d269806f34407695dc10f510001c30">armnn::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo(const ITensorHandle *tensorHandle)</div><div class="ttdoc">float32 helpers </div><div class="ttdef"><b>Definition:</b> <a href="_ref_workload_utils_8hpp_source.xhtml#l00026">RefWorkloadUtils.hpp:26</a></div></div>
<div class="ttc" id="structarmnn_1_1_string_mapping_xhtml_a22e7356b65f6ea09a28e6972ca9bdb23"><div class="ttname"><a href="structarmnn_1_1_string_mapping.xhtml#a22e7356b65f6ea09a28e6972ca9bdb23">armnn::StringMapping::Instance</a></div><div class="ttdeci">static const StringMapping &amp; Instance()</div><div class="ttdef"><b>Definition:</b> <a href="_string_mapping_8cpp_source.xhtml#l00011">StringMapping.cpp:11</a></div></div>
<div class="ttc" id="_profiling_8hpp_xhtml_a5ccc65e2c464ac05ce311fdae7ede03a"><div class="ttname"><a href="_profiling_8hpp.xhtml#a5ccc65e2c464ac05ce311fdae7ede03a">ARMNN_SCOPED_PROFILING_EVENT</a></div><div class="ttdeci">#define ARMNN_SCOPED_PROFILING_EVENT(backendId, name)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_8hpp_source.xhtml#l00169">Profiling.hpp:169</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a81627f96ba06d76e147f7d392a8117ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81627f96ba06d76e147f7d392a8117ed">&#9670;&nbsp;</a></span>PostAllocationConfigure()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void PostAllocationConfigure </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_workload.xhtml#ab8e9559f02bf8e7cdb73741c9da8d991">IWorkload</a>.</p>

<p class="definition">Definition at line <a class="el" href="_ref_elementwise_workload_8cpp_source.xhtml#l00029">29</a> of file <a class="el" href="_ref_elementwise_workload_8cpp_source.xhtml">RefElementwiseWorkload.cpp</a>.</p>

<p class="reference">References <a class="el" href="_ref_workload_utils_8hpp_source.xhtml#l00026">armnn::GetTensorInfo()</a>, and <a class="el" href="_workload_8hpp_source.xhtml#l00046">BaseWorkload&lt; ParentDescriptor &gt;::m_Data</a>.</p>
<div class="fragment"><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">const</span> TensorInfo&amp; inputInfo0 = <a class="code" href="namespacearmnn.xhtml#a93d269806f34407695dc10f510001c30">GetTensorInfo</a>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.m_Inputs[0]);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">const</span> TensorInfo&amp; inputInfo1 = <a class="code" href="namespacearmnn.xhtml#a93d269806f34407695dc10f510001c30">GetTensorInfo</a>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.m_Inputs[1]);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keyword">const</span> TensorInfo&amp; outputInfo = <a class="code" href="namespacearmnn.xhtml#a93d269806f34407695dc10f510001c30">GetTensorInfo</a>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">m_Data</a>.m_Outputs[0]);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    m_Input0 = MakeDecoder&lt;InType&gt;(inputInfo0);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    m_Input1 = MakeDecoder&lt;InType&gt;(inputInfo1);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    m_Output = MakeEncoder&lt;OutType&gt;(outputInfo);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_base_workload_xhtml_a0a487c549c63319505095b855ea3c195"><div class="ttname"><a href="classarmnn_1_1_base_workload.xhtml#a0a487c549c63319505095b855ea3c195">armnn::BaseWorkload&lt; ParentDescriptor &gt;::m_Data</a></div><div class="ttdeci">const ParentDescriptor m_Data</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8hpp_source.xhtml#l00046">Workload.hpp:46</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a93d269806f34407695dc10f510001c30"><div class="ttname"><a href="namespacearmnn.xhtml#a93d269806f34407695dc10f510001c30">armnn::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo(const ITensorHandle *tensorHandle)</div><div class="ttdoc">float32 helpers </div><div class="ttdef"><b>Definition:</b> <a href="_ref_workload_utils_8hpp_source.xhtml#l00026">RefWorkloadUtils.hpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/backends/reference/workloads/<a class="el" href="_ref_elementwise_workload_8hpp_source.xhtml">RefElementwiseWorkload.hpp</a></li>
<li>src/backends/reference/workloads/<a class="el" href="_ref_elementwise_workload_8cpp_source.xhtml">RefElementwiseWorkload.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml">RefElementwiseWorkload</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:54 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
