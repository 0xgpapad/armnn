<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/SoftmaxTestImpl.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_softmax_test_impl_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">SoftmaxTestImpl.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_softmax_test_impl_8hpp_source.xhtml">SoftmaxTestImpl.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="_quantize_helper_8hpp_source.xhtml">QuantizeHelper.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_resolve_type_8hpp_source.xhtml">ResolveType.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cpu_tensor_handle_8hpp_source.xhtml">backendsCommon/CpuTensorHandle.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_tensor_copy_utils_8hpp_source.xhtml">backendsCommon/test/TensorCopyUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_workload_test_utils_8hpp_source.xhtml">backendsCommon/test/WorkloadTestUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_tensor_helpers_8hpp_source.xhtml">test/TensorHelpers.hpp</a>&gt;</code><br />
<code>#include &lt;algorithm&gt;</code><br />
</div>
<p><a href="_softmax_test_impl_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a49081ef56cfc5fafad212dfbce4f259b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a49081ef56cfc5fafad212dfbce4f259b">SimpleSoftmaxTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta)</td></tr>
<tr class="separator:a49081ef56cfc5fafad212dfbce4f259b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a493bef3f5fc0d657b0a5fe29e58dcbdf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a493bef3f5fc0d657b0a5fe29e58dcbdf">SimpleAxisSoftmaxTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta, int axis)</td></tr>
<tr class="separator:a493bef3f5fc0d657b0a5fe29e58dcbdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95c728251146e1f5bcddf8bd04927553"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a95c728251146e1f5bcddf8bd04927553">Simple3dSoftmaxTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta)</td></tr>
<tr class="separator:a95c728251146e1f5bcddf8bd04927553"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f0c412bd42fe4ef6b408d463a7a438f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a1f0c412bd42fe4ef6b408d463a7a438f">Simple3dAxisSoftmaxTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta, int axis)</td></tr>
<tr class="separator:a1f0c412bd42fe4ef6b408d463a7a438f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d366093ec6ca27079466c811151665c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a0d366093ec6ca27079466c811151665c">Simple4dSoftmaxTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta)</td></tr>
<tr class="separator:a0d366093ec6ca27079466c811151665c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dc1b7112df501f911a501ad40589215"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a1dc1b7112df501f911a501ad40589215">Simple4dAxisSoftmaxTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta, int axis)</td></tr>
<tr class="separator:a1dc1b7112df501f911a501ad40589215"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae89aa2e8ca6da83261a62781ad26352d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#ae89aa2e8ca6da83261a62781ad26352d">SimpleSoftmaxUint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta)</td></tr>
<tr class="separator:ae89aa2e8ca6da83261a62781ad26352d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2363ddc02a7035b224ab4bbc548c7e35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a2363ddc02a7035b224ab4bbc548c7e35">Simple3dSoftmaxUint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta)</td></tr>
<tr class="separator:a2363ddc02a7035b224ab4bbc548c7e35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbe2d209a74d323f9243c1943dfd429e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#abbe2d209a74d323f9243c1943dfd429e">Simple4dSoftmaxUint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta)</td></tr>
<tr class="separator:abbe2d209a74d323f9243c1943dfd429e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28b9861c52ee758d11db282794b21306"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; <a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a28b9861c52ee758d11db282794b21306">SimpleSoftmaxFloat16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta)</td></tr>
<tr class="separator:a28b9861c52ee758d11db282794b21306"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c83aa074ca45a521e8253ddf61cdeb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; <a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a2c83aa074ca45a521e8253ddf61cdeb2">Simple3dSoftmaxFloat16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta)</td></tr>
<tr class="separator:a2c83aa074ca45a521e8253ddf61cdeb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9457b55b18827c741d53f42e36d4a2d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; <a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a9457b55b18827c741d53f42e36d4a2d1">Simple4dSoftmaxFloat16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta)</td></tr>
<tr class="separator:a9457b55b18827c741d53f42e36d4a2d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55ce19436218d7abbbc53b5f66c2b7fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a55ce19436218d7abbbc53b5f66c2b7fe">SimpleSoftmaxUint16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta)</td></tr>
<tr class="separator:a55ce19436218d7abbbc53b5f66c2b7fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abde790042baa52b75247c30559840cbf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#abde790042baa52b75247c30559840cbf">Simple3dSoftmaxUint16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta)</td></tr>
<tr class="separator:abde790042baa52b75247c30559840cbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a418bae8de268bfed7d215c884c1373ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a418bae8de268bfed7d215c884c1373ea">Simple4dSoftmaxUint16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, float beta)</td></tr>
<tr class="separator:a418bae8de268bfed7d215c884c1373ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19eddd116e2b25fe1e3f5dabe7811881"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a19eddd116e2b25fe1e3f5dabe7811881">CompareSoftmaxTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, <a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;refWorkloadFactory, float beta)</td></tr>
<tr class="separator:a19eddd116e2b25fe1e3f5dabe7811881"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e109a180e36e8184f3e6193110ce709"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_softmax_test_impl_8cpp.xhtml#a6e109a180e36e8184f3e6193110ce709">CompareSoftmaxUint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, <a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;refWorkloadFactory, float beta)</td></tr>
<tr class="separator:a6e109a180e36e8184f3e6193110ce709"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a19eddd116e2b25fe1e3f5dabe7811881"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19eddd116e2b25fe1e3f5dabe7811881">&#9670;&nbsp;</a></span>CompareSoftmaxTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float,2&gt; CompareSoftmaxTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refWorkloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00690">690</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;{</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    <span class="keywordflow">return</span> CompareSoftmaxTestImpl&lt;armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;        workloadFactory, memoryManager, refWorkloadFactory, beta);</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a6e109a180e36e8184f3e6193110ce709"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e109a180e36e8184f3e6193110ce709">&#9670;&nbsp;</a></span>CompareSoftmaxUint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t,2&gt; CompareSoftmaxUint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refWorkloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00700">700</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;{</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    <span class="keywordflow">return</span> CompareSoftmaxTestImpl&lt;armnn::DataType::QAsymmU8&gt;(</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        workloadFactory, memoryManager, refWorkloadFactory, beta);</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1f0c412bd42fe4ef6b408d463a7a438f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f0c412bd42fe4ef6b408d463a7a438f">&#9670;&nbsp;</a></span>Simple3dAxisSoftmaxTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float,3&gt; Simple3dAxisSoftmaxTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>axis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00331">331</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;{</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    std::vector&lt;float&gt; inputData;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    std::vector&lt;float&gt; outputData;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keywordflow">switch</span> (axis)</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    {</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keywordflow">case</span> -3:</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        {</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            inputShape = {5, 2, 2};</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            inputData =</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                    {</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                            17.0f, -1.0f, 17.0f, -1.0f, 16.0f, -2.0f, 16.0f, -2.0f, 15.0f, -3.0f,</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                            15.0f, -3.0f, 14.0f, -4.0f, 14.0f, -4.0f, 1.0f, -17.0f, 1.0f, -17.0f</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                    };</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            outputData =</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                    {</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                            0.643914213228014f, 0.643914213228014f, 0.643914213228014f, 0.643914213228014f,</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                            0.236882800924671f,</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                            0.236882800924671f, 0.236882800924671f, 0.236882800924671f, 0.087144312427294f,</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                            0.087144312427294f,</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                            0.087144312427294f, 0.087144312427294f, 0.032058600957022f, 0.032058600957022f,</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                            0.032058600957022f,</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                            0.032058600957022f, 7.246299848982885e-08f, 7.246299848982885e-08f, 7.246299848982885e-08f,</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                            7.246299848982885e-08f</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                    };</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        }</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keywordflow">case</span> -2:</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        {</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            inputShape = {2, 5, 2};</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            inputData =</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                    {</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                            17.0f, -1.0f, 16.0f, -2.0f, 15.0f, -3.0f, 14.0f, -4.0f, 1.0f, -17.0f,</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                            17.0f, -1.0f, 16.0f, -2.0f, 15.0f, -3.0f, 14.0f, -4.0f, 1.0f, -17.0f</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                    };</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            outputData =</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                    {</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                            0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                            0.087144312427294f,</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                            0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                            0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                            0.087144312427294f,</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                            0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                            7.246299848982885e-08f</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                    };</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        }</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keywordflow">case</span> -1:</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        {</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            inputShape = {2, 2, 5};</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            inputData =</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                    {</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                            17.0f, 16.0f, 15.0f, 14.0f, 1.0f, -1.0f, -2.0f, -3.0f, -4.0f, -17.0f,</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                            17.0f, 16.0f, 15.0f, 14.0f, 1.0f, -1.0f, -2.0f, -3.0f, -4.0f, -17.0f</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                    };</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            outputData =</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                    {</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                            0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                            0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                            0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                            0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                            7.246299848982885e-08f</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                    };</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        }</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    }</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keywordflow">return</span> Simple3dSoftmaxTestImpl&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, beta,</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                                                             inputShape, outputData, inputData, axis);</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2c83aa074ca45a521e8253ddf61cdeb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c83aa074ca45a521e8253ddf61cdeb2">&#9670;&nbsp;</a></span>Simple3dSoftmaxFloat16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;<a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>,3&gt; Simple3dSoftmaxFloat16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00641">641</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;{</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    Simple3dSoftmaxOutputData data;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <span class="keywordflow">return</span> Simple3dSoftmaxTestImpl&lt;armnn::DataType::Float16&gt;(workloadFactory, memoryManager, beta,</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                                                             data.inputShape, data.outputData, data.inputData);</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a95c728251146e1f5bcddf8bd04927553"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95c728251146e1f5bcddf8bd04927553">&#9670;&nbsp;</a></span>Simple3dSoftmaxTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float,3&gt; Simple3dSoftmaxTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00321">321</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;{</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    Simple3dSoftmaxOutputData data;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordflow">return</span> Simple3dSoftmaxTestImpl&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, beta,</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                                                             data.inputShape, data.outputData, data.inputData);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="abde790042baa52b75247c30559840cbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abde790042baa52b75247c30559840cbf">&#9670;&nbsp;</a></span>Simple3dSoftmaxUint16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t,3&gt; Simple3dSoftmaxUint16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00669">669</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;{</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    Simple3dSoftmaxOutputData data;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <span class="keywordflow">return</span> Simple3dSoftmaxTestImpl&lt;armnn::DataType::QSymmS16&gt;(workloadFactory, memoryManager, beta,</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                                                                     data.inputShape, data.outputData, data.inputData);</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a2363ddc02a7035b224ab4bbc548c7e35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2363ddc02a7035b224ab4bbc548c7e35">&#9670;&nbsp;</a></span>Simple3dSoftmaxUint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t,3&gt; Simple3dSoftmaxUint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00607">607</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;{</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    Simple3dSoftmaxOutputData data;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    <span class="keywordflow">return</span> Simple3dSoftmaxTestImpl&lt;armnn::DataType::QAsymmU8&gt;(</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        workloadFactory,</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        memoryManager,</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        beta,</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        data.inputShape,</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        data.outputData,</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        data.inputData);</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1dc1b7112df501f911a501ad40589215"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1dc1b7112df501f911a501ad40589215">&#9670;&nbsp;</a></span>Simple4dAxisSoftmaxTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float,4&gt; Simple4dAxisSoftmaxTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>axis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00435">435</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;{</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    std::vector&lt;float&gt; inputData;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    std::vector&lt;float&gt; outputData;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <span class="keywordflow">switch</span> (axis)</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    {</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keywordflow">case</span> -4:</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        {</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            inputShape = {5, 2, 2, 2};</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            inputData =</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                    {</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                            17.0f, -1.0f, 17.0f, -1.0f, 17.0f, -1.0f, 17.0f, -1.0f, 16.0f, -2.0f,</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                            16.0f, -2.0f, 16.0f, -2.0f, 16.0f, -2.0f, 15.0f, -3.0f, 15.0f, -3.0f,</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                            15.0f, -3.0f, 15.0f, -3.0f, 14.0f, -4.0f, 14.0f, -4.0f, 14.0f, -4.0f,</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                            14.0f, -4.0f, 1.0f, -17.0f, 1.0f, -17.0f, 1.0f, -17.0f, 1.0f, -17.0f</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                    };</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            outputData =</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                    {</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                            0.643914213228014f, 0.643914213228014f, 0.643914213228014f, 0.643914213228014f,</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                            0.643914213228014f,</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                            0.643914213228014f, 0.643914213228014f, 0.643914213228014f, 0.236882800924671f,</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                            0.236882800924671f,</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                            0.236882800924671f, 0.236882800924671f, 0.236882800924671f, 0.236882800924671f,</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                            0.236882800924671f,</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                            0.236882800924671f, 0.087144312427294f, 0.087144312427294f, 0.087144312427294f,</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                            0.087144312427294f,</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                            0.087144312427294f, 0.087144312427294f, 0.087144312427294f, 0.087144312427294f,</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                            0.032058600957022f,</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                            0.032058600957022f, 0.032058600957022f, 0.032058600957022f, 0.032058600957022f,</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                            0.032058600957022f,</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                            0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f, 7.246299848982885e-08f,</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                            7.246299848982885e-08f, 7.246299848982885e-08f, 7.246299848982885e-08f,</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                            7.246299848982885e-08f, 7.246299848982885e-08f</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                    };</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        }</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="keywordflow">case</span> -3:</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        {</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            inputShape = {2, 5, 2, 2};</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            inputData =</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                    {</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                            17.0f, -1.0f, 17.0f, -1.0f, 16.0f, -2.0f, 16.0f, -2.0f, 15.0f, -3.0f,</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                            15.0f, -3.0f, 14.0f, -4.0f, 14.0f, -4.0f, 1.0f, -17.0f, 1.0f, -17.0f,</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                            17.0f, -1.0f, 17.0f, -1.0f, 16.0f, -2.0f, 16.0f, -2.0f, 15.0f, -3.0f,</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                            15.0f, -3.0f, 14.0f, -4.0f, 14.0f, -4.0f, 1.0f, -17.0f, 1.0f, -17.0f</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                    };</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            outputData =</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                    {</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                            0.643914213228014f, 0.643914213228014f, 0.643914213228014f, 0.643914213228014f,</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                            0.236882800924671f,</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                            0.236882800924671f, 0.236882800924671f, 0.236882800924671f, 0.087144312427294f,</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                            0.087144312427294f,</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                            0.087144312427294f, 0.087144312427294f, 0.032058600957022f, 0.032058600957022f,</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                            0.032058600957022f,</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                            0.032058600957022f, 7.246299848982885e-08f, 7.246299848982885e-08f, 7.246299848982885e-08f,</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                            0.643914213228014f, 0.643914213228014f, 0.643914213228014f, 0.643914213228014f,</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                            0.236882800924671f,</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                            0.236882800924671f, 0.236882800924671f, 0.236882800924671f, 0.087144312427294f,</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                            0.087144312427294f,</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                            0.087144312427294f, 0.087144312427294f, 0.032058600957022f, 0.032058600957022f,</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                            0.032058600957022f,</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                            0.032058600957022f, 7.246299848982885e-08f, 7.246299848982885e-08f, 7.246299848982885e-08f,</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                            7.246299848982885e-08f</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                    };</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        }</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="keywordflow">case</span> -2:</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        {</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        inputShape = {2, 2, 5, 2};</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        inputData =</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                {</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                        17.0f, -1.0f, 16.0f, -2.0f, 15.0f, -3.0f, 14.0f, -4.0f, 1.0f, -17.0f,</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                        17.0f, -1.0f, 16.0f, -2.0f, 15.0f, -3.0f, 14.0f, -4.0f, 1.0f, -17.0f,</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                        17.0f, -1.0f, 16.0f, -2.0f, 15.0f, -3.0f, 14.0f, -4.0f, 1.0f, -17.0f,</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                        17.0f, -1.0f, 16.0f, -2.0f, 15.0f, -3.0f, 14.0f, -4.0f, 1.0f, -17.0f</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                };</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        outputData =</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                {</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                        0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                        0.087144312427294f,</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                        7.246299848982885e-08f,</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                        0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                        0.087144312427294f,</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                        7.246299848982885e-08f,</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                        0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                        0.087144312427294f,</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                        7.246299848982885e-08f,</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                        0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                        0.087144312427294f,</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                        7.246299848982885e-08f</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                };</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        }</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <span class="keywordflow">case</span> -1:</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keywordflow">case</span> 3:</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        {</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;            inputShape = {2, 2, 2, 5};</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            inputData =</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                    {</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                            17.0f, 16.0f, 15.0f, 14.0f, 1.0f, -1.0f, -2.0f, -3.0f, -4.0f, -17.0f,</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                            17.0f, 16.0f, 15.0f, 14.0f, 1.0f, -1.0f, -2.0f, -3.0f, -4.0f, -17.0f,</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                            17.0f, 16.0f, 15.0f, 14.0f, 1.0f, -1.0f, -2.0f, -3.0f, -4.0f, -17.0f,</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                            17.0f, 16.0f, 15.0f, 14.0f, 1.0f, -1.0f, -2.0f, -3.0f, -4.0f, -17.0f</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                    };</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;            outputData =</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                    {</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                            0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                            0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                            0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                            0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                            0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                            0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                            0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                            7.246299848982885e-08f,</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                            0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                            7.246299848982885e-08f</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                    };</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        }</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    }</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    <span class="keywordflow">return</span> Simple4dSoftmaxTestImpl&lt;armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        workloadFactory,</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        memoryManager,</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        beta,</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        inputShape,</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        outputData,</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        inputData,</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        axis);</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9457b55b18827c741d53f42e36d4a2d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9457b55b18827c741d53f42e36d4a2d1">&#9670;&nbsp;</a></span>Simple4dSoftmaxFloat16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;<a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>,4&gt; Simple4dSoftmaxFloat16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00651">651</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;{</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    Simple4dSoftmaxData data;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    <span class="keywordflow">return</span> Simple4dSoftmaxTestImpl&lt;armnn::DataType::Float16&gt;(workloadFactory, memoryManager, beta,</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                                                             data.inputShape, data.outputData, data.inputData);</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0d366093ec6ca27079466c811151665c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d366093ec6ca27079466c811151665c">&#9670;&nbsp;</a></span>Simple4dSoftmaxTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float,4&gt; Simple4dSoftmaxTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00425">425</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;{</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    Simple4dSoftmaxData data;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="keywordflow">return</span> Simple4dSoftmaxTestImpl&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, beta, data.inputShape,</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                                                             data.outputData, data.inputData);</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a418bae8de268bfed7d215c884c1373ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a418bae8de268bfed7d215c884c1373ea">&#9670;&nbsp;</a></span>Simple4dSoftmaxUint16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t,4&gt; Simple4dSoftmaxUint16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00679">679</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;{</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    Simple4dSoftmaxData data;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    <span class="keywordflow">return</span> Simple4dSoftmaxTestImpl&lt;armnn::DataType::QSymmS16&gt;(workloadFactory, memoryManager, beta,</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                                                                     data.inputShape, data.outputData, data.inputData);</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="abbe2d209a74d323f9243c1943dfd429e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbe2d209a74d323f9243c1943dfd429e">&#9670;&nbsp;</a></span>Simple4dSoftmaxUint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t,4&gt; Simple4dSoftmaxUint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00622">622</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;{</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    Simple4dSoftmaxData data;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    <span class="keywordflow">return</span> Simple4dSoftmaxTestImpl&lt;armnn::DataType::QAsymmU8&gt;(workloadFactory, memoryManager, beta,</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                                                                     data.inputShape, data.outputData, data.inputData);</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a493bef3f5fc0d657b0a5fe29e58dcbdf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a493bef3f5fc0d657b0a5fe29e58dcbdf">&#9670;&nbsp;</a></span>SimpleAxisSoftmaxTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float,2&gt; SimpleAxisSoftmaxTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>axis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00312">312</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;{</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordflow">return</span> SimpleSoftmaxTestImpl&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, beta, axis);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a28b9861c52ee758d11db282794b21306"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28b9861c52ee758d11db282794b21306">&#9670;&nbsp;</a></span>SimpleSoftmaxFloat16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;<a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>,2&gt; SimpleSoftmaxFloat16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00633">633</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;{</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    <span class="keywordflow">return</span> SimpleSoftmaxTestImpl&lt;armnn::DataType::Float16&gt;(workloadFactory, memoryManager, beta);</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a49081ef56cfc5fafad212dfbce4f259b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49081ef56cfc5fafad212dfbce4f259b">&#9670;&nbsp;</a></span>SimpleSoftmaxTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float,2&gt; SimpleSoftmaxTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00304">304</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;{</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keywordflow">return</span> SimpleSoftmaxTestImpl&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, beta);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a55ce19436218d7abbbc53b5f66c2b7fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55ce19436218d7abbbc53b5f66c2b7fe">&#9670;&nbsp;</a></span>SimpleSoftmaxUint16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t,2&gt; SimpleSoftmaxUint16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00661">661</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;{</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    <span class="keywordflow">return</span> SimpleSoftmaxTestImpl&lt;armnn::DataType::QSymmS16&gt;(workloadFactory, memoryManager, beta);</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae89aa2e8ca6da83261a62781ad26352d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae89aa2e8ca6da83261a62781ad26352d">&#9670;&nbsp;</a></span>SimpleSoftmaxUint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t,2&gt; SimpleSoftmaxUint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_softmax_test_impl_8cpp_source.xhtml#l00599">599</a> of file <a class="el" href="_softmax_test_impl_8cpp_source.xhtml">SoftmaxTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;{</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    <span class="keywordflow">return</span> SimpleSoftmaxTestImpl&lt;armnn::DataType::QAsymmU8&gt;(workloadFactory, memoryManager, beta);</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_softmax_test_impl_8cpp.xhtml">SoftmaxTestImpl.cpp</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:48 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
