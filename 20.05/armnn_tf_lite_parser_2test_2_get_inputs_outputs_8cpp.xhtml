<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnnTfLiteParser/test/GetInputsOutputs.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">GetInputsOutputs.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;boost/test/unit_test.hpp&gt;</code><br />
<code>#include &quot;<a class="el" href="_parser_flatbuffers_fixture_8hpp_source.xhtml">ParserFlatbuffersFixture.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_tf_lite_parser_8hpp_source.xhtml">../TfLiteParser.hpp</a>&quot;</code><br />
</div>
<p><a href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ab8262a23f76732432e30196fa09a5d4d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#ab8262a23f76732432e30196fa09a5d4d">ModelPtr</a> = TfLiteParser::ModelPtr</td></tr>
<tr class="separator:ab8262a23f76732432e30196fa09a5d4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a335c7484ecd7511ded76bacd7a5ae10e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a335c7484ecd7511ded76bacd7a5ae10e">BOOST_FIXTURE_TEST_CASE</a> (GetEmptyInputs, GetEmptyInputsOutputsFixture)</td></tr>
<tr class="separator:a335c7484ecd7511ded76bacd7a5ae10e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5a78eaf3349aa3d92b8e52573702bbc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#ab5a78eaf3349aa3d92b8e52573702bbc">BOOST_FIXTURE_TEST_CASE</a> (GetEmptyOutputs, GetEmptyInputsOutputsFixture)</td></tr>
<tr class="separator:ab5a78eaf3349aa3d92b8e52573702bbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a098c20531aa4520e3d89e302b4699cb7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a098c20531aa4520e3d89e302b4699cb7">BOOST_FIXTURE_TEST_CASE</a> (GetInputs, GetInputsOutputsFixture)</td></tr>
<tr class="separator:a098c20531aa4520e3d89e302b4699cb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e76c0b0b048ec93fc449a3dce7a8200"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a1e76c0b0b048ec93fc449a3dce7a8200">BOOST_FIXTURE_TEST_CASE</a> (GetOutputs, GetInputsOutputsFixture)</td></tr>
<tr class="separator:a1e76c0b0b048ec93fc449a3dce7a8200"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c501913b832b10ff30b12053c586c46"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a1c501913b832b10ff30b12053c586c46">BOOST_FIXTURE_TEST_CASE</a> (GetInputsMultipleInputs, GetInputsOutputsFixture)</td></tr>
<tr class="separator:a1c501913b832b10ff30b12053c586c46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc9175ff0d037236039f6de903412153"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#acc9175ff0d037236039f6de903412153">BOOST_FIXTURE_TEST_CASE</a> (GetOutputs2, GetInputsOutputsFixture)</td></tr>
<tr class="separator:acc9175ff0d037236039f6de903412153"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afef83a0459066ae76b0cd1ec5ae29687"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#afef83a0459066ae76b0cd1ec5ae29687">BOOST_AUTO_TEST_CASE</a> (GetInputsNullModel)</td></tr>
<tr class="separator:afef83a0459066ae76b0cd1ec5ae29687"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace561296442c03f91bc6ddea34e4265a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#ace561296442c03f91bc6ddea34e4265a">BOOST_AUTO_TEST_CASE</a> (GetOutputsNullModel)</td></tr>
<tr class="separator:ace561296442c03f91bc6ddea34e4265a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5efb75e14733af13b8db287c346cbbb3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a5efb75e14733af13b8db287c346cbbb3">BOOST_FIXTURE_TEST_CASE</a> (GetInputsInvalidSubgraph, GetInputsOutputsFixture)</td></tr>
<tr class="separator:a5efb75e14733af13b8db287c346cbbb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a702114bf6f59f0b397a5dc26383b6f6d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a702114bf6f59f0b397a5dc26383b6f6d">BOOST_FIXTURE_TEST_CASE</a> (GetOutputsInvalidSubgraph, GetInputsOutputsFixture)</td></tr>
<tr class="separator:a702114bf6f59f0b397a5dc26383b6f6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe09776bdc4df4e737426d904f4559bb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#afe09776bdc4df4e737426d904f4559bb">BOOST_FIXTURE_TEST_CASE</a> (GetInputsInvalidOperator, GetInputsOutputsFixture)</td></tr>
<tr class="separator:afe09776bdc4df4e737426d904f4559bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f5ca0db2c69d69ace0a82fb6210d2e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a5f5ca0db2c69d69ace0a82fb6210d2e0">BOOST_FIXTURE_TEST_CASE</a> (GetOutputsInvalidOperator, GetInputsOutputsFixture)</td></tr>
<tr class="separator:a5f5ca0db2c69d69ace0a82fb6210d2e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ab8262a23f76732432e30196fa09a5d4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8262a23f76732432e30196fa09a5d4d">&#9670;&nbsp;</a></span>ModelPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">ModelPtr</a> =  TfLiteParser::ModelPtr</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00010">10</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="afef83a0459066ae76b0cd1ec5ae29687"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afef83a0459066ae76b0cd1ec5ae29687">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">GetInputsNullModel&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00205">205</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;{</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    BOOST_CHECK_THROW(TfLiteParser::GetInputs(<span class="keyword">nullptr</span>, 0, 0), <a class="code" href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a>);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_parse_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00092">Exceptions.hpp:92</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ace561296442c03f91bc6ddea34e4265a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace561296442c03f91bc6ddea34e4265a">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">GetOutputsNullModel&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00210">210</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;{</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    BOOST_CHECK_THROW(TfLiteParser::GetOutputs(<span class="keyword">nullptr</span>, 0, 0), <a class="code" href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a>);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_parse_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00092">Exceptions.hpp:92</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a335c7484ecd7511ded76bacd7a5ae10e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a335c7484ecd7511ded76bacd7a5ae10e">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[1/10]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">GetEmptyInputs&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GetEmptyInputsOutputsFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00153">153</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;{</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">TfLiteParser::ModelPtr</a> model = TfLiteParser::LoadModelFromBinary(m_GraphBinary.data(), m_GraphBinary.size());</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    TfLiteParser::TensorRawPtrVector tensors = TfLiteParser::GetInputs(model, 0, 0);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    BOOST_CHECK_EQUAL(0, tensors.size());</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div><div class="ttc" id="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_xhtml_a503ae4f55dae1486e53978657083b35d"><div class="ttname"><a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">ModelPtr</a></div><div class="ttdeci">std::unique_ptr&lt; onnx::ModelProto &gt; ModelPtr</div><div class="ttdef"><b>Definition:</b> <a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00012">GetInputsOutputs.cpp:12</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab5a78eaf3349aa3d92b8e52573702bbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5a78eaf3349aa3d92b8e52573702bbc">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[2/10]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">GetEmptyOutputs&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GetEmptyInputsOutputsFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00160">160</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;{</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">TfLiteParser::ModelPtr</a> model = TfLiteParser::LoadModelFromBinary(m_GraphBinary.data(), m_GraphBinary.size());</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    TfLiteParser::TensorRawPtrVector tensors = TfLiteParser::GetOutputs(model, 0, 0);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    BOOST_CHECK_EQUAL(0, tensors.size());</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div><div class="ttc" id="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_xhtml_a503ae4f55dae1486e53978657083b35d"><div class="ttname"><a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">ModelPtr</a></div><div class="ttdeci">std::unique_ptr&lt; onnx::ModelProto &gt; ModelPtr</div><div class="ttdef"><b>Definition:</b> <a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00012">GetInputsOutputs.cpp:12</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a098c20531aa4520e3d89e302b4699cb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a098c20531aa4520e3d89e302b4699cb7">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[3/10]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">GetInputs&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GetInputsOutputsFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00167">167</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;{</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">TfLiteParser::ModelPtr</a> model = TfLiteParser::LoadModelFromBinary(m_GraphBinary.data(), m_GraphBinary.size());</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    TfLiteParser::TensorRawPtrVector tensors = TfLiteParser::GetInputs(model, 0, 0);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    BOOST_CHECK_EQUAL(1, tensors.size());</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    CheckTensors(tensors[0], 4, { 1, 2, 2, 1 }, tflite::TensorType::TensorType_UINT8, 1,</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                      <span class="stringliteral">&quot;InputTensor&quot;</span>, { -1.2f }, { 25.5f }, { 0.25f }, { 10 });</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;}</div><div class="ttc" id="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_xhtml_a503ae4f55dae1486e53978657083b35d"><div class="ttname"><a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">ModelPtr</a></div><div class="ttdeci">std::unique_ptr&lt; onnx::ModelProto &gt; ModelPtr</div><div class="ttdef"><b>Definition:</b> <a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00012">GetInputsOutputs.cpp:12</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a1e76c0b0b048ec93fc449a3dce7a8200"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e76c0b0b048ec93fc449a3dce7a8200">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[4/10]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">GetOutputs&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GetInputsOutputsFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00176">176</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;{</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">TfLiteParser::ModelPtr</a> model = TfLiteParser::LoadModelFromBinary(m_GraphBinary.data(), m_GraphBinary.size());</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    TfLiteParser::TensorRawPtrVector tensors = TfLiteParser::GetOutputs(model, 0, 0);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    BOOST_CHECK_EQUAL(1, tensors.size());</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    CheckTensors(tensors[0], 4, { 1, 1, 1, 1 }, tflite::TensorType::TensorType_UINT8, 0,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                      <span class="stringliteral">&quot;OutputTensor&quot;</span>, { 0.0f }, { 255.0f }, { 1.0f }, { 0 });</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div><div class="ttc" id="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_xhtml_a503ae4f55dae1486e53978657083b35d"><div class="ttname"><a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">ModelPtr</a></div><div class="ttdeci">std::unique_ptr&lt; onnx::ModelProto &gt; ModelPtr</div><div class="ttdef"><b>Definition:</b> <a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00012">GetInputsOutputs.cpp:12</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a1c501913b832b10ff30b12053c586c46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c501913b832b10ff30b12053c586c46">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[5/10]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">GetInputsMultipleInputs&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GetInputsOutputsFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00185">185</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;{</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">TfLiteParser::ModelPtr</a> model = TfLiteParser::LoadModelFromBinary(m_GraphBinary.data(), m_GraphBinary.size());</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    TfLiteParser::TensorRawPtrVector tensors = TfLiteParser::GetInputs(model, 1, 0);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    BOOST_CHECK_EQUAL(2, tensors.size());</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    CheckTensors(tensors[0], 4, { 1, 3, 3, 1 }, tflite::TensorType::TensorType_UINT8, 0,</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                      <span class="stringliteral">&quot;ConvInputTensor&quot;</span>, { }, { }, { 1.0f }, { 0 });</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    CheckTensors(tensors[1], 4, { 1, 3, 3, 1 }, tflite::TensorType::TensorType_UINT8, 2,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                      <span class="stringliteral">&quot;filterTensor&quot;</span>, { 0.0f }, { 255.0f }, { 1.0f }, { 0 });</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;}</div><div class="ttc" id="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_xhtml_a503ae4f55dae1486e53978657083b35d"><div class="ttname"><a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">ModelPtr</a></div><div class="ttdeci">std::unique_ptr&lt; onnx::ModelProto &gt; ModelPtr</div><div class="ttdef"><b>Definition:</b> <a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00012">GetInputsOutputs.cpp:12</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acc9175ff0d037236039f6de903412153"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc9175ff0d037236039f6de903412153">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[6/10]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">GetOutputs2&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GetInputsOutputsFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00196">196</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;{</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">TfLiteParser::ModelPtr</a> model = TfLiteParser::LoadModelFromBinary(m_GraphBinary.data(), m_GraphBinary.size());</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    TfLiteParser::TensorRawPtrVector tensors = TfLiteParser::GetOutputs(model, 1, 0);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    BOOST_CHECK_EQUAL(1, tensors.size());</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    CheckTensors(tensors[0], 4, { 1, 1, 1, 1 }, tflite::TensorType::TensorType_UINT8, 1,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                      <span class="stringliteral">&quot;ConvOutputTensor&quot;</span>, { 0.0f }, { 511.0f }, { 2.0f }, { 0 });</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;}</div><div class="ttc" id="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_xhtml_a503ae4f55dae1486e53978657083b35d"><div class="ttname"><a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">ModelPtr</a></div><div class="ttdeci">std::unique_ptr&lt; onnx::ModelProto &gt; ModelPtr</div><div class="ttdef"><b>Definition:</b> <a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00012">GetInputsOutputs.cpp:12</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5efb75e14733af13b8db287c346cbbb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5efb75e14733af13b8db287c346cbbb3">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[7/10]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">GetInputsInvalidSubgraph&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GetInputsOutputsFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00215">215</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;{</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <a class="code" href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">TfLiteParser::ModelPtr</a> model = TfLiteParser::LoadModelFromBinary(m_GraphBinary.data(), m_GraphBinary.size());</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    BOOST_CHECK_THROW(TfLiteParser::GetInputs(model, 2, 0), <a class="code" href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a>);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;}</div><div class="ttc" id="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_xhtml_a503ae4f55dae1486e53978657083b35d"><div class="ttname"><a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">ModelPtr</a></div><div class="ttdeci">std::unique_ptr&lt; onnx::ModelProto &gt; ModelPtr</div><div class="ttdef"><b>Definition:</b> <a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00012">GetInputsOutputs.cpp:12</a></div></div>
<div class="ttc" id="classarmnn_1_1_parse_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00092">Exceptions.hpp:92</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a702114bf6f59f0b397a5dc26383b6f6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a702114bf6f59f0b397a5dc26383b6f6d">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[8/10]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">GetOutputsInvalidSubgraph&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GetInputsOutputsFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00221">221</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;{</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <a class="code" href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">TfLiteParser::ModelPtr</a> model = TfLiteParser::LoadModelFromBinary(m_GraphBinary.data(), m_GraphBinary.size());</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    BOOST_CHECK_THROW(TfLiteParser::GetOutputs(model, 2, 0), <a class="code" href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a>);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;}</div><div class="ttc" id="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_xhtml_a503ae4f55dae1486e53978657083b35d"><div class="ttname"><a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">ModelPtr</a></div><div class="ttdeci">std::unique_ptr&lt; onnx::ModelProto &gt; ModelPtr</div><div class="ttdef"><b>Definition:</b> <a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00012">GetInputsOutputs.cpp:12</a></div></div>
<div class="ttc" id="classarmnn_1_1_parse_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00092">Exceptions.hpp:92</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afe09776bdc4df4e737426d904f4559bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe09776bdc4df4e737426d904f4559bb">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[9/10]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">GetInputsInvalidOperator&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GetInputsOutputsFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00227">227</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;{</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <a class="code" href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">TfLiteParser::ModelPtr</a> model = TfLiteParser::LoadModelFromBinary(m_GraphBinary.data(), m_GraphBinary.size());</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    BOOST_CHECK_THROW(TfLiteParser::GetInputs(model, 0, 1), <a class="code" href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a>);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;}</div><div class="ttc" id="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_xhtml_a503ae4f55dae1486e53978657083b35d"><div class="ttname"><a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">ModelPtr</a></div><div class="ttdeci">std::unique_ptr&lt; onnx::ModelProto &gt; ModelPtr</div><div class="ttdef"><b>Definition:</b> <a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00012">GetInputsOutputs.cpp:12</a></div></div>
<div class="ttc" id="classarmnn_1_1_parse_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00092">Exceptions.hpp:92</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5f5ca0db2c69d69ace0a82fb6210d2e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f5ca0db2c69d69ace0a82fb6210d2e0">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[10/10]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">GetOutputsInvalidOperator&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GetInputsOutputsFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00233">233</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml">GetInputsOutputs.cpp</a>.</p>

<p class="reference">References <a class="el" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END()</a>.</p>
<div class="fragment"><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;{</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <a class="code" href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">TfLiteParser::ModelPtr</a> model = TfLiteParser::LoadModelFromBinary(m_GraphBinary.data(), m_GraphBinary.size());</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    BOOST_CHECK_THROW(TfLiteParser::GetOutputs(model, 0, 1), <a class="code" href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a>);</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;}</div><div class="ttc" id="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_xhtml_a503ae4f55dae1486e53978657083b35d"><div class="ttname"><a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp.xhtml#a503ae4f55dae1486e53978657083b35d">ModelPtr</a></div><div class="ttdeci">std::unique_ptr&lt; onnx::ModelProto &gt; ModelPtr</div><div class="ttdef"><b>Definition:</b> <a href="armnn_onnx_parser_2test_2_get_inputs_outputs_8cpp_source.xhtml#l00012">GetInputsOutputs.cpp:12</a></div></div>
<div class="ttc" id="classarmnn_1_1_parse_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00092">Exceptions.hpp:92</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_510324e450b9df55f9aac2d01fae83d8.xhtml">armnnTfLiteParser</a></li><li class="navelem"><a class="el" href="dir_6d8d07609c57029a35488d2120e28fbd.xhtml">test</a></li><li class="navelem"><a class="el" href="armnn_tf_lite_parser_2test_2_get_inputs_outputs_8cpp.xhtml">GetInputsOutputs.cpp</a></li>
    <li class="footer">Generated on Fri May 29 2020 10:20:47 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
