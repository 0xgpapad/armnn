<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: tests/ImageTensorGenerator/ImageTensorGenerator.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_image_tensor_generator_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ImageTensorGenerator.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_image_tensor_generator_8hpp_source.xhtml">ImageTensorGenerator.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_inference_test_image_8hpp_source.xhtml">../InferenceTestImage.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="_logging_8hpp_source.xhtml">armnn/Logging.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_types_utils_8hpp_source.xhtml">armnn/TypesUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_filesystem_8hpp_source.xhtml">Filesystem.hpp</a>&gt;</code><br />
<code>#include &lt;boost/program_options.hpp&gt;</code><br />
<code>#include &lt;boost/variant.hpp&gt;</code><br />
<code>#include &lt;algorithm&gt;</code><br />
<code>#include &lt;fstream&gt;</code><br />
<code>#include &lt;iostream&gt;</code><br />
<code>#include &lt;string&gt;</code><br />
</div>
<p><a href="_image_tensor_generator_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a0ddf1224851353fc92bfbff6f499fa97"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_image_tensor_generator_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a> (int argc, char *argv[])</td></tr>
<tr class="separator:a0ddf1224851353fc92bfbff6f499fa97"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a0ddf1224851353fc92bfbff6f499fa97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ddf1224851353fc92bfbff6f499fa97">&#9670;&nbsp;</a></span>main()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int main </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>argv</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_image_tensor_generator_8cpp_source.xhtml#l00246">246</a> of file <a class="el" href="_image_tensor_generator_8cpp_source.xhtml">ImageTensorGenerator.cpp</a>.</p>

<p class="reference">References <a class="el" href="_logging_8hpp_source.xhtml#l00163">ARMNN_LOG</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_image_tensor_generator_8hpp_source.xhtml#l00039">GetNormalizationParameters()</a>, <a class="el" href="_image_tensor_generator_8hpp_source.xhtml#l00091">PrepareImageTensor&lt; float &gt;()</a>, <a class="el" href="_image_tensor_generator_8hpp_source.xhtml#l00128">PrepareImageTensor&lt; int &gt;()</a>, <a class="el" href="_image_tensor_generator_8hpp_source.xhtml#l00148">PrepareImageTensor&lt; uint8_t &gt;()</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>, <a class="el" href="_exceptions_8cpp_source.xhtml#l00032">Exception::what()</a>, and <a class="el" href="_image_tensor_generator_8hpp_source.xhtml#l00172">WriteImageTensorImpl()</a>.</p>
<div class="fragment"><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;{</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    CommandLineProcessor cmdline;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordflow">if</span> (!cmdline.ProcessCommandLine(argc, argv))</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    {</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keyword">const</span> std::string imagePath(cmdline.GetInputFileName());</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keyword">const</span> std::string outputPath(cmdline.GetOutputFileName());</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keyword">const</span> <a class="code" href="_image_tensor_generator_8hpp.xhtml#a7599848540a5f43e977119c054b3563e">SupportedFrontend</a>&amp; modelFormat(cmdline.GetModelFormat());</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a> outputType(cmdline.GetOutputType());</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> newWidth  = cmdline.GetNewWidth();</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> newHeight = cmdline.GetNewHeight();</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batchSize = 1;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> outputLayout(cmdline.GetLayout());</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">using</span> <a class="code" href="_model_accuracy_checker_test_8cpp.xhtml#a9eb69ebdaf4ceb8014e7c8a540266100">TContainer</a> = boost::variant&lt;std::vector&lt;float&gt;, std::vector&lt;int&gt;, std::vector&lt;uint8_t&gt;&gt;;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    std::vector&lt;TContainer&gt; imageDataContainers;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keyword">const</span> <a class="code" href="struct_normalization_parameters.xhtml">NormalizationParameters</a>&amp; normParams = <a class="code" href="_image_tensor_generator_8hpp.xhtml#a572494250ece8d94b68ea490d0bf46e4">GetNormalizationParameters</a>(modelFormat, outputType);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    {</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">switch</span> (outputType)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        {</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>:</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                imageDataContainers.push_back(<a class="code" href="_image_tensor_generator_8hpp.xhtml#ac1e8e68c74e5d1c8fd19a91a68de3cb7">PrepareImageTensor&lt;int&gt;</a>(</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                    imagePath, newWidth, newHeight, normParams, batchSize, outputLayout));</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                imageDataContainers.push_back(<a class="code" href="_image_tensor_generator_8hpp.xhtml#ac372cd2b257f33f29999217e1d2d8a37">PrepareImageTensor&lt;uint8_t&gt;</a>(</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    imagePath, newWidth, newHeight, normParams, batchSize, outputLayout));</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>:</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                imageDataContainers.push_back(<a class="code" href="_image_tensor_generator_8hpp.xhtml#affacfe95f011fce3b897b2745880f82a">PrepareImageTensor&lt;float&gt;</a>(</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                    imagePath, newWidth, newHeight, normParams, batchSize, outputLayout));</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        }</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    }</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">catch</span> (<span class="keyword">const</span> <a class="code" href="class_inference_test_image_exception.xhtml">InferenceTestImageException</a>&amp; e)</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    {</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(fatal) &lt;&lt; <span class="stringliteral">&quot;Failed to load image file &quot;</span> &lt;&lt; imagePath &lt;&lt; <span class="stringliteral">&quot; with error: &quot;</span> &lt;&lt; e.<a class="code" href="classarmnn_1_1_exception.xhtml#abf843cbb29dec939d0731e491bab6f70">what</a>();</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    }</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    std::ofstream imageTensorFile;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    imageTensorFile.open(outputPath, std::ofstream::out);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">if</span> (imageTensorFile.is_open())</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    {</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        boost::apply_visitor([&amp;imageTensorFile](<span class="keyword">auto</span>&amp;&amp; imageData) { <a class="code" href="_image_tensor_generator_8hpp.xhtml#a292c4c49fc943bfcb7ee1ce1435d4690">WriteImageTensorImpl</a>(imageData, imageTensorFile); },</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                             imageDataContainers[0]);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keywordflow">if</span> (!imageTensorFile)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        {</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(fatal) &lt;&lt; <span class="stringliteral">&quot;Failed to write to output file&quot;</span> &lt;&lt; outputPath;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            imageTensorFile.close();</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        }</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        imageTensorFile.close();</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    }</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(fatal) &lt;&lt; <span class="stringliteral">&quot;Failed to open output file&quot;</span> &lt;&lt; outputPath;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    }</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00049">Types.hpp:49</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="_image_tensor_generator_8hpp_xhtml_a572494250ece8d94b68ea490d0bf46e4"><div class="ttname"><a href="_image_tensor_generator_8hpp.xhtml#a572494250ece8d94b68ea490d0bf46e4">GetNormalizationParameters</a></div><div class="ttdeci">NormalizationParameters GetNormalizationParameters(const SupportedFrontend &amp;modelFormat, const armnn::DataType &amp;outputType)</div><div class="ttdoc">Get normalization parameters. </div><div class="ttdef"><b>Definition:</b> <a href="_image_tensor_generator_8hpp_source.xhtml#l00039">ImageTensorGenerator.hpp:39</a></div></div>
<div class="ttc" id="classarmnn_1_1_exception_xhtml_abf843cbb29dec939d0731e491bab6f70"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml#abf843cbb29dec939d0731e491bab6f70">armnn::Exception::what</a></div><div class="ttdeci">virtual const char * what() const noexcept override</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8cpp_source.xhtml#l00032">Exceptions.cpp:32</a></div></div>
<div class="ttc" id="_logging_8hpp_xhtml_a7b6ad073975f437ec38ca7d20154727f"><div class="ttname"><a href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a></div><div class="ttdeci">#define ARMNN_LOG(severity)</div><div class="ttdef"><b>Definition:</b> <a href="_logging_8hpp_source.xhtml#l00163">Logging.hpp:163</a></div></div>
<div class="ttc" id="_image_tensor_generator_8hpp_xhtml_a292c4c49fc943bfcb7ee1ce1435d4690"><div class="ttname"><a href="_image_tensor_generator_8hpp.xhtml#a292c4c49fc943bfcb7ee1ce1435d4690">WriteImageTensorImpl</a></div><div class="ttdeci">void WriteImageTensorImpl(const std::vector&lt; ElemType &gt; &amp;imageData, std::ofstream &amp;imageTensorFile)</div><div class="ttdoc">Write image tensor to ofstream. </div><div class="ttdef"><b>Definition:</b> <a href="_image_tensor_generator_8hpp_source.xhtml#l00172">ImageTensorGenerator.hpp:172</a></div></div>
<div class="ttc" id="_image_tensor_generator_8hpp_xhtml_ac372cd2b257f33f29999217e1d2d8a37"><div class="ttname"><a href="_image_tensor_generator_8hpp.xhtml#ac372cd2b257f33f29999217e1d2d8a37">PrepareImageTensor&lt; uint8_t &gt;</a></div><div class="ttdeci">std::vector&lt; uint8_t &gt; PrepareImageTensor&lt; uint8_t &gt;(const std::string &amp;imagePath, unsigned int newWidth, unsigned int newHeight, const NormalizationParameters &amp;normParams, unsigned int batchSize, const armnn::DataLayout &amp;outputLayout)</div><div class="ttdef"><b>Definition:</b> <a href="_image_tensor_generator_8hpp_source.xhtml#l00148">ImageTensorGenerator.hpp:148</a></div></div>
<div class="ttc" id="_model_accuracy_checker_test_8cpp_xhtml_a9eb69ebdaf4ceb8014e7c8a540266100"><div class="ttname"><a href="_model_accuracy_checker_test_8cpp.xhtml#a9eb69ebdaf4ceb8014e7c8a540266100">TContainer</a></div><div class="ttdeci">boost::variant&lt; std::vector&lt; float &gt;, std::vector&lt; int &gt;, std::vector&lt; unsigned char &gt; &gt; TContainer</div><div class="ttdef"><b>Definition:</b> <a href="_model_accuracy_checker_test_8cpp_source.xhtml#l00056">ModelAccuracyCheckerTest.cpp:56</a></div></div>
<div class="ttc" id="class_inference_test_image_exception_xhtml"><div class="ttname"><a href="class_inference_test_image_exception.xhtml">InferenceTestImageException</a></div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_image_8hpp_source.xhtml#l00015">InferenceTestImage.hpp:15</a></div></div>
<div class="ttc" id="struct_normalization_parameters_xhtml"><div class="ttname"><a href="struct_normalization_parameters.xhtml">NormalizationParameters</a></div><div class="ttdef"><b>Definition:</b> <a href="_image_tensor_generator_8hpp_source.xhtml#l00018">ImageTensorGenerator.hpp:18</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00032">Types.hpp:32</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="_image_tensor_generator_8hpp_xhtml_ac1e8e68c74e5d1c8fd19a91a68de3cb7"><div class="ttname"><a href="_image_tensor_generator_8hpp.xhtml#ac1e8e68c74e5d1c8fd19a91a68de3cb7">PrepareImageTensor&lt; int &gt;</a></div><div class="ttdeci">std::vector&lt; int &gt; PrepareImageTensor&lt; int &gt;(const std::string &amp;imagePath, unsigned int newWidth, unsigned int newHeight, const NormalizationParameters &amp;normParams, unsigned int batchSize, const armnn::DataLayout &amp;outputLayout)</div><div class="ttdef"><b>Definition:</b> <a href="_image_tensor_generator_8hpp_source.xhtml#l00128">ImageTensorGenerator.hpp:128</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="_image_tensor_generator_8hpp_xhtml_a7599848540a5f43e977119c054b3563e"><div class="ttname"><a href="_image_tensor_generator_8hpp.xhtml#a7599848540a5f43e977119c054b3563e">SupportedFrontend</a></div><div class="ttdeci">SupportedFrontend</div><div class="ttdef"><b>Definition:</b> <a href="_image_tensor_generator_8hpp_source.xhtml#l00025">ImageTensorGenerator.hpp:25</a></div></div>
<div class="ttc" id="_image_tensor_generator_8hpp_xhtml_affacfe95f011fce3b897b2745880f82a"><div class="ttname"><a href="_image_tensor_generator_8hpp.xhtml#affacfe95f011fce3b897b2745880f82a">PrepareImageTensor&lt; float &gt;</a></div><div class="ttdeci">std::vector&lt; float &gt; PrepareImageTensor&lt; float &gt;(const std::string &amp;imagePath, unsigned int newWidth, unsigned int newHeight, const NormalizationParameters &amp;normParams, unsigned int batchSize, const armnn::DataLayout &amp;outputLayout)</div><div class="ttdef"><b>Definition:</b> <a href="_image_tensor_generator_8hpp_source.xhtml#l00091">ImageTensorGenerator.hpp:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_db50b4cd131a46c9b297c117b868403e.xhtml">ImageTensorGenerator</a></li><li class="navelem"><a class="el" href="_image_tensor_generator_8cpp.xhtml">ImageTensorGenerator.cpp</a></li>
    <li class="footer">Generated on Tue Aug 25 2020 12:29:47 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
