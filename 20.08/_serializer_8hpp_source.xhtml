<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnnSerializer/Serializer.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_serializer_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Serializer.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_serializer_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_layer_visitor_8hpp.xhtml">armnn/ILayerVisitor.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_layer_visitor_base_8hpp.xhtml">armnn/LayerVisitorBase.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_serializer_8hpp.xhtml">armnnSerializer/ISerializer.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;ArmnnSchema_generated.h&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_types_8hpp.xhtml">armnn/Types.hpp</a>&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn_serializer.xhtml">armnnSerializer</a></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="classarmnn_serializer_1_1_serializer_visitor.xhtml">   21</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml">SerializerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_i_layer_visitor.xhtml">armnn::ILayerVisitor</a></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a430a872adcc26d52cf028edeec429382">   24</a></span>&#160;    <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a430a872adcc26d52cf028edeec429382">SerializerVisitor</a>() : m_layerId(0) {}</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab3bae9f8bf1876586b2628c120694024">   25</a></span>&#160;    <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab3bae9f8bf1876586b2628c120694024">~SerializerVisitor</a>() {}</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab409abc02fdc367d3b95e6c14500616a">   27</a></span>&#160;    flatbuffers::FlatBufferBuilder&amp; <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab409abc02fdc367d3b95e6c14500616a">GetFlatBufferBuilder</a>()</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    {</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">return</span> m_flatBufferBuilder;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab590ced8474cd5e0fa28912231b93f61">   32</a></span>&#160;    std::vector&lt;int&gt;&amp; <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab590ced8474cd5e0fa28912231b93f61">GetInputIds</a>()</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordflow">return</span> m_inputIds;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    }</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a05c5792591b9e83396c09ab21143cc44">   37</a></span>&#160;    std::vector&lt;int&gt;&amp; <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a05c5792591b9e83396c09ab21143cc44">GetOutputIds</a>()</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordflow">return</span> m_outputIds;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    }</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a05e611493d1b74287eed5e3af7594538">   42</a></span>&#160;    std::vector&lt;flatbuffers::Offset&lt;armnnSerializer::AnyLayer&gt;&gt;&amp; <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a05e611493d1b74287eed5e3af7594538">GetSerializedLayers</a>()</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordflow">return</span> m_serializedLayers;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    flatbuffers::Offset&lt;armnnSerializer::FeatureCompatibilityVersions&gt; <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a7594572286ad32d17d57eaa4cdde53f9">GetVersionTable</a>();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use VisitElementwiseUnaryLayer instead&quot;</span>)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#afb3379853398423f791269433f6bb43c">VisitAbsLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                       <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a3f7b255222c79282f598eb8efefa880b">VisitActivationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a7b608d5a44e36e6cd96e915658d49da3">VisitAdditionLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ad7c76e1781b02bcc685ec87fe071b1fc">VisitArgMinMaxLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">armnn::ArgMinMaxDescriptor</a>&amp; argMinMaxDescriptor,</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a1d1235559a11a1aa63724eba742ad29c">VisitBatchToSpaceNdLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">armnn::BatchToSpaceNdDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a53e3051bacbfc5d901184eb7cb29c8c2">VisitBatchNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a>&amp; BatchNormalizationDescriptor,</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>&amp; mean,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>&amp; variance,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>&amp; beta,</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>&amp; gamma,</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                      <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#afb1afddc0f2cb1caac0daf5bbd13c8c8">VisitComparisonLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_comparison_descriptor.xhtml">armnn::ComparisonDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a148d342b40eada32d536c2ccda673405">VisitConcatLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_origins_descriptor.xhtml">armnn::ConcatDescriptor</a>&amp; concatDescriptor,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ae7bb76117b0e10efef5d3d6637df4480">VisitConstantLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>&amp; input,</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>* = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#af4c7002e267521e7ea0933ef2b767f9e">VisitConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>* = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ac30449d327001492692fa23a666efd7f">VisitDepthToSpaceLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">armnn::DepthToSpaceDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#afd318b4ffed3c04a4807ca2c13077ab7">VisitDepthwiseConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a9a502d24112baa19f11c76bc651e0cc0">VisitDequantizeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ace945f2f1d416b240f9c0344671b17ad">VisitDetectionPostProcessLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">armnn::DetectionPostProcessDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>&amp; <a class="code" href="_neon_end_to_end_tests_8cpp.xhtml#ac0981848e4ae57729f14f72bd4caa9f8">anchors</a>,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a9cc611872dcd6b526c84231e0b6920da">VisitDivisionLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a2e0686c8a9f4a53f78fd35f83fa77c56">VisitElementwiseUnaryLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">armnn::ElementwiseUnaryDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                    <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use VisitComparisonLayer instead&quot;</span>)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a778b3249ab3704387496d45c39480ecb">VisitEqualLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a5cba52e71687c849f356dd218bd7707c">VisitFillLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fill_descriptor.xhtml">armnn::FillDescriptor</a>&amp; fillDescriptor,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a64c53003d714d4957829f821a5e4153d">VisitFloorLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a> *layer,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span> *name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a0d4758122aed43d472cdbd59e84bc047">VisitFullyConnectedLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a>&amp; fullyConnectedDescriptor,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use VisitGatherLayer with descriptor instead&quot;</span>)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ad297ae199a9fa61e1fd983d645da6471">VisitGatherLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ad297ae199a9fa61e1fd983d645da6471">VisitGatherLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_gather_descriptor.xhtml">armnn::GatherDescriptor</a>&amp; gatherDescriptor,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use VisitComparisonLayer instead&quot;</span>)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab0d8bc8095f70f4616bc3ace8dd46b02">VisitGreaterLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ade20ba84b9c46a9afedf0b969f870919">VisitInputLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                         <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span>,</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#aae3bf0ab71205ddf8916512ac8330a1e">VisitInstanceNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">armnn::InstanceNormalizationDescriptor</a>&amp; instanceNormalizationDescriptor,</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a227d927a30f0700956047d9f65fca813">VisitL2NormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">armnn::L2NormalizationDescriptor</a>&amp; l2NormalizationDescriptor,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a5c02b1f1028daf64f7c6244ac68b37f5">VisitLogSoftmaxLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::LogSoftmaxDescriptor</a>&amp; logSoftmaxDescriptor,</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a2b37a5d520204e4e1652e6d4d38774b3">VisitLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">armnn::LstmInputParams</a>&amp; params,</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a1404339c6c051dc6924a16172db4b3ee">VisitMeanLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mean_descriptor.xhtml">armnn::MeanDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span>* name) <span class="keyword">override</span>;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a87432c758f53e21892780fc3b10b5c2a">VisitMinimumLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a29cb9e904f31bcc86b1ab75d13d343a4">VisitMaximumLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ae91857ae8a9be3557316eb446c40ba98">VisitMergeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use VisitConcatLayer instead&quot;</span>)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ac6013ef93bf6ec846910e019a54cf021">VisitMergerLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_origins_descriptor.xhtml">armnn::MergerDescriptor</a>&amp; mergerDescriptor,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a23e516e20d857cd11ce80d0967ae48f3">VisitMultiplicationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a56858f9071c8bf57fdb31a96833ff4bd">VisitOutputLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                          <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span>,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a3569b9af864b7b141b067e7de3902bf3">VisitPadLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pad_descriptor.xhtml">armnn::PadDescriptor</a>&amp; PadDescriptor,</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                       <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ac81df940ac47b39a703a2cbe017bda8e">VisitPermuteLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_permute_descriptor.xhtml">armnn::PermuteDescriptor</a>&amp; PermuteDescriptor,</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab3c8fcc1045d3379148d4298b27c20d3">VisitPooling2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a>&amp; pooling2dDescriptor,</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a26930996b666eef0b5b1fe562644f5c9">VisitPreluLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a25ee3712e8012235fedcd41fdd1b78a3">VisitQuantizeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#af01d9d7ba6c29a2a0e2efa291f6887f6">VisitQLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">armnn::LstmInputParams</a>&amp; params,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a598e914a8657aca24ed847d9069ad025">VisitQuantizedLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">armnn::QuantizedLstmInputParams</a>&amp; params,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a9d260d77fa97488a8fd0ef0e6fd4177a">VisitRankLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ada00d4a9cb133fef352290610f257000">VisitReshapeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reshape_descriptor.xhtml">armnn::ReshapeDescriptor</a>&amp; reshapeDescriptor,</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ad7df3f2ae8cbb23bb8651fff4d079718">VisitResizeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_resize_descriptor.xhtml">armnn::ResizeDescriptor</a>&amp; resizeDescriptor,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use VisitResizeLayer instead&quot;</span>)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#afa243ee90086da1e8270b8391dd8f221">VisitResizeBilinearLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_resize_bilinear_descriptor.xhtml">armnn::ResizeBilinearDescriptor</a>&amp; resizeDescriptor,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use VisitElementwiseUnaryLayer instead&quot;</span>)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#af9fea44d69144543d711293ab4a61af4">VisitRsqrtLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a8931b9c0199822fe3db2fdbde579a96e">VisitSliceLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_slice_descriptor.xhtml">armnn::SliceDescriptor</a>&amp; sliceDescriptor,</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a22d44460791b64d4e1d65f8107f69786">VisitSoftmaxLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a>&amp; softmaxDescriptor,</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a4ca05fff57392b368ce229af4721aa19">VisitSpaceToBatchNdLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">armnn::SpaceToBatchNdDescriptor</a>&amp; spaceToBatchNdDescriptor,</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#aa3c4485dc7e9529e9a03e74ba69bd624">VisitSpaceToDepthLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">armnn::SpaceToDepthDescriptor</a>&amp; spaceToDepthDescriptor,</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                                <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#adf9c46396d90c17839fcbdd9f400166e">VisitNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a>&amp; normalizationDescriptor,</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab24e753aaf05ae1f1b099ec020bbb0df">VisitSplitterLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a>&amp; viewsDescriptor,</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#afdc56797f18b4ec2b66469bd4553d65b">VisitStandInLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a>&amp; standInDescriptor,</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#aa6835f67d172384fb91ca5e7d0933a00">VisitStackLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stack_descriptor.xhtml">armnn::StackDescriptor</a>&amp; stackDescriptor,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a4f0cb9c392102c5108766a0faa754d92">VisitStridedSliceLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_strided_slice_descriptor.xhtml">armnn::StridedSliceDescriptor</a>&amp; stridedSliceDescriptor,</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                                <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a8f33221ab8f8feb4f2bbd5ddaa5bfa02">VisitSubtractionLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                               <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a20396d2da2d38ae69bd5bda5d8c1e8dc">VisitSwitchLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#aa46bee20f6017ada3c3a46e1bdf23011">VisitTransposeConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">armnn::TransposeConvolution2dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                                          <span class="keyword">const</span> <span class="keywordtype">char</span>* = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a82daa527121e400d8bab5eecc77f6fcb">VisitTransposeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_descriptor.xhtml">armnn::TransposeDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">    /// Creates the Input Slots and Output Slots and LayerBase for the layer.</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment"></span>    flatbuffers::Offset&lt;armnnSerializer::LayerBase&gt; CreateLayerBase(</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnnSerializer::LayerType</a> layerType);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">    /// Creates the serializer AnyLayer for the layer and adds it to m_serializedLayers.</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> CreateAnyLayer(<span class="keyword">const</span> flatbuffers::Offset&lt;void&gt;&amp; layer, <span class="keyword">const</span> armnnSerializer::Layer serializerLayer);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">    /// Creates the serializer ConstTensor for the armnn ConstTensor.</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment"></span>    flatbuffers::Offset&lt;armnnSerializer::ConstTensor&gt; CreateConstTensorInfo(</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>&amp; constTensor);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">    /// Creates the serializer TensorInfo for the armnn TensorInfo.</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment"></span>    flatbuffers::Offset&lt;TensorInfo&gt;  CreateTensorInfo(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; tensorInfo);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    flatbuffers::Offset&lt;flatbuffers::Vector&lt;T&gt;&gt; CreateDataVector(<span class="keyword">const</span> <span class="keywordtype">void</span>* memory, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> size);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">    ///Function which maps Guid to an index</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment"></span>    uint32_t GetSerializedId(<a class="code" href="classarmnn_1_1profiling_1_1_profiling_guid.xhtml">armnn::LayerGuid</a> guid);</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">    /// Creates the serializer InputSlots for the layer.</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment"></span>    std::vector&lt;flatbuffers::Offset&lt;armnnSerializer::InputSlot&gt;&gt; CreateInputSlots(</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">    /// Creates the serializer OutputSlots for the layer.</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment"></span>    std::vector&lt;flatbuffers::Offset&lt;armnnSerializer::OutputSlot&gt;&gt; CreateOutputSlots(</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer);</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">    /// FlatBufferBuilder to create our layers&#39; FlatBuffers.</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment"></span>    flatbuffers::FlatBufferBuilder m_flatBufferBuilder;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">    /// AnyLayers required by the SerializedGraph.</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment"></span>    std::vector&lt;flatbuffers::Offset&lt;armnnSerializer::AnyLayer&gt;&gt; m_serializedLayers;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">    /// Vector of the binding ids of all Input Layers required by the SerializedGraph.</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment"></span>    std::vector&lt;int&gt; m_inputIds;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">    /// Vector of the binding ids of all Output Layers required by the SerializedGraph.</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment"></span>    std::vector&lt;int&gt; m_outputIds;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">    /// Mapped Guids of all Layers to match our index.</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment"></span>    std::unordered_map&lt;armnn::LayerGuid, uint32_t &gt; m_guidMap;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">    /// layer within our FlatBuffer index.</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment"></span>    uint32_t m_layerId;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;};</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno"><a class="line" href="classarmnn_serializer_1_1_serializer.xhtml">  344</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_serializer_1_1_serializer.xhtml">Serializer</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_serializer_1_1_i_serializer.xhtml">ISerializer</a></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;{</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00347"></a><span class="lineno"><a class="line" href="classarmnn_serializer_1_1_serializer.xhtml#acfe31ff4a22ef53fea1094a082321dc7">  347</a></span>&#160;    <a class="code" href="classarmnn_serializer_1_1_serializer.xhtml#acfe31ff4a22ef53fea1094a082321dc7">Serializer</a>() {}</div><div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="classarmnn_serializer_1_1_serializer.xhtml#a36ee17b946f7777c40edb53e6f85c295">  348</a></span>&#160;    <a class="code" href="classarmnn_serializer_1_1_serializer.xhtml#a36ee17b946f7777c40edb53e6f85c295">~Serializer</a>() {}</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">    /// Serializes the network to ArmNN SerializedGraph.</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">    /// @param [in] inNetwork The network to be serialized.</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> Serialize(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_network.xhtml">armnn::INetwork</a>&amp; inNetwork) <span class="keyword">override</span>;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">    /// Serializes the SerializedGraph to the stream.</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">    /// @param [stream] the stream to save to</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">    /// @return true if graph is Serialized to the Stream, false otherwise</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> SaveSerializedToStream(std::ostream&amp; stream) <span class="keyword">override</span>;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">    /// Visitor to contruct serialized network</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_serializer_1_1_serializer_visitor.xhtml">SerializerVisitor</a> m_SerializerVisitor;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;};</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;} <span class="comment">//namespace armnnSerializer</span></div><div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a148d342b40eada32d536c2ccda673405"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a148d342b40eada32d536c2ccda673405">armnnSerializer::SerializerVisitor::VisitConcatLayer</a></div><div class="ttdeci">void VisitConcatLayer(const armnn::IConnectableLayer *layer, const armnn::ConcatDescriptor &amp;concatDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a concat layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00754">Serializer.cpp:754</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ade20ba84b9c46a9afedf0b969f870919"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ade20ba84b9c46a9afedf0b969f870919">armnnSerializer::SerializerVisitor::VisitInputLayer</a></div><div class="ttdeci">void VisitInputLayer(const armnn::IConnectableLayer *layer, armnn::LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Function that an InputLayer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00086">Serializer.cpp:86</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a></div><div class="ttdoc">A ViewsDescriptor for the SplitterLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00198">Descriptors.hpp:198</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00061">INetwork.hpp:61</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">armnn::TransposeConvolution2dDescriptor</a></div><div class="ttdoc">A TransposeConvolution2dDescriptor for the TransposeConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01196">Descriptors.hpp:1196</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a56858f9071c8bf57fdb31a96833ff4bd"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a56858f9071c8bf57fdb31a96833ff4bd">armnnSerializer::SerializerVisitor::VisitOutputLayer</a></div><div class="ttdeci">void VisitOutputLayer(const armnn::IConnectableLayer *layer, armnn::LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Function an output layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00108">Serializer.cpp:108</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt; armnn::ConstTensor &gt;</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ad7c76e1781b02bcc685ec87fe071b1fc"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ad7c76e1781b02bcc685ec87fe071b1fc">armnnSerializer::SerializerVisitor::VisitArgMinMaxLayer</a></div><div class="ttdeci">void VisitArgMinMaxLayer(const armnn::IConnectableLayer *layer, const armnn::ArgMinMaxDescriptor &amp;argMinMaxDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that an arg min max layer should call back to when its Accept(ILayerVisitor&amp;) function is in...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00178">Serializer.cpp:178</a></div></div>
<div class="ttc" id="structarmnn_1_1_reshape_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reshape_descriptor.xhtml">armnn::ReshapeDescriptor</a></div><div class="ttdoc">A ReshapeDescriptor for the ReshapeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00815">Descriptors.hpp:815</a></div></div>
<div class="ttc" id="namespacearmnn_serializer_xhtml"><div class="ttname"><a href="namespacearmnn_serializer.xhtml">armnnSerializer</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_serializer_8hpp_source.xhtml#l00011">ISerializer.hpp:11</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_adf9c46396d90c17839fcbdd9f400166e"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#adf9c46396d90c17839fcbdd9f400166e">armnnSerializer::SerializerVisitor::VisitNormalizationLayer</a></div><div class="ttdeci">void VisitNormalizationLayer(const armnn::IConnectableLayer *layer, const armnn::NormalizationDescriptor &amp;normalizationDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a normalization layer should call back to when its Accept(ILayerVisitor&amp;) function is i...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01197">Serializer.cpp:1197</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a4ca05fff57392b368ce229af4721aa19"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a4ca05fff57392b368ce229af4721aa19">armnnSerializer::SerializerVisitor::VisitSpaceToBatchNdLayer</a></div><div class="ttdeci">void VisitSpaceToBatchNdLayer(const armnn::IConnectableLayer *layer, const armnn::SpaceToBatchNdDescriptor &amp;spaceToBatchNdDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a space to batch layer should call back to when its Accept(ILayerVisitor&amp;) function is invok...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01080">Serializer.cpp:1080</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_afd318b4ffed3c04a4807ca2c13077ab7"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#afd318b4ffed3c04a4807ca2c13077ab7">armnnSerializer::SerializerVisitor::VisitDepthwiseConvolution2dLayer</a></div><div class="ttdeci">void VisitDepthwiseConvolution2dLayer(const armnn::IConnectableLayer *layer, const armnn::DepthwiseConvolution2dDescriptor &amp;descriptor, const armnn::ConstTensor &amp;weights, const armnn::Optional&lt; armnn::ConstTensor &gt; &amp;biases, const char *name=nullptr) override</div><div class="ttdoc">Function that a 2D depthwise convolution layer with biases should call back to when its Accept(ILayer...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00356">Serializer.cpp:356</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a05c5792591b9e83396c09ab21143cc44"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a05c5792591b9e83396c09ab21143cc44">armnnSerializer::SerializerVisitor::GetOutputIds</a></div><div class="ttdeci">std::vector&lt; int &gt; &amp; GetOutputIds()</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8hpp_source.xhtml#l00037">Serializer.hpp:37</a></div></div>
<div class="ttc" id="structarmnn_1_1_comparison_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_comparison_descriptor.xhtml">armnn::ComparisonDescriptor</a></div><div class="ttdoc">A ComparisonDescriptor for the ComparisonLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00070">Descriptors.hpp:70</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a7b608d5a44e36e6cd96e915658d49da3"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a7b608d5a44e36e6cd96e915658d49da3">armnnSerializer::SerializerVisitor::VisitAdditionLayer</a></div><div class="ttdeci">void VisitAdditionLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function that an addition layer should call back to when its Accept(ILayerVisitor&amp;) function is invok...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00163">Serializer.cpp:163</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00400">Descriptors.hpp:400</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a3f7b255222c79282f598eb8efefa880b"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a3f7b255222c79282f598eb8efefa880b">armnnSerializer::SerializerVisitor::VisitActivationLayer</a></div><div class="ttdeci">void VisitActivationLayer(const armnn::IConnectableLayer *layer, const armnn::ActivationDescriptor &amp;descriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that an activation layer should call back to when its Accept(ILayerVisitor&amp;) function is inv...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00138">Serializer.cpp:138</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_guid_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_guid.xhtml">armnn::profiling::ProfilingGuid</a></div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00275">Types.hpp:275</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a7594572286ad32d17d57eaa4cdde53f9"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a7594572286ad32d17d57eaa4cdde53f9">armnnSerializer::SerializerVisitor::GetVersionTable</a></div><div class="ttdeci">flatbuffers::Offset&lt; armnnSerializer::FeatureCompatibilityVersions &gt; GetVersionTable()</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01666">Serializer.cpp:1666</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ab0d8bc8095f70f4616bc3ace8dd46b02"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab0d8bc8095f70f4616bc3ace8dd46b02">armnnSerializer::SerializerVisitor::VisitGreaterLayer</a></div><div class="ttdeci">void VisitGreaterLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function a Greater layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00516">Serializer.cpp:516</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a26930996b666eef0b5b1fe562644f5c9"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a26930996b666eef0b5b1fe562644f5c9">armnnSerializer::SerializerVisitor::VisitPreluLayer</a></div><div class="ttdeci">void VisitPreluLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function that a PReLU activation layer should call back to when its Accept(ILayerVisitor&amp;) function i...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01015">Serializer.cpp:1015</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ab409abc02fdc367d3b95e6c14500616a"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab409abc02fdc367d3b95e6c14500616a">armnnSerializer::SerializerVisitor::GetFlatBufferBuilder</a></div><div class="ttdeci">flatbuffers::FlatBufferBuilder &amp; GetFlatBufferBuilder()</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8hpp_source.xhtml#l00027">Serializer.hpp:27</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml">armnn::INetwork</a></div><div class="ttdoc">Main network class which provides the interface for building up a neural network. ...</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00105">INetwork.hpp:105</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a4f0cb9c392102c5108766a0faa754d92"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a4f0cb9c392102c5108766a0faa754d92">armnnSerializer::SerializerVisitor::VisitStridedSliceLayer</a></div><div class="ttdeci">void VisitStridedSliceLayer(const armnn::IConnectableLayer *layer, const armnn::StridedSliceDescriptor &amp;stridedSliceDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a strided slice layer should call back to when its Accept(ILayerVisitor&amp;) function is invoke...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01261">Serializer.cpp:1261</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ab590ced8474cd5e0fa28912231b93f61"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab590ced8474cd5e0fa28912231b93f61">armnnSerializer::SerializerVisitor::GetInputIds</a></div><div class="ttdeci">std::vector&lt; int &gt; &amp; GetInputIds()</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8hpp_source.xhtml#l00032">Serializer.hpp:32</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ac81df940ac47b39a703a2cbe017bda8e"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ac81df940ac47b39a703a2cbe017bda8e">armnnSerializer::SerializerVisitor::VisitPermuteLayer</a></div><div class="ttdeci">void VisitPermuteLayer(const armnn::IConnectableLayer *layer, const armnn::PermuteDescriptor &amp;PermuteDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a permute layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00826">Serializer.cpp:826</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_afa243ee90086da1e8270b8391dd8f221"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#afa243ee90086da1e8270b8391dd8f221">armnnSerializer::SerializerVisitor::VisitResizeBilinearLayer</a></div><div class="ttdeci">void VisitResizeBilinearLayer(const armnn::IConnectableLayer *layer, const armnn::ResizeBilinearDescriptor &amp;resizeDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a resize bilinear layer should call back to when its Accept(ILayerVisitor&amp;) function is...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00890">Serializer.cpp:890</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a8931b9c0199822fe3db2fdbde579a96e"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a8931b9c0199822fe3db2fdbde579a96e">armnnSerializer::SerializerVisitor::VisitSliceLayer</a></div><div class="ttdeci">void VisitSliceLayer(const armnn::IConnectableLayer *layer, const armnn::SliceDescriptor &amp;sliceDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a slice layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00947">Serializer.cpp:947</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml">armnn::QuantizedLstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00013">QuantizedLstmParams.hpp:13</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_depth_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_depth_descriptor.xhtml">armnn::SpaceToDepthDescriptor</a></div><div class="ttdoc">A SpaceToDepthDescriptor for the SpaceToDepthLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00867">Descriptors.hpp:867</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_to_space_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">armnn::BatchToSpaceNdDescriptor</a></div><div class="ttdoc">A BatchToSpaceNdDescriptor for the BatchToSpaceNdLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00665">Descriptors.hpp:665</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a87432c758f53e21892780fc3b10b5c2a"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a87432c758f53e21892780fc3b10b5c2a">armnnSerializer::SerializerVisitor::VisitMinimumLayer</a></div><div class="ttdeci">void VisitMinimumLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function a Minimum layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00727">Serializer.cpp:727</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a25ee3712e8012235fedcd41fdd1b78a3"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a25ee3712e8012235fedcd41fdd1b78a3">armnnSerializer::SerializerVisitor::VisitQuantizeLayer</a></div><div class="ttdeci">void VisitQuantizeLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function a quantize layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01030">Serializer.cpp:1030</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ab8cf8f9fb6792e654c2d8d8382f6f01b"><div class="ttname"><a href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a></div><div class="ttdeci">int LayerBindingId</div><div class="ttdoc">Type of identifiers for bindable layers (inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00194">Types.hpp:194</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ad7df3f2ae8cbb23bb8651fff4d079718"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ad7df3f2ae8cbb23bb8651fff4d079718">armnnSerializer::SerializerVisitor::VisitResizeLayer</a></div><div class="ttdeci">void VisitResizeLayer(const armnn::IConnectableLayer *layer, const armnn::ResizeDescriptor &amp;resizeDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a resize layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00913">Serializer.cpp:913</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a3569b9af864b7b141b067e7de3902bf3"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a3569b9af864b7b141b067e7de3902bf3">armnnSerializer::SerializerVisitor::VisitPadLayer</a></div><div class="ttdeci">void VisitPadLayer(const armnn::IConnectableLayer *layer, const armnn::PadDescriptor &amp;PadDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a pad layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00800">Serializer.cpp:800</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a23e516e20d857cd11ce80d0967ae48f3"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a23e516e20d857cd11ce80d0967ae48f3">armnnSerializer::SerializerVisitor::VisitMultiplicationLayer</a></div><div class="ttdeci">void VisitMultiplicationLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function that a multiplication layer should call back to when its Accept(ILayerVisitor&amp;) function is ...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00789">Serializer.cpp:789</a></div></div>
<div class="ttc" id="structarmnn_1_1_resize_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_descriptor.xhtml">armnn::ResizeDescriptor</a></div><div class="ttdoc">A ResizeDescriptor for the ResizeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00777">Descriptors.hpp:777</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a20396d2da2d38ae69bd5bda5d8c1e8dc"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a20396d2da2d38ae69bd5bda5d8c1e8dc">armnnSerializer::SerializerVisitor::VisitSwitchLayer</a></div><div class="ttdeci">void VisitSwitchLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function a switch layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01298">Serializer.cpp:1298</a></div></div>
<div class="ttc" id="structarmnn_1_1_stack_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stack_descriptor.xhtml">armnn::StackDescriptor</a></div><div class="ttdoc">A StackDescriptor for the StackLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01007">Descriptors.hpp:1007</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a2b37a5d520204e4e1652e6d4d38774b3"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a2b37a5d520204e4e1652e6d4d38774b3">armnnSerializer::SerializerVisitor::VisitLstmLayer</a></div><div class="ttdeci">void VisitLstmLayer(const armnn::IConnectableLayer *layer, const armnn::LstmDescriptor &amp;descriptor, const armnn::LstmInputParams &amp;params, const char *name=nullptr) override</div><div class="ttdoc">Function an Lstm layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00591">Serializer.cpp:591</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a1d1235559a11a1aa63724eba742ad29c"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a1d1235559a11a1aa63724eba742ad29c">armnnSerializer::SerializerVisitor::VisitBatchToSpaceNdLayer</a></div><div class="ttdeci">void VisitBatchToSpaceNdLayer(const armnn::IConnectableLayer *layer, const armnn::BatchToSpaceNdDescriptor &amp;descriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a batch to space ND layer should call back to when its Accept(ILayerVisitor&amp;) function ...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00201">Serializer.cpp:201</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a9a502d24112baa19f11c76bc651e0cc0"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a9a502d24112baa19f11c76bc651e0cc0">armnnSerializer::SerializerVisitor::VisitDequantizeLayer</a></div><div class="ttdeci">void VisitDequantizeLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function that a Dequantize layer should call back to when its Accept(ILayerVisitor&amp;) function is invo...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00393">Serializer.cpp:393</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml">armnn::PadDescriptor</a></div><div class="ttdoc">A PadDescriptor for the PadLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00958">Descriptors.hpp:958</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ac6013ef93bf6ec846910e019a54cf021"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ac6013ef93bf6ec846910e019a54cf021">armnnSerializer::SerializerVisitor::VisitMergerLayer</a></div><div class="ttdeci">void VisitMergerLayer(const armnn::IConnectableLayer *layer, const armnn::MergerDescriptor &amp;mergerDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a merger layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00747">Serializer.cpp:747</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a430a872adcc26d52cf028edeec429382"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a430a872adcc26d52cf028edeec429382">armnnSerializer::SerializerVisitor::SerializerVisitor</a></div><div class="ttdeci">SerializerVisitor()</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8hpp_source.xhtml#l00024">Serializer.hpp:24</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ae91857ae8a9be3557316eb446c40ba98"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ae91857ae8a9be3557316eb446c40ba98">armnnSerializer::SerializerVisitor::VisitMergeLayer</a></div><div class="ttdeci">void VisitMergeLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function that a merge layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00737">Serializer.cpp:737</a></div></div>
<div class="ttc" id="_i_serializer_8hpp_xhtml"><div class="ttname"><a href="_i_serializer_8hpp.xhtml">ISerializer.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a></div><div class="ttdoc">An LstmDescriptor for the LstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00894">Descriptors.hpp:894</a></div></div>
<div class="ttc" id="_i_layer_visitor_8hpp_xhtml"><div class="ttname"><a href="_i_layer_visitor_8hpp.xhtml">ILayerVisitor.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_l2_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_l2_normalization_descriptor.xhtml">armnn::L2NormalizationDescriptor</a></div><div class="ttdoc">A L2NormalizationDescriptor for the L2NormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00599">Descriptors.hpp:599</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a64c53003d714d4957829f821a5e4153d"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a64c53003d714d4957829f821a5e4153d">armnnSerializer::SerializerVisitor::VisitFloorLayer</a></div><div class="ttdeci">void VisitFloorLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function a floor layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00485">Serializer.cpp:485</a></div></div>
<div class="ttc" id="structarmnn_1_1_arg_min_max_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_arg_min_max_descriptor.xhtml">armnn::ArgMinMaxDescriptor</a></div><div class="ttdoc">An ArgMinMaxDescriptor for ArgMinMaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00051">Descriptors.hpp:51</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a0d4758122aed43d472cdbd59e84bc047"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a0d4758122aed43d472cdbd59e84bc047">armnnSerializer::SerializerVisitor::VisitFullyConnectedLayer</a></div><div class="ttdeci">void VisitFullyConnectedLayer(const armnn::IConnectableLayer *layer, const armnn::FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const armnn::ConstTensor &amp;weights, const armnn::Optional&lt; armnn::ConstTensor &gt; &amp;biases, const char *name=nullptr) override</div><div class="ttdoc">Function that a fully connected layer should call back to when its Accept(ILayerVisitor&amp;) function is...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01041">Serializer.cpp:1041</a></div></div>
<div class="ttc" id="structarmnn_1_1_origins_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml">armnn::OriginsDescriptor</a></div><div class="ttdoc">An OriginsDescriptor for the ConcatLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00155">Descriptors.hpp:155</a></div></div>
<div class="ttc" id="_types_8hpp_xhtml"><div class="ttname"><a href="_types_8hpp.xhtml">Types.hpp</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_aa6835f67d172384fb91ca5e7d0933a00"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#aa6835f67d172384fb91ca5e7d0933a00">armnnSerializer::SerializerVisitor::VisitStackLayer</a></div><div class="ttdeci">void VisitStackLayer(const armnn::IConnectableLayer *layer, const armnn::StackDescriptor &amp;stackDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a stack layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01222">Serializer.cpp:1222</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00381">Descriptors.hpp:381</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ac30449d327001492692fa23a666efd7f"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ac30449d327001492692fa23a666efd7f">armnnSerializer::SerializerVisitor::VisitDepthToSpaceLayer</a></div><div class="ttdeci">void VisitDepthToSpaceLayer(const armnn::IConnectableLayer *layer, const armnn::DepthToSpaceDescriptor &amp;descriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a depth to space layer should call back to when its Accept(ILayerVisitor&amp;) function is invok...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00340">Serializer.cpp:340</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00298">Tensor.hpp:298</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ad297ae199a9fa61e1fd983d645da6471"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ad297ae199a9fa61e1fd983d645da6471">armnnSerializer::SerializerVisitor::VisitGatherLayer</a></div><div class="ttdeci">void VisitGatherLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function a Gather layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00495">Serializer.cpp:495</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml">armnn::LstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00013">LstmParams.hpp:13</a></div></div>
<div class="ttc" id="structarmnn_1_1_gather_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_gather_descriptor.xhtml">armnn::GatherDescriptor</a></div><div class="ttdoc">A GatherDescriptor for the GatherLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00734">Descriptors.hpp:734</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_xhtml_a36ee17b946f7777c40edb53e6f85c295"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer.xhtml#a36ee17b946f7777c40edb53e6f85c295">armnnSerializer::Serializer::~Serializer</a></div><div class="ttdeci">~Serializer()</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8hpp_source.xhtml#l00348">Serializer.hpp:348</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a53e3051bacbfc5d901184eb7cb29c8c2"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a53e3051bacbfc5d901184eb7cb29c8c2">armnnSerializer::SerializerVisitor::VisitBatchNormalizationLayer</a></div><div class="ttdeci">void VisitBatchNormalizationLayer(const armnn::IConnectableLayer *layer, const armnn::BatchNormalizationDescriptor &amp;BatchNormalizationDescriptor, const armnn::ConstTensor &amp;mean, const armnn::ConstTensor &amp;variance, const armnn::ConstTensor &amp;beta, const armnn::ConstTensor &amp;gamma, const char *name=nullptr) override</div><div class="ttdoc">Function that a batch normalization layer should call back to when its Accept(ILayerVisitor&amp;) functio...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00231">Serializer.cpp:231</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_aa3c4485dc7e9529e9a03e74ba69bd624"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#aa3c4485dc7e9529e9a03e74ba69bd624">armnnSerializer::SerializerVisitor::VisitSpaceToDepthLayer</a></div><div class="ttdeci">void VisitSpaceToDepthLayer(const armnn::IConnectableLayer *layer, const armnn::SpaceToDepthDescriptor &amp;spaceToDepthDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a space to depth layer should call back to when its Accept(ILayerVisitor&amp;) function is invok...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01111">Serializer.cpp:1111</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ace945f2f1d416b240f9c0344671b17ad"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ace945f2f1d416b240f9c0344671b17ad">armnnSerializer::SerializerVisitor::VisitDetectionPostProcessLayer</a></div><div class="ttdeci">void VisitDetectionPostProcessLayer(const armnn::IConnectableLayer *layer, const armnn::DetectionPostProcessDescriptor &amp;descriptor, const armnn::ConstTensor &amp;anchors, const char *name=nullptr) override</div><div class="ttdoc">Function that a Detection PostProcess layer should call back to when its Accept(ILayerVisitor&amp;) funct...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00404">Serializer.cpp:404</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a8f33221ab8f8feb4f2bbd5ddaa5bfa02"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a8f33221ab8f8feb4f2bbd5ddaa5bfa02">armnnSerializer::SerializerVisitor::VisitSubtractionLayer</a></div><div class="ttdeci">void VisitSubtractionLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function a subtraction layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01288">Serializer.cpp:1288</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_i_serializer_xhtml"><div class="ttname"><a href="classarmnn_serializer_1_1_i_serializer.xhtml">armnnSerializer::ISerializer</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_serializer_8hpp_source.xhtml#l00017">ISerializer.hpp:17</a></div></div>
<div class="ttc" id="structarmnn_1_1_stand_in_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a></div><div class="ttdoc">A StandInDescriptor for the StandIn layer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01037">Descriptors.hpp:1037</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a></div><div class="ttdoc">A QLstmDescriptor for the QLstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01136">Descriptors.hpp:1136</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a2e0686c8a9f4a53f78fd35f83fa77c56"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a2e0686c8a9f4a53f78fd35f83fa77c56">armnnSerializer::SerializerVisitor::VisitElementwiseUnaryLayer</a></div><div class="ttdeci">void VisitElementwiseUnaryLayer(const armnn::IConnectableLayer *layer, const armnn::ElementwiseUnaryDescriptor &amp;descriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a ElementwiseUnary layer should call back to when its Accept(ILayerVisitor&amp;) function is inv...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00445">Serializer.cpp:445</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_xhtml_acfe31ff4a22ef53fea1094a082321dc7"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer.xhtml#acfe31ff4a22ef53fea1094a082321dc7">armnnSerializer::Serializer::Serializer</a></div><div class="ttdeci">Serializer()</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8hpp_source.xhtml#l00347">Serializer.hpp:347</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00020">Descriptors.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_aa46bee20f6017ada3c3a46e1bdf23011"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#aa46bee20f6017ada3c3a46e1bdf23011">armnnSerializer::SerializerVisitor::VisitTransposeConvolution2dLayer</a></div><div class="ttdeci">void VisitTransposeConvolution2dLayer(const armnn::IConnectableLayer *layer, const armnn::TransposeConvolution2dDescriptor &amp;descriptor, const armnn::ConstTensor &amp;weights, const armnn::Optional&lt; armnn::ConstTensor &gt; &amp;biases, const char *=nullptr) override</div><div class="ttdoc">Function that a 2D transpose convolution layer should call back to when its Accept(ILayerVisitor&amp;) fu...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01308">Serializer.cpp:1308</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a778b3249ab3704387496d45c39480ecb"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a778b3249ab3704387496d45c39480ecb">armnnSerializer::SerializerVisitor::VisitEqualLayer</a></div><div class="ttdeci">void VisitEqualLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function an Equal layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00460">Serializer.cpp:460</a></div></div>
<div class="ttc" id="structarmnn_1_1_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_slice_descriptor.xhtml">armnn::SliceDescriptor</a></div><div class="ttdoc">A SliceDescriptor for the SliceLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00984">Descriptors.hpp:984</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a82daa527121e400d8bab5eecc77f6fcb"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a82daa527121e400d8bab5eecc77f6fcb">armnnSerializer::SerializerVisitor::VisitTransposeLayer</a></div><div class="ttdeci">void VisitTransposeLayer(const armnn::IConnectableLayer *layer, const armnn::TransposeDescriptor &amp;descriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a transpose layer should call back to when its Accept(ILayerVisitor&amp;) function is invok...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01345">Serializer.cpp:1345</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_batch_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">armnn::SpaceToBatchNdDescriptor</a></div><div class="ttdoc">A SpaceToBatchNdDescriptor for the SpaceToBatchNdLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00835">Descriptors.hpp:835</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a05e611493d1b74287eed5e3af7594538"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a05e611493d1b74287eed5e3af7594538">armnnSerializer::SerializerVisitor::GetSerializedLayers</a></div><div class="ttdeci">std::vector&lt; flatbuffers::Offset&lt; armnnSerializer::AnyLayer &gt; &gt; &amp; GetSerializedLayers()</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8hpp_source.xhtml#l00042">Serializer.hpp:42</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a227d927a30f0700956047d9f65fca813"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a227d927a30f0700956047d9f65fca813">armnnSerializer::SerializerVisitor::VisitL2NormalizationLayer</a></div><div class="ttdeci">void VisitL2NormalizationLayer(const armnn::IConnectableLayer *layer, const armnn::L2NormalizationDescriptor &amp;l2NormalizationDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that an L2 normalization layer should call back to when its Accept(ILayerVisitor&amp;) function ...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00546">Serializer.cpp:546</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ab3c8fcc1045d3379148d4298b27c20d3"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab3c8fcc1045d3379148d4298b27c20d3">armnnSerializer::SerializerVisitor::VisitPooling2dLayer</a></div><div class="ttdeci">void VisitPooling2dLayer(const armnn::IConnectableLayer *layer, const armnn::Pooling2dDescriptor &amp;pooling2dDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a pooling layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00986">Serializer.cpp:986</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_unary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">armnn::ElementwiseUnaryDescriptor</a></div><div class="ttdoc">A ElementwiseUnaryDescriptor for the ElementwiseUnaryLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00090">Descriptors.hpp:90</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a22d44460791b64d4e1d65f8107f69786"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a22d44460791b64d4e1d65f8107f69786">armnnSerializer::SerializerVisitor::VisitSoftmaxLayer</a></div><div class="ttdeci">void VisitSoftmaxLayer(const armnn::IConnectableLayer *layer, const armnn::SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a softmax layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00964">Serializer.cpp:964</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a598e914a8657aca24ed847d9069ad025"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a598e914a8657aca24ed847d9069ad025">armnnSerializer::SerializerVisitor::VisitQuantizedLstmLayer</a></div><div class="ttdeci">void VisitQuantizedLstmLayer(const armnn::IConnectableLayer *layer, const armnn::QuantizedLstmInputParams &amp;params, const char *name=nullptr) override</div><div class="ttdoc">Function a QuantizedLstm layer should call back to when its Accept(ILayerVisitor&amp;) function is invoke...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01497">Serializer.cpp:1497</a></div></div>
<div class="ttc" id="structarmnn_1_1_mean_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mean_descriptor.xhtml">armnn::MeanDescriptor</a></div><div class="ttdoc">A MeanDescriptor for the MeanLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00934">Descriptors.hpp:934</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a1404339c6c051dc6924a16172db4b3ee"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a1404339c6c051dc6924a16172db4b3ee">armnnSerializer::SerializerVisitor::VisitMeanLayer</a></div><div class="ttdeci">void VisitMeanLayer(const armnn::IConnectableLayer *layer, const armnn::MeanDescriptor &amp;descriptor, const char *name) override</div><div class="ttdoc">Function a Mean layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00709">Serializer.cpp:709</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_layer_visitor.xhtml">armnn::ILayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_visitor_8hpp_source.xhtml#l00016">ILayerVisitor.hpp:16</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a9cc611872dcd6b526c84231e0b6920da"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a9cc611872dcd6b526c84231e0b6920da">armnnSerializer::SerializerVisitor::VisitDivisionLayer</a></div><div class="ttdeci">void VisitDivisionLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function a division layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00435">Serializer.cpp:435</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_descriptor.xhtml">armnn::TransposeDescriptor</a></div><div class="ttdoc">A TransposeDescriptor for the TransposeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01246">Descriptors.hpp:1246</a></div></div>
<div class="ttc" id="structarmnn_1_1_strided_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_strided_slice_descriptor.xhtml">armnn::StridedSliceDescriptor</a></div><div class="ttdoc">A StridedSliceDescriptor for the StridedSliceLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01059">Descriptors.hpp:1059</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ab24e753aaf05ae1f1b099ec020bbb0df"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab24e753aaf05ae1f1b099ec020bbb0df">armnnSerializer::SerializerVisitor::VisitSplitterLayer</a></div><div class="ttdeci">void VisitSplitterLayer(const armnn::IConnectableLayer *layer, const armnn::ViewsDescriptor &amp;viewsDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a splitter layer should call back to when its Accept(ILayerVisitor&amp;) function is invoke...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01131">Serializer.cpp:1131</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_xhtml"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer.xhtml">armnnSerializer::Serializer</a></div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8hpp_source.xhtml#l00344">Serializer.hpp:344</a></div></div>
<div class="ttc" id="_layer_visitor_base_8hpp_xhtml"><div class="ttname"><a href="_layer_visitor_base_8hpp.xhtml">LayerVisitorBase.hpp</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_a76fb13a018f8e01087a7ae0eb23509e1"><div class="ttname"><a href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a></div><div class="ttdeci">#define ARMNN_DEPRECATED_MSG(message)</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00043">Deprecated.hpp:43</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_af01d9d7ba6c29a2a0e2efa291f6887f6"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#af01d9d7ba6c29a2a0e2efa291f6887f6">armnnSerializer::SerializerVisitor::VisitQLstmLayer</a></div><div class="ttdeci">void VisitQLstmLayer(const armnn::IConnectableLayer *layer, const armnn::QLstmDescriptor &amp;descriptor, const armnn::LstmInputParams &amp;params, const char *name=nullptr) override</div><div class="ttdoc">Function a QLstm layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01372">Serializer.cpp:1372</a></div></div>
<div class="ttc" id="structarmnn_1_1_pooling2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a></div><div class="ttdoc">A Pooling2dDescriptor for the Pooling2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00321">Descriptors.hpp:321</a></div></div>
<div class="ttc" id="structarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00559">Descriptors.hpp:559</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_af4c7002e267521e7ea0933ef2b767f9e"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#af4c7002e267521e7ea0933ef2b767f9e">armnnSerializer::SerializerVisitor::VisitConvolution2dLayer</a></div><div class="ttdeci">void VisitConvolution2dLayer(const armnn::IConnectableLayer *layer, const armnn::Convolution2dDescriptor &amp;descriptor, const armnn::ConstTensor &amp;weights, const armnn::Optional&lt; armnn::ConstTensor &gt; &amp;biases, const char *=nullptr) override</div><div class="ttdoc">Function that a 2D convolution layer should call back to when its Accept(ILayerVisitor&amp;) function is ...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00299">Serializer.cpp:299</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml">armnn::DetectionPostProcessDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00503">Descriptors.hpp:503</a></div></div>
<div class="ttc" id="structarmnn_1_1_instance_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_instance_normalization_descriptor.xhtml">armnn::InstanceNormalizationDescriptor</a></div><div class="ttdoc">An InstanceNormalizationDescriptor for InstanceNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00637">Descriptors.hpp:637</a></div></div>
<div class="ttc" id="structarmnn_1_1_resize_bilinear_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_bilinear_descriptor.xhtml">armnn::ResizeBilinearDescriptor</a></div><div class="ttdoc">A ResizeBilinearDescriptor for the ResizeBilinearLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00754">Descriptors.hpp:754</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ae7bb76117b0e10efef5d3d6637df4480"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ae7bb76117b0e10efef5d3d6637df4480">armnnSerializer::SerializerVisitor::VisitConstantLayer</a></div><div class="ttdeci">void VisitConstantLayer(const armnn::IConnectableLayer *layer, const armnn::ConstTensor &amp;input, const char *=nullptr) override</div><div class="ttdoc">Function a layer with no inputs and a single output, which always corresponds to the passed in consta...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00278">Serializer.cpp:278</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ab3bae9f8bf1876586b2628c120694024"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ab3bae9f8bf1876586b2628c120694024">armnnSerializer::SerializerVisitor::~SerializerVisitor</a></div><div class="ttdeci">~SerializerVisitor()</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8hpp_source.xhtml#l00025">Serializer.hpp:25</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_ada00d4a9cb133fef352290610f257000"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#ada00d4a9cb133fef352290610f257000">armnnSerializer::SerializerVisitor::VisitReshapeLayer</a></div><div class="ttdeci">void VisitReshapeLayer(const armnn::IConnectableLayer *layer, const armnn::ReshapeDescriptor &amp;reshapeDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a reshape layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00864">Serializer.cpp:864</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a9d260d77fa97488a8fd0ef0e6fd4177a"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a9d260d77fa97488a8fd0ef0e6fd4177a">armnnSerializer::SerializerVisitor::VisitRankLayer</a></div><div class="ttdeci">void VisitRankLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function a rank layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00854">Serializer.cpp:854</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_afb1afddc0f2cb1caac0daf5bbd13c8c8"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#afb1afddc0f2cb1caac0daf5bbd13c8c8">armnnSerializer::SerializerVisitor::VisitComparisonLayer</a></div><div class="ttdeci">void VisitComparisonLayer(const armnn::IConnectableLayer *layer, const armnn::ComparisonDescriptor &amp;descriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a Comparison layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00262">Serializer.cpp:262</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a29cb9e904f31bcc86b1ab75d13d343a4"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a29cb9e904f31bcc86b1ab75d13d343a4">armnnSerializer::SerializerVisitor::VisitMaximumLayer</a></div><div class="ttdeci">void VisitMaximumLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function a Maximum layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00699">Serializer.cpp:699</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00131">Descriptors.hpp:131</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_af9fea44d69144543d711293ab4a61af4"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#af9fea44d69144543d711293ab4a61af4">armnnSerializer::SerializerVisitor::VisitRsqrtLayer</a></div><div class="ttdeci">void VisitRsqrtLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function a Reciprocal of square root layer should call back to when its Accept(ILayerVisitor&amp;) functi...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00937">Serializer.cpp:937</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_afb3379853398423f791269433f6bb43c"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#afb3379853398423f791269433f6bb43c">armnnSerializer::SerializerVisitor::VisitAbsLayer</a></div><div class="ttdeci">void VisitAbsLayer(const armnn::IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function an absolute layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00128">Serializer.cpp:128</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00452">Descriptors.hpp:452</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_afdc56797f18b4ec2b66469bd4553d65b"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#afdc56797f18b4ec2b66469bd4553d65b">armnnSerializer::SerializerVisitor::VisitStandInLayer</a></div><div class="ttdeci">void VisitStandInLayer(const armnn::IConnectableLayer *layer, const armnn::StandInDescriptor &amp;standInDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a StandInLayer should call back to when its Accept(ILaterVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l01245">Serializer.cpp:1245</a></div></div>
<div class="ttc" id="structarmnn_1_1_fill_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fill_descriptor.xhtml">armnn::FillDescriptor</a></div><div class="ttdoc">A FillDescriptor for the FillLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00715">Descriptors.hpp:715</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00618">Descriptors.hpp:618</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a5cba52e71687c849f356dd218bd7707c"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a5cba52e71687c849f356dd218bd7707c">armnnSerializer::SerializerVisitor::VisitFillLayer</a></div><div class="ttdeci">void VisitFillLayer(const armnn::IConnectableLayer *layer, const armnn::FillDescriptor &amp;fillDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a fill layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00470">Serializer.cpp:470</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_a5c02b1f1028daf64f7c6244ac68b37f5"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#a5c02b1f1028daf64f7c6244ac68b37f5">armnnSerializer::SerializerVisitor::VisitLogSoftmaxLayer</a></div><div class="ttdeci">void VisitLogSoftmaxLayer(const armnn::IConnectableLayer *layer, const armnn::LogSoftmaxDescriptor &amp;logSoftmaxDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a log softmax layer should call back to when its Accept(ILayerVisitor&amp;) function is inv...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00567">Serializer.cpp:567</a></div></div>
<div class="ttc" id="structarmnn_1_1_permute_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_permute_descriptor.xhtml">armnn::PermuteDescriptor</a></div><div class="ttdoc">A PermuteDescriptor for the PermuteLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00110">Descriptors.hpp:110</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml_aae3bf0ab71205ddf8916512ac8330a1e"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml#aae3bf0ab71205ddf8916512ac8330a1e">armnnSerializer::SerializerVisitor::VisitInstanceNormalizationLayer</a></div><div class="ttdeci">void VisitInstanceNormalizationLayer(const armnn::IConnectableLayer *layer, const armnn::InstanceNormalizationDescriptor &amp;instanceNormalizationDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that an instance normalization layer should call back to when its Accept(ILayerVisitor&amp;) fun...</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00526">Serializer.cpp:526</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_serializer_visitor_xhtml"><div class="ttname"><a href="classarmnn_serializer_1_1_serializer_visitor.xhtml">armnnSerializer::SerializerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8hpp_source.xhtml#l00021">Serializer.hpp:21</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdef"><b>Definition:</b> <a href="_internal_types_8hpp_source.xhtml#l00083">InternalTypes.hpp:83</a></div></div>
<div class="ttc" id="_neon_end_to_end_tests_8cpp_xhtml_ac0981848e4ae57729f14f72bd4caa9f8"><div class="ttname"><a href="_neon_end_to_end_tests_8cpp.xhtml#ac0981848e4ae57729f14f72bd4caa9f8">anchors</a></div><div class="ttdeci">std::vector&lt; float &gt; anchors({ 0.5f, 0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 1.0f, 1.0f, 0.5f, 10.5f, 1.0f, 1.0f, 0.5f, 10.5f, 1.0f, 1.0f, 0.5f, 100.5f, 1.0f, 1.0f })</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bff0d59bec81fb3d13742442d8f4421d.xhtml">armnnSerializer</a></li><li class="navelem"><a class="el" href="_serializer_8hpp.xhtml">Serializer.hpp</a></li>
    <li class="footer">Generated on Tue Aug 25 2020 12:29:41 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
