<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/UnitTests.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_unit_tests_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">UnitTests.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_unit_tests_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_logging_8hpp.xhtml">armnn/Logging.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_utils_8hpp.xhtml">armnn/Utils.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_ref_workload_factory_8hpp.xhtml">reference/RefWorkloadFactory.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_layer_tests_8hpp.xhtml">backendsCommon/test/LayerTests.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_workload_factory_helper_8hpp.xhtml">backendsCommon/test/WorkloadFactoryHelper.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_helpers_8hpp.xhtml">TensorHelpers.hpp</a>&quot;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;boost/test/unit_test.hpp&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="_unit_tests_8hpp.xhtml#af9e4dd62da9266a1364032ada0267f9b">   15</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="_unit_tests_8hpp.xhtml#af9e4dd62da9266a1364032ada0267f9b">ConfigureLoggingTest</a>()</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="comment">// Configures logging for both the ARMNN library and this test program.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="namespacearmnn.xhtml#aa59f7a819c3e29d10ffc41e5c0616872">armnn::ConfigureLogging</a>(<span class="keyword">true</span>, <span class="keyword">true</span>, <a class="code" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3da882384ec38ce8d9582b57e70861730e4">armnn::LogSeverity::Fatal</a>);</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">// The following macros require the caller to have defined FactoryType, with one of the following using statements:</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">//      using FactoryType = armnn::RefWorkloadFactory;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">//      using FactoryType = armnn::ClWorkloadFactory;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">//      using FactoryType = armnn::NeonWorkloadFactory;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/// Executes BOOST_TEST on CompareTensors() return value so that the predicate_result message is reported.</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">/// If the test reports itself as not supported then the tensors are not compared.</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">/// Additionally this checks that the supportedness reported by the test matches the name of the test.</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">/// Unsupported tests must be &#39;tagged&#39; by including &quot;UNSUPPORTED&quot; in their name.</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">/// This is useful because it clarifies that the feature being tested is not actually supported</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">/// (a passed test with the name of a feature would imply that feature was supported).</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">/// If support is added for a feature, the test case will fail because the name incorrectly contains UNSUPPORTED.</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">/// If support is removed for a feature, the test case will fail because the name doesn&#39;t contain UNSUPPORTED.</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, std::<span class="keywordtype">size_t</span> n&gt;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="_unit_tests_8hpp.xhtml#acbe506e0365feeed352effe52b1e4852">   36</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="_unit_tests_8hpp.xhtml#acbe506e0365feeed352effe52b1e4852">CompareTestResultIfSupported</a>(<span class="keyword">const</span> std::string&amp; testName, <span class="keyword">const</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, n&gt;</a>&amp; testResult)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordtype">bool</span> testNameIndicatesUnsupported = testName.find(<span class="stringliteral">&quot;UNSUPPORTED&quot;</span>) != std::string::npos;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    BOOST_CHECK_MESSAGE(testNameIndicatesUnsupported != testResult.<a class="code" href="struct_layer_test_result.xhtml#a23a6c8147ba9825335d1d6246c11d675">supported</a>,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="stringliteral">&quot;The test name does not match the supportedness it is reporting&quot;</span>);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">if</span> (testResult.<a class="code" href="struct_layer_test_result.xhtml#a23a6c8147ba9825335d1d6246c11d675">supported</a>)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        BOOST_TEST(<a class="code" href="_tensor_helpers_8hpp.xhtml#aa5a4b75c5fa1d312b4f3615b2315ff58">CompareTensors</a>(testResult.<a class="code" href="struct_layer_test_result.xhtml#ac9d44d346bb7c89f7a7aa31d2bee947f">output</a>, testResult.<a class="code" href="struct_layer_test_result.xhtml#a73610ea6c776cc66e5a78dd842a39b8b">outputExpected</a>, testResult.<a class="code" href="struct_layer_test_result.xhtml#acf486f22af9761356425ade095f8a7fe">compareBoolean</a>));</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    }</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, std::<span class="keywordtype">size_t</span> n&gt;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="_unit_tests_8hpp.xhtml#a8d26216e495ef45a749c03e6c6edcd38">   48</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="_unit_tests_8hpp.xhtml#acbe506e0365feeed352effe52b1e4852">CompareTestResultIfSupported</a>(<span class="keyword">const</span> std::string&amp; testName, <span class="keyword">const</span> std::vector&lt;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, n&gt;</a>&gt;&amp; testResult)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordtype">bool</span> testNameIndicatesUnsupported = testName.find(<span class="stringliteral">&quot;UNSUPPORTED&quot;</span>) != std::string::npos;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; testResult.size(); ++i)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        BOOST_CHECK_MESSAGE(testNameIndicatesUnsupported != testResult[i].<a class="code" href="namespacearmnn.xhtml#a02847c99a2acae3b267615479f93ab55">supported</a>,</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="stringliteral">&quot;The test name does not match the supportedness it is reporting&quot;</span>);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">if</span> (testResult[i].supported)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            BOOST_TEST(<a class="code" href="_tensor_helpers_8hpp.xhtml#aa5a4b75c5fa1d312b4f3615b2315ff58">CompareTensors</a>(testResult[i].output, testResult[i].outputExpected));</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        }</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> <a class="code" href="_cl_layer_tests_8cpp.xhtml#a255d08081b372809a176b588529296aa">FactoryType</a>, <span class="keyword">typename</span> TFuncPtr, <span class="keyword">typename</span>... Args&gt;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="_unit_tests_8hpp.xhtml#a10075eca890bd829a87b914c5aa18cb3">   63</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="_unit_tests_8hpp.xhtml#a10075eca890bd829a87b914c5aa18cb3">RunTestFunction</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* testName, TFuncPtr testFunction, Args... args)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    std::unique_ptr&lt;armnn::Profiler&gt; profiler = std::make_unique&lt;armnn::Profiler&gt;();</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classarmnn_1_1_profiler_manager.xhtml#a93857080c2523bf3395e7aa7e6024d5c">armnn::ProfilerManager::GetInstance</a>().<a class="code" href="classarmnn_1_1_profiler_manager.xhtml#a029a40ab5d837b3d4f5d3900ceb6a8f9">RegisterProfiler</a>(profiler.get());</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">auto</span> memoryManager = WorkloadFactoryHelper&lt;FactoryType&gt;::GetMemoryManager();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="_cl_layer_tests_8cpp.xhtml#a255d08081b372809a176b588529296aa">FactoryType</a> workloadFactory = WorkloadFactoryHelper&lt;FactoryType&gt;::GetFactory(memoryManager);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">auto</span> testResult = (*testFunction)(workloadFactory, memoryManager, args...);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="_unit_tests_8hpp.xhtml#acbe506e0365feeed352effe52b1e4852">CompareTestResultIfSupported</a>(testName, testResult);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarmnn_1_1_profiler_manager.xhtml#a93857080c2523bf3395e7aa7e6024d5c">armnn::ProfilerManager::GetInstance</a>().<a class="code" href="classarmnn_1_1_profiler_manager.xhtml#a029a40ab5d837b3d4f5d3900ceb6a8f9">RegisterProfiler</a>(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="_unit_tests_8hpp.xhtml#a44ea827d997f1aa0e39d9a6d6675465c">   77</a></span>&#160;<span class="preprocessor">#define ARMNN_SIMPLE_TEST_CASE(TestName, TestFunction) \</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">    BOOST_AUTO_TEST_CASE(TestName) \</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor">    { \</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">        TestFunction(); \</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="_unit_tests_8hpp.xhtml#ae6ce9102495fab6e3957f61281238e3d">   83</a></span>&#160;<span class="preprocessor">#define ARMNN_AUTO_TEST_CASE(TestName, TestFunction, ...) \</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">    BOOST_AUTO_TEST_CASE(TestName) \</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">    { \</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">        RunTestFunction&lt;FactoryType&gt;(#TestName, &amp;TestFunction, ##__VA_ARGS__); \</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> <a class="code" href="_cl_layer_tests_8cpp.xhtml#a255d08081b372809a176b588529296aa">FactoryType</a>, <span class="keyword">typename</span> TFuncPtr, <span class="keyword">typename</span>... Args&gt;</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="_unit_tests_8hpp.xhtml#a2d8f71b48349370e1d5c0a9b39e3d162">   90</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="_unit_tests_8hpp.xhtml#a2d8f71b48349370e1d5c0a9b39e3d162">CompareRefTestFunction</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* testName, TFuncPtr testFunction, Args... args)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">auto</span> memoryManager = WorkloadFactoryHelper&lt;FactoryType&gt;::GetMemoryManager();</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="_cl_layer_tests_8cpp.xhtml#a255d08081b372809a176b588529296aa">FactoryType</a> workloadFactory = WorkloadFactoryHelper&lt;FactoryType&gt;::GetFactory(memoryManager);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="classarmnn_1_1_ref_workload_factory.xhtml">armnn::RefWorkloadFactory</a> refWorkloadFactory;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keyword">auto</span> testResult = (*testFunction)(workloadFactory, memoryManager, refWorkloadFactory, args...);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="_unit_tests_8hpp.xhtml#acbe506e0365feeed352effe52b1e4852">CompareTestResultIfSupported</a>(testName, testResult);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="_unit_tests_8hpp.xhtml#a07e04849fc0700facf91fecce71ff733">  101</a></span>&#160;<span class="preprocessor">#define ARMNN_COMPARE_REF_AUTO_TEST_CASE(TestName, TestFunction, ...) \</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">    BOOST_AUTO_TEST_CASE(TestName) \</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">    { \</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">        CompareRefTestFunction&lt;FactoryType&gt;(#TestName, &amp;TestFunction, ##__VA_ARGS__); \</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="_unit_tests_8hpp.xhtml#af2016edd458865d471fe1afc82b3c126">  107</a></span>&#160;<span class="preprocessor">#define ARMNN_COMPARE_REF_FIXTURE_TEST_CASE(TestName, Fixture, TestFunction, ...) \</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">    BOOST_FIXTURE_TEST_CASE(TestName, Fixture) \</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">    { \</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">        CompareRefTestFunction&lt;FactoryType&gt;(#TestName, &amp;TestFunction, ##__VA_ARGS__); \</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">    }</span></div><div class="ttc" id="_ref_workload_factory_8hpp_xhtml"><div class="ttname"><a href="_ref_workload_factory_8hpp.xhtml">RefWorkloadFactory.hpp</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_acf486f22af9761356425ade095f8a7fe"><div class="ttname"><a href="struct_layer_test_result.xhtml#acf486f22af9761356425ade095f8a7fe">LayerTestResult::compareBoolean</a></div><div class="ttdeci">bool compareBoolean</div><div class="ttdef"><b>Definition:</b> <a href="_layer_test_result_8hpp_source.xhtml#l00044">LayerTestResult.hpp:44</a></div></div>
<div class="ttc" id="_utils_8hpp_xhtml"><div class="ttname"><a href="_utils_8hpp.xhtml">Utils.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_profiler_manager_xhtml_a029a40ab5d837b3d4f5d3900ceb6a8f9"><div class="ttname"><a href="classarmnn_1_1_profiler_manager.xhtml#a029a40ab5d837b3d4f5d3900ceb6a8f9">armnn::ProfilerManager::RegisterProfiler</a></div><div class="ttdeci">void RegisterProfiler(Profiler *profiler)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_8cpp_source.xhtml#l00493">Profiling.cpp:493</a></div></div>
<div class="ttc" id="classarmnn_1_1_profiler_manager_xhtml_a93857080c2523bf3395e7aa7e6024d5c"><div class="ttname"><a href="classarmnn_1_1_profiler_manager.xhtml#a93857080c2523bf3395e7aa7e6024d5c">armnn::ProfilerManager::GetInstance</a></div><div class="ttdeci">static ProfilerManager &amp; GetInstance()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_8cpp_source.xhtml#l00486">Profiling.cpp:486</a></div></div>
<div class="ttc" id="_tensor_helpers_8hpp_xhtml_aa5a4b75c5fa1d312b4f3615b2315ff58"><div class="ttname"><a href="_tensor_helpers_8hpp.xhtml#aa5a4b75c5fa1d312b4f3615b2315ff58">CompareTensors</a></div><div class="ttdeci">boost::test_tools::predicate_result CompareTensors(const boost::multi_array&lt; T, n &gt; &amp;a, const boost::multi_array&lt; T, n &gt; &amp;b, bool compareBoolean=false, bool isDynamic=false)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_helpers_8hpp_source.xhtml#l00075">TensorHelpers.hpp:75</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_aa59f7a819c3e29d10ffc41e5c0616872"><div class="ttname"><a href="namespacearmnn.xhtml#aa59f7a819c3e29d10ffc41e5c0616872">armnn::ConfigureLogging</a></div><div class="ttdeci">void ConfigureLogging(bool printToStandardOutput, bool printToDebugOutput, LogSeverity severity)</div><div class="ttdoc">Configures the logging behaviour of the ARMNN library. </div><div class="ttdef"><b>Definition:</b> <a href="_utils_8cpp_source.xhtml#l00010">Utils.cpp:10</a></div></div>
<div class="ttc" id="_layer_tests_8hpp_xhtml"><div class="ttname"><a href="_layer_tests_8hpp.xhtml">LayerTests.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a02847c99a2acae3b267615479f93ab55"><div class="ttname"><a href="namespacearmnn.xhtml#a02847c99a2acae3b267615479f93ab55">armnn::supported</a></div><div class="ttdeci">ISubgraphViewConverter supported</div><div class="ttdef"><b>Definition:</b> <a href="_i_subgraph_view_converter_8hpp_source.xhtml#l00031">ISubgraphViewConverter.hpp:31</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a73610ea6c776cc66e5a78dd842a39b8b"><div class="ttname"><a href="struct_layer_test_result.xhtml#a73610ea6c776cc66e5a78dd842a39b8b">LayerTestResult::outputExpected</a></div><div class="ttdeci">boost::multi_array&lt; T, n &gt; outputExpected</div><div class="ttdef"><b>Definition:</b> <a href="_layer_test_result_8hpp_source.xhtml#l00042">LayerTestResult.hpp:42</a></div></div>
<div class="ttc" id="_unit_tests_8hpp_xhtml_a2d8f71b48349370e1d5c0a9b39e3d162"><div class="ttname"><a href="_unit_tests_8hpp.xhtml#a2d8f71b48349370e1d5c0a9b39e3d162">CompareRefTestFunction</a></div><div class="ttdeci">void CompareRefTestFunction(const char *testName, TFuncPtr testFunction, Args... args)</div><div class="ttdef"><b>Definition:</b> <a href="_unit_tests_8hpp_source.xhtml#l00090">UnitTests.hpp:90</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a93a3ba385cad27c4774e5fe64c025d3da882384ec38ce8d9582b57e70861730e4"><div class="ttname"><a href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3da882384ec38ce8d9582b57e70861730e4">armnn::LogSeverity::Fatal</a></div></div>
<div class="ttc" id="_tensor_helpers_8hpp_xhtml"><div class="ttname"><a href="_tensor_helpers_8hpp.xhtml">TensorHelpers.hpp</a></div></div>
<div class="ttc" id="_unit_tests_8hpp_xhtml_a10075eca890bd829a87b914c5aa18cb3"><div class="ttname"><a href="_unit_tests_8hpp.xhtml#a10075eca890bd829a87b914c5aa18cb3">RunTestFunction</a></div><div class="ttdeci">void RunTestFunction(const char *testName, TFuncPtr testFunction, Args... args)</div><div class="ttdef"><b>Definition:</b> <a href="_unit_tests_8hpp_source.xhtml#l00063">UnitTests.hpp:63</a></div></div>
<div class="ttc" id="_unit_tests_8hpp_xhtml_acbe506e0365feeed352effe52b1e4852"><div class="ttname"><a href="_unit_tests_8hpp.xhtml#acbe506e0365feeed352effe52b1e4852">CompareTestResultIfSupported</a></div><div class="ttdeci">void CompareTestResultIfSupported(const std::string &amp;testName, const LayerTestResult&lt; T, n &gt; &amp;testResult)</div><div class="ttdoc">Executes BOOST_TEST on CompareTensors() return value so that the predicate_result message is reported...</div><div class="ttdef"><b>Definition:</b> <a href="_unit_tests_8hpp_source.xhtml#l00036">UnitTests.hpp:36</a></div></div>
<div class="ttc" id="classarmnn_1_1_ref_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_ref_workload_factory.xhtml">armnn::RefWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_ref_workload_factory_8hpp_source.xhtml#l00030">RefWorkloadFactory.hpp:30</a></div></div>
<div class="ttc" id="_unit_tests_8hpp_xhtml_af9e4dd62da9266a1364032ada0267f9b"><div class="ttname"><a href="_unit_tests_8hpp.xhtml#af9e4dd62da9266a1364032ada0267f9b">ConfigureLoggingTest</a></div><div class="ttdeci">void ConfigureLoggingTest()</div><div class="ttdef"><b>Definition:</b> <a href="_unit_tests_8hpp_source.xhtml#l00015">UnitTests.hpp:15</a></div></div>
<div class="ttc" id="_workload_factory_helper_8hpp_xhtml"><div class="ttname"><a href="_workload_factory_helper_8hpp.xhtml">WorkloadFactoryHelper.hpp</a></div></div>
<div class="ttc" id="_logging_8hpp_xhtml"><div class="ttname"><a href="_logging_8hpp.xhtml">Logging.hpp</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_ac9d44d346bb7c89f7a7aa31d2bee947f"><div class="ttname"><a href="struct_layer_test_result.xhtml#ac9d44d346bb7c89f7a7aa31d2bee947f">LayerTestResult::output</a></div><div class="ttdeci">boost::multi_array&lt; T, n &gt; output</div><div class="ttdef"><b>Definition:</b> <a href="_layer_test_result_8hpp_source.xhtml#l00041">LayerTestResult.hpp:41</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a23a6c8147ba9825335d1d6246c11d675"><div class="ttname"><a href="struct_layer_test_result.xhtml#a23a6c8147ba9825335d1d6246c11d675">LayerTestResult::supported</a></div><div class="ttdeci">bool supported</div><div class="ttdef"><b>Definition:</b> <a href="_layer_test_result_8hpp_source.xhtml#l00043">LayerTestResult.hpp:43</a></div></div>
<div class="ttc" id="_cl_layer_tests_8cpp_xhtml_a255d08081b372809a176b588529296aa"><div class="ttname"><a href="_cl_layer_tests_8cpp.xhtml#a255d08081b372809a176b588529296aa">FactoryType</a></div><div class="ttdeci">ClWorkloadFactory FactoryType</div><div class="ttdef"><b>Definition:</b> <a href="_cl_layer_tests_8cpp_source.xhtml#l00031">ClLayerTests.cpp:31</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_test_result_8hpp_source.xhtml#l00030">LayerTestResult.hpp:30</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_unit_tests_8hpp.xhtml">UnitTests.hpp</a></li>
    <li class="footer">Generated on Tue Aug 25 2020 12:29:40 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
