<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: IDeserializer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_deserializer_1_1_i_deserializer.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classarmnn_deserializer_1_1_i_deserializer-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">IDeserializer Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_i_deserializer_8hpp_source.xhtml">IDeserializer.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for IDeserializer:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_deserializer_1_1_i_deserializer.png" usemap="#IDeserializer_map" alt=""/>
  <map id="IDeserializer_map" name="IDeserializer_map">
<area href="classarmnn_deserializer_1_1_deserializer.xhtml" alt="Deserializer" shape="rect" coords="0,56,83,80"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7dd0134440a006226f95d547f0b3e89c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml#a7dd0134440a006226f95d547f0b3e89c">CreateNetworkFromBinary</a> (const std::vector&lt; uint8_t &gt; &amp;binaryContent)=0</td></tr>
<tr class="memdesc:a7dd0134440a006226f95d547f0b3e89c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an input network from binary file contents.  <a href="#a7dd0134440a006226f95d547f0b3e89c">More...</a><br /></td></tr>
<tr class="separator:a7dd0134440a006226f95d547f0b3e89c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2fc17d61fa555423b2b1665c918cf5a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml#af2fc17d61fa555423b2b1665c918cf5a">CreateNetworkFromBinary</a> (std::istream &amp;binaryContent)=0</td></tr>
<tr class="memdesc:af2fc17d61fa555423b2b1665c918cf5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an input network from a binary input stream.  <a href="#af2fc17d61fa555423b2b1665c918cf5a">More...</a><br /></td></tr>
<tr class="separator:af2fc17d61fa555423b2b1665c918cf5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81942c860d8fb0a0e728df3d81063695"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarmnn_deserializer_1_1_binding_point_info.xhtml">BindingPointInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml#a81942c860d8fb0a0e728df3d81063695">GetNetworkInputBindingInfo</a> (unsigned int layerId, const std::string &amp;name) const =0</td></tr>
<tr class="memdesc:a81942c860d8fb0a0e728df3d81063695"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve binding info (layer id and tensor info) for the network input identified by the given layer name and layers id.  <a href="#a81942c860d8fb0a0e728df3d81063695">More...</a><br /></td></tr>
<tr class="separator:a81942c860d8fb0a0e728df3d81063695"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55f70496b6f2ff261e36a5fceacf240d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarmnn_deserializer_1_1_binding_point_info.xhtml">BindingPointInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml#a55f70496b6f2ff261e36a5fceacf240d">GetNetworkOutputBindingInfo</a> (unsigned int layerId, const std::string &amp;name) const =0</td></tr>
<tr class="memdesc:a55f70496b6f2ff261e36a5fceacf240d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve binding info (layer id and tensor info) for the network output identified by the given layer name and layers id.  <a href="#a55f70496b6f2ff261e36a5fceacf240d">More...</a><br /></td></tr>
<tr class="separator:a55f70496b6f2ff261e36a5fceacf240d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a85f0c438b389992a68adeb6af59f362d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml">IDeserializer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml#a85f0c438b389992a68adeb6af59f362d">CreateRaw</a> ()</td></tr>
<tr class="separator:a85f0c438b389992a68adeb6af59f362d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af116abd698a7feb92876ae48917005a4"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearmnn_deserializer.xhtml#ad33c6040680106b9af566d7269d8c949">IDeserializerPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml#af116abd698a7feb92876ae48917005a4">Create</a> ()</td></tr>
<tr class="separator:af116abd698a7feb92876ae48917005a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe33a6c8701eff4d2f7233ce441e0426"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml#afe33a6c8701eff4d2f7233ce441e0426">Destroy</a> (<a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml">IDeserializer</a> *parser)</td></tr>
<tr class="separator:afe33a6c8701eff4d2f7233ce441e0426"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:aa46cab6453307d54a7ff94f19ee47d53"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml#aa46cab6453307d54a7ff94f19ee47d53">~IDeserializer</a> ()</td></tr>
<tr class="separator:aa46cab6453307d54a7ff94f19ee47d53"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_i_deserializer_8hpp_source.xhtml#l00027">27</a> of file <a class="el" href="_i_deserializer_8hpp_source.xhtml">IDeserializer.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aa46cab6453307d54a7ff94f19ee47d53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa46cab6453307d54a7ff94f19ee47d53">&#9670;&nbsp;</a></span>~IDeserializer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml">IDeserializer</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_deserializer_8hpp_source.xhtml#l00051">51</a> of file <a class="el" href="_i_deserializer_8hpp_source.xhtml">IDeserializer.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{};</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af116abd698a7feb92876ae48917005a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af116abd698a7feb92876ae48917005a4">&#9670;&nbsp;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn_deserializer.xhtml#ad33c6040680106b9af566d7269d8c949">IDeserializerPtr</a> Create </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00696">696</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>

<p class="reference">References <a class="el" href="_deserializer_8cpp_source.xhtml#l00691">IDeserializer::CreateRaw()</a>, and <a class="el" href="_deserializer_8cpp_source.xhtml#l00701">IDeserializer::Destroy()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_activation_serialization_tests_8cpp_source.xhtml#l00032">BOOST_AUTO_TEST_CASE()</a>, and <a class="el" href="_arm_n_n_quantizer_main_8cpp_source.xhtml#l00017">main()</a>.</p>
<div class="fragment"><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;{</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn_deserializer.xhtml#ad33c6040680106b9af566d7269d8c949">IDeserializerPtr</a>(<a class="code" href="classarmnn_deserializer_1_1_i_deserializer.xhtml#a85f0c438b389992a68adeb6af59f362d">CreateRaw</a>(), &amp;<a class="code" href="classarmnn_deserializer_1_1_i_deserializer.xhtml#afe33a6c8701eff4d2f7233ce441e0426">IDeserializer::Destroy</a>);</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;}</div><div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_xhtml_afe33a6c8701eff4d2f7233ce441e0426"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer.xhtml#afe33a6c8701eff4d2f7233ce441e0426">armnnDeserializer::IDeserializer::Destroy</a></div><div class="ttdeci">static void Destroy(IDeserializer *parser)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00701">Deserializer.cpp:701</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_ad33c6040680106b9af566d7269d8c949"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#ad33c6040680106b9af566d7269d8c949">armnnDeserializer::IDeserializerPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IDeserializer, void(*)(IDeserializer *parser)&gt; IDeserializerPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_deserializer_8hpp_source.xhtml#l00025">IDeserializer.hpp:25</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_xhtml_a85f0c438b389992a68adeb6af59f362d"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer.xhtml#a85f0c438b389992a68adeb6af59f362d">armnnDeserializer::IDeserializer::CreateRaw</a></div><div class="ttdeci">static IDeserializer * CreateRaw()</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00691">Deserializer.cpp:691</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7dd0134440a006226f95d547f0b3e89c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dd0134440a006226f95d547f0b3e89c">&#9670;&nbsp;</a></span>CreateNetworkFromBinary() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromBinary </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; uint8_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>binaryContent</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create an input network from binary file contents. </p>

<p>Implemented in <a class="el" href="classarmnn_deserializer_1_1_deserializer.xhtml#ae8ee09f5e3e78ecfdf00acfdc37588dc">Deserializer</a>.</p>

</div>
</div>
<a id="af2fc17d61fa555423b2b1665c918cf5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2fc17d61fa555423b2b1665c918cf5a">&#9670;&nbsp;</a></span>CreateNetworkFromBinary() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromBinary </td>
          <td>(</td>
          <td class="paramtype">std::istream &amp;&#160;</td>
          <td class="paramname"><em>binaryContent</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create an input network from a binary input stream. </p>

<p>Implemented in <a class="el" href="classarmnn_deserializer_1_1_deserializer.xhtml#aba8f9e71e60dd58b6e1165b3accd43b8">Deserializer</a>.</p>

</div>
</div>
<a id="a85f0c438b389992a68adeb6af59f362d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85f0c438b389992a68adeb6af59f362d">&#9670;&nbsp;</a></span>CreateRaw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml">IDeserializer</a> * CreateRaw </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00691">691</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>

<p class="reference">References <a class="el" href="_deserializer_8cpp_source.xhtml#l00182">Deserializer::Deserializer()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_deserializer_8cpp_source.xhtml#l00696">IDeserializer::Create()</a>.</p>
<div class="fragment"><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;{</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> Deserializer();</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="afe33a6c8701eff4d2f7233ce441e0426"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe33a6c8701eff4d2f7233ce441e0426">&#9670;&nbsp;</a></span>Destroy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml">IDeserializer</a> *&#160;</td>
          <td class="paramname"><em>parser</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00701">701</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_deserializer_8cpp_source.xhtml#l00696">IDeserializer::Create()</a>.</p>
<div class="fragment"><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;{</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    <span class="keyword">delete</span> parser;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a81942c860d8fb0a0e728df3d81063695"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81942c860d8fb0a0e728df3d81063695">&#9670;&nbsp;</a></span>GetNetworkInputBindingInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structarmnn_deserializer_1_1_binding_point_info.xhtml">BindingPointInfo</a> GetNetworkInputBindingInfo </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>layerId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieve binding info (layer id and tensor info) for the network input identified by the given layer name and layers id. </p>

<p>Implemented in <a class="el" href="classarmnn_deserializer_1_1_deserializer.xhtml#a66c5e4250559faefd7f0fa35ccbdc9eb">Deserializer</a>.</p>

</div>
</div>
<a id="a55f70496b6f2ff261e36a5fceacf240d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55f70496b6f2ff261e36a5fceacf240d">&#9670;&nbsp;</a></span>GetNetworkOutputBindingInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structarmnn_deserializer_1_1_binding_point_info.xhtml">BindingPointInfo</a> GetNetworkOutputBindingInfo </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>layerId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieve binding info (layer id and tensor info) for the network output identified by the given layer name and layers id. </p>

<p>Implemented in <a class="el" href="classarmnn_deserializer_1_1_deserializer.xhtml#ae9cf8ca62e8da6d21e08dc130f68dce4">Deserializer</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnnDeserializer/<a class="el" href="_i_deserializer_8hpp_source.xhtml">IDeserializer.hpp</a></li>
<li>src/armnnDeserializer/<a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn_deserializer.xhtml">armnnDeserializer</a></li><li class="navelem"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml">IDeserializer</a></li>
    <li class="footer">Generated on Tue Aug 25 2020 12:29:52 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
