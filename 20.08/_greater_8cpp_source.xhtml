<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnnTfParser/test/Greater.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_greater_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Greater.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_greater_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;boost/test/unit_test.hpp&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tf_parser_8hpp.xhtml">armnnTfParser/ITfParser.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_parser_prototxt_fixture_8hpp.xhtml">ParserPrototxtFixture.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<a class="code" href="_output_shape_of_squeeze_8cpp.xhtml#ae3a6cb217a792718f2bd0e8f45e3ca9e">BOOST_AUTO_TEST_SUITE</a>(TensorflowParser)</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">struct </span>GreaterFixture : <span class="keyword">public</span> <a class="code" href="structarmnn_utils_1_1_parser_prototxt_fixture.xhtml">armnnUtils::ParserPrototxtFixture</a>&lt;armnnTfParser::ITfParser&gt;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    GreaterFixture()</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;        <a class="code" href="structarmnn_utils_1_1_parser_prototxt_fixture.xhtml#a5ca0f757171382fbf7fa5b05b447b024">m_Prototext</a> = R<span class="stringliteral">&quot;(</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="stringliteral">node {</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="stringliteral">  name: &quot;input0&quot;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="stringliteral">  op: &quot;Placeholder&quot;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="stringliteral">  attr {</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="stringliteral">    key: &quot;dtype&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="stringliteral">    value {</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="stringliteral">      type: DT_FLOAT</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="stringliteral">  }</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="stringliteral">  attr {</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="stringliteral">    key: &quot;shape&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="stringliteral">    value {</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="stringliteral">      shape {</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="stringliteral">      }</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="stringliteral">  }</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="stringliteral">}</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="stringliteral">node {</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="stringliteral">  name: &quot;input1&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="stringliteral">  op: &quot;Placeholder&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="stringliteral">  attr {</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">    key: &quot;dtype&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral">    value {</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="stringliteral">      type: DT_FLOAT</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="stringliteral">  }</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="stringliteral">  attr {</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="stringliteral">    key: &quot;shape&quot;</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral">    value {</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral">      shape {</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">      }</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="stringliteral">  }</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="stringliteral">}</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="stringliteral">node {</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="stringliteral">  name: &quot;output&quot;</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="stringliteral">  op: &quot;Greater&quot;</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="stringliteral">  input: &quot;input0&quot;</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">  input: &quot;input1&quot;</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">  attr {</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">    key: &quot;T&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="stringliteral">    value {</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="stringliteral">      type: DT_FLOAT</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="stringliteral">  }</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="stringliteral">}</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="stringliteral">        )&quot;;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="stringliteral">};</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="_greater_8cpp.xhtml#ab711e2eff6de5850f806e0ebf88c5a02">   67</a></span>&#160;<span class="stringliteral"><a class="code" href="_greater_8cpp.xhtml#ab711e2eff6de5850f806e0ebf88c5a02">BOOST_FIXTURE_TEST_CASE</a>(ParseGreaterUnsupportedBroadcast, GreaterFixture)</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="stringliteral">{</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="stringliteral">    BOOST_REQUIRE_THROW(<a class="code" href="structarmnn_utils_1_1_parser_prototxt_fixture.xhtml#a769404f2985a027a0d626fedfd4de1e9">Setup</a>({ { </span><span class="stringliteral">&quot;input0&quot;</span>, {2, 3} },</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                { <span class="stringliteral">&quot;input1&quot;</span>, {1, 2, 2, 3} } },</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                              { <span class="stringliteral">&quot;output&quot;</span> }),</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                        <a class="code" href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">struct </span>GreaterFixtureAutoSetup : <span class="keyword">public</span> GreaterFixture</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    GreaterFixtureAutoSetup(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>&amp; input0Shape,</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>&amp; input1Shape)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                : GreaterFixture()</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        Setup({ { <span class="stringliteral">&quot;input0&quot;</span>, input0Shape },</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                { <span class="stringliteral">&quot;input1&quot;</span>, input1Shape } },</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;              { <span class="stringliteral">&quot;output&quot;</span> });</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;};</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">struct </span>GreaterFixtureTwoByTwo : <span class="keyword">public</span> GreaterFixtureAutoSetup</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    GreaterFixtureTwoByTwo() : GreaterFixtureAutoSetup({2, 2}, {2, 2}) {}</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;};</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="_greater_8cpp.xhtml#afa85c5b3d00a03469c57c7a093b884b9">   92</a></span>&#160;<a class="code" href="_greater_8cpp.xhtml#ab711e2eff6de5850f806e0ebf88c5a02">BOOST_FIXTURE_TEST_CASE</a>(ParseGreaterTwoByTwo, GreaterFixtureTwoByTwo)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    RunComparisonTest&lt;2&gt;({ { <span class="stringliteral">&quot;input0&quot;</span>, { 1.0f, 2.0f, 3.0f, 4.0f} },</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                           { <span class="stringliteral">&quot;input1&quot;</span>, { 1.0f, 5.0f, 2.0f, 2.0f} } },</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                         { { <span class="stringliteral">&quot;output&quot;</span>, { 0, 0, 1, 1} } });</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;}</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword">struct </span>GreaterBroadcast1DAnd4D : <span class="keyword">public</span> GreaterFixtureAutoSetup</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;{</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    GreaterBroadcast1DAnd4D() : GreaterFixtureAutoSetup({1}, {1,1,2,2}) {}</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;};</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="_greater_8cpp.xhtml#aa438947e58fe7b11178ee322ba981bdf">  104</a></span>&#160;<a class="code" href="_greater_8cpp.xhtml#ab711e2eff6de5850f806e0ebf88c5a02">BOOST_FIXTURE_TEST_CASE</a>(ParseGreaterBroadcast1DToTwoByTwo, GreaterBroadcast1DAnd4D)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    RunComparisonTest&lt;4&gt;({ { <span class="stringliteral">&quot;input0&quot;</span>, { 2.0f } },</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                           { <span class="stringliteral">&quot;input1&quot;</span>, { 1.0f, 2.0f, 3.0f, 2.0f } } },</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                         { { <span class="stringliteral">&quot;output&quot;</span>, { 1, 0, 0, 0 } } });</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">struct </span>GreaterBroadcast4DAnd1D : <span class="keyword">public</span> GreaterFixtureAutoSetup</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    GreaterBroadcast4DAnd1D() : GreaterFixtureAutoSetup({1,1,2,2}, {1}) {}</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;};</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="_greater_8cpp.xhtml#aa55589c6ce9f8167fe98b89f14d41132">  116</a></span>&#160;<a class="code" href="_greater_8cpp.xhtml#ab711e2eff6de5850f806e0ebf88c5a02">BOOST_FIXTURE_TEST_CASE</a>(ParseGreaterBroadcast4DAnd1D, GreaterBroadcast4DAnd1D)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    RunComparisonTest&lt;4&gt;({ { <span class="stringliteral">&quot;input0&quot;</span>, { 1.0f, 2.0f, 3.0f, 2.0f } },</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                           { <span class="stringliteral">&quot;input1&quot;</span>, { 3.0f } } },</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                         { { <span class="stringliteral">&quot;output&quot;</span>, { 0, 0, 0, 0 } } });</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keyword">struct </span>GreaterMultiDimBroadcast : <span class="keyword">public</span> GreaterFixtureAutoSetup</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    GreaterMultiDimBroadcast() : GreaterFixtureAutoSetup({1,1,2,1}, {1,2,1,3}) {}</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;};</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="_greater_8cpp.xhtml#abdb85c09c55c6a1bbd1b7fa297100fa6">  128</a></span>&#160;<a class="code" href="_greater_8cpp.xhtml#ab711e2eff6de5850f806e0ebf88c5a02">BOOST_FIXTURE_TEST_CASE</a>(ParseGreaterMultiDimBroadcast, GreaterMultiDimBroadcast)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    RunComparisonTest&lt;4&gt;({ { <span class="stringliteral">&quot;input0&quot;</span>, { 1.0f, 2.0f } },</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                           { <span class="stringliteral">&quot;input1&quot;</span>, { 1.0f, 2.0f, 3.0f,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                         3.0f, 2.0f, 2.0f } } },</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                         { { <span class="stringliteral">&quot;output&quot;</span>, { 0, 0, 0,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                         1, 0, 0,</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                         0, 0, 0,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                                         0, 0, 0 } } });</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<a class="code" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END</a>()</div><div class="ttc" id="_output_shape_of_squeeze_8cpp_xhtml_ae3a6cb217a792718f2bd0e8f45e3ca9e"><div class="ttname"><a href="_output_shape_of_squeeze_8cpp.xhtml#ae3a6cb217a792718f2bd0e8f45e3ca9e">BOOST_AUTO_TEST_SUITE</a></div><div class="ttdeci">BOOST_AUTO_TEST_SUITE(TensorflowLiteParser)</div></div>
<div class="ttc" id="structarmnn_utils_1_1_parser_prototxt_fixture_xhtml_a5ca0f757171382fbf7fa5b05b447b024"><div class="ttname"><a href="structarmnn_utils_1_1_parser_prototxt_fixture.xhtml#a5ca0f757171382fbf7fa5b05b447b024">armnnUtils::ParserPrototxtFixture&lt; armnnTfParser::ITfParser &gt;::m_Prototext</a></div><div class="ttdeci">std::string m_Prototext</div><div class="ttdef"><b>Definition:</b> <a href="_parser_prototxt_fixture_8hpp_source.xhtml#l00068">ParserPrototxtFixture.hpp:68</a></div></div>
<div class="ttc" id="_i_tf_parser_8hpp_xhtml"><div class="ttname"><a href="_i_tf_parser_8hpp.xhtml">ITfParser.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="_greater_8cpp_xhtml_ab711e2eff6de5850f806e0ebf88c5a02"><div class="ttname"><a href="_greater_8cpp.xhtml#ab711e2eff6de5850f806e0ebf88c5a02">BOOST_FIXTURE_TEST_CASE</a></div><div class="ttdeci">BOOST_FIXTURE_TEST_CASE(ParseGreaterUnsupportedBroadcast, GreaterFixture)</div><div class="ttdef"><b>Definition:</b> <a href="_greater_8cpp_source.xhtml#l00067">Greater.cpp:67</a></div></div>
<div class="ttc" id="_parser_prototxt_fixture_8hpp_xhtml"><div class="ttname"><a href="_parser_prototxt_fixture_8hpp.xhtml">ParserPrototxtFixture.hpp</a></div></div>
<div class="ttc" id="_profiler_tests_8cpp_xhtml_af7f71af5c6c124222dd1c42c5df892f4"><div class="ttname"><a href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END</a></div><div class="ttdeci">BOOST_AUTO_TEST_SUITE_END()</div></div>
<div class="ttc" id="classarmnn_1_1_parse_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00092">Exceptions.hpp:92</a></div></div>
<div class="ttc" id="structarmnn_utils_1_1_parser_prototxt_fixture_xhtml_a769404f2985a027a0d626fedfd4de1e9"><div class="ttname"><a href="structarmnn_utils_1_1_parser_prototxt_fixture.xhtml#a769404f2985a027a0d626fedfd4de1e9">armnnUtils::ParserPrototxtFixture::Setup</a></div><div class="ttdeci">void Setup()</div><div class="ttdef"><b>Definition:</b> <a href="_parser_prototxt_fixture_8hpp_source.xhtml#l00140">ParserPrototxtFixture.hpp:140</a></div></div>
<div class="ttc" id="structarmnn_utils_1_1_parser_prototxt_fixture_xhtml"><div class="ttname"><a href="structarmnn_utils_1_1_parser_prototxt_fixture.xhtml">armnnUtils::ParserPrototxtFixture</a></div><div class="ttdef"><b>Definition:</b> <a href="_parser_prototxt_fixture_8hpp_source.xhtml#l00024">ParserPrototxtFixture.hpp:24</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_50aba35e23cba3c8856f8642cc06d5dc.xhtml">armnnTfParser</a></li><li class="navelem"><a class="el" href="dir_4ccaefd65a1feacebd3c00536508ef51.xhtml">test</a></li><li class="navelem"><a class="el" href="_greater_8cpp.xhtml">Greater.cpp</a></li>
    <li class="footer">Generated on Tue Aug 25 2020 12:29:41 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
