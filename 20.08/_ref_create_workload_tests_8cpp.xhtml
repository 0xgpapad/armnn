<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/reference/test/RefCreateWorkloadTests.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_ref_create_workload_tests_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">RefCreateWorkloadTests.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="_create_workload_8hpp_source.xhtml">test/CreateWorkload.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_polymorphic_downcast_8hpp_source.xhtml">armnn/utility/PolymorphicDowncast.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_ref_tensor_handle_8hpp_source.xhtml">reference/RefTensorHandle.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_ref_workload_factory_8hpp_source.xhtml">reference/RefWorkloadFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_ref_workloads_8hpp_source.xhtml">reference/workloads/RefWorkloads.hpp</a>&gt;</code><br />
</div>
<p><a href="_ref_create_workload_tests_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a192497d6feca90c8a4ef93dcf5eac7b9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a192497d6feca90c8a4ef93dcf5eac7b9">BOOST_AUTO_TEST_CASE</a> (CreateActivationFloat32Workload)</td></tr>
<tr class="separator:a192497d6feca90c8a4ef93dcf5eac7b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8622e3bde188ef5c79024290da5c9ecb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a8622e3bde188ef5c79024290da5c9ecb">BOOST_AUTO_TEST_CASE</a> (CreateActivationUint8Workload)</td></tr>
<tr class="separator:a8622e3bde188ef5c79024290da5c9ecb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91343c247a116b44c01af985c72b1e4d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a91343c247a116b44c01af985c72b1e4d">BOOST_AUTO_TEST_CASE</a> (CreateAdditionFloatWorkload)</td></tr>
<tr class="separator:a91343c247a116b44c01af985c72b1e4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a272deaaf10839290c46ad4931cbe89db"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a272deaaf10839290c46ad4931cbe89db">BOOST_AUTO_TEST_CASE</a> (CreateAdditionUint8Workload)</td></tr>
<tr class="separator:a272deaaf10839290c46ad4931cbe89db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab69409ef77bd36d828dad3b4b9b6f6b2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ab69409ef77bd36d828dad3b4b9b6f6b2">BOOST_AUTO_TEST_CASE</a> (CreateAdditionInt16Workload)</td></tr>
<tr class="separator:ab69409ef77bd36d828dad3b4b9b6f6b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaca01bb3560a3d66859195795008014b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#aaca01bb3560a3d66859195795008014b">BOOST_AUTO_TEST_CASE</a> (CreateAdditionInt32Workload)</td></tr>
<tr class="separator:aaca01bb3560a3d66859195795008014b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04720c3eed6925141aac4468024fe077"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a04720c3eed6925141aac4468024fe077">BOOST_AUTO_TEST_CASE</a> (CreateSubtractionFloat32Workload)</td></tr>
<tr class="separator:a04720c3eed6925141aac4468024fe077"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f8370f733e76f8b7de20d2152be1bfd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a5f8370f733e76f8b7de20d2152be1bfd">BOOST_AUTO_TEST_CASE</a> (CreateSubtractionFloat16Workload)</td></tr>
<tr class="separator:a5f8370f733e76f8b7de20d2152be1bfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56236d80e962e94cdc3481f0de4d01ba"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a56236d80e962e94cdc3481f0de4d01ba">BOOST_AUTO_TEST_CASE</a> (CreateSubtractionUint8Workload)</td></tr>
<tr class="separator:a56236d80e962e94cdc3481f0de4d01ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9ea48a7b8317731ccc17c096fb4e717"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ad9ea48a7b8317731ccc17c096fb4e717">BOOST_AUTO_TEST_CASE</a> (CreateSubtractionInt16Workload)</td></tr>
<tr class="separator:ad9ea48a7b8317731ccc17c096fb4e717"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c6bc0ef0fcf855b4e40316fb9d635d0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a9c6bc0ef0fcf855b4e40316fb9d635d0">BOOST_AUTO_TEST_CASE</a> (CreateSubtractionInt32Workload)</td></tr>
<tr class="separator:a9c6bc0ef0fcf855b4e40316fb9d635d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa648d27419eef05aace4034b206692bb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#aa648d27419eef05aace4034b206692bb">BOOST_AUTO_TEST_CASE</a> (CreateMultiplicationFloatWorkload)</td></tr>
<tr class="separator:aa648d27419eef05aace4034b206692bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5230b6bd0c53c06b7d6a241b7197085"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ae5230b6bd0c53c06b7d6a241b7197085">BOOST_AUTO_TEST_CASE</a> (CreateMultiplicationUint8Workload)</td></tr>
<tr class="separator:ae5230b6bd0c53c06b7d6a241b7197085"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5a322045505d8d860a22c27124450e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ad5a322045505d8d860a22c27124450e0">BOOST_AUTO_TEST_CASE</a> (CreateMultiplicationInt16Workload)</td></tr>
<tr class="separator:ad5a322045505d8d860a22c27124450e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab102e2346f472616deb830487ae64aad"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ab102e2346f472616deb830487ae64aad">BOOST_AUTO_TEST_CASE</a> (CreateMultiplicationInt32Workload)</td></tr>
<tr class="separator:ab102e2346f472616deb830487ae64aad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ee8ff90da474e10de9bc16e30d4371f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a4ee8ff90da474e10de9bc16e30d4371f">BOOST_AUTO_TEST_CASE</a> (CreateDivisionFloat32Workload)</td></tr>
<tr class="separator:a4ee8ff90da474e10de9bc16e30d4371f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4879b55fbb91b51eff4658017db4d52b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a4879b55fbb91b51eff4658017db4d52b">BOOST_AUTO_TEST_CASE</a> (CreateDivisionFloat16Workload)</td></tr>
<tr class="separator:a4879b55fbb91b51eff4658017db4d52b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc127e63cab0137b8646324a1920ea08"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#acc127e63cab0137b8646324a1920ea08">BOOST_AUTO_TEST_CASE</a> (CreateDivisionUint8Workload)</td></tr>
<tr class="separator:acc127e63cab0137b8646324a1920ea08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cf5cf702dea9e8cc18b856969c5a9ff"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a9cf5cf702dea9e8cc18b856969c5a9ff">BOOST_AUTO_TEST_CASE</a> (CreateDivisionInt16Workload)</td></tr>
<tr class="separator:a9cf5cf702dea9e8cc18b856969c5a9ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c67b2692b36a745819bbcb9a93030ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a2c67b2692b36a745819bbcb9a93030ae">BOOST_AUTO_TEST_CASE</a> (CreateDivisionInt32Workload)</td></tr>
<tr class="separator:a2c67b2692b36a745819bbcb9a93030ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab941b94da3362c927dc5832b49fffe92"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ab941b94da3362c927dc5832b49fffe92">BOOST_AUTO_TEST_CASE</a> (CreateBatchNormalizationFloat32Workload)</td></tr>
<tr class="separator:ab941b94da3362c927dc5832b49fffe92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb4205da6dcd9c8111324f7c592becae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#abb4205da6dcd9c8111324f7c592becae">BOOST_AUTO_TEST_CASE</a> (CreateBatchNormalizationFloat32WorkloadNhwc)</td></tr>
<tr class="separator:abb4205da6dcd9c8111324f7c592becae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6aaea75a9c06ecf746f060db5e312bf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ae6aaea75a9c06ecf746f060db5e312bf">BOOST_AUTO_TEST_CASE</a> (CreateBatchNormalizationFloat16Workload)</td></tr>
<tr class="separator:ae6aaea75a9c06ecf746f060db5e312bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa88277834d3cd0570537d2fa2c47ffcf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#aa88277834d3cd0570537d2fa2c47ffcf">BOOST_AUTO_TEST_CASE</a> (CreateBatchNormalizationFloat16WorkloadNhwc)</td></tr>
<tr class="separator:aa88277834d3cd0570537d2fa2c47ffcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab927f6f0c661830d3a8da5d1b2b9874b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ab927f6f0c661830d3a8da5d1b2b9874b">BOOST_AUTO_TEST_CASE</a> (CreateBatchNormalizationUint8Workload)</td></tr>
<tr class="separator:ab927f6f0c661830d3a8da5d1b2b9874b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa98b0b574f1231232753c0a173e9044"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#aaa98b0b574f1231232753c0a173e9044">BOOST_AUTO_TEST_CASE</a> (CreateBatchNormalizationUint8WorkloadNhwc)</td></tr>
<tr class="separator:aaa98b0b574f1231232753c0a173e9044"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbb8b2035830a03a7db7422181834792"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#acbb8b2035830a03a7db7422181834792">BOOST_AUTO_TEST_CASE</a> (CreateBatchNormalizationInt16Workload)</td></tr>
<tr class="separator:acbb8b2035830a03a7db7422181834792"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d07b555444749c6778952ad8d5f1d90"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a0d07b555444749c6778952ad8d5f1d90">BOOST_AUTO_TEST_CASE</a> (CreateBatchNormalizationInt16WorkloadNhwc)</td></tr>
<tr class="separator:a0d07b555444749c6778952ad8d5f1d90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cd48cbae79d394f79c0c7acc456c436"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a2cd48cbae79d394f79c0c7acc456c436">BOOST_AUTO_TEST_CASE</a> (CreateConvertFp16ToFp32Float32Workload)</td></tr>
<tr class="separator:a2cd48cbae79d394f79c0c7acc456c436"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae45acf3d80e9e982acb8a5e8a22bfbd4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ae45acf3d80e9e982acb8a5e8a22bfbd4">BOOST_AUTO_TEST_CASE</a> (CreateConvertFp32ToFp16Float16Workload)</td></tr>
<tr class="separator:ae45acf3d80e9e982acb8a5e8a22bfbd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a2458d4f6ff9103299e72433245db5b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a8a2458d4f6ff9103299e72433245db5b">BOOST_AUTO_TEST_CASE</a> (CreateConvolution2dFloatNchwWorkload)</td></tr>
<tr class="separator:a8a2458d4f6ff9103299e72433245db5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1738342e20abb6bebf8766a796424865"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a1738342e20abb6bebf8766a796424865">BOOST_AUTO_TEST_CASE</a> (CreateConvolution2dFloatNhwcWorkload)</td></tr>
<tr class="separator:a1738342e20abb6bebf8766a796424865"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac96201c573891d4b179bf38af48a5fe5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ac96201c573891d4b179bf38af48a5fe5">BOOST_AUTO_TEST_CASE</a> (CreateDepthwiseConvolutionFloat32NhwcWorkload)</td></tr>
<tr class="separator:ac96201c573891d4b179bf38af48a5fe5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8d03744a709d27fde75e3e649cd7928"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ac8d03744a709d27fde75e3e649cd7928">BOOST_AUTO_TEST_CASE</a> (CreateFullyConnectedWorkloadFloat32)</td></tr>
<tr class="separator:ac8d03744a709d27fde75e3e649cd7928"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16b1fedc3b195f7641947bf5adc3dfae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a16b1fedc3b195f7641947bf5adc3dfae">BOOST_AUTO_TEST_CASE</a> (CreateFullyConnectedWorkloadQuantisedAsymm8)</td></tr>
<tr class="separator:a16b1fedc3b195f7641947bf5adc3dfae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d96fd0c00a5920eb39a6b1c1dd91cd8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a9d96fd0c00a5920eb39a6b1c1dd91cd8">BOOST_AUTO_TEST_CASE</a> (CreateFullyConnectedWorkloadQuantisedSymm16)</td></tr>
<tr class="separator:a9d96fd0c00a5920eb39a6b1c1dd91cd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ff5ef9e4f21ed637b5f5c36889b49db"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a1ff5ef9e4f21ed637b5f5c36889b49db">BOOST_AUTO_TEST_CASE</a> (CreateRefNormalizationFloat32NchwWorkload)</td></tr>
<tr class="separator:a1ff5ef9e4f21ed637b5f5c36889b49db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a489c80fd4209261c63dc4c6eb13adf82"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a489c80fd4209261c63dc4c6eb13adf82">BOOST_AUTO_TEST_CASE</a> (CreateRefNormalizationFloat32NhwcWorkload)</td></tr>
<tr class="separator:a489c80fd4209261c63dc4c6eb13adf82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a396d25919b4db95efc8163e5480eca41"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a396d25919b4db95efc8163e5480eca41">BOOST_AUTO_TEST_CASE</a> (CreateRefNormalizationUint8NchwWorkload)</td></tr>
<tr class="separator:a396d25919b4db95efc8163e5480eca41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c3fd8a88966553acc63f26d55363392"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a8c3fd8a88966553acc63f26d55363392">BOOST_AUTO_TEST_CASE</a> (CreateRefNormalizationUint8NhwcWorkload)</td></tr>
<tr class="separator:a8c3fd8a88966553acc63f26d55363392"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75adb0f986194f819918e15e9d056457"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a75adb0f986194f819918e15e9d056457">BOOST_AUTO_TEST_CASE</a> (CreateRefNormalizationInt16NchwWorkload)</td></tr>
<tr class="separator:a75adb0f986194f819918e15e9d056457"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab569bdd2d6d978c142800ddce8b63b45"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ab569bdd2d6d978c142800ddce8b63b45">BOOST_AUTO_TEST_CASE</a> (CreateRefNormalizationInt16NhwcWorkload)</td></tr>
<tr class="separator:ab569bdd2d6d978c142800ddce8b63b45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4446c616fa4040bfeeca1f7f9358633"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ac4446c616fa4040bfeeca1f7f9358633">BOOST_AUTO_TEST_CASE</a> (CreatePooling2dFloat32Workload)</td></tr>
<tr class="separator:ac4446c616fa4040bfeeca1f7f9358633"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a594ea40c9b86061d10a2c80e4816a16e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a594ea40c9b86061d10a2c80e4816a16e">BOOST_AUTO_TEST_CASE</a> (CreatePooling2dFloat32NhwcWorkload)</td></tr>
<tr class="separator:a594ea40c9b86061d10a2c80e4816a16e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1b2456a24a3dde7961cc8dee29eabf0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#aa1b2456a24a3dde7961cc8dee29eabf0">BOOST_AUTO_TEST_CASE</a> (CreatePooling2dUint8Workload)</td></tr>
<tr class="separator:aa1b2456a24a3dde7961cc8dee29eabf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45f904a90c0b0cadb62097baaf1dce07"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a45f904a90c0b0cadb62097baaf1dce07">BOOST_AUTO_TEST_CASE</a> (CreatePooling2dUint8NhwcWorkload)</td></tr>
<tr class="separator:a45f904a90c0b0cadb62097baaf1dce07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa991974c576c289dea888237919a9e96"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#aa991974c576c289dea888237919a9e96">BOOST_AUTO_TEST_CASE</a> (CreatePooling2dInt16Workload)</td></tr>
<tr class="separator:aa991974c576c289dea888237919a9e96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed0bef0163150d327fd07491e6842e1f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#aed0bef0163150d327fd07491e6842e1f">BOOST_AUTO_TEST_CASE</a> (CreatePooling2dInt16NhwcWorkload)</td></tr>
<tr class="separator:aed0bef0163150d327fd07491e6842e1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dd9876913e311bf87443aa0709d09ad"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a1dd9876913e311bf87443aa0709d09ad">BOOST_AUTO_TEST_CASE</a> (CreateSoftmaxFloat32Workload)</td></tr>
<tr class="separator:a1dd9876913e311bf87443aa0709d09ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d00a3e31deb447b0e818d09c4e2c122"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a7d00a3e31deb447b0e818d09c4e2c122">BOOST_AUTO_TEST_CASE</a> (CreateSoftmaxFloat16Workload)</td></tr>
<tr class="separator:a7d00a3e31deb447b0e818d09c4e2c122"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16715fe6153bb6b5b20b2b7ec7104b4a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a16715fe6153bb6b5b20b2b7ec7104b4a">BOOST_AUTO_TEST_CASE</a> (CreateSoftmaxQuantisedAsymm8Workload)</td></tr>
<tr class="separator:a16715fe6153bb6b5b20b2b7ec7104b4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64ccd24d1bd6ed8e04444e9fc020ab6e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a64ccd24d1bd6ed8e04444e9fc020ab6e">BOOST_AUTO_TEST_CASE</a> (CreateSoftmaxQuantisedSymm16Workload)</td></tr>
<tr class="separator:a64ccd24d1bd6ed8e04444e9fc020ab6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d79d058ed3ce5f796386364969e2581"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a5d79d058ed3ce5f796386364969e2581">BOOST_AUTO_TEST_CASE</a> (CreateSplitterFloat32Workload)</td></tr>
<tr class="separator:a5d79d058ed3ce5f796386364969e2581"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a856e926d6587c6025a56faa2ae276c03"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a856e926d6587c6025a56faa2ae276c03">BOOST_AUTO_TEST_CASE</a> (CreateSplitterFloat16Workload)</td></tr>
<tr class="separator:a856e926d6587c6025a56faa2ae276c03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73620793bccf4f93947feea2a810d413"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a73620793bccf4f93947feea2a810d413">BOOST_AUTO_TEST_CASE</a> (CreateSplitterUint8Workload)</td></tr>
<tr class="separator:a73620793bccf4f93947feea2a810d413"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b9b53471a49d63214ba072f1b213fa4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a9b9b53471a49d63214ba072f1b213fa4">BOOST_AUTO_TEST_CASE</a> (CreateSplitterConcatFloat32)</td></tr>
<tr class="separator:a9b9b53471a49d63214ba072f1b213fa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a949cc47e492ce11302f0ffdeeb7c70ca"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a949cc47e492ce11302f0ffdeeb7c70ca">BOOST_AUTO_TEST_CASE</a> (CreateSplitterConcatFloat16)</td></tr>
<tr class="separator:a949cc47e492ce11302f0ffdeeb7c70ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa03822e48c0af312c65f8ed819d164b6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#aa03822e48c0af312c65f8ed819d164b6">BOOST_AUTO_TEST_CASE</a> (CreateSplitterConcatUint8)</td></tr>
<tr class="separator:aa03822e48c0af312c65f8ed819d164b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a168a7c8cf3d6baee1e61dc24832ac33f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a168a7c8cf3d6baee1e61dc24832ac33f">BOOST_AUTO_TEST_CASE</a> (CreateSingleOutputMultipleInputsFloat32)</td></tr>
<tr class="separator:a168a7c8cf3d6baee1e61dc24832ac33f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf9fe44992f18b9501bbce9d7b19cdbe"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#abf9fe44992f18b9501bbce9d7b19cdbe">BOOST_AUTO_TEST_CASE</a> (CreateSingleOutputMultipleInputsUint8)</td></tr>
<tr class="separator:abf9fe44992f18b9501bbce9d7b19cdbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4530438508a0bb641649c558e19c89d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ad4530438508a0bb641649c558e19c89d">BOOST_AUTO_TEST_CASE</a> (CreateResizeBilinearFloat32)</td></tr>
<tr class="separator:ad4530438508a0bb641649c558e19c89d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a701b321d642e2a1ecc2ed1792de717c3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a701b321d642e2a1ecc2ed1792de717c3">BOOST_AUTO_TEST_CASE</a> (CreateResizeBilinearFloat16)</td></tr>
<tr class="separator:a701b321d642e2a1ecc2ed1792de717c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92781a1fe6584ff5ef611c6c4cdecc57"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a92781a1fe6584ff5ef611c6c4cdecc57">BOOST_AUTO_TEST_CASE</a> (CreateResizeBilinearUint8)</td></tr>
<tr class="separator:a92781a1fe6584ff5ef611c6c4cdecc57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae72ce3fcfbf1ab16d24b14c59c4a4743"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ae72ce3fcfbf1ab16d24b14c59c4a4743">BOOST_AUTO_TEST_CASE</a> (CreateResizeBilinearQuantisedAsymm16)</td></tr>
<tr class="separator:ae72ce3fcfbf1ab16d24b14c59c4a4743"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21967bb06657ebcef9e3ed6dbfd4a04b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a21967bb06657ebcef9e3ed6dbfd4a04b">BOOST_AUTO_TEST_CASE</a> (CreateResizeBilinearFloat32Nhwc)</td></tr>
<tr class="separator:a21967bb06657ebcef9e3ed6dbfd4a04b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4da7437861bb40c8a602f443f1b62953"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a4da7437861bb40c8a602f443f1b62953">BOOST_AUTO_TEST_CASE</a> (CreateBatchToSpaceNdFloat32)</td></tr>
<tr class="separator:a4da7437861bb40c8a602f443f1b62953"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0597b1862d3ea1574543dcc9e0721a5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ac0597b1862d3ea1574543dcc9e0721a5">BOOST_AUTO_TEST_CASE</a> (CreateBatchToSpaceNdFloat16)</td></tr>
<tr class="separator:ac0597b1862d3ea1574543dcc9e0721a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad756f39af220b6032c9d3987ba3e528b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ad756f39af220b6032c9d3987ba3e528b">BOOST_AUTO_TEST_CASE</a> (CreateBatchToSpaceNdUint8)</td></tr>
<tr class="separator:ad756f39af220b6032c9d3987ba3e528b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed86bc11787de03c506f6a8e9d580355"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#aed86bc11787de03c506f6a8e9d580355">BOOST_AUTO_TEST_CASE</a> (CreateBatchToSpaceNdQSymm16)</td></tr>
<tr class="separator:aed86bc11787de03c506f6a8e9d580355"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06e01df743165fbe9237a36a2ee806bd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a06e01df743165fbe9237a36a2ee806bd">BOOST_AUTO_TEST_CASE</a> (CreateL2NormalizationFloat32)</td></tr>
<tr class="separator:a06e01df743165fbe9237a36a2ee806bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e2e2fb5fd24d59d5c7b8671cd9d8bbe"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a7e2e2fb5fd24d59d5c7b8671cd9d8bbe">BOOST_AUTO_TEST_CASE</a> (CreateL2NormalizationFloat32Nhwc)</td></tr>
<tr class="separator:a7e2e2fb5fd24d59d5c7b8671cd9d8bbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed895fa5ab4bf4d616bd8896d5b4b50e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#aed895fa5ab4bf4d616bd8896d5b4b50e">BOOST_AUTO_TEST_CASE</a> (CreateL2NormalizationInt16)</td></tr>
<tr class="separator:aed895fa5ab4bf4d616bd8896d5b4b50e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa89f98885f79f976e56256660d929d54"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#aa89f98885f79f976e56256660d929d54">BOOST_AUTO_TEST_CASE</a> (CreateL2NormalizationInt16Nhwc)</td></tr>
<tr class="separator:aa89f98885f79f976e56256660d929d54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23898a843f8463238d4341ac74107ed2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a23898a843f8463238d4341ac74107ed2">BOOST_AUTO_TEST_CASE</a> (CreateL2NormalizationUint8)</td></tr>
<tr class="separator:a23898a843f8463238d4341ac74107ed2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad548e3f61c6c8ab695b2365afd272ce0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ad548e3f61c6c8ab695b2365afd272ce0">BOOST_AUTO_TEST_CASE</a> (CreateL2NormalizationUint8Nhwc)</td></tr>
<tr class="separator:ad548e3f61c6c8ab695b2365afd272ce0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15827696bbfafbab550d1745f3e27930"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a15827696bbfafbab550d1745f3e27930">BOOST_AUTO_TEST_CASE</a> (CreateReshapeWorkloadFloat32)</td></tr>
<tr class="separator:a15827696bbfafbab550d1745f3e27930"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46ebad6ae89f77b0c2946d98a9510bff"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a46ebad6ae89f77b0c2946d98a9510bff">BOOST_AUTO_TEST_CASE</a> (CreateReshapeWorkloadQuantisedAsymm8)</td></tr>
<tr class="separator:a46ebad6ae89f77b0c2946d98a9510bff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14965f32deab9acee2bdfbeba9bb2af1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a14965f32deab9acee2bdfbeba9bb2af1">BOOST_AUTO_TEST_CASE</a> (CreateReshapeWorkloadQuantisedSymm16)</td></tr>
<tr class="separator:a14965f32deab9acee2bdfbeba9bb2af1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8782f9dbea0bfb27baa047d5c961ff3e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a8782f9dbea0bfb27baa047d5c961ff3e">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim0Float32Workload)</td></tr>
<tr class="separator:a8782f9dbea0bfb27baa047d5c961ff3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd3c9dcbed34397d70c0b22e6fec617f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#abd3c9dcbed34397d70c0b22e6fec617f">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim0Float16Workload)</td></tr>
<tr class="separator:abd3c9dcbed34397d70c0b22e6fec617f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4f6f715f63bf06d9bb87a21e77f2129"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ab4f6f715f63bf06d9bb87a21e77f2129">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim0Uint8Workload)</td></tr>
<tr class="separator:ab4f6f715f63bf06d9bb87a21e77f2129"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dc599556b9f3c1c617b043c87d82c74"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a3dc599556b9f3c1c617b043c87d82c74">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim0Uint16Workload)</td></tr>
<tr class="separator:a3dc599556b9f3c1c617b043c87d82c74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e908cfa4b2b0d235a7a83bb450af212"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a6e908cfa4b2b0d235a7a83bb450af212">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim1Float32Workload)</td></tr>
<tr class="separator:a6e908cfa4b2b0d235a7a83bb450af212"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad76e3bac3ab907f6ebf516ca8f40ad49"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ad76e3bac3ab907f6ebf516ca8f40ad49">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim1Uint8Workload)</td></tr>
<tr class="separator:ad76e3bac3ab907f6ebf516ca8f40ad49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1af54a3eec17165e9cee8b0bcf3d55c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ab1af54a3eec17165e9cee8b0bcf3d55c">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim2Float32Workload)</td></tr>
<tr class="separator:ab1af54a3eec17165e9cee8b0bcf3d55c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab78fddea7399be741a003deb254dbf62"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ab78fddea7399be741a003deb254dbf62">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim2Uint8Workload)</td></tr>
<tr class="separator:ab78fddea7399be741a003deb254dbf62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15c6731388ff09e4fb01e12100138e40"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a15c6731388ff09e4fb01e12100138e40">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim3Float32Workload)</td></tr>
<tr class="separator:a15c6731388ff09e4fb01e12100138e40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41bdcd447af6e0fe880fd6c746830468"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a41bdcd447af6e0fe880fd6c746830468">BOOST_AUTO_TEST_CASE</a> (CreateConcatDim3Uint8Workload)</td></tr>
<tr class="separator:a41bdcd447af6e0fe880fd6c746830468"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7969d45c3cccd8daa055e3412b4bed68"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a7969d45c3cccd8daa055e3412b4bed68">BOOST_AUTO_TEST_CASE</a> (CreateConstantUint8Workload)</td></tr>
<tr class="separator:a7969d45c3cccd8daa055e3412b4bed68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4db8dc5565b0621adadf181bcfb5e42c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a4db8dc5565b0621adadf181bcfb5e42c">BOOST_AUTO_TEST_CASE</a> (CreateConstantInt16Workload)</td></tr>
<tr class="separator:a4db8dc5565b0621adadf181bcfb5e42c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a90c2b6944e9e8e96c25516549c0cc9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a4a90c2b6944e9e8e96c25516549c0cc9">BOOST_AUTO_TEST_CASE</a> (CreateConstantFloat32Workload)</td></tr>
<tr class="separator:a4a90c2b6944e9e8e96c25516549c0cc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88e28a1faa66d1ab0a0ffa6ad9a47b60"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a88e28a1faa66d1ab0a0ffa6ad9a47b60">BOOST_AUTO_TEST_CASE</a> (CreateConstantSigned32Workload)</td></tr>
<tr class="separator:a88e28a1faa66d1ab0a0ffa6ad9a47b60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcadab839f145917ff02c8451a76a152"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#afcadab839f145917ff02c8451a76a152">BOOST_AUTO_TEST_CASE</a> (CreatePreluFloat32Workload)</td></tr>
<tr class="separator:afcadab839f145917ff02c8451a76a152"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa73ba7a4ea3327d87efd4618c083b333"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#aa73ba7a4ea3327d87efd4618c083b333">BOOST_AUTO_TEST_CASE</a> (CreatePreluFloat16Workload)</td></tr>
<tr class="separator:aa73ba7a4ea3327d87efd4618c083b333"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12d17284981e1fff8f0fc76da9293e2c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a12d17284981e1fff8f0fc76da9293e2c">BOOST_AUTO_TEST_CASE</a> (CreatePreluUint8Workload)</td></tr>
<tr class="separator:a12d17284981e1fff8f0fc76da9293e2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9bbc84cf48c0112c698e7d678a318f6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ad9bbc84cf48c0112c698e7d678a318f6">BOOST_AUTO_TEST_CASE</a> (CreatePreluInt16Workload)</td></tr>
<tr class="separator:ad9bbc84cf48c0112c698e7d678a318f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16addc490db90b266ef38af9ebd3d731"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a16addc490db90b266ef38af9ebd3d731">BOOST_AUTO_TEST_CASE</a> (CreatePreluFloat32NoBroadcastWorkload)</td></tr>
<tr class="separator:a16addc490db90b266ef38af9ebd3d731"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7124dca744920ec86ae32fbc5dd9285f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a7124dca744920ec86ae32fbc5dd9285f">BOOST_AUTO_TEST_CASE</a> (CreatePreluFloat16NoBroadcastWorkload)</td></tr>
<tr class="separator:a7124dca744920ec86ae32fbc5dd9285f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7132a0f1bbefa31da10ad1b4f6812f7e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a7132a0f1bbefa31da10ad1b4f6812f7e">BOOST_AUTO_TEST_CASE</a> (CreatePreluUint8NoBroadcastWorkload)</td></tr>
<tr class="separator:a7132a0f1bbefa31da10ad1b4f6812f7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63bce6d36ea8f3c55eebcb98cf80f63e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a63bce6d36ea8f3c55eebcb98cf80f63e">BOOST_AUTO_TEST_CASE</a> (CreatePreluInt16NoBroadcastWorkload)</td></tr>
<tr class="separator:a63bce6d36ea8f3c55eebcb98cf80f63e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc18533dddc0d2c073e07b650955a6d9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#adc18533dddc0d2c073e07b650955a6d9">BOOST_AUTO_TEST_CASE</a> (CreateSpaceToDepthWorkloadFloat32)</td></tr>
<tr class="separator:adc18533dddc0d2c073e07b650955a6d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af47399c946f0281f6f63251302b0bdfc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#af47399c946f0281f6f63251302b0bdfc">BOOST_AUTO_TEST_CASE</a> (CreateSpaceToDepthWorkloadFloat16)</td></tr>
<tr class="separator:af47399c946f0281f6f63251302b0bdfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2344fbc180e3d6442aad31dbad08954"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ad2344fbc180e3d6442aad31dbad08954">BOOST_AUTO_TEST_CASE</a> (CreateSpaceToDepthWorkloadQASymm8)</td></tr>
<tr class="separator:ad2344fbc180e3d6442aad31dbad08954"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad362fa938c5f64b1f3ef834f3131bda6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#ad362fa938c5f64b1f3ef834f3131bda6">BOOST_AUTO_TEST_CASE</a> (CreateSpaceToDepthWorkloadQSymm16)</td></tr>
<tr class="separator:ad362fa938c5f64b1f3ef834f3131bda6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72d6262ab8544dbfa7cfc22910e3011c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a72d6262ab8544dbfa7cfc22910e3011c">BOOST_AUTO_TEST_CASE</a> (CreateStackFloat32Workload)</td></tr>
<tr class="separator:a72d6262ab8544dbfa7cfc22910e3011c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a966e80d9fbe654c47b44265d982d3c33"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a966e80d9fbe654c47b44265d982d3c33">BOOST_AUTO_TEST_CASE</a> (CreateStackUint8Workload)</td></tr>
<tr class="separator:a966e80d9fbe654c47b44265d982d3c33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76cbb6d4fcc4fb2927e37c2c886e9cf5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#a76cbb6d4fcc4fb2927e37c2c886e9cf5">BOOST_AUTO_TEST_CASE</a> (CreateStackUint16Workload)</td></tr>
<tr class="separator:a76cbb6d4fcc4fb2927e37c2c886e9cf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1709bbfe42b50a80371b9e312202d0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml#acc1709bbfe42b50a80371b9e312202d0">BOOST_AUTO_TEST_CASE</a> (CreateQLstmWorkload)</td></tr>
<tr class="separator:acc1709bbfe42b50a80371b9e312202d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a192497d6feca90c8a4ef93dcf5eac7b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a192497d6feca90c8a4ef93dcf5eac7b9">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[1/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateActivationFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00065">65</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    RefCreateActivationWorkloadTest&lt;RefActivationWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8622e3bde188ef5c79024290da5c9ecb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8622e3bde188ef5c79024290da5c9ecb">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[2/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateActivationUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00070">70</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    RefCreateActivationWorkloadTest&lt;RefActivationWorkload, armnn::DataType::QAsymmU8&gt;();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a91343c247a116b44c01af985c72b1e4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91343c247a116b44c01af985c72b1e4d">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[3/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateAdditionFloatWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00092">92</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefAdditionWorkload&lt;&gt;,</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="structarmnn_1_1_addition_queue_descriptor.xhtml">AdditionQueueDescriptor</a>,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="classarmnn_1_1_addition_layer.xhtml">AdditionLayer</a>,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;();</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_addition_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_addition_queue_descriptor.xhtml">armnn::AdditionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00222">WorkloadData.hpp:222</a></div></div>
<div class="ttc" id="classarmnn_1_1_addition_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_addition_layer.xhtml">armnn::AdditionLayer</a></div><div class="ttdoc">This layer represents an addition operation. </div><div class="ttdef"><b>Definition:</b> <a href="_addition_layer_8hpp_source.xhtml#l00013">AdditionLayer.hpp:13</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a272deaaf10839290c46ad4931cbe89db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a272deaaf10839290c46ad4931cbe89db">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[4/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateAdditionUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00100">100</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>.</p>
<div class="fragment"><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefAdditionWorkload&lt;&gt;,</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <a class="code" href="structarmnn_1_1_addition_queue_descriptor.xhtml">AdditionQueueDescriptor</a>,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="classarmnn_1_1_addition_layer.xhtml">AdditionLayer</a>,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>&gt;();</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_addition_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_addition_queue_descriptor.xhtml">armnn::AdditionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00222">WorkloadData.hpp:222</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="classarmnn_1_1_addition_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_addition_layer.xhtml">armnn::AdditionLayer</a></div><div class="ttdoc">This layer represents an addition operation. </div><div class="ttdef"><b>Definition:</b> <a href="_addition_layer_8hpp_source.xhtml#l00013">AdditionLayer.hpp:13</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab69409ef77bd36d828dad3b4b9b6f6b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab69409ef77bd36d828dad3b4b9b6f6b2">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[5/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateAdditionInt16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00108">108</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;{</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefAdditionWorkload&lt;&gt;,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <a class="code" href="structarmnn_1_1_addition_queue_descriptor.xhtml">AdditionQueueDescriptor</a>,</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <a class="code" href="classarmnn_1_1_addition_layer.xhtml">AdditionLayer</a>,</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>&gt;();</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_addition_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_addition_queue_descriptor.xhtml">armnn::AdditionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00222">WorkloadData.hpp:222</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="classarmnn_1_1_addition_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_addition_layer.xhtml">armnn::AdditionLayer</a></div><div class="ttdoc">This layer represents an addition operation. </div><div class="ttdef"><b>Definition:</b> <a href="_addition_layer_8hpp_source.xhtml#l00013">AdditionLayer.hpp:13</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aaca01bb3560a3d66859195795008014b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaca01bb3560a3d66859195795008014b">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[6/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateAdditionInt32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00116">116</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefAdditionWorkload&lt;int32_t&gt;,</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <a class="code" href="structarmnn_1_1_addition_queue_descriptor.xhtml">AdditionQueueDescriptor</a>,</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <a class="code" href="classarmnn_1_1_addition_layer.xhtml">AdditionLayer</a>,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>&gt;();</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="structarmnn_1_1_addition_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_addition_queue_descriptor.xhtml">armnn::AdditionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00222">WorkloadData.hpp:222</a></div></div>
<div class="ttc" id="classarmnn_1_1_addition_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_addition_layer.xhtml">armnn::AdditionLayer</a></div><div class="ttdoc">This layer represents an addition operation. </div><div class="ttdef"><b>Definition:</b> <a href="_addition_layer_8hpp_source.xhtml#l00013">AdditionLayer.hpp:13</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a04720c3eed6925141aac4468024fe077"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04720c3eed6925141aac4468024fe077">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[7/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSubtractionFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00124">124</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>.</p>
<div class="fragment"><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;{</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefSubtractionWorkload&lt;&gt;,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <a class="code" href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">SubtractionQueueDescriptor</a>,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <a class="code" href="classarmnn_1_1_subtraction_layer.xhtml">SubtractionLayer</a>,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;();</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_subtraction_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">armnn::SubtractionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00240">WorkloadData.hpp:240</a></div></div>
<div class="ttc" id="classarmnn_1_1_subtraction_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_subtraction_layer.xhtml">armnn::SubtractionLayer</a></div><div class="ttdoc">This layer represents a subtraction operation. </div><div class="ttdef"><b>Definition:</b> <a href="_subtraction_layer_8hpp_source.xhtml#l00014">SubtractionLayer.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5f8370f733e76f8b7de20d2152be1bfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f8370f733e76f8b7de20d2152be1bfd">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[8/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSubtractionFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00132">132</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::Float16</a>.</p>
<div class="fragment"><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefSubtractionWorkload&lt;&gt;,</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <a class="code" href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">SubtractionQueueDescriptor</a>,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <a class="code" href="classarmnn_1_1_subtraction_layer.xhtml">SubtractionLayer</a>,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>&gt;();</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_subtraction_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">armnn::SubtractionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00240">WorkloadData.hpp:240</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="classarmnn_1_1_subtraction_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_subtraction_layer.xhtml">armnn::SubtractionLayer</a></div><div class="ttdoc">This layer represents a subtraction operation. </div><div class="ttdef"><b>Definition:</b> <a href="_subtraction_layer_8hpp_source.xhtml#l00014">SubtractionLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a56236d80e962e94cdc3481f0de4d01ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56236d80e962e94cdc3481f0de4d01ba">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[9/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSubtractionUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00140">140</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>.</p>
<div class="fragment"><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;{</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefSubtractionWorkload&lt;&gt;,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <a class="code" href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">SubtractionQueueDescriptor</a>,</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <a class="code" href="classarmnn_1_1_subtraction_layer.xhtml">SubtractionLayer</a>,</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>&gt;();</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_subtraction_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">armnn::SubtractionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00240">WorkloadData.hpp:240</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="classarmnn_1_1_subtraction_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_subtraction_layer.xhtml">armnn::SubtractionLayer</a></div><div class="ttdoc">This layer represents a subtraction operation. </div><div class="ttdef"><b>Definition:</b> <a href="_subtraction_layer_8hpp_source.xhtml#l00014">SubtractionLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad9ea48a7b8317731ccc17c096fb4e717"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9ea48a7b8317731ccc17c096fb4e717">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[10/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSubtractionInt16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00148">148</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefSubtractionWorkload&lt;&gt;,</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <a class="code" href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">SubtractionQueueDescriptor</a>,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <a class="code" href="classarmnn_1_1_subtraction_layer.xhtml">SubtractionLayer</a>,</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>&gt;();</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="structarmnn_1_1_subtraction_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">armnn::SubtractionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00240">WorkloadData.hpp:240</a></div></div>
<div class="ttc" id="classarmnn_1_1_subtraction_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_subtraction_layer.xhtml">armnn::SubtractionLayer</a></div><div class="ttdoc">This layer represents a subtraction operation. </div><div class="ttdef"><b>Definition:</b> <a href="_subtraction_layer_8hpp_source.xhtml#l00014">SubtractionLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9c6bc0ef0fcf855b4e40316fb9d635d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c6bc0ef0fcf855b4e40316fb9d635d0">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[11/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSubtractionInt32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00156">156</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;{</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefSubtractionWorkload&lt;int32_t&gt;,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <a class="code" href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">SubtractionQueueDescriptor</a>,</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <a class="code" href="classarmnn_1_1_subtraction_layer.xhtml">SubtractionLayer</a>,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>&gt;();</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="structarmnn_1_1_subtraction_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">armnn::SubtractionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00240">WorkloadData.hpp:240</a></div></div>
<div class="ttc" id="classarmnn_1_1_subtraction_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_subtraction_layer.xhtml">armnn::SubtractionLayer</a></div><div class="ttdoc">This layer represents a subtraction operation. </div><div class="ttdef"><b>Definition:</b> <a href="_subtraction_layer_8hpp_source.xhtml#l00014">SubtractionLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa648d27419eef05aace4034b206692bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa648d27419eef05aace4034b206692bb">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[12/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateMultiplicationFloatWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00164">164</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>.</p>
<div class="fragment"><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefMultiplicationWorkload&lt;&gt;,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <a class="code" href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">MultiplicationQueueDescriptor</a>,</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <a class="code" href="classarmnn_1_1_multiplication_layer.xhtml">MultiplicationLayer</a>,</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;();</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_multiplication_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">armnn::MultiplicationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00228">WorkloadData.hpp:228</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="classarmnn_1_1_multiplication_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_multiplication_layer.xhtml">armnn::MultiplicationLayer</a></div><div class="ttdoc">This layer represents a multiplication operation. </div><div class="ttdef"><b>Definition:</b> <a href="_multiplication_layer_8hpp_source.xhtml#l00014">MultiplicationLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae5230b6bd0c53c06b7d6a241b7197085"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5230b6bd0c53c06b7d6a241b7197085">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[13/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateMultiplicationUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00172">172</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>.</p>
<div class="fragment"><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;{</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefMultiplicationWorkload&lt;&gt;,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <a class="code" href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">MultiplicationQueueDescriptor</a>,</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <a class="code" href="classarmnn_1_1_multiplication_layer.xhtml">MultiplicationLayer</a>,</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>&gt;();</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_multiplication_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">armnn::MultiplicationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00228">WorkloadData.hpp:228</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="classarmnn_1_1_multiplication_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_multiplication_layer.xhtml">armnn::MultiplicationLayer</a></div><div class="ttdoc">This layer represents a multiplication operation. </div><div class="ttdef"><b>Definition:</b> <a href="_multiplication_layer_8hpp_source.xhtml#l00014">MultiplicationLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad5a322045505d8d860a22c27124450e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5a322045505d8d860a22c27124450e0">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[14/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateMultiplicationInt16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00180">180</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;{</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefMultiplicationWorkload&lt;&gt;,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <a class="code" href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">MultiplicationQueueDescriptor</a>,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <a class="code" href="classarmnn_1_1_multiplication_layer.xhtml">MultiplicationLayer</a>,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>&gt;();</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_multiplication_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">armnn::MultiplicationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00228">WorkloadData.hpp:228</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="classarmnn_1_1_multiplication_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_multiplication_layer.xhtml">armnn::MultiplicationLayer</a></div><div class="ttdoc">This layer represents a multiplication operation. </div><div class="ttdef"><b>Definition:</b> <a href="_multiplication_layer_8hpp_source.xhtml#l00014">MultiplicationLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab102e2346f472616deb830487ae64aad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab102e2346f472616deb830487ae64aad">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[15/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateMultiplicationInt32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00188">188</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;{</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefMultiplicationWorkload&lt;int32_t&gt;,</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <a class="code" href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">MultiplicationQueueDescriptor</a>,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <a class="code" href="classarmnn_1_1_multiplication_layer.xhtml">MultiplicationLayer</a>,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>&gt;();</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_multiplication_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">armnn::MultiplicationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00228">WorkloadData.hpp:228</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="classarmnn_1_1_multiplication_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_multiplication_layer.xhtml">armnn::MultiplicationLayer</a></div><div class="ttdoc">This layer represents a multiplication operation. </div><div class="ttdef"><b>Definition:</b> <a href="_multiplication_layer_8hpp_source.xhtml#l00014">MultiplicationLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4ee8ff90da474e10de9bc16e30d4371f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ee8ff90da474e10de9bc16e30d4371f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[16/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateDivisionFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00196">196</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>.</p>
<div class="fragment"><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;{</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefDivisionWorkload&lt;&gt;,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <a class="code" href="structarmnn_1_1_division_queue_descriptor.xhtml">DivisionQueueDescriptor</a>,</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <a class="code" href="classarmnn_1_1_division_layer.xhtml">DivisionLayer</a>,</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;();</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_division_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_division_queue_descriptor.xhtml">armnn::DivisionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00234">WorkloadData.hpp:234</a></div></div>
<div class="ttc" id="classarmnn_1_1_division_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_division_layer.xhtml">armnn::DivisionLayer</a></div><div class="ttdoc">This layer represents a division operation. </div><div class="ttdef"><b>Definition:</b> <a href="_division_layer_8hpp_source.xhtml#l00014">DivisionLayer.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4879b55fbb91b51eff4658017db4d52b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4879b55fbb91b51eff4658017db4d52b">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[17/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateDivisionFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00204">204</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::Float16</a>.</p>
<div class="fragment"><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;{</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefDivisionWorkload&lt;&gt;,</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <a class="code" href="structarmnn_1_1_division_queue_descriptor.xhtml">DivisionQueueDescriptor</a>,</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="classarmnn_1_1_division_layer.xhtml">DivisionLayer</a>,</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>&gt;();</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_division_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_division_queue_descriptor.xhtml">armnn::DivisionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00234">WorkloadData.hpp:234</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="classarmnn_1_1_division_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_division_layer.xhtml">armnn::DivisionLayer</a></div><div class="ttdoc">This layer represents a division operation. </div><div class="ttdef"><b>Definition:</b> <a href="_division_layer_8hpp_source.xhtml#l00014">DivisionLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acc127e63cab0137b8646324a1920ea08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc127e63cab0137b8646324a1920ea08">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[18/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateDivisionUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00212">212</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>.</p>
<div class="fragment"><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;{</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefDivisionWorkload&lt;&gt;,</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <a class="code" href="structarmnn_1_1_division_queue_descriptor.xhtml">DivisionQueueDescriptor</a>,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <a class="code" href="classarmnn_1_1_division_layer.xhtml">DivisionLayer</a>,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>&gt;();</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_division_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_division_queue_descriptor.xhtml">armnn::DivisionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00234">WorkloadData.hpp:234</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="classarmnn_1_1_division_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_division_layer.xhtml">armnn::DivisionLayer</a></div><div class="ttdoc">This layer represents a division operation. </div><div class="ttdef"><b>Definition:</b> <a href="_division_layer_8hpp_source.xhtml#l00014">DivisionLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9cf5cf702dea9e8cc18b856969c5a9ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cf5cf702dea9e8cc18b856969c5a9ff">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[19/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateDivisionInt16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00220">220</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;{</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefDivisionWorkload&lt;&gt;,</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <a class="code" href="structarmnn_1_1_division_queue_descriptor.xhtml">DivisionQueueDescriptor</a>,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <a class="code" href="classarmnn_1_1_division_layer.xhtml">DivisionLayer</a>,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>&gt;();</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="structarmnn_1_1_division_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_division_queue_descriptor.xhtml">armnn::DivisionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00234">WorkloadData.hpp:234</a></div></div>
<div class="ttc" id="classarmnn_1_1_division_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_division_layer.xhtml">armnn::DivisionLayer</a></div><div class="ttdoc">This layer represents a division operation. </div><div class="ttdef"><b>Definition:</b> <a href="_division_layer_8hpp_source.xhtml#l00014">DivisionLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2c67b2692b36a745819bbcb9a93030ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c67b2692b36a745819bbcb9a93030ae">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[20/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateDivisionInt32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00228">228</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;{</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    RefCreateElementwiseWorkloadTest&lt;RefDivisionWorkload&lt;int32_t&gt;,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <a class="code" href="structarmnn_1_1_division_queue_descriptor.xhtml">DivisionQueueDescriptor</a>,</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <a class="code" href="classarmnn_1_1_division_layer.xhtml">DivisionLayer</a>,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>&gt;();</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="structarmnn_1_1_division_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_division_queue_descriptor.xhtml">armnn::DivisionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00234">WorkloadData.hpp:234</a></div></div>
<div class="ttc" id="classarmnn_1_1_division_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_division_layer.xhtml">armnn::DivisionLayer</a></div><div class="ttdoc">This layer represents a division operation. </div><div class="ttdef"><b>Definition:</b> <a href="_division_layer_8hpp_source.xhtml#l00014">DivisionLayer.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab941b94da3362c927dc5832b49fffe92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab941b94da3362c927dc5832b49fffe92">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[21/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchNormalizationFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00265">265</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;{</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    RefCreateBatchNormalizationWorkloadTest&lt;RefBatchNormalizationWorkload,armnn::DataType::Float32&gt;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            (DataLayout::NCHW);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="abb4205da6dcd9c8111324f7c592becae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb4205da6dcd9c8111324f7c592becae">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[22/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchNormalizationFloat32WorkloadNhwc&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00271">271</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;{</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    RefCreateBatchNormalizationWorkloadTest&lt;RefBatchNormalizationWorkload, armnn::DataType::Float32&gt;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            (DataLayout::NHWC);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae6aaea75a9c06ecf746f060db5e312bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6aaea75a9c06ecf746f060db5e312bf">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[23/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchNormalizationFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00277">277</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;{</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    RefCreateBatchNormalizationWorkloadTest&lt;RefBatchNormalizationWorkload,armnn::DataType::Float16&gt;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            (DataLayout::NCHW);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa88277834d3cd0570537d2fa2c47ffcf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa88277834d3cd0570537d2fa2c47ffcf">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[24/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchNormalizationFloat16WorkloadNhwc&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00283">283</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;{</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    RefCreateBatchNormalizationWorkloadTest&lt;RefBatchNormalizationWorkload, armnn::DataType::Float16&gt;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            (DataLayout::NHWC);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab927f6f0c661830d3a8da5d1b2b9874b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab927f6f0c661830d3a8da5d1b2b9874b">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[25/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchNormalizationUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00289">289</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;{</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    RefCreateBatchNormalizationWorkloadTest&lt;RefBatchNormalizationWorkload, armnn::DataType::QAsymmU8&gt;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            (DataLayout::NCHW);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aaa98b0b574f1231232753c0a173e9044"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa98b0b574f1231232753c0a173e9044">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[26/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchNormalizationUint8WorkloadNhwc&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00295">295</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;{</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    RefCreateBatchNormalizationWorkloadTest&lt;RefBatchNormalizationWorkload, armnn::DataType::QAsymmU8&gt;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            (DataLayout::NHWC);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="acbb8b2035830a03a7db7422181834792"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbb8b2035830a03a7db7422181834792">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[27/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchNormalizationInt16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00301">301</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;{</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    RefCreateBatchNormalizationWorkloadTest&lt;RefBatchNormalizationWorkload, armnn::DataType::QSymmS16&gt;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            (DataLayout::NCHW);</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0d07b555444749c6778952ad8d5f1d90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d07b555444749c6778952ad8d5f1d90">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[28/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchNormalizationInt16WorkloadNhwc&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00307">307</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;{</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    RefCreateBatchNormalizationWorkloadTest&lt;RefBatchNormalizationWorkload, armnn::DataType::QSymmS16&gt;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            (DataLayout::NHWC);</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a2cd48cbae79d394f79c0c7acc456c436"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cd48cbae79d394f79c0c7acc456c436">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[29/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConvertFp16ToFp32Float32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00313">313</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;{</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>                graph;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <a class="code" href="classarmnn_1_1_ref_workload_factory.xhtml">RefWorkloadFactory</a> factory = GetFactory();</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="keyword">auto</span> workload = CreateConvertFp16ToFp32WorkloadTest&lt;RefConvertFp16ToFp32Workload&gt;(factory, graph);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="comment">// Checks that outputs and inputs are as we expect them</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    CheckInputOutput(</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        std::move(workload), <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({1, 3, 2, 3}, DataType::Float16), <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({1, 3, 2, 3}, DataType::Float32));</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_1_1_ref_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_ref_workload_factory.xhtml">armnn::RefWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_ref_workload_factory_8hpp_source.xhtml#l00030">RefWorkloadFactory.hpp:30</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae45acf3d80e9e982acb8a5e8a22bfbd4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae45acf3d80e9e982acb8a5e8a22bfbd4">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[30/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConvertFp32ToFp16Float16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00324">324</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;{</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>                graph;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="classarmnn_1_1_ref_workload_factory.xhtml">RefWorkloadFactory</a> factory = GetFactory();</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keyword">auto</span> workload = CreateConvertFp32ToFp16WorkloadTest&lt;RefConvertFp32ToFp16Workload&gt;(factory, graph);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="comment">// Checks that outputs and inputs are as we expect them</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    CheckInputOutput(</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        std::move(workload), <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({1, 3, 2, 3}, DataType::Float32), <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>({1, 3, 2, 3}, DataType::Float16));</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_1_1_ref_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_ref_workload_factory.xhtml">armnn::RefWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_ref_workload_factory_8hpp_source.xhtml#l00030">RefWorkloadFactory.hpp:30</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8a2458d4f6ff9103299e72433245db5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a2458d4f6ff9103299e72433245db5b">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[31/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConvolution2dFloatNchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00353">353</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;{</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    RefCreateConvolution2dWorkloadTest(DataLayout::NCHW);</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1738342e20abb6bebf8766a796424865"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1738342e20abb6bebf8766a796424865">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[32/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConvolution2dFloatNhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00358">358</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;{</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    RefCreateConvolution2dWorkloadTest(DataLayout::NHWC);</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac96201c573891d4b179bf38af48a5fe5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac96201c573891d4b179bf38af48a5fe5">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[33/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateDepthwiseConvolutionFloat32NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00381">381</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;{</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    RefCreateDepthwiseConvolutionWorkloadTest(DataLayout::NHWC);</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac8d03744a709d27fde75e3e649cd7928"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8d03744a709d27fde75e3e649cd7928">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[34/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateFullyConnectedWorkloadFloat32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00401">401</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;{</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    RefCreateFullyConnectedWorkloadTest&lt;RefFullyConnectedWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a16b1fedc3b195f7641947bf5adc3dfae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16b1fedc3b195f7641947bf5adc3dfae">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[35/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateFullyConnectedWorkloadQuantisedAsymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00406">406</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;{</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    RefCreateFullyConnectedWorkloadTest&lt;RefFullyConnectedWorkload, armnn::DataType::QAsymmU8&gt;();</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a9d96fd0c00a5920eb39a6b1c1dd91cd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d96fd0c00a5920eb39a6b1c1dd91cd8">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[36/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateFullyConnectedWorkloadQuantisedSymm16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00411">411</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;{</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    RefCreateFullyConnectedWorkloadTest&lt;RefFullyConnectedWorkload, armnn::DataType::QSymmS16&gt;();</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1ff5ef9e4f21ed637b5f5c36889b49db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ff5ef9e4f21ed637b5f5c36889b49db">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[37/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateRefNormalizationFloat32NchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00443">443</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;{</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    RefCreateNormalizationWorkloadTest&lt;RefNormalizationWorkload, armnn::DataType::Float32&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a489c80fd4209261c63dc4c6eb13adf82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a489c80fd4209261c63dc4c6eb13adf82">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[38/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateRefNormalizationFloat32NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00448">448</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;{</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    RefCreateNormalizationWorkloadTest&lt;RefNormalizationWorkload, armnn::DataType::Float32&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a396d25919b4db95efc8163e5480eca41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a396d25919b4db95efc8163e5480eca41">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[39/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateRefNormalizationUint8NchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00453">453</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;{</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    RefCreateNormalizationWorkloadTest&lt;RefNormalizationWorkload, armnn::DataType::QAsymmU8&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8c3fd8a88966553acc63f26d55363392"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c3fd8a88966553acc63f26d55363392">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[40/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateRefNormalizationUint8NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00458">458</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;{</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    RefCreateNormalizationWorkloadTest&lt;RefNormalizationWorkload, armnn::DataType::QAsymmU8&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a75adb0f986194f819918e15e9d056457"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75adb0f986194f819918e15e9d056457">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[41/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateRefNormalizationInt16NchwWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00463">463</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;{</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    RefCreateNormalizationWorkloadTest&lt;RefNormalizationWorkload, armnn::DataType::QSymmS16&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab569bdd2d6d978c142800ddce8b63b45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab569bdd2d6d978c142800ddce8b63b45">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[42/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateRefNormalizationInt16NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00468">468</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;{</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    RefCreateNormalizationWorkloadTest&lt;RefNormalizationWorkload, armnn::DataType::QSymmS16&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac4446c616fa4040bfeeca1f7f9358633"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4446c616fa4040bfeeca1f7f9358633">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[43/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePooling2dFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00501">501</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;{</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    RefCreatePooling2dWorkloadTest&lt;RefPooling2dWorkload, armnn::DataType::Float32&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a594ea40c9b86061d10a2c80e4816a16e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a594ea40c9b86061d10a2c80e4816a16e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[44/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePooling2dFloat32NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00506">506</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;{</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    RefCreatePooling2dWorkloadTest&lt;RefPooling2dWorkload, armnn::DataType::Float32&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa1b2456a24a3dde7961cc8dee29eabf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1b2456a24a3dde7961cc8dee29eabf0">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[45/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePooling2dUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00511">511</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;{</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    RefCreatePooling2dWorkloadTest&lt;RefPooling2dWorkload, armnn::DataType::QAsymmU8&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a45f904a90c0b0cadb62097baaf1dce07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45f904a90c0b0cadb62097baaf1dce07">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[46/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePooling2dUint8NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00516">516</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;{</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    RefCreatePooling2dWorkloadTest&lt;RefPooling2dWorkload, armnn::DataType::QAsymmU8&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa991974c576c289dea888237919a9e96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa991974c576c289dea888237919a9e96">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[47/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePooling2dInt16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00521">521</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;{</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    RefCreatePooling2dWorkloadTest&lt;RefPooling2dWorkload, armnn::DataType::QSymmS16&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aed0bef0163150d327fd07491e6842e1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed0bef0163150d327fd07491e6842e1f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[48/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePooling2dInt16NhwcWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00526">526</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;{</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    RefCreatePooling2dWorkloadTest&lt;RefPooling2dWorkload, armnn::DataType::QSymmS16&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1dd9876913e311bf87443aa0709d09ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1dd9876913e311bf87443aa0709d09ad">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[49/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSoftmaxFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00557">557</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;{</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    RefCreateSoftmaxWorkloadTest&lt;RefSoftmaxWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7d00a3e31deb447b0e818d09c4e2c122"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d00a3e31deb447b0e818d09c4e2c122">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[50/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSoftmaxFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00562">562</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;{</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    RefCreateSoftmaxWorkloadTest&lt;RefSoftmaxWorkload, armnn::DataType::Float16&gt;();</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a16715fe6153bb6b5b20b2b7ec7104b4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16715fe6153bb6b5b20b2b7ec7104b4a">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[51/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSoftmaxQuantisedAsymm8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00567">567</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;{</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    RefCreateSoftmaxWorkloadTest&lt;RefSoftmaxWorkload, armnn::DataType::QAsymmU8&gt;();</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a64ccd24d1bd6ed8e04444e9fc020ab6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64ccd24d1bd6ed8e04444e9fc020ab6e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[52/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSoftmaxQuantisedSymm16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00572">572</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;{</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    RefCreateSoftmaxWorkloadTest&lt;RefSoftmaxWorkload, armnn::DataType::QSymmS16&gt;();</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a5d79d058ed3ce5f796386364969e2581"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d79d058ed3ce5f796386364969e2581">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[53/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSplitterFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00599">599</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;{</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    RefCreateSplitterWorkloadTest&lt;RefSplitterWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a856e926d6587c6025a56faa2ae276c03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a856e926d6587c6025a56faa2ae276c03">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[54/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSplitterFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00604">604</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;{</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    RefCreateSplitterWorkloadTest&lt;RefSplitterWorkload, armnn::DataType::Float16&gt;();</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a73620793bccf4f93947feea2a810d413"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73620793bccf4f93947feea2a810d413">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[55/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSplitterUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00609">609</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;{</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    RefCreateSplitterWorkloadTest&lt;RefSplitterWorkload, armnn::DataType::QAsymmU8&gt;();</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a9b9b53471a49d63214ba072f1b213fa4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b9b53471a49d63214ba072f1b213fa4">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[56/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSplitterConcatFloat32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00647">647</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;{</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    RefCreateSplitterConcatWorkloadTest&lt;RefSplitterWorkload, RefConcatWorkload, DataType::Float32&gt;();</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a949cc47e492ce11302f0ffdeeb7c70ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a949cc47e492ce11302f0ffdeeb7c70ca">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[57/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSplitterConcatFloat16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00652">652</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;{</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    RefCreateSplitterConcatWorkloadTest&lt;RefSplitterWorkload, RefConcatWorkload, DataType::Float16&gt;();</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa03822e48c0af312c65f8ed819d164b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa03822e48c0af312c65f8ed819d164b6">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[58/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSplitterConcatUint8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00657">657</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;{</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    RefCreateSplitterConcatWorkloadTest&lt;RefSplitterWorkload, RefConcatWorkload, DataType::QAsymmU8&gt;();</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a168a7c8cf3d6baee1e61dc24832ac33f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a168a7c8cf3d6baee1e61dc24832ac33f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[59/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSingleOutputMultipleInputsFloat32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00700">700</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;{</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    RefCreateSingleOutputMultipleInputsTest&lt;<a class="code" href="classarmnn_1_1_ref_splitter_workload.xhtml">RefSplitterWorkload</a>, <a class="code" href="classarmnn_1_1_ref_activation_workload.xhtml">RefActivationWorkload</a>,</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;();</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_ref_splitter_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_ref_splitter_workload.xhtml">armnn::RefSplitterWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_ref_splitter_workload_8hpp_source.xhtml#l00016">RefSplitterWorkload.hpp:16</a></div></div>
<div class="ttc" id="classarmnn_1_1_ref_activation_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_ref_activation_workload.xhtml">armnn::RefActivationWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_ref_activation_workload_8hpp_source.xhtml#l00014">RefActivationWorkload.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abf9fe44992f18b9501bbce9d7b19cdbe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf9fe44992f18b9501bbce9d7b19cdbe">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[60/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSingleOutputMultipleInputsUint8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00706">706</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;{</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    RefCreateSingleOutputMultipleInputsTest&lt;<a class="code" href="classarmnn_1_1_ref_splitter_workload.xhtml">RefSplitterWorkload</a>, <a class="code" href="classarmnn_1_1_ref_activation_workload.xhtml">RefActivationWorkload</a>,</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>&gt;();</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_ref_splitter_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_ref_splitter_workload.xhtml">armnn::RefSplitterWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_ref_splitter_workload_8hpp_source.xhtml#l00016">RefSplitterWorkload.hpp:16</a></div></div>
<div class="ttc" id="classarmnn_1_1_ref_activation_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_ref_activation_workload.xhtml">armnn::RefActivationWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_ref_activation_workload_8hpp_source.xhtml#l00014">RefActivationWorkload.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad4530438508a0bb641649c558e19c89d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4530438508a0bb641649c558e19c89d">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[61/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateResizeBilinearFloat32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00740">740</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;{</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    RefCreateResizeBilinearTest&lt;RefResizeWorkload, armnn::DataType::Float32&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a701b321d642e2a1ecc2ed1792de717c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a701b321d642e2a1ecc2ed1792de717c3">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[62/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateResizeBilinearFloat16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00745">745</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;{</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    RefCreateResizeBilinearTest&lt;RefResizeWorkload, armnn::DataType::Float16&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a92781a1fe6584ff5ef611c6c4cdecc57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92781a1fe6584ff5ef611c6c4cdecc57">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[63/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateResizeBilinearUint8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00750">750</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;{</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    RefCreateResizeBilinearTest&lt;RefResizeWorkload, armnn::DataType::QAsymmU8&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae72ce3fcfbf1ab16d24b14c59c4a4743"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae72ce3fcfbf1ab16d24b14c59c4a4743">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[64/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateResizeBilinearQuantisedAsymm16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00755">755</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;{</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    RefCreateResizeBilinearTest&lt;RefResizeWorkload, armnn::DataType::QSymmS16&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a21967bb06657ebcef9e3ed6dbfd4a04b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21967bb06657ebcef9e3ed6dbfd4a04b">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[65/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateResizeBilinearFloat32Nhwc&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00760">760</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;{</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    RefCreateResizeBilinearTest&lt;RefResizeWorkload, armnn::DataType::Float32&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a4da7437861bb40c8a602f443f1b62953"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4da7437861bb40c8a602f443f1b62953">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[66/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchToSpaceNdFloat32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00778">778</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;{</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    RefCreateBatchToSpaceNdTest&lt;RefBatchToSpaceNdWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac0597b1862d3ea1574543dcc9e0721a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0597b1862d3ea1574543dcc9e0721a5">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[67/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchToSpaceNdFloat16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00783">783</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;{</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;    RefCreateBatchToSpaceNdTest&lt;RefBatchToSpaceNdWorkload, armnn::DataType::Float16&gt;();</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad756f39af220b6032c9d3987ba3e528b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad756f39af220b6032c9d3987ba3e528b">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[68/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchToSpaceNdUint8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00788">788</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;{</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    RefCreateBatchToSpaceNdTest&lt;RefBatchToSpaceNdWorkload, armnn::DataType::QAsymmU8&gt;();</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aed86bc11787de03c506f6a8e9d580355"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed86bc11787de03c506f6a8e9d580355">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[69/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateBatchToSpaceNdQSymm16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00793">793</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;{</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    RefCreateBatchToSpaceNdTest&lt;RefBatchToSpaceNdWorkload, armnn::DataType::QSymmS16&gt;();</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a06e01df743165fbe9237a36a2ee806bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06e01df743165fbe9237a36a2ee806bd">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[70/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateL2NormalizationFloat32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00826">826</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;{</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    RefCreateL2NormalizationTest&lt;RefL2NormalizationWorkload, armnn::DataType::Float32&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7e2e2fb5fd24d59d5c7b8671cd9d8bbe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e2e2fb5fd24d59d5c7b8671cd9d8bbe">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[71/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateL2NormalizationFloat32Nhwc&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00831">831</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;{</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    RefCreateL2NormalizationTest&lt;RefL2NormalizationWorkload, armnn::DataType::Float32&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aed895fa5ab4bf4d616bd8896d5b4b50e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed895fa5ab4bf4d616bd8896d5b4b50e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[72/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateL2NormalizationInt16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00836">836</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;{</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    RefCreateL2NormalizationTest&lt;RefL2NormalizationWorkload, armnn::DataType::QSymmS16&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa89f98885f79f976e56256660d929d54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa89f98885f79f976e56256660d929d54">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[73/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateL2NormalizationInt16Nhwc&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00841">841</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;{</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;    RefCreateL2NormalizationTest&lt;RefL2NormalizationWorkload, armnn::DataType::QSymmS16&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a23898a843f8463238d4341ac74107ed2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23898a843f8463238d4341ac74107ed2">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[74/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateL2NormalizationUint8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00846">846</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;{</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    RefCreateL2NormalizationTest&lt;RefL2NormalizationWorkload, armnn::DataType::QAsymmU8&gt;(DataLayout::NCHW);</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad548e3f61c6c8ab695b2365afd272ce0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad548e3f61c6c8ab695b2365afd272ce0">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[75/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateL2NormalizationUint8Nhwc&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00851">851</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;{</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    RefCreateL2NormalizationTest&lt;RefL2NormalizationWorkload, armnn::DataType::QAsymmU8&gt;(DataLayout::NHWC);</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a15827696bbfafbab550d1745f3e27930"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15827696bbfafbab550d1745f3e27930">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[76/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateReshapeWorkloadFloat32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00870">870</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;{</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    RefCreateReshapeWorkloadTest&lt;RefReshapeWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a46ebad6ae89f77b0c2946d98a9510bff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46ebad6ae89f77b0c2946d98a9510bff">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[77/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateReshapeWorkloadQuantisedAsymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00875">875</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;{</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;    RefCreateReshapeWorkloadTest&lt;RefReshapeWorkload, armnn::DataType::QAsymmU8&gt;();</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a14965f32deab9acee2bdfbeba9bb2af1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14965f32deab9acee2bdfbeba9bb2af1">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[78/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateReshapeWorkloadQuantisedSymm16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00880">880</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;{</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    RefCreateReshapeWorkloadTest&lt;RefReshapeWorkload, armnn::DataType::QSymmS16&gt;();</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8782f9dbea0bfb27baa047d5c961ff3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8782f9dbea0bfb27baa047d5c961ff3e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[79/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim0Float32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00899">899</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;{</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;    RefCreateConcatWorkloadTest&lt;RefConcatWorkload, armnn::DataType::Float32&gt;({ 4, 3, 2, 5 }, 0);</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="abd3c9dcbed34397d70c0b22e6fec617f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd3c9dcbed34397d70c0b22e6fec617f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[80/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim0Float16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00904">904</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;{</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;    RefCreateConcatWorkloadTest&lt;RefConcatWorkload, armnn::DataType::Float16&gt;({ 4, 3, 2, 5 }, 0);</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab4f6f715f63bf06d9bb87a21e77f2129"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4f6f715f63bf06d9bb87a21e77f2129">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[81/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim0Uint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00909">909</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;{</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    RefCreateConcatWorkloadTest&lt;RefConcatWorkload, armnn::DataType::QAsymmU8&gt;({ 4, 3, 2, 5 }, 0);</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a3dc599556b9f3c1c617b043c87d82c74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3dc599556b9f3c1c617b043c87d82c74">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[82/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim0Uint16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00914">914</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;{</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;    RefCreateConcatWorkloadTest&lt;RefConcatWorkload, armnn::DataType::QSymmS16&gt;({ 4, 3, 2, 5 }, 0);</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a6e908cfa4b2b0d235a7a83bb450af212"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e908cfa4b2b0d235a7a83bb450af212">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[83/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim1Float32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00919">919</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;{</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;    RefCreateConcatWorkloadTest&lt;RefConcatWorkload, armnn::DataType::Float32&gt;({ 2, 6, 2, 5 }, 1);</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad76e3bac3ab907f6ebf516ca8f40ad49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad76e3bac3ab907f6ebf516ca8f40ad49">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[84/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim1Uint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00924">924</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;{</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;    RefCreateConcatWorkloadTest&lt;RefConcatWorkload, armnn::DataType::QAsymmU8&gt;({ 2, 6, 2, 5 }, 1);</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab1af54a3eec17165e9cee8b0bcf3d55c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1af54a3eec17165e9cee8b0bcf3d55c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[85/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim2Float32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00929">929</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;{</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;    RefCreateConcatWorkloadTest&lt;RefConcatWorkload, armnn::DataType::Float32&gt;({ 2, 3, 4, 5 }, 2);</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab78fddea7399be741a003deb254dbf62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab78fddea7399be741a003deb254dbf62">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[86/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim2Uint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00934">934</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;{</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;    RefCreateConcatWorkloadTest&lt;RefConcatWorkload, armnn::DataType::QAsymmU8&gt;({ 2, 3, 4, 5 }, 2);</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a15c6731388ff09e4fb01e12100138e40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15c6731388ff09e4fb01e12100138e40">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[87/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim3Float32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00939">939</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;{</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;    RefCreateConcatWorkloadTest&lt;RefConcatWorkload, armnn::DataType::Float32&gt;({ 2, 3, 2, 10 }, 3);</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a41bdcd447af6e0fe880fd6c746830468"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41bdcd447af6e0fe880fd6c746830468">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[88/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConcatDim3Uint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00944">944</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;{</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;    RefCreateConcatWorkloadTest&lt;RefConcatWorkload, armnn::DataType::QAsymmU8&gt;({ 2, 3, 2, 10 }, 3);</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7969d45c3cccd8daa055e3412b4bed68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7969d45c3cccd8daa055e3412b4bed68">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[89/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConstantUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00962">962</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;{</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;    RefCreateConstantWorkloadTest&lt;RefConstantWorkload, armnn::DataType::QAsymmU8&gt;({ 2, 3, 2, 10 });</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a4db8dc5565b0621adadf181bcfb5e42c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4db8dc5565b0621adadf181bcfb5e42c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[90/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConstantInt16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00967">967</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;{</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;    RefCreateConstantWorkloadTest&lt;RefConstantWorkload, armnn::DataType::QSymmS16&gt;({ 2, 3, 2, 10 });</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a4a90c2b6944e9e8e96c25516549c0cc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a90c2b6944e9e8e96c25516549c0cc9">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[91/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConstantFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00972">972</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;{</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;    RefCreateConstantWorkloadTest&lt;RefConstantWorkload, armnn::DataType::Float32&gt;({ 2, 3, 2, 10 });</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a88e28a1faa66d1ab0a0ffa6ad9a47b60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88e28a1faa66d1ab0a0ffa6ad9a47b60">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[92/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateConstantSigned32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l00977">977</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;{</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;    RefCreateConstantWorkloadTest&lt;RefConstantWorkload, armnn::DataType::Signed32&gt;({ 2, 3, 2, 10 });</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="afcadab839f145917ff02c8451a76a152"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcadab839f145917ff02c8451a76a152">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[93/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePreluFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01002">1002</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;{</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;    RefCreatePreluWorkloadTest({ 1, 4, 1, 2 }, { 5, 4, 3, 1 }, { 5, 4, 3, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa73ba7a4ea3327d87efd4618c083b333"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa73ba7a4ea3327d87efd4618c083b333">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[94/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePreluFloat16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01007">1007</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;{</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;    RefCreatePreluWorkloadTest({ 1, 4, 1, 2 }, { 5, 4, 3, 1 }, { 5, 4, 3, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a12d17284981e1fff8f0fc76da9293e2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12d17284981e1fff8f0fc76da9293e2c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[95/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePreluUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01012">1012</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;{</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    RefCreatePreluWorkloadTest({ 1, 4, 1, 2 }, { 5, 4, 3, 1 }, { 5, 4, 3, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>);</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad9bbc84cf48c0112c698e7d678a318f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9bbc84cf48c0112c698e7d678a318f6">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[96/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePreluInt16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01017">1017</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;{</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;    RefCreatePreluWorkloadTest({ 1, 4, 1, 2 }, { 5, 4, 3, 1 }, { 5, 4, 3, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>);</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a16addc490db90b266ef38af9ebd3d731"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16addc490db90b266ef38af9ebd3d731">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[97/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePreluFloat32NoBroadcastWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01022">1022</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;{</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;    BOOST_CHECK_THROW(RefCreatePreluWorkloadTest({ 1, 4, 7, 2 }, { 5, 4, 3, 1 }, { 5, 4, 3, 2 },</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;                                                 <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>),</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;                      <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>);</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7124dca744920ec86ae32fbc5dd9285f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7124dca744920ec86ae32fbc5dd9285f">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[98/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePreluFloat16NoBroadcastWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01029">1029</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;{</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;    BOOST_CHECK_THROW(RefCreatePreluWorkloadTest({ 1, 4, 7, 2 }, { 5, 4, 3, 1 }, { 5, 4, 3, 2 },</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;                                                 <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>),</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;                      <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>);</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="classarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7132a0f1bbefa31da10ad1b4f6812f7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7132a0f1bbefa31da10ad1b4f6812f7e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[99/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePreluUint8NoBroadcastWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01036">1036</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;{</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;    BOOST_CHECK_THROW(RefCreatePreluWorkloadTest({ 1, 4, 7, 2 }, { 5, 4, 3, 1 }, { 5, 4, 3, 2 },</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;                                                 <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>),</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;                      <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>);</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="classarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a63bce6d36ea8f3c55eebcb98cf80f63e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63bce6d36ea8f3c55eebcb98cf80f63e">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[100/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreatePreluInt16NoBroadcastWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01043">1043</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;{</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;    BOOST_CHECK_THROW(RefCreatePreluWorkloadTest({ 1, 4, 7, 2 }, { 5, 4, 3, 1 }, { 5, 4, 3, 2 },</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;                                                 <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>),</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;                      <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>);</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="classarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="adc18533dddc0d2c073e07b650955a6d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc18533dddc0d2c073e07b650955a6d9">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[101/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSpaceToDepthWorkloadFloat32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01063">1063</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;{</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;    RefCreateSpaceToDepthWorkloadTest&lt;RefSpaceToDepthWorkload, armnn::DataType::Float32&gt;();</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="af47399c946f0281f6f63251302b0bdfc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af47399c946f0281f6f63251302b0bdfc">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[102/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSpaceToDepthWorkloadFloat16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01068">1068</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;{</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;    RefCreateSpaceToDepthWorkloadTest&lt;RefSpaceToDepthWorkload, armnn::DataType::Float16&gt;();</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad2344fbc180e3d6442aad31dbad08954"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2344fbc180e3d6442aad31dbad08954">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[103/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSpaceToDepthWorkloadQASymm8&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01073">1073</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;{</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;    RefCreateSpaceToDepthWorkloadTest&lt;RefSpaceToDepthWorkload, armnn::DataType::QAsymmU8&gt;();</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad362fa938c5f64b1f3ef834f3131bda6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad362fa938c5f64b1f3ef834f3131bda6">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[104/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateSpaceToDepthWorkloadQSymm16&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01078">1078</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;{</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;    RefCreateSpaceToDepthWorkloadTest&lt;RefSpaceToDepthWorkload, armnn::DataType::QSymmS16&gt;();</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a72d6262ab8544dbfa7cfc22910e3011c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72d6262ab8544dbfa7cfc22910e3011c">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[105/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateStackFloat32Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01109">1109</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;{</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;    RefCreateStackWorkloadTest&lt;armnn::DataType::Float32&gt;({ 3, 4, 5 }, { 3, 4, 2, 5 }, 2, 2);</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a966e80d9fbe654c47b44265d982d3c33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a966e80d9fbe654c47b44265d982d3c33">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[106/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateStackUint8Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01114">1114</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;{</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;    RefCreateStackWorkloadTest&lt;armnn::DataType::QAsymmU8&gt;({ 3, 4, 5 }, { 3, 4, 2, 5 }, 2, 2);</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a76cbb6d4fcc4fb2927e37c2c886e9cf5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76cbb6d4fcc4fb2927e37c2c886e9cf5">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[107/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateStackUint16Workload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01119">1119</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;{</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;    RefCreateStackWorkloadTest&lt;armnn::DataType::QSymmS16&gt;({ 3, 4, 5 }, { 3, 4, 2, 5 }, 2, 2);</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="acc1709bbfe42b50a80371b9e312202d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc1709bbfe42b50a80371b9e312202d0">&#9670;&nbsp;</a></span>BOOST_AUTO_TEST_CASE() <span class="overload">[108/108]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_AUTO_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">CreateQLstmWorkload&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml#l01148">1148</a> of file <a class="el" href="_ref_create_workload_tests_8cpp_source.xhtml">RefCreateWorkloadTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END()</a>.</p>
<div class="fragment"><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;{</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;    RefCreateQLstmWorkloadTest&lt;RefQLstmWorkload&gt;();</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_efae4012d0e357ebeaba7d02491d70e5.xhtml">reference</a></li><li class="navelem"><a class="el" href="dir_820f114a135ae891c13c0cafd2ecf138.xhtml">test</a></li><li class="navelem"><a class="el" href="_ref_create_workload_tests_8cpp.xhtml">RefCreateWorkloadTests.cpp</a></li>
    <li class="footer">Generated on Tue Aug 25 2020 12:29:46 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
