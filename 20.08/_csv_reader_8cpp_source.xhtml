<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnnUtils/CsvReader.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_csv_reader_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CsvReader.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_csv_reader_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_csv_reader_8hpp.xhtml">CsvReader.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_string_utils_8hpp.xhtml">armnn/utility/StringUtils.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;boost/tokenizer.hpp&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="_csv_reader_8cpp.xhtml#aafb3a3f74dda3391f17caeaaaca1c0c8">   15</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_csv_reader_8cpp.xhtml#aafb3a3f74dda3391f17caeaaaca1c0c8">Tokenizer</a> = boost::tokenizer&lt;boost::escaped_list_separator&lt;char&gt;&gt;;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn_utils.xhtml">armnnUtils</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="namespacearmnn_utils.xhtml#aed9a30e912d18171e93fcf58e0f219cb">   20</a></span>&#160;<a class="code" href="structarmnn_utils_1_1_csv_row.xhtml">CsvRow</a> <a class="code" href="namespacearmnn_utils.xhtml#aed9a30e912d18171e93fcf58e0f219cb">ParseLine</a>(<span class="keyword">const</span> std::string&amp; csvLine)</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <a class="code" href="_csv_reader_8cpp.xhtml#aafb3a3f74dda3391f17caeaaaca1c0c8">Tokenizer</a> tokenizer(csvLine);</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <a class="code" href="structarmnn_utils_1_1_csv_row.xhtml">CsvRow</a> entry;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;token : tokenizer)</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        entry.<a class="code" href="structarmnn_utils_1_1_csv_row.xhtml#af80d24ad6806a497ec21dc835c28b7ce">values</a>.push_back(<a class="code" href="namespacearmnn_1_1string_utils.xhtml#ac5da14c1462870eef77ca8ac4bb5afe5">armnn::stringUtils::StringTrimCopy</a>(token));</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    }</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordflow">return</span> entry;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;}</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classarmnn_utils_1_1_csv_reader.xhtml#afe61638fbcc211b6164b563937c8dce1">   32</a></span>&#160;std::vector&lt;CsvRow&gt; <a class="code" href="classarmnn_utils_1_1_csv_reader.xhtml#afe61638fbcc211b6164b563937c8dce1">CsvReader::ParseFile</a>(<span class="keyword">const</span> std::string&amp; csvFile)</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    std::vector&lt;CsvRow&gt; result;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    std::ifstream in(csvFile.c_str());</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">if</span> (!in.is_open())</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keywordflow">return</span> result;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    std::string line;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">while</span> (getline(in, line))</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">if</span>(!line.empty())</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <a class="code" href="structarmnn_utils_1_1_csv_row.xhtml">CsvRow</a> entry = <a class="code" href="namespacearmnn_utils.xhtml#aed9a30e912d18171e93fcf58e0f219cb">ParseLine</a>(line);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            result.push_back(entry);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">return</span> result;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classarmnn_utils_1_1_csv_reader.xhtml#a20acf7f9231aad30c62be405b4997882">   52</a></span>&#160;std::vector&lt;CsvRow&gt; <a class="code" href="classarmnn_utils_1_1_csv_reader.xhtml#a20acf7f9231aad30c62be405b4997882">CsvReader::ParseVector</a>(<span class="keyword">const</span> std::vector&lt;std::string&gt;&amp; csvVector)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    std::vector&lt;CsvRow&gt; result;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> <span class="keyword">const</span>&amp; line: csvVector)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <a class="code" href="structarmnn_utils_1_1_csv_row.xhtml">CsvRow</a> entry = <a class="code" href="namespacearmnn_utils.xhtml#aed9a30e912d18171e93fcf58e0f219cb">ParseLine</a>(line);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        result.push_back(entry);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">return</span> result;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;} <span class="comment">// namespace armnnUtils</span></div><div class="ttc" id="structarmnn_utils_1_1_csv_row_xhtml_af80d24ad6806a497ec21dc835c28b7ce"><div class="ttname"><a href="structarmnn_utils_1_1_csv_row.xhtml#af80d24ad6806a497ec21dc835c28b7ce">armnnUtils::CsvRow::values</a></div><div class="ttdeci">std::vector&lt; std::string &gt; values</div><div class="ttdef"><b>Definition:</b> <a href="_csv_reader_8hpp_source.xhtml#l00015">CsvReader.hpp:15</a></div></div>
<div class="ttc" id="namespacearmnn_1_1string_utils_xhtml_ac5da14c1462870eef77ca8ac4bb5afe5"><div class="ttname"><a href="namespacearmnn_1_1string_utils.xhtml#ac5da14c1462870eef77ca8ac4bb5afe5">armnn::stringUtils::StringTrimCopy</a></div><div class="ttdeci">std::string StringTrimCopy(const std::string &amp;str, const std::string &amp;chars=&quot;\\\&quot;)</div><div class="ttdoc">Trim from both the start and the end of a string, returns a trimmed copy of the string. </div><div class="ttdef"><b>Definition:</b> <a href="_string_utils_8hpp_source.xhtml#l00085">StringUtils.hpp:85</a></div></div>
<div class="ttc" id="structarmnn_utils_1_1_csv_row_xhtml"><div class="ttname"><a href="structarmnn_utils_1_1_csv_row.xhtml">armnnUtils::CsvRow</a></div><div class="ttdef"><b>Definition:</b> <a href="_csv_reader_8hpp_source.xhtml#l00013">CsvReader.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_utils_1_1_csv_reader_xhtml_a20acf7f9231aad30c62be405b4997882"><div class="ttname"><a href="classarmnn_utils_1_1_csv_reader.xhtml#a20acf7f9231aad30c62be405b4997882">armnnUtils::CsvReader::ParseVector</a></div><div class="ttdeci">static std::vector&lt; CsvRow &gt; ParseVector(const std::vector&lt; std::string &gt; &amp;csvVector)</div><div class="ttdef"><b>Definition:</b> <a href="_csv_reader_8cpp_source.xhtml#l00052">CsvReader.cpp:52</a></div></div>
<div class="ttc" id="_csv_reader_8cpp_xhtml_aafb3a3f74dda3391f17caeaaaca1c0c8"><div class="ttname"><a href="_csv_reader_8cpp.xhtml#aafb3a3f74dda3391f17caeaaaca1c0c8">Tokenizer</a></div><div class="ttdeci">boost::tokenizer&lt; boost::escaped_list_separator&lt; char &gt; &gt; Tokenizer</div><div class="ttdef"><b>Definition:</b> <a href="_csv_reader_8cpp_source.xhtml#l00015">CsvReader.cpp:15</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml"><div class="ttname"><a href="namespacearmnn_utils.xhtml">armnnUtils</a></div><div class="ttdef"><b>Definition:</b> <a href="_data_layout_indexed_8hpp_source.xhtml#l00013">DataLayoutIndexed.hpp:13</a></div></div>
<div class="ttc" id="_string_utils_8hpp_xhtml"><div class="ttname"><a href="_string_utils_8hpp.xhtml">StringUtils.hpp</a></div></div>
<div class="ttc" id="classarmnn_utils_1_1_csv_reader_xhtml_afe61638fbcc211b6164b563937c8dce1"><div class="ttname"><a href="classarmnn_utils_1_1_csv_reader.xhtml#afe61638fbcc211b6164b563937c8dce1">armnnUtils::CsvReader::ParseFile</a></div><div class="ttdeci">static std::vector&lt; CsvRow &gt; ParseFile(const std::string &amp;csvFile)</div><div class="ttdef"><b>Definition:</b> <a href="_csv_reader_8cpp_source.xhtml#l00032">CsvReader.cpp:32</a></div></div>
<div class="ttc" id="_csv_reader_8hpp_xhtml"><div class="ttname"><a href="_csv_reader_8hpp.xhtml">CsvReader.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml_aed9a30e912d18171e93fcf58e0f219cb"><div class="ttname"><a href="namespacearmnn_utils.xhtml#aed9a30e912d18171e93fcf58e0f219cb">armnnUtils::ParseLine</a></div><div class="ttdeci">CsvRow ParseLine(const std::string &amp;csvLine)</div><div class="ttdef"><b>Definition:</b> <a href="_csv_reader_8cpp_source.xhtml#l00020">CsvReader.cpp:20</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_5d9c764a006d252ff232a5efbbd99a46.xhtml">armnnUtils</a></li><li class="navelem"><a class="el" href="_csv_reader_8cpp.xhtml">CsvReader.cpp</a></li>
    <li class="footer">Generated on Tue Aug 25 2020 12:29:41 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
