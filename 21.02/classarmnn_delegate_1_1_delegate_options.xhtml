<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: DelegateOptions Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_delegate_1_1_delegate_options.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_delegate_1_1_delegate_options-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">DelegateOptions Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a318c3a715a80b7288e39c7daa8ef8494"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a318c3a715a80b7288e39c7daa8ef8494">DelegateOptions</a> (<a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae">armnn::Compute</a> computeDevice, const std::vector&lt; <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &gt; &amp;backendOptions={}, <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt; logSeverityLevel=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>())</td></tr>
<tr class="separator:a318c3a715a80b7288e39c7daa8ef8494"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1330ed498a1643097406598b87438d3e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a1330ed498a1643097406598b87438d3e">DelegateOptions</a> (const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;backends, const std::vector&lt; <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &gt; &amp;backendOptions={}, <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt; logSeverityLevel=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>())</td></tr>
<tr class="separator:a1330ed498a1643097406598b87438d3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1836bbbc92942bde6339d5073400250d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a1836bbbc92942bde6339d5073400250d">DelegateOptions</a> (<a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae">armnn::Compute</a> computeDevice, const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;optimizerOptions, const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt; &amp;logSeverityLevel=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>(), const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a> &gt; &amp;func=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>())</td></tr>
<tr class="separator:a1836bbbc92942bde6339d5073400250d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18f754e97c5eab2a93b6018b4fdf336e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a18f754e97c5eab2a93b6018b4fdf336e">DelegateOptions</a> (const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;backends, const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;optimizerOptions, const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt; &amp;logSeverityLevel=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>(), const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a> &gt; &amp;func=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>())</td></tr>
<tr class="separator:a18f754e97c5eab2a93b6018b4fdf336e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad95feca4087d8e42ecacc1950a3d3901"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad95feca4087d8e42ecacc1950a3d3901">GetBackends</a> () const</td></tr>
<tr class="separator:ad95feca4087d8e42ecacc1950a3d3901"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5">SetBackends</a> (const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;backends)</td></tr>
<tr class="separator:ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a601170c5bc75674017b891c58f9f175b"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a601170c5bc75674017b891c58f9f175b">GetBackendOptions</a> () const</td></tr>
<tr class="separator:a601170c5bc75674017b891c58f9f175b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b99570afa7d17ce4b1c7dab770fe467"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8b99570afa7d17ce4b1c7dab770fe467">AddBackendOption</a> (const <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &amp;option)</td></tr>
<tr class="memdesc:a8b99570afa7d17ce4b1c7dab770fe467"><td class="mdescLeft">&#160;</td><td class="mdescRight">Appends a backend option to the list of backend options.  <a href="#a8b99570afa7d17ce4b1c7dab770fe467">More...</a><br /></td></tr>
<tr class="separator:a8b99570afa7d17ce4b1c7dab770fe467"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98cd1055c58e98f7009c4e770fac96ec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a98cd1055c58e98f7009c4e770fac96ec">SetLoggingSeverity</a> (const <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &amp;level)</td></tr>
<tr class="memdesc:a98cd1055c58e98f7009c4e770fac96ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the severity level for logging within ArmNN that will be used on creation of the delegate.  <a href="#a98cd1055c58e98f7009c4e770fac96ec">More...</a><br /></td></tr>
<tr class="separator:a98cd1055c58e98f7009c4e770fac96ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a337e16dd51a972e2162870e01d48dbc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a337e16dd51a972e2162870e01d48dbc2">SetLoggingSeverity</a> (const std::string &amp;level)</td></tr>
<tr class="separator:a337e16dd51a972e2162870e01d48dbc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0c06976f83fdc6c393ad85ea23d97b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad0c06976f83fdc6c393ad85ea23d97b6">GetLoggingSeverity</a> ()</td></tr>
<tr class="memdesc:ad0c06976f83fdc6c393ad85ea23d97b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the severity level for logging within ArmNN.  <a href="#ad0c06976f83fdc6c393ad85ea23d97b6">More...</a><br /></td></tr>
<tr class="separator:ad0c06976f83fdc6c393ad85ea23d97b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c8c866c00936945dcb0bac65195488b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a9c8c866c00936945dcb0bac65195488b">IsLoggingEnabled</a> ()</td></tr>
<tr class="separator:a9c8c866c00936945dcb0bac65195488b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a24e0a6cebcc7d3383b83baac556be4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a7a24e0a6cebcc7d3383b83baac556be4">GetOptimizerOptions</a> () const</td></tr>
<tr class="separator:a7a24e0a6cebcc7d3383b83baac556be4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4a44278190ff1282d94d6a1a39e77ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#ab4a44278190ff1282d94d6a1a39e77ee">SetOptimizerOptions</a> (const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;optimizerOptions)</td></tr>
<tr class="separator:ab4a44278190ff1282d94d6a1a39e77ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88eb9e3a0ed5f64cfc6fe460d1621520"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a88eb9e3a0ed5f64cfc6fe460d1621520">GetDebugCallbackFunction</a> () const</td></tr>
<tr class="separator:a88eb9e3a0ed5f64cfc6fe460d1621520"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a318c3a715a80b7288e39c7daa8ef8494"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a318c3a715a80b7288e39c7daa8ef8494">&#9670;&nbsp;</a></span>DelegateOptions() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae">armnn::Compute</a>&#160;</td>
          <td class="paramname"><em>computeDevice</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>backendOptions</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt;&#160;</td>
          <td class="paramname"><em>logSeverityLevel</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1330ed498a1643097406598b87438d3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1330ed498a1643097406598b87438d3e">&#9670;&nbsp;</a></span>DelegateOptions() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a> </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>backends</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>backendOptions</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt;&#160;</td>
          <td class="paramname"><em>logSeverityLevel</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1836bbbc92942bde6339d5073400250d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1836bbbc92942bde6339d5073400250d">&#9670;&nbsp;</a></span>DelegateOptions() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae">armnn::Compute</a>&#160;</td>
          <td class="paramname"><em>computeDevice</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>optimizerOptions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>logSeverityLevel</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>func</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a18f754e97c5eab2a93b6018b4fdf336e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18f754e97c5eab2a93b6018b4fdf336e">&#9670;&nbsp;</a></span>DelegateOptions() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a> </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>backends</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>optimizerOptions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>logSeverityLevel</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>func</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a8b99570afa7d17ce4b1c7dab770fe467"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b99570afa7d17ce4b1c7dab770fe467">&#9670;&nbsp;</a></span>AddBackendOption()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void AddBackendOption </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>option</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Appends a backend option to the list of backend options. </p>

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00047">47</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="armnn__external__delegate_8cpp_source.xhtml#l00089">tflite::tflite_plugin_create_delegate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{ m_BackendOptions.push_back(option); }</div></div><!-- fragment -->
</div>
</div>
<a id="a601170c5bc75674017b891c58f9f175b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a601170c5bc75674017b891c58f9f175b">&#9670;&nbsp;</a></span>GetBackendOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;<a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a>&gt;&amp; GetBackendOptions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00044">44</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{ <span class="keywordflow">return</span> m_BackendOptions; }</div></div><!-- fragment -->
</div>
</div>
<a id="ad95feca4087d8e42ecacc1950a3d3901"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad95feca4087d8e42ecacc1950a3d3901">&#9670;&nbsp;</a></span>GetBackends()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;<a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a>&gt;&amp; GetBackends </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00040">40</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{ <span class="keywordflow">return</span> m_Backends; }</div></div><!-- fragment -->
</div>
</div>
<a id="a88eb9e3a0ed5f64cfc6fe460d1621520"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88eb9e3a0ed5f64cfc6fe460d1621520">&#9670;&nbsp;</a></span>GetDebugCallbackFunction()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt;<a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a>&gt;&amp; GetDebugCallbackFunction </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00062">62</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::CpuRef</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        { <span class="keywordflow">return</span> m_DebugCallbackFunc; }</div></div><!-- fragment -->
</div>
</div>
<a id="ad0c06976f83fdc6c393ad85ea23d97b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0c06976f83fdc6c393ad85ea23d97b6">&#9670;&nbsp;</a></span>GetLoggingSeverity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> GetLoggingSeverity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the severity level for logging within ArmNN. </p>

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00054">54</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="_optional_8hpp_source.xhtml#l00146">OptionalReferenceSwitch&lt; IsReference, T &gt;::value()</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{ <span class="keywordflow">return</span> m_LoggingSeverity.<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>(); }</div><div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_a77c7d528ac063d870b8c8426ec81c1c3"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">armnn::OptionalReferenceSwitch::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00146">Optional.hpp:146</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7a24e0a6cebcc7d3383b83baac556be4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a24e0a6cebcc7d3383b83baac556be4">&#9670;&nbsp;</a></span>GetOptimizerOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a>&amp; GetOptimizerOptions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00058">58</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{ <span class="keywordflow">return</span> m_OptimizerOptions; }</div></div><!-- fragment -->
</div>
</div>
<a id="a9c8c866c00936945dcb0bac65195488b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c8c866c00936945dcb0bac65195488b">&#9670;&nbsp;</a></span>IsLoggingEnabled()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsLoggingEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00056">56</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="_optional_8hpp_source.xhtml#l00053">OptionalBase::has_value()</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{ <span class="keywordflow">return</span> m_LoggingSeverity.<a class="code" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">has_value</a>(); }</div><div class="ttc" id="classarmnn_1_1_optional_base_xhtml_a86b749ce2c4bc627fa8a1fcfaf0e314f"><div class="ttname"><a href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">armnn::OptionalBase::has_value</a></div><div class="ttdeci">bool has_value() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00053">Optional.hpp:53</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5">&#9670;&nbsp;</a></span>SetBackends()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetBackends </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>backends</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00042">42</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="armnn__external__delegate_8cpp_source.xhtml#l00089">tflite::tflite_plugin_create_delegate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{ m_Backends = backends; }</div></div><!-- fragment -->
</div>
</div>
<a id="a98cd1055c58e98f7009c4e770fac96ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98cd1055c58e98f7009c4e770fac96ec">&#9670;&nbsp;</a></span>SetLoggingSeverity() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetLoggingSeverity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &amp;&#160;</td>
          <td class="paramname"><em>level</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the severity level for logging within ArmNN that will be used on creation of the delegate. </p>

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00050">50</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="armnn__external__delegate_8cpp_source.xhtml#l00089">tflite::tflite_plugin_create_delegate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{ m_LoggingSeverity = level; }</div></div><!-- fragment -->
</div>
</div>
<a id="a337e16dd51a972e2162870e01d48dbc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a337e16dd51a972e2162870e01d48dbc2">&#9670;&nbsp;</a></span>SetLoggingSeverity() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetLoggingSeverity </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>level</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00051">51</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="_logging_8hpp_source.xhtml#l00036">armnn::StringToLogLevel()</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{ m_LoggingSeverity = <a class="code" href="namespacearmnn.xhtml#aaaddf7d8f68eae6c1bf90e4ec3cb5490">armnn::StringToLogLevel</a>(level); }</div><div class="ttc" id="namespacearmnn_xhtml_aaaddf7d8f68eae6c1bf90e4ec3cb5490"><div class="ttname"><a href="namespacearmnn.xhtml#aaaddf7d8f68eae6c1bf90e4ec3cb5490">armnn::StringToLogLevel</a></div><div class="ttdeci">LogSeverity StringToLogLevel(std::string level)</div><div class="ttdef"><b>Definition:</b> <a href="_logging_8hpp_source.xhtml#l00036">Logging.hpp:36</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab4a44278190ff1282d94d6a1a39e77ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4a44278190ff1282d94d6a1a39e77ee">&#9670;&nbsp;</a></span>SetOptimizerOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetOptimizerOptions </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>optimizerOptions</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00060">60</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="armnn__external__delegate_8cpp_source.xhtml#l00089">tflite::tflite_plugin_create_delegate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{ m_OptimizerOptions = optimizerOptions; }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>delegate/include/<a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn_delegate.xhtml">armnnDelegate</a></li><li class="navelem"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a></li>
    <li class="footer">Generated on Thu Feb 25 2021 17:28:02 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
