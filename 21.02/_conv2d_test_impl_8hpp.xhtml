<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/Conv2dTestImpl.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_conv2d_test_impl_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Conv2dTestImpl.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="_resolve_type_8hpp_source.xhtml">ResolveType.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_types_8hpp_source.xhtml">armnn/Types.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_workload_factory_8hpp_source.xhtml">backendsCommon/WorkloadFactory.hpp</a>&gt;</code><br />
</div>
<p><a href="_conv2d_test_impl_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a0192d5e1143e77fb9c07f43cac008aa5"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a0192d5e1143e77fb9c07f43cac008aa5"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a0192d5e1143e77fb9c07f43cac008aa5">Convolution2d3x3Dilation3x3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a0192d5e1143e77fb9c07f43cac008aa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24ba5e372ff9e8c7603cd380d3673bff"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a24ba5e372ff9e8c7603cd380d3673bff"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a24ba5e372ff9e8c7603cd380d3673bff">Convolution2d2x3x3Dilation3x3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a24ba5e372ff9e8c7603cd380d3673bff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a130df3a88eb9a5bf1aaec61642a702d0"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a130df3a88eb9a5bf1aaec61642a702d0"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a130df3a88eb9a5bf1aaec61642a702d0">Convolution2d2x2Dilation2x2Padding2x2Stride3x3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a130df3a88eb9a5bf1aaec61642a702d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af541c93dcb094c01b52b99658704c500"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#af541c93dcb094c01b52b99658704c500">SimpleConvolution2d3x5Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:af541c93dcb094c01b52b99658704c500"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c22cdfa99117a1cdbc4b25064fd4c25"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a1c22cdfa99117a1cdbc4b25064fd4c25">SimpleConvolution2d3x3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a1c22cdfa99117a1cdbc4b25064fd4c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad232d77972b88a751dbf6ecd594b0faa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#ad232d77972b88a751dbf6ecd594b0faa">SimpleConvolution2d3x3Stride2x2Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:ad232d77972b88a751dbf6ecd594b0faa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d3ce31fe572451e18fea5add8543bf4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a4d3ce31fe572451e18fea5add8543bf4">SimpleConvolution2d3x3NhwcTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled)</td></tr>
<tr class="separator:a4d3ce31fe572451e18fea5add8543bf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10aae8f4c0c56c2c3574ca9ddf61a7af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a10aae8f4c0c56c2c3574ca9ddf61a7af">SimpleConvolution2d3x5Uint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a10aae8f4c0c56c2c3574ca9ddf61a7af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9966f7b9070f4eb34deeb8fc3cb3d277"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a9966f7b9070f4eb34deeb8fc3cb3d277">SimpleConvolution2d3x3Uint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a9966f7b9070f4eb34deeb8fc3cb3d277"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f6ba53d8a3801fd33288c8a88a55902"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a0f6ba53d8a3801fd33288c8a88a55902">SimpleConvolution2d3x5QSymm16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a0f6ba53d8a3801fd33288c8a88a55902"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebd160fb0c5f5662a1cbaec5974c13ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#aebd160fb0c5f5662a1cbaec5974c13ea">SimpleConvolution2d3x3QSymm16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:aebd160fb0c5f5662a1cbaec5974c13ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1b3e3dfbd3807989911b05b5830f7ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#ab1b3e3dfbd3807989911b05b5830f7ea">Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:ab1b3e3dfbd3807989911b05b5830f7ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0431327604bbd8051635e8ebd215e620"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a0431327604bbd8051635e8ebd215e620">Convolution2dAsymmetricPaddingTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a0431327604bbd8051635e8ebd215e620"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fde274ea5d168e2941e90ff6475262b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a7fde274ea5d168e2941e90ff6475262b">Convolution1dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled)</td></tr>
<tr class="separator:a7fde274ea5d168e2941e90ff6475262b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a6493bf0e6583e7d0535f6d01323bfc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a2a6493bf0e6583e7d0535f6d01323bfc">Convolution1dUint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled)</td></tr>
<tr class="separator:a2a6493bf0e6583e7d0535f6d01323bfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a885deaaf7b59c13ca6c94dce9e8b36"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a6a885deaaf7b59c13ca6c94dce9e8b36">CompareConvolution2dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, <a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;refWorkloadFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;refTensorHandleFactory)</td></tr>
<tr class="separator:a6a885deaaf7b59c13ca6c94dce9e8b36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3db9032b7a4530846a78babe58a1b2dd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a3db9032b7a4530846a78babe58a1b2dd">Convolution2dPerAxisQuantTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a3db9032b7a4530846a78babe58a1b2dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afba5868ef96cceb570cc4b8223f3019c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#afba5868ef96cceb570cc4b8223f3019c">Convolution2d3x3Stride2x2BFloat16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> &amp;dataLayout)</td></tr>
<tr class="separator:afba5868ef96cceb570cc4b8223f3019c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9573a516a902021f7b24fc8a8172ea8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a9573a516a902021f7b24fc8a8172ea8e">Convolution2d3x3Stride2x2BFloat16SmallValueTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> &amp;dataLayout)</td></tr>
<tr class="separator:a9573a516a902021f7b24fc8a8172ea8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae689ff7f2c5222b1ab4ee153e159cab7"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:ae689ff7f2c5222b1ab4ee153e159cab7"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#ae689ff7f2c5222b1ab4ee153e159cab7">DepthwiseConvolution2d3x3Dilation3x3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:ae689ff7f2c5222b1ab4ee153e159cab7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb5b1d96ba9807887953dfd1a71ddb14"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:adb5b1d96ba9807887953dfd1a71ddb14"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#adb5b1d96ba9807887953dfd1a71ddb14">DepthwiseConvolution2d2x3x3Dilation3x3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:adb5b1d96ba9807887953dfd1a71ddb14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a347ca1c8d1443563807e98e261a84954"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a347ca1c8d1443563807e98e261a84954"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a347ca1c8d1443563807e98e261a84954">DepthwiseConvolution2dMult4Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a347ca1c8d1443563807e98e261a84954"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5aa717dc049d325cb92112049e5e626"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:ae5aa717dc049d325cb92112049e5e626"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#ae5aa717dc049d325cb92112049e5e626">DepthwiseConvolution2dMult2Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:ae5aa717dc049d325cb92112049e5e626"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a121bc9a1c827575e6025192be0926bff"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a121bc9a1c827575e6025192be0926bff"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a121bc9a1c827575e6025192be0926bff">CompareDepthwiseConvolution2dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, <a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;refWorkloadFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;refTensorHandleFactory, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a121bc9a1c827575e6025192be0926bff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ed9dc40170e362160eb6e6e7edda209"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a9ed9dc40170e362160eb6e6e7edda209">DepthwiseConvolution2dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a9ed9dc40170e362160eb6e6e7edda209"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9488183b3dc79abe459aaea83524d0a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#ae9488183b3dc79abe459aaea83524d0a">DepthwiseConvolution2dDepthNhwcTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled)</td></tr>
<tr class="separator:ae9488183b3dc79abe459aaea83524d0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1b649cd47b77a98921cc22eb6a451c8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#aa1b649cd47b77a98921cc22eb6a451c8">DepthwiseConvolution2dDepthMul1Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:aa1b649cd47b77a98921cc22eb6a451c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c68d43c1ebbd68f34b7846046d814d3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a9c68d43c1ebbd68f34b7846046d814d3">DepthwiseConvolution2dDepthMul64Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a9c68d43c1ebbd68f34b7846046d814d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdbec483f1020dc684741b37e04d2175"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#abdbec483f1020dc684741b37e04d2175">DepthwiseConvolution2dAsymmetricTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:abdbec483f1020dc684741b37e04d2175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af089eef6b8fd167fe95899a3af69aa32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#af089eef6b8fd167fe95899a3af69aa32">SimpleDepthwiseConvolution2d3x3Dilation3x3NhwcTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:af089eef6b8fd167fe95899a3af69aa32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae739d5c6193a4b2192f155632a4e2cd6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#ae739d5c6193a4b2192f155632a4e2cd6">DepthwiseConvolution2dUint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:ae739d5c6193a4b2192f155632a4e2cd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cbaad29854964598fdbd63d9506d31f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a0cbaad29854964598fdbd63d9506d31f">DepthwiseConvolution2dDepthMul1Uint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a0cbaad29854964598fdbd63d9506d31f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1599b84e270875cb9b008c23cba9229f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a1599b84e270875cb9b008c23cba9229f">DepthwiseConvolution2dInt16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a1599b84e270875cb9b008c23cba9229f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1879a2d6ebde509005aef609d663f664"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a1879a2d6ebde509005aef609d663f664">DepthwiseConvolution2dDepthMul1Int16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a1879a2d6ebde509005aef609d663f664"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb6f20ff65cd6c5fa68a70a2f3d27788"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#aeb6f20ff65cd6c5fa68a70a2f3d27788">DepthwiseConvolution2dPerAxisQuantTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:aeb6f20ff65cd6c5fa68a70a2f3d27788"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91334b97ca9cf0a8e006653cd9b7ff16"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a91334b97ca9cf0a8e006653cd9b7ff16">CompareDepthwiseConvolution2dFloatTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, <a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;refWorkloadFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;refTensorHandleFactory, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a91334b97ca9cf0a8e006653cd9b7ff16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d8371b1081cd00d8271524f6cd512f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a5d8371b1081cd00d8271524f6cd512f1">CompareDepthwiseConvolution2dUint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, <a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;refWorkloadFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;refTensorHandleFactory, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a5d8371b1081cd00d8271524f6cd512f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a6a885deaaf7b59c13ca6c94dce9e8b36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a885deaaf7b59c13ca6c94dce9e8b36">&#9670;&nbsp;</a></span>CompareConvolution2dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; CompareConvolution2dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refWorkloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refTensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03534">3534</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03540"></a><span class="lineno"> 3540</span>&#160;{</div><div class="line"><a name="l03541"></a><span class="lineno"> 3541</span>&#160;    <span class="keywordflow">return</span> CompareConvolution2dTestImpl&lt;armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03542"></a><span class="lineno"> 3542</span>&#160;            workloadFactory, memoryManager, refWorkloadFactory, tensorHandleFactory, refTensorHandleFactory);</div><div class="line"><a name="l03543"></a><span class="lineno"> 3543</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a91334b97ca9cf0a8e006653cd9b7ff16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91334b97ca9cf0a8e006653cd9b7ff16">&#9670;&nbsp;</a></span>CompareDepthwiseConvolution2dFloatTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; CompareDepthwiseConvolution2dFloatTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refWorkloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refTensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03789">3789</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03796"></a><span class="lineno"> 3796</span>&#160;{</div><div class="line"><a name="l03797"></a><span class="lineno"> 3797</span>&#160;    <span class="keywordflow">return</span> CompareDepthwiseConvolution2dTestImpl&lt;armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03798"></a><span class="lineno"> 3798</span>&#160;        workloadFactory, memoryManager, refWorkloadFactory, tensorHandleFactory, refTensorHandleFactory, layout);</div><div class="line"><a name="l03799"></a><span class="lineno"> 3799</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a121bc9a1c827575e6025192be0926bff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a121bc9a1c827575e6025192be0926bff">&#9670;&nbsp;</a></span>CompareDepthwiseConvolution2dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; CompareDepthwiseConvolution2dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refWorkloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refTensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5d8371b1081cd00d8271524f6cd512f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d8371b1081cd00d8271524f6cd512f1">&#9670;&nbsp;</a></span>CompareDepthwiseConvolution2dUint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; CompareDepthwiseConvolution2dUint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refWorkloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refTensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03801">3801</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03808"></a><span class="lineno"> 3808</span>&#160;{</div><div class="line"><a name="l03809"></a><span class="lineno"> 3809</span>&#160;    <span class="keywordflow">return</span> CompareDepthwiseConvolution2dTestImpl&lt;armnn::DataType::QAsymmU8&gt;(</div><div class="line"><a name="l03810"></a><span class="lineno"> 3810</span>&#160;        workloadFactory, memoryManager, refWorkloadFactory, tensorHandleFactory, refTensorHandleFactory, layout);</div><div class="line"><a name="l03811"></a><span class="lineno"> 3811</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7fde274ea5d168e2941e90ff6475262b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7fde274ea5d168e2941e90ff6475262b">&#9670;&nbsp;</a></span>Convolution1dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; Convolution1dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03419">3419</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03424"></a><span class="lineno"> 3424</span>&#160;{</div><div class="line"><a name="l03425"></a><span class="lineno"> 3425</span>&#160;    <span class="keywordflow">return</span> Convolution1dTestImpl&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03426"></a><span class="lineno"> 3426</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0, biasEnabled);</div><div class="line"><a name="l03427"></a><span class="lineno"> 3427</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a2a6493bf0e6583e7d0535f6d01323bfc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a6493bf0e6583e7d0535f6d01323bfc">&#9670;&nbsp;</a></span>Convolution1dUint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; Convolution1dUint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03429">3429</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03434"></a><span class="lineno"> 3434</span>&#160;{</div><div class="line"><a name="l03435"></a><span class="lineno"> 3435</span>&#160;    <span class="keywordflow">return</span> Convolution1dTestImpl&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03436"></a><span class="lineno"> 3436</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 0.1f, 128, biasEnabled);</div><div class="line"><a name="l03437"></a><span class="lineno"> 3437</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a130df3a88eb9a5bf1aaec61642a702d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a130df3a88eb9a5bf1aaec61642a702d0">&#9670;&nbsp;</a></span>Convolution2d2x2Dilation2x2Padding2x2Stride3x3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; Convolution2d2x2Dilation2x2Padding2x2Stride3x3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01232">1232</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;{</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({1, 1, 10, 10}, ArmnnType);</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;    {</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;    };</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 1, 1, 2, 2}, ArmnnType);</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;    {</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;        1, 2,</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;        3, 4</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;    };</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;    <span class="comment">// Since the dilation rate is 2 this will dilate the kernel to be like 3x3: d(K-1)+1 --&gt; 2 x (2-1) + 1 = 3,</span></div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;    <span class="comment">// therefore the output will be 4x4: (I − K + 2P)/S +1 =&gt; trunc ( (10 - 3 + 2x2 ) / 3 + 1 )</span></div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;    <span class="comment">// where, dilation size = d = 2; kernel size = K = 2; input size = I = 10; padding size = P = 2; stride = S = 3</span></div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 1, 4, 4}, ArmnnType);</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;    {</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;        4,  7,  7, 3,</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;        6, 10, 10, 4,</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;        6, 10, 10, 4,</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;        2,  3,  3, 1</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;    };</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;    uint32_t padLeft = 1;</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;    uint32_t padTop = 1;</div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;    uint32_t padRight = 1;</div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;    uint32_t padBottom = 1;</div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;    <span class="keywordflow">return</span> Convolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;            workloadFactory,</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;            memoryManager,</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;            2,</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;            2,</div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;            layout,</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;            padLeft,</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;            padTop,</div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;            padRight,</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;            padBottom,</div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;            3,</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;            3,</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;            biasEnabled</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;            );</div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a24ba5e372ff9e8c7603cd380d3673bff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24ba5e372ff9e8c7603cd380d3673bff">&#9670;&nbsp;</a></span>Convolution2d2x3x3Dilation3x3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; Convolution2d2x3x3Dilation3x3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01159">1159</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;{</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({1, 2, 10, 10}, ArmnnType);</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;    {</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;    };</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 1, 2, 3, 3}, ArmnnType);</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;    {</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;        1, 2, 3,</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;        4, 5, 6,</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;        7, 8, 9,</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;        1, 2, 3,</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;        4, 5, 6,</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;        7, 8, 9</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    };</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;    <span class="comment">// Since the dilation rate is 3 this will dilate the kernel to be like 7x7,</span></div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;    <span class="comment">// therefore the output will be 4x4: (I−K+2P)/S +1 =&gt; (10-7 +0)/1 +1</span></div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 1, 4, 4}, ArmnnType);</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;    {</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;        12., 10., 10., 10.,</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;        12., 10., 10., 10.,</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;        12., 10., 10., 10.,</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;         6.,  4.,  4.,  4.</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;    };</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;    <span class="keywordflow">return</span> Convolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;            workloadFactory,</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;            memoryManager,</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;            3,</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;            3,</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;            layout,</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;            biasEnabled);</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0192d5e1143e77fb9c07f43cac008aa5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0192d5e1143e77fb9c07f43cac008aa5">&#9670;&nbsp;</a></span>Convolution2d3x3Dilation3x3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; Convolution2d3x3Dilation3x3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01101">1101</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;{</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({1, 1, 10, 10}, ArmnnType);</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;    {</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;    };</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 1, 1, 3, 3}, ArmnnType);</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;    {</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;        1, 2, 3,</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;        4, 5, 6,</div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;        7, 8, 9</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;    };</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;    <span class="comment">// Since the dilation rate is 3 this will dilate the kernel to be like 7x7,</span></div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;    <span class="comment">// therefore the output will be 4x4: (I−K+2P)/S +1 =&gt; (10-7 +0)/1 +1</span></div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 1, 4, 4}, ArmnnType);</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;    {</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;        6., 5., 5., 5.,</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;        6., 5., 5., 5.,</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;        6., 5., 5., 5.,</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;        3., 2., 2., 2.</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;    };</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;    <span class="keywordflow">return</span> Convolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;            workloadFactory,</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;            memoryManager,</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;            3,</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;            3,</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;            layout,</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;            biasEnabled);</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9573a516a902021f7b24fc8a8172ea8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9573a516a902021f7b24fc8a8172ea8e">&#9670;&nbsp;</a></span>Convolution2d3x3Stride2x2BFloat16SmallValueTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; Convolution2d3x3Stride2x2BFloat16SmallValueTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> &amp;&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01511">1511</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::BFloat16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>, and <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00368">SimpleConvolution2dNhwcTestImpl()</a>.</p>
<div class="fragment"><div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;{</div><div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;    <span class="comment">// BFloat16 input and weight, Float32 output</span></div><div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(biasEnabled);</div><div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;</div><div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;    <span class="comment">// Input is a single-batch, 1 channel, 5x5 image.</span></div><div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputDesc({1, 5, 5, 1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>);</div><div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;</div><div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;    std::vector&lt;armnn::BFloat16&gt; inputValues = armnnUtils::QuantizedVector&lt;armnn::BFloat16&gt;(</div><div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;        {</div><div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;            0.0367984f,  <span class="comment">// 0.0368652</span></div><div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;            0.0380895f,  <span class="comment">// 0.0380859</span></div><div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;            0.0420157f,  <span class="comment">// 0.0419922</span></div><div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;            0.0675631f,  <span class="comment">// 0.0673828</span></div><div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;            0.0938920f,  <span class="comment">// 0.09375</span></div><div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;            0.0476106f,  <span class="comment">// 0.0476074</span></div><div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;            0.1035490f,  <span class="comment">// 0.103516</span></div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;            0.1260370f,  <span class="comment">// 0.125977</span></div><div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;            0.0461647f,  <span class="comment">// 0.0461426</span></div><div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;            0.0883828f,  <span class="comment">// 0.0883789</span></div><div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;            0.1159540f,  <span class="comment">// 0.115723</span></div><div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;            0.0498519f,  <span class="comment">// 0.0498047</span></div><div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;            0.0104630f,  <span class="comment">// 0.010437</span></div><div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;            0.0154114f,  <span class="comment">// 0.0154419</span></div><div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;            0.00137681f, <span class="comment">// 0.00137329</span></div><div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;            0.0344238f,  <span class="comment">// 0.0344616</span></div><div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;            0.0356445f,  <span class="comment">// 0.0355693</span></div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;            0.0495605f,  <span class="comment">// 0.0495018</span></div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;            0.0683594f,  <span class="comment">// 0.0683308</span></div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;            0.0991211f,  <span class="comment">// 0.0988837</span></div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;            0.0461426f,  <span class="comment">// 0.0461838</span></div><div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;            0.0996094f,  <span class="comment">// 0.0997546</span></div><div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;            0.1269530f,  <span class="comment">// 0.127099</span></div><div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;            0.0393066f,  <span class="comment">// 0.0392791</span></div><div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;            0.103516f    <span class="comment">// 0.103641</span></div><div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;       },</div><div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;        1.0f, 0);</div><div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;</div><div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;    <span class="keyword">auto</span> input = MakeTensor&lt;armnn::BFloat16, 4&gt;(inputDesc, inputValues);</div><div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;</div><div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;    <span class="comment">// Use a 3x3 kernel.</span></div><div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({1, 3, 3, 1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>);</div><div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;</div><div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;    std::vector&lt;armnn::BFloat16&gt; kernelValues = armnnUtils::QuantizedVector&lt;armnn::BFloat16&gt;(</div><div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;        {</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;            -0.126184f, <span class="comment">// -0.125977</span></div><div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;            -0.150468f, <span class="comment">// -0.150391</span></div><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;            -0.101412f, <span class="comment">// -0.101562</span></div><div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;            -0.0586369f,<span class="comment">// -0.0585938</span></div><div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;            -0.0865864f,<span class="comment">// -0.0864258</span></div><div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;            -0.0435089f,<span class="comment">// -0.043457</span></div><div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;            0.0347555f, <span class="comment">// 0.034668</span></div><div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;            0.0323111f, <span class="comment">// 0.0322266</span></div><div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;            0.0385381f  <span class="comment">// 0.0385742</span></div><div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;         },</div><div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;        1.0f, 0);</div><div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;</div><div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;    <span class="keyword">auto</span> kernel = MakeTensor&lt;armnn::BFloat16, 4&gt;(kernelDesc, kernelValues);</div><div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;</div><div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;    <span class="comment">// Expected output is a single-batch, 1 channel, 3x3 image.</span></div><div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputDesc({1, 3, 3, 1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;</div><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;    <span class="comment">// Expected output (with results if calculated as FP32 in the comments)</span></div><div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;    <span class="keyword">const</span> std::vector&lt;float&gt; outputData =</div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;        {</div><div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;             0.000686645508f, <span class="comment">// 0.000685</span></div><div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;             0.000640869141f, <span class="comment">// 0.000639</span></div><div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;            -0.00759887695f,  <span class="comment">// -0.007631</span></div><div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;            -0.02734375f,     <span class="comment">// -0.027388</span></div><div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;            -0.0356445312f,   <span class="comment">// -0.035737</span></div><div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;            -0.0145874023f,   <span class="comment">// -0.014568</span></div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;            -0.0170898438f,   <span class="comment">// -0.017124</span></div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;            -0.0373535156f,   <span class="comment">// -0.037431</span></div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;            -0.0346679688f    <span class="comment">// -0.034808</span></div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;        };</div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;</div><div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;    boost::multi_array&lt;float, 4&gt; expectedOutput = MakeTensor&lt;float, 4&gt;(outputDesc, outputData);</div><div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;</div><div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;    uint32_t padLeft = 1;</div><div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;    uint32_t padTop = 1;</div><div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;    uint32_t padRight = 1;</div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;    uint32_t padBottom = 1;</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;    uint32_t strideX  = 2;</div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;    uint32_t strideY  = 2;</div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;</div><div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_conv2d_test_impl_8cpp.xhtml#a56f561170b575bdb2c808d35155f88c5">SimpleConvolution2dNhwcTestImpl</a></div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;        &lt;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, <a class="code" href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a>, float, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, <span class="keywordtype">float</span>&gt;(</div><div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;        workloadFactory,</div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;        memoryManager,</div><div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;        input,</div><div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;        kernel,</div><div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;        boost::multi_array&lt;float, 1&gt;(),</div><div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;        expectedOutput,</div><div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;        dataLayout,</div><div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;        1.0f,</div><div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;        0,</div><div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;        padLeft,</div><div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;        padTop,</div><div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;        padRight,</div><div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;        padBottom,</div><div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;        strideX,</div><div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;        strideY);</div><div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_1_1_b_float16_xhtml"><div class="ttname"><a href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a></div><div class="ttdef"><b>Definition:</b> <a href="_b_float16_8hpp_source.xhtml#l00014">BFloat16.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a></div></div>
<div class="ttc" id="_conv2d_test_impl_8cpp_xhtml_a56f561170b575bdb2c808d35155f88c5"><div class="ttname"><a href="_conv2d_test_impl_8cpp.xhtml#a56f561170b575bdb2c808d35155f88c5">SimpleConvolution2dNhwcTestImpl</a></div><div class="ttdeci">LayerTestResult&lt; O, 4 &gt; SimpleConvolution2dNhwcTestImpl(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, const boost::multi_array&lt; T, 4 &gt; &amp;input, const boost::multi_array&lt; T, 4 &gt; &amp;kernel, const boost::multi_array&lt; B, 1 &gt; &amp;bias, const boost::multi_array&lt; O, 4 &gt; &amp;outputExpected, const armnn::DataLayout dataLayout, float qScale, int32_t qOffset, uint32_t padLeft=1, uint32_t padTop=1, uint32_t padRight=1, uint32_t padBottom=1, uint32_t strideX=1, uint32_t strideY=1)</div><div class="ttdef"><b>Definition:</b> <a href="_conv2d_test_impl_8cpp_source.xhtml#l00368">Conv2dTestImpl.cpp:368</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afba5868ef96cceb570cc4b8223f3019c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afba5868ef96cceb570cc4b8223f3019c">&#9670;&nbsp;</a></span>Convolution2d3x3Stride2x2BFloat16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; Convolution2d3x3Stride2x2BFloat16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> &amp;&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01401">1401</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::BFloat16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>, and <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00368">SimpleConvolution2dNhwcTestImpl()</a>.</p>
<div class="fragment"><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;{</div><div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;    <span class="comment">// BFloat16 input and weight, Float32 output</span></div><div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(biasEnabled);</div><div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;</div><div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;    <span class="comment">// Input is a single-batch, 1 channel, 5x5 image.</span></div><div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputDesc({1, 5, 5, 1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>);</div><div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;</div><div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;    std::vector&lt;armnn::BFloat16&gt; inputValues = armnnUtils::QuantizedVector&lt;armnn::BFloat16&gt;(</div><div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;        {</div><div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;            10.0367984f,  <span class="comment">// 10.0625</span></div><div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;             2.0380895f,  <span class="comment">// 2.03125</span></div><div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;            15.0420157f,  <span class="comment">// 15.0625</span></div><div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;            22.0675631f,  <span class="comment">// 22.125</span></div><div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;             8.0938920f,  <span class="comment">// 8.125</span></div><div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;             5.0476106f,  <span class="comment">// 5.0625</span></div><div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;            80.1035490f,  <span class="comment">// 80</span></div><div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;           100.1260370f,  <span class="comment">// 100</span></div><div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;            55.0461647f,  <span class="comment">// 55</span></div><div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;           120.0883828f,  <span class="comment">// 120</span></div><div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;             9.1159540f,  <span class="comment">// 9.125</span></div><div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;            90.0498519f,  <span class="comment">// 90</span></div><div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;           200.0104630f,  <span class="comment">// 200</span></div><div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;            30.0154114f,  <span class="comment">// 30</span></div><div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;            75.00137681f, <span class="comment">// 75</span></div><div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;            30.0344238f,  <span class="comment">// 30</span></div><div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;            25.0356445f,  <span class="comment">// 25</span></div><div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;           130.0495605f,  <span class="comment">// 130</span></div><div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;            60.0683594f,  <span class="comment">// 60</span></div><div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;            35.0991211f,  <span class="comment">// 35</span></div><div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;             8.0461426f,  <span class="comment">// 8.0625</span></div><div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;            12.0996094f,  <span class="comment">// 12.125</span></div><div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;            98.1269530f,  <span class="comment">// 98</span></div><div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;           125.0393066f,  <span class="comment">// 125</span></div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;             5.103516f    <span class="comment">// 5.0937</span></div><div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;       },</div><div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;        1.0f, 0);</div><div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;</div><div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;    <span class="keyword">auto</span> input = MakeTensor&lt;armnn::BFloat16, 4&gt;(inputDesc, inputValues);</div><div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;</div><div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;    <span class="comment">// Use a 3x3 kernel.</span></div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({1, 3, 3, 1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>);</div><div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;</div><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;    std::vector&lt;armnn::BFloat16&gt; kernelValues = armnnUtils::QuantizedVector&lt;armnn::BFloat16&gt;(</div><div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;        {</div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;            -0.126184f, <span class="comment">// -0.125977</span></div><div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;            -0.150468f, <span class="comment">// -0.150391</span></div><div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;            -0.101412f, <span class="comment">// -0.101562</span></div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;            -0.0586369f,<span class="comment">// -0.0585938</span></div><div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;            -0.0865864f,<span class="comment">// -0.0864258</span></div><div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;            -0.0435089f,<span class="comment">// -0.043457</span></div><div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;            0.0347555f, <span class="comment">// 0.034668</span></div><div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;            0.0323111f, <span class="comment">// 0.0322266</span></div><div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;            0.0385381f  <span class="comment">// 0.0385742</span></div><div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;         },</div><div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;        1.0f, 0);</div><div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;</div><div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;    <span class="keyword">auto</span> kernel = MakeTensor&lt;armnn::BFloat16, 4&gt;(kernelDesc, kernelValues);</div><div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;</div><div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;    <span class="comment">// Expected output is a single-batch, 1 channel, 3x3 image.</span></div><div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputDesc({1, 3, 3, 1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;</div><div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;    <span class="comment">// Expected output (with results if calculated as FP32 in the comments)</span></div><div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;    <span class="keyword">const</span> std::vector&lt;float&gt; outputData =</div><div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;        {</div><div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;            2.296875f, <span class="comment">//  2.29240716</span></div><div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;            5.75f,     <span class="comment">//  5.75851926</span></div><div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;            3.78125f,  <span class="comment">//  3.79855026</span></div><div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;            -11.625f,  <span class="comment">// -11.65498118</span></div><div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;            -47.25f,   <span class="comment">// -47.27316893</span></div><div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;            -30.0f,    <span class="comment">// -30.04771684</span></div><div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;            -8.25f,    <span class="comment">//  -8.28126168</span></div><div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;            -43.5f,    <span class="comment">// -43.46531337</span></div><div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;            -20.625f   <span class="comment">// -20.63477281</span></div><div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;        };</div><div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;</div><div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;    boost::multi_array&lt;float, 4&gt; expectedOutput = MakeTensor&lt;float, 4&gt;(outputDesc, outputData);</div><div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;</div><div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;    uint32_t padLeft = 1;</div><div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;    uint32_t padTop = 1;</div><div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;    uint32_t padRight = 1;</div><div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;    uint32_t padBottom = 1;</div><div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;    uint32_t strideX  = 2;</div><div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;    uint32_t strideY  = 2;</div><div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;</div><div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_conv2d_test_impl_8cpp.xhtml#a56f561170b575bdb2c808d35155f88c5">SimpleConvolution2dNhwcTestImpl</a></div><div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;        &lt;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, <a class="code" href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a>, float, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, <span class="keywordtype">float</span>&gt;(</div><div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;        workloadFactory,</div><div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;        memoryManager,</div><div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;        input,</div><div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;        kernel,</div><div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;        boost::multi_array&lt;float, 1&gt;(),</div><div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;        expectedOutput,</div><div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;        dataLayout,</div><div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;        1.0f,</div><div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;        0,</div><div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;        padLeft,</div><div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;        padTop,</div><div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;        padRight,</div><div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;        padBottom,</div><div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;        strideX,</div><div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;        strideY);</div><div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_1_1_b_float16_xhtml"><div class="ttname"><a href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a></div><div class="ttdef"><b>Definition:</b> <a href="_b_float16_8hpp_source.xhtml#l00014">BFloat16.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a></div></div>
<div class="ttc" id="_conv2d_test_impl_8cpp_xhtml_a56f561170b575bdb2c808d35155f88c5"><div class="ttname"><a href="_conv2d_test_impl_8cpp.xhtml#a56f561170b575bdb2c808d35155f88c5">SimpleConvolution2dNhwcTestImpl</a></div><div class="ttdeci">LayerTestResult&lt; O, 4 &gt; SimpleConvolution2dNhwcTestImpl(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, const boost::multi_array&lt; T, 4 &gt; &amp;input, const boost::multi_array&lt; T, 4 &gt; &amp;kernel, const boost::multi_array&lt; B, 1 &gt; &amp;bias, const boost::multi_array&lt; O, 4 &gt; &amp;outputExpected, const armnn::DataLayout dataLayout, float qScale, int32_t qOffset, uint32_t padLeft=1, uint32_t padTop=1, uint32_t padRight=1, uint32_t padBottom=1, uint32_t strideX=1, uint32_t strideY=1)</div><div class="ttdef"><b>Definition:</b> <a href="_conv2d_test_impl_8cpp_source.xhtml#l00368">Conv2dTestImpl.cpp:368</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab1b3e3dfbd3807989911b05b5830f7ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1b3e3dfbd3807989911b05b5830f7ea">&#9670;&nbsp;</a></span>Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03408">3408</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00880">Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTestCommon()</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>.</p>
<div class="fragment"><div class="line"><a name="l03413"></a><span class="lineno"> 3413</span>&#160;{</div><div class="line"><a name="l03414"></a><span class="lineno"> 3414</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_conv2d_test_impl_8cpp.xhtml#a71b5e8d33736d32c974e4fff9206f998">Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTestCommon</a></div><div class="line"><a name="l03415"></a><span class="lineno"> 3415</span>&#160;            &lt;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03416"></a><span class="lineno"> 3416</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, layout, 0.0f, 0);</div><div class="line"><a name="l03417"></a><span class="lineno"> 3417</span>&#160;}</div><div class="ttc" id="_conv2d_test_impl_8cpp_xhtml_a71b5e8d33736d32c974e4fff9206f998"><div class="ttname"><a href="_conv2d_test_impl_8cpp.xhtml#a71b5e8d33736d32c974e4fff9206f998">Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTestCommon</a></div><div class="ttdeci">LayerTestResult&lt; T, 4 &gt; Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTestCommon(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, const armnn::DataLayout layout, float qScale, int32_t qOffset)</div><div class="ttdef"><b>Definition:</b> <a href="_conv2d_test_impl_8cpp_source.xhtml#l00880">Conv2dTestImpl.cpp:880</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0431327604bbd8051635e8ebd215e620"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0431327604bbd8051635e8ebd215e620">&#9670;&nbsp;</a></span>Convolution2dAsymmetricPaddingTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; Convolution2dAsymmetricPaddingTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03398">3398</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03403"></a><span class="lineno"> 3403</span>&#160;{</div><div class="line"><a name="l03404"></a><span class="lineno"> 3404</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2dAsymmetricPaddingTestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03405"></a><span class="lineno"> 3405</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, layout, 0.0f, 0);</div><div class="line"><a name="l03406"></a><span class="lineno"> 3406</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a3db9032b7a4530846a78babe58a1b2dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3db9032b7a4530846a78babe58a1b2dd">&#9670;&nbsp;</a></span>Convolution2dPerAxisQuantTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; Convolution2dPerAxisQuantTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03439">3439</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00019">AllocateAndCopyDataToITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">CopyDataFromITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l01368">IWorkloadFactory::CreateConvolution2d()</a>, <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">ITensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00454">Convolution2dDescriptor::m_BiasEnabled</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00456">Convolution2dDescriptor::m_DataLayout</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00444">Convolution2dDescriptor::m_PadBottom</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00438">Convolution2dDescriptor::m_PadLeft</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00440">Convolution2dDescriptor::m_PadRight</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00442">Convolution2dDescriptor::m_PadTop</a>, <a class="el" href="_workload_data_8hpp_source.xhtml#l00057">QueueDescriptorWithParameters&lt; LayerDescriptor &gt;::m_Parameters</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00446">Convolution2dDescriptor::m_StrideX</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00448">Convolution2dDescriptor::m_StrideY</a>, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>, <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00041">LayerTestResult&lt; T, n &gt;::output</a>, <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00042">LayerTestResult&lt; T, n &gt;::outputExpected</a>, and <a class="el" href="_data_layout_utils_8hpp_source.xhtml#l00026">PermuteTensorNhwcToNchw()</a>.</p>
<div class="fragment"><div class="line"><a name="l03444"></a><span class="lineno"> 3444</span>&#160;{</div><div class="line"><a name="l03445"></a><span class="lineno"> 3445</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a>;</div><div class="line"><a name="l03446"></a><span class="lineno"> 3446</span>&#160;</div><div class="line"><a name="l03447"></a><span class="lineno"> 3447</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> inputType  = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">DataType::QAsymmU8</a>;</div><div class="line"><a name="l03448"></a><span class="lineno"> 3448</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> kernelType = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">DataType::QSymmS8</a>;</div><div class="line"><a name="l03449"></a><span class="lineno"> 3449</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> biasType   = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">DataType::Signed32</a>;</div><div class="line"><a name="l03450"></a><span class="lineno"> 3450</span>&#160;</div><div class="line"><a name="l03451"></a><span class="lineno"> 3451</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> inputInfo ({ 1, 3, 1, 2 }, inputType, 0.5f, 128);</div><div class="line"><a name="l03452"></a><span class="lineno"> 3452</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> outputInfo({ 1, 3, 1, 3 }, inputType, 1.0f, 128);</div><div class="line"><a name="l03453"></a><span class="lineno"> 3453</span>&#160;</div><div class="line"><a name="l03454"></a><span class="lineno"> 3454</span>&#160;    <span class="keyword">const</span> std::vector&lt;float&gt; quantScales{ 0.5f, 0.75f, 1.0f };</div><div class="line"><a name="l03455"></a><span class="lineno"> 3455</span>&#160;    constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> quantDimension = 0;</div><div class="line"><a name="l03456"></a><span class="lineno"> 3456</span>&#160;</div><div class="line"><a name="l03457"></a><span class="lineno"> 3457</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> kernelInfo({ 3, 1, 1, 2 }, kernelType, quantScales, quantDimension);</div><div class="line"><a name="l03458"></a><span class="lineno"> 3458</span>&#160;</div><div class="line"><a name="l03459"></a><span class="lineno"> 3459</span>&#160;    <span class="keyword">const</span> std::vector&lt;float&gt; biasQuantScales{ 0.25f, 0.375f, 0.5f };</div><div class="line"><a name="l03460"></a><span class="lineno"> 3460</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> biasInfo({ 3 }, biasType, biasQuantScales, quantDimension);</div><div class="line"><a name="l03461"></a><span class="lineno"> 3461</span>&#160;</div><div class="line"><a name="l03462"></a><span class="lineno"> 3462</span>&#160;    std::vector&lt;uint8_t&gt; inputData =</div><div class="line"><a name="l03463"></a><span class="lineno"> 3463</span>&#160;    {</div><div class="line"><a name="l03464"></a><span class="lineno"> 3464</span>&#160;        138, 108, 138, 108, 138, 108</div><div class="line"><a name="l03465"></a><span class="lineno"> 3465</span>&#160;    };</div><div class="line"><a name="l03466"></a><span class="lineno"> 3466</span>&#160;</div><div class="line"><a name="l03467"></a><span class="lineno"> 3467</span>&#160;    std::vector&lt;int8_t&gt; kernelData =</div><div class="line"><a name="l03468"></a><span class="lineno"> 3468</span>&#160;    {</div><div class="line"><a name="l03469"></a><span class="lineno"> 3469</span>&#160;        1, 2, 1, 2, 1, 2</div><div class="line"><a name="l03470"></a><span class="lineno"> 3470</span>&#160;    };</div><div class="line"><a name="l03471"></a><span class="lineno"> 3471</span>&#160;</div><div class="line"><a name="l03472"></a><span class="lineno"> 3472</span>&#160;    std::vector&lt;int32_t&gt; biasData =</div><div class="line"><a name="l03473"></a><span class="lineno"> 3473</span>&#160;    {</div><div class="line"><a name="l03474"></a><span class="lineno"> 3474</span>&#160;        4, 4, 4</div><div class="line"><a name="l03475"></a><span class="lineno"> 3475</span>&#160;    };</div><div class="line"><a name="l03476"></a><span class="lineno"> 3476</span>&#160;</div><div class="line"><a name="l03477"></a><span class="lineno"> 3477</span>&#160;    std::vector&lt;uint8_t&gt; expectedOutputData =</div><div class="line"><a name="l03478"></a><span class="lineno"> 3478</span>&#160;    {</div><div class="line"><a name="l03479"></a><span class="lineno"> 3479</span>&#160;        121, 118, 115, 121, 118, 115, 121, 118, 115</div><div class="line"><a name="l03480"></a><span class="lineno"> 3480</span>&#160;    };</div><div class="line"><a name="l03481"></a><span class="lineno"> 3481</span>&#160;</div><div class="line"><a name="l03482"></a><span class="lineno"> 3482</span>&#160;    <span class="keywordflow">if</span> (layout == <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div><div class="line"><a name="l03483"></a><span class="lineno"> 3483</span>&#160;    {</div><div class="line"><a name="l03484"></a><span class="lineno"> 3484</span>&#160;        <a class="code" href="_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a>(inputInfo, inputData);</div><div class="line"><a name="l03485"></a><span class="lineno"> 3485</span>&#160;        <a class="code" href="_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a>(kernelInfo, kernelData);</div><div class="line"><a name="l03486"></a><span class="lineno"> 3486</span>&#160;        <a class="code" href="_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a>(outputInfo, expectedOutputData);</div><div class="line"><a name="l03487"></a><span class="lineno"> 3487</span>&#160;    }</div><div class="line"><a name="l03488"></a><span class="lineno"> 3488</span>&#160;</div><div class="line"><a name="l03489"></a><span class="lineno"> 3489</span>&#160;    <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> descriptor;</div><div class="line"><a name="l03490"></a><span class="lineno"> 3490</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">m_StrideX</a>     = 1;</div><div class="line"><a name="l03491"></a><span class="lineno"> 3491</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#ac1fe174bbadfb39a2b636940c2e647c8">m_StrideY</a>     = 1;</div><div class="line"><a name="l03492"></a><span class="lineno"> 3492</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#ac18546ebbebbb32fe0a03baa9bf2c600">m_PadLeft</a>     = 0;</div><div class="line"><a name="l03493"></a><span class="lineno"> 3493</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#a002bc30e590d78cbb4f4d12171055ca7">m_PadRight</a>    = 0;</div><div class="line"><a name="l03494"></a><span class="lineno"> 3494</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#a56b51f56cef50cdfa554258eecdab046">m_PadTop</a>      = 0;</div><div class="line"><a name="l03495"></a><span class="lineno"> 3495</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#aa9e49717ebdb741e8c767741647fc618">m_PadBottom</a>   = 0;</div><div class="line"><a name="l03496"></a><span class="lineno"> 3496</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">m_BiasEnabled</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l03497"></a><span class="lineno"> 3497</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#a6089e1ca91914015777ea780a513131a">m_DataLayout</a>  = layout;</div><div class="line"><a name="l03498"></a><span class="lineno"> 3498</span>&#160;</div><div class="line"><a name="l03499"></a><span class="lineno"> 3499</span>&#160;</div><div class="line"><a name="l03500"></a><span class="lineno"> 3500</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; inputHandle  = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputInfo);</div><div class="line"><a name="l03501"></a><span class="lineno"> 3501</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputInfo);</div><div class="line"><a name="l03502"></a><span class="lineno"> 3502</span>&#160;</div><div class="line"><a name="l03503"></a><span class="lineno"> 3503</span>&#160;</div><div class="line"><a name="l03504"></a><span class="lineno"> 3504</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> workloadInfo;</div><div class="line"><a name="l03505"></a><span class="lineno"> 3505</span>&#160;    <a class="code" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> weightTensor(kernelInfo);</div><div class="line"><a name="l03506"></a><span class="lineno"> 3506</span>&#160;    <a class="code" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> biasTensor(biasInfo);</div><div class="line"><a name="l03507"></a><span class="lineno"> 3507</span>&#160;</div><div class="line"><a name="l03508"></a><span class="lineno"> 3508</span>&#160;    <a class="code" href="_tensor_copy_utils_8cpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a>(&amp;weightTensor, kernelData.data());</div><div class="line"><a name="l03509"></a><span class="lineno"> 3509</span>&#160;    <a class="code" href="_tensor_copy_utils_8cpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a>(&amp;biasTensor, biasData.data());</div><div class="line"><a name="l03510"></a><span class="lineno"> 3510</span>&#160;</div><div class="line"><a name="l03511"></a><span class="lineno"> 3511</span>&#160;    <a class="code" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml">Convolution2dQueueDescriptor</a> queueDescriptor;</div><div class="line"><a name="l03512"></a><span class="lineno"> 3512</span>&#160;    queueDescriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a> = descriptor;</div><div class="line"><a name="l03513"></a><span class="lineno"> 3513</span>&#160;    queueDescriptor.m_Weight     = &amp;weightTensor;</div><div class="line"><a name="l03514"></a><span class="lineno"> 3514</span>&#160;    queueDescriptor.m_Bias       = &amp;biasTensor;</div><div class="line"><a name="l03515"></a><span class="lineno"> 3515</span>&#160;</div><div class="line"><a name="l03516"></a><span class="lineno"> 3516</span>&#160;    AddInputToWorkload(queueDescriptor, workloadInfo, inputInfo, inputHandle.get());</div><div class="line"><a name="l03517"></a><span class="lineno"> 3517</span>&#160;    AddOutputToWorkload(queueDescriptor, workloadInfo, outputInfo, outputHandle.get());</div><div class="line"><a name="l03518"></a><span class="lineno"> 3518</span>&#160;</div><div class="line"><a name="l03519"></a><span class="lineno"> 3519</span>&#160;    std::unique_ptr&lt;IWorkload&gt; workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a2184995027cd2c9f9980206de9658855">CreateConvolution2d</a>(queueDescriptor, workloadInfo);</div><div class="line"><a name="l03520"></a><span class="lineno"> 3520</span>&#160;    inputHandle-&gt;Allocate();</div><div class="line"><a name="l03521"></a><span class="lineno"> 3521</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l03522"></a><span class="lineno"> 3522</span>&#160;</div><div class="line"><a name="l03523"></a><span class="lineno"> 3523</span>&#160;    <a class="code" href="_tensor_copy_utils_8cpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputHandle.get(), inputData.data());</div><div class="line"><a name="l03524"></a><span class="lineno"> 3524</span>&#160;</div><div class="line"><a name="l03525"></a><span class="lineno"> 3525</span>&#160;    ExecuteWorkload(*workload, memoryManager);</div><div class="line"><a name="l03526"></a><span class="lineno"> 3526</span>&#160;</div><div class="line"><a name="l03527"></a><span class="lineno"> 3527</span>&#160;    <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 4&gt;</a> ret(outputInfo);</div><div class="line"><a name="l03528"></a><span class="lineno"> 3528</span>&#160;    <a class="code" href="_tensor_copy_utils_8cpp.xhtml#a99b626c58a926dc7d6df78d22ec186c8">CopyDataFromITensorHandle</a>(ret.output.origin(), outputHandle.get());</div><div class="line"><a name="l03529"></a><span class="lineno"> 3529</span>&#160;    ret.outputExpected = MakeTensor&lt;uint8_t, 4&gt;(outputInfo, expectedOutputData);</div><div class="line"><a name="l03530"></a><span class="lineno"> 3530</span>&#160;</div><div class="line"><a name="l03531"></a><span class="lineno"> 3531</span>&#160;    <span class="keywordflow">return</span> ret;</div><div class="line"><a name="l03532"></a><span class="lineno"> 3532</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_aa9e49717ebdb741e8c767741647fc618"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#aa9e49717ebdb741e8c767741647fc618">armnn::Convolution2dDescriptor::m_PadBottom</a></div><div class="ttdeci">uint32_t m_PadBottom</div><div class="ttdoc">Padding bottom value in the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00444">Descriptors.hpp:444</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_aea202e14d8874cefd9a0f778022b7e25"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">armnn::Convolution2dDescriptor::m_BiasEnabled</a></div><div class="ttdeci">bool m_BiasEnabled</div><div class="ttdoc">Enable/disable bias. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00454">Descriptors.hpp:454</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_a6089e1ca91914015777ea780a513131a"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#a6089e1ca91914015777ea780a513131a">armnn::Convolution2dDescriptor::m_DataLayout</a></div><div class="ttdeci">DataLayout m_DataLayout</div><div class="ttdoc">The data layout to be used (NCHW, NHWC). </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00456">Descriptors.hpp:456</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00408">Descriptors.hpp:408</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_a002bc30e590d78cbb4f4d12171055ca7"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#a002bc30e590d78cbb4f4d12171055ca7">armnn::Convolution2dDescriptor::m_PadRight</a></div><div class="ttdeci">uint32_t m_PadRight</div><div class="ttdoc">Padding right value in the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00440">Descriptors.hpp:440</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__software__tools_8dox_source.xhtml#l00006">01_00_software_tools.dox:6</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00057">WorkloadData.hpp:57</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_a56b51f56cef50cdfa554258eecdab046"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#a56b51f56cef50cdfa554258eecdab046">armnn::Convolution2dDescriptor::m_PadTop</a></div><div class="ttdeci">uint32_t m_PadTop</div><div class="ttdoc">Padding top value in the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00442">Descriptors.hpp:442</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_afe6a3377c4531315354def9023c8fdda"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">armnn::Convolution2dDescriptor::m_StrideX</a></div><div class="ttdeci">uint32_t m_StrideX</div><div class="ttdoc">Stride value when proceeding through input for the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00446">Descriptors.hpp:446</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00032">Types.hpp:32</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="_tensor_copy_utils_8cpp_xhtml_afaaca8c3f3a467d124bba44067d2afa8"><div class="ttname"><a href="_tensor_copy_utils_8cpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a></div><div class="ttdeci">void AllocateAndCopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00019">TensorCopyUtils.cpp:19</a></div></div>
<div class="ttc" id="_tensor_copy_utils_8cpp_xhtml_a99b626c58a926dc7d6df78d22ec186c8"><div class="ttname"><a href="_tensor_copy_utils_8cpp.xhtml#a99b626c58a926dc7d6df78d22ec186c8">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *memory, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_ac1fe174bbadfb39a2b636940c2e647c8"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#ac1fe174bbadfb39a2b636940c2e647c8">armnn::Convolution2dDescriptor::m_StrideY</a></div><div class="ttdeci">uint32_t m_StrideY</div><div class="ttdoc">Stride value when proceeding through input for the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00448">Descriptors.hpp:448</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml">armnn::Convolution2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00192">WorkloadData.hpp:192</a></div></div>
<div class="ttc" id="classarmnn_1_1_scoped_cpu_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">armnn::ScopedCpuTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="_cpu_tensor_handle_8hpp_source.xhtml#l00106">CpuTensorHandle.hpp:106</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about inputs and outputs to a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_test_result_8hpp_source.xhtml#l00030">LayerTestResult.hpp:30</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::DataType::QSymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a375f11dd42ff042435e8771cf287b20c"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">armnn::ITensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">virtual std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const =0</div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_ac18546ebbebbb32fe0a03baa9bf2c600"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#ac18546ebbebbb32fe0a03baa9bf2c600">armnn::Convolution2dDescriptor::m_PadLeft</a></div><div class="ttdeci">uint32_t m_PadLeft</div><div class="ttdoc">Padding left value in the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00438">Descriptors.hpp:438</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a2184995027cd2c9f9980206de9658855"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a2184995027cd2c9f9980206de9658855">armnn::IWorkloadFactory::CreateConvolution2d</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateConvolution2d(const Convolution2dQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01368">WorkloadFactory.cpp:1368</a></div></div>
<div class="ttc" id="_tensor_copy_utils_8cpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="_tensor_copy_utils_8cpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="_data_layout_utils_8hpp_xhtml_a1452f049aef30409b3b649af2be7ff82"><div class="ttname"><a href="_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a></div><div class="ttdeci">void PermuteTensorNhwcToNchw(armnn::TensorInfo &amp;tensorInfo, std::vector&lt; T &gt; &amp;tensorData)</div><div class="ttdef"><b>Definition:</b> <a href="_data_layout_utils_8hpp_source.xhtml#l00026">DataLayoutUtils.hpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="adb5b1d96ba9807887953dfd1a71ddb14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb5b1d96ba9807887953dfd1a71ddb14">&#9670;&nbsp;</a></span>DepthwiseConvolution2d2x3x3Dilation3x3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; DepthwiseConvolution2d2x3x3Dilation3x3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l02693">2693</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l02699"></a><span class="lineno"> 2699</span>&#160;{</div><div class="line"><a name="l02700"></a><span class="lineno"> 2700</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({1, 2, 10, 10}, ArmnnType);</div><div class="line"><a name="l02701"></a><span class="lineno"> 2701</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l02702"></a><span class="lineno"> 2702</span>&#160;            {</div><div class="line"><a name="l02703"></a><span class="lineno"> 2703</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02704"></a><span class="lineno"> 2704</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02705"></a><span class="lineno"> 2705</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02706"></a><span class="lineno"> 2706</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02707"></a><span class="lineno"> 2707</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02708"></a><span class="lineno"> 2708</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02709"></a><span class="lineno"> 2709</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02710"></a><span class="lineno"> 2710</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02711"></a><span class="lineno"> 2711</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02712"></a><span class="lineno"> 2712</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02713"></a><span class="lineno"> 2713</span>&#160;</div><div class="line"><a name="l02714"></a><span class="lineno"> 2714</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02715"></a><span class="lineno"> 2715</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02716"></a><span class="lineno"> 2716</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02717"></a><span class="lineno"> 2717</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02718"></a><span class="lineno"> 2718</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02719"></a><span class="lineno"> 2719</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02720"></a><span class="lineno"> 2720</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02721"></a><span class="lineno"> 2721</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02722"></a><span class="lineno"> 2722</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02723"></a><span class="lineno"> 2723</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0</div><div class="line"><a name="l02724"></a><span class="lineno"> 2724</span>&#160;            };</div><div class="line"><a name="l02725"></a><span class="lineno"> 2725</span>&#160;</div><div class="line"><a name="l02726"></a><span class="lineno"> 2726</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 1, 2, 3, 3}, ArmnnType);</div><div class="line"><a name="l02727"></a><span class="lineno"> 2727</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l02728"></a><span class="lineno"> 2728</span>&#160;            {</div><div class="line"><a name="l02729"></a><span class="lineno"> 2729</span>&#160;                    1, 2, 3,</div><div class="line"><a name="l02730"></a><span class="lineno"> 2730</span>&#160;                    4, 5, 6,</div><div class="line"><a name="l02731"></a><span class="lineno"> 2731</span>&#160;                    7, 8, 9,</div><div class="line"><a name="l02732"></a><span class="lineno"> 2732</span>&#160;</div><div class="line"><a name="l02733"></a><span class="lineno"> 2733</span>&#160;                    1, 2, 3,</div><div class="line"><a name="l02734"></a><span class="lineno"> 2734</span>&#160;                    4, 5, 6,</div><div class="line"><a name="l02735"></a><span class="lineno"> 2735</span>&#160;                    7, 8, 9</div><div class="line"><a name="l02736"></a><span class="lineno"> 2736</span>&#160;            };</div><div class="line"><a name="l02737"></a><span class="lineno"> 2737</span>&#160;</div><div class="line"><a name="l02738"></a><span class="lineno"> 2738</span>&#160;    <span class="comment">// Since the dilation rate is 3 this will dilate the kernel to be like 7x7,</span></div><div class="line"><a name="l02739"></a><span class="lineno"> 2739</span>&#160;    <span class="comment">// therefore the output will be 2x4x4: (I−K+2P)/S +1 =&gt; (10-7 +0)/1 +1</span></div><div class="line"><a name="l02740"></a><span class="lineno"> 2740</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 2, 4, 4}, ArmnnType);</div><div class="line"><a name="l02741"></a><span class="lineno"> 2741</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l02742"></a><span class="lineno"> 2742</span>&#160;            {</div><div class="line"><a name="l02743"></a><span class="lineno"> 2743</span>&#160;                    6., 5., 5., 5.,</div><div class="line"><a name="l02744"></a><span class="lineno"> 2744</span>&#160;                    6., 5., 5., 5.,</div><div class="line"><a name="l02745"></a><span class="lineno"> 2745</span>&#160;                    6., 5., 5., 5.,</div><div class="line"><a name="l02746"></a><span class="lineno"> 2746</span>&#160;                    3., 2., 2., 2.,</div><div class="line"><a name="l02747"></a><span class="lineno"> 2747</span>&#160;</div><div class="line"><a name="l02748"></a><span class="lineno"> 2748</span>&#160;                    6., 5., 5., 5.,</div><div class="line"><a name="l02749"></a><span class="lineno"> 2749</span>&#160;                    6., 5., 5., 5.,</div><div class="line"><a name="l02750"></a><span class="lineno"> 2750</span>&#160;                    6., 5., 5., 5.,</div><div class="line"><a name="l02751"></a><span class="lineno"> 2751</span>&#160;                    3., 2., 2., 2.</div><div class="line"><a name="l02752"></a><span class="lineno"> 2752</span>&#160;            };</div><div class="line"><a name="l02753"></a><span class="lineno"> 2753</span>&#160;</div><div class="line"><a name="l02754"></a><span class="lineno"> 2754</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l02755"></a><span class="lineno"> 2755</span>&#160;            workloadFactory,</div><div class="line"><a name="l02756"></a><span class="lineno"> 2756</span>&#160;            memoryManager,</div><div class="line"><a name="l02757"></a><span class="lineno"> 2757</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l02758"></a><span class="lineno"> 2758</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l02759"></a><span class="lineno"> 2759</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l02760"></a><span class="lineno"> 2760</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l02761"></a><span class="lineno"> 2761</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l02762"></a><span class="lineno"> 2762</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l02763"></a><span class="lineno"> 2763</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l02764"></a><span class="lineno"> 2764</span>&#160;            3,</div><div class="line"><a name="l02765"></a><span class="lineno"> 2765</span>&#160;            3,</div><div class="line"><a name="l02766"></a><span class="lineno"> 2766</span>&#160;            layout,</div><div class="line"><a name="l02767"></a><span class="lineno"> 2767</span>&#160;            biasEnabled);</div><div class="line"><a name="l02768"></a><span class="lineno"> 2768</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae689ff7f2c5222b1ab4ee153e159cab7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae689ff7f2c5222b1ab4ee153e159cab7">&#9670;&nbsp;</a></span>DepthwiseConvolution2d3x3Dilation3x3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; DepthwiseConvolution2d3x3Dilation3x3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l02635">2635</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l02641"></a><span class="lineno"> 2641</span>&#160;{</div><div class="line"><a name="l02642"></a><span class="lineno"> 2642</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({1, 1, 10, 10}, ArmnnType);</div><div class="line"><a name="l02643"></a><span class="lineno"> 2643</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l02644"></a><span class="lineno"> 2644</span>&#160;            {</div><div class="line"><a name="l02645"></a><span class="lineno"> 2645</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02646"></a><span class="lineno"> 2646</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02647"></a><span class="lineno"> 2647</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02648"></a><span class="lineno"> 2648</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02649"></a><span class="lineno"> 2649</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02650"></a><span class="lineno"> 2650</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02651"></a><span class="lineno"> 2651</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02652"></a><span class="lineno"> 2652</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02653"></a><span class="lineno"> 2653</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02654"></a><span class="lineno"> 2654</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0</div><div class="line"><a name="l02655"></a><span class="lineno"> 2655</span>&#160;            };</div><div class="line"><a name="l02656"></a><span class="lineno"> 2656</span>&#160;</div><div class="line"><a name="l02657"></a><span class="lineno"> 2657</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 1, 1, 3, 3}, ArmnnType);</div><div class="line"><a name="l02658"></a><span class="lineno"> 2658</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l02659"></a><span class="lineno"> 2659</span>&#160;            {</div><div class="line"><a name="l02660"></a><span class="lineno"> 2660</span>&#160;                    1, 2, 3,</div><div class="line"><a name="l02661"></a><span class="lineno"> 2661</span>&#160;                    4, 5, 6,</div><div class="line"><a name="l02662"></a><span class="lineno"> 2662</span>&#160;                    7, 8, 9</div><div class="line"><a name="l02663"></a><span class="lineno"> 2663</span>&#160;            };</div><div class="line"><a name="l02664"></a><span class="lineno"> 2664</span>&#160;</div><div class="line"><a name="l02665"></a><span class="lineno"> 2665</span>&#160;    <span class="comment">// Since the dilation rate is 3 this will dilate the kernel to be like 7x7,</span></div><div class="line"><a name="l02666"></a><span class="lineno"> 2666</span>&#160;    <span class="comment">// therefore the output will be 4x4: (I−K+2P)/S +1 =&gt; (10-7 +0)/1 +1</span></div><div class="line"><a name="l02667"></a><span class="lineno"> 2667</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 1, 4, 4}, ArmnnType);</div><div class="line"><a name="l02668"></a><span class="lineno"> 2668</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l02669"></a><span class="lineno"> 2669</span>&#160;            {</div><div class="line"><a name="l02670"></a><span class="lineno"> 2670</span>&#160;                    6., 5., 5., 5.,</div><div class="line"><a name="l02671"></a><span class="lineno"> 2671</span>&#160;                    6., 5., 5., 5.,</div><div class="line"><a name="l02672"></a><span class="lineno"> 2672</span>&#160;                    6., 5., 5., 5.,</div><div class="line"><a name="l02673"></a><span class="lineno"> 2673</span>&#160;                    3., 2., 2., 2.</div><div class="line"><a name="l02674"></a><span class="lineno"> 2674</span>&#160;            };</div><div class="line"><a name="l02675"></a><span class="lineno"> 2675</span>&#160;</div><div class="line"><a name="l02676"></a><span class="lineno"> 2676</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l02677"></a><span class="lineno"> 2677</span>&#160;            workloadFactory,</div><div class="line"><a name="l02678"></a><span class="lineno"> 2678</span>&#160;            memoryManager,</div><div class="line"><a name="l02679"></a><span class="lineno"> 2679</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l02680"></a><span class="lineno"> 2680</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l02681"></a><span class="lineno"> 2681</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l02682"></a><span class="lineno"> 2682</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l02683"></a><span class="lineno"> 2683</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l02684"></a><span class="lineno"> 2684</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l02685"></a><span class="lineno"> 2685</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l02686"></a><span class="lineno"> 2686</span>&#160;            3,</div><div class="line"><a name="l02687"></a><span class="lineno"> 2687</span>&#160;            3,</div><div class="line"><a name="l02688"></a><span class="lineno"> 2688</span>&#160;            layout,</div><div class="line"><a name="l02689"></a><span class="lineno"> 2689</span>&#160;            biasEnabled);</div><div class="line"><a name="l02690"></a><span class="lineno"> 2690</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abdbec483f1020dc684741b37e04d2175"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdbec483f1020dc684741b37e04d2175">&#9670;&nbsp;</a></span>DepthwiseConvolution2dAsymmetricTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; DepthwiseConvolution2dAsymmetricTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03611">3611</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03617"></a><span class="lineno"> 3617</span>&#160;{</div><div class="line"><a name="l03618"></a><span class="lineno"> 3618</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dAsymmetricTestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03619"></a><span class="lineno"> 3619</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0, biasEnabled, layout);</div><div class="line"><a name="l03620"></a><span class="lineno"> 3620</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1879a2d6ebde509005aef609d663f664"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1879a2d6ebde509005aef609d663f664">&#9670;&nbsp;</a></span>DepthwiseConvolution2dDepthMul1Int16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t, 4&gt; DepthwiseConvolution2dDepthMul1Int16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03669">3669</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03675"></a><span class="lineno"> 3675</span>&#160;{</div><div class="line"><a name="l03676"></a><span class="lineno"> 3676</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dDepthMul1TestImpl&lt;armnn::DataType::QSymmS16, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03677"></a><span class="lineno"> 3677</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03678"></a><span class="lineno"> 3678</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa1b649cd47b77a98921cc22eb6a451c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1b649cd47b77a98921cc22eb6a451c8">&#9670;&nbsp;</a></span>DepthwiseConvolution2dDepthMul1Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; DepthwiseConvolution2dDepthMul1Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03566">3566</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03572"></a><span class="lineno"> 3572</span>&#160;{</div><div class="line"><a name="l03573"></a><span class="lineno"> 3573</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dDepthMul1TestImpl&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03574"></a><span class="lineno"> 3574</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0, biasEnabled, layout);</div><div class="line"><a name="l03575"></a><span class="lineno"> 3575</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0cbaad29854964598fdbd63d9506d31f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0cbaad29854964598fdbd63d9506d31f">&#9670;&nbsp;</a></span>DepthwiseConvolution2dDepthMul1Uint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; DepthwiseConvolution2dDepthMul1Uint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03633">3633</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03639"></a><span class="lineno"> 3639</span>&#160;{</div><div class="line"><a name="l03640"></a><span class="lineno"> 3640</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dDepthMul1TestImpl&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03641"></a><span class="lineno"> 3641</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03642"></a><span class="lineno"> 3642</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a9c68d43c1ebbd68f34b7846046d814d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c68d43c1ebbd68f34b7846046d814d3">&#9670;&nbsp;</a></span>DepthwiseConvolution2dDepthMul64Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; DepthwiseConvolution2dDepthMul64Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03577">3577</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>.</p>
<div class="fragment"><div class="line"><a name="l03581"></a><span class="lineno"> 3581</span>&#160;{</div><div class="line"><a name="l03582"></a><span class="lineno"> 3582</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({ 1, 1, 2, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l03583"></a><span class="lineno"> 3583</span>&#160;    <span class="keyword">auto</span> input = MakeTensor&lt;float, 4&gt;(inputTensorInfo, { 1.f, 2.f, 3.f, 4.f });</div><div class="line"><a name="l03584"></a><span class="lineno"> 3584</span>&#160;</div><div class="line"><a name="l03585"></a><span class="lineno"> 3585</span>&#160;    std::vector&lt;float&gt; kernelData;</div><div class="line"><a name="l03586"></a><span class="lineno"> 3586</span>&#160;    std::vector&lt;float&gt; singleDepthKernel{ 1.f, -1.f, -1.f, 1.f };</div><div class="line"><a name="l03587"></a><span class="lineno"> 3587</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; 64; ++i)</div><div class="line"><a name="l03588"></a><span class="lineno"> 3588</span>&#160;    {</div><div class="line"><a name="l03589"></a><span class="lineno"> 3589</span>&#160;        kernelData.insert(kernelData.end(), singleDepthKernel.begin(), singleDepthKernel.end());</div><div class="line"><a name="l03590"></a><span class="lineno"> 3590</span>&#160;    }</div><div class="line"><a name="l03591"></a><span class="lineno"> 3591</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 64, 1, 2, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l03592"></a><span class="lineno"> 3592</span>&#160;    <span class="keyword">auto</span> kernel = MakeTensor&lt;float, 4&gt;(kernelTensorInfo, kernelData);</div><div class="line"><a name="l03593"></a><span class="lineno"> 3593</span>&#160;</div><div class="line"><a name="l03594"></a><span class="lineno"> 3594</span>&#160;    std::vector&lt;float&gt; expectedOutputData(64, 0.f);</div><div class="line"><a name="l03595"></a><span class="lineno"> 3595</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 64, 1, 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l03596"></a><span class="lineno"> 3596</span>&#160;    <span class="keyword">auto</span> expectedOutput = MakeTensor&lt;float, 4&gt;(outputTensorInfo, expectedOutputData);</div><div class="line"><a name="l03597"></a><span class="lineno"> 3597</span>&#160;</div><div class="line"><a name="l03598"></a><span class="lineno"> 3598</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dTestImpl&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03599"></a><span class="lineno"> 3599</span>&#160;            workloadFactory,</div><div class="line"><a name="l03600"></a><span class="lineno"> 3600</span>&#160;            memoryManager,</div><div class="line"><a name="l03601"></a><span class="lineno"> 3601</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l03602"></a><span class="lineno"> 3602</span>&#160;            input,</div><div class="line"><a name="l03603"></a><span class="lineno"> 3603</span>&#160;            kernel,</div><div class="line"><a name="l03604"></a><span class="lineno"> 3604</span>&#160;            boost::multi_array&lt;float, 1&gt;(),</div><div class="line"><a name="l03605"></a><span class="lineno"> 3605</span>&#160;            expectedOutput,</div><div class="line"><a name="l03606"></a><span class="lineno"> 3606</span>&#160;            0.f,</div><div class="line"><a name="l03607"></a><span class="lineno"> 3607</span>&#160;            0,</div><div class="line"><a name="l03608"></a><span class="lineno"> 3608</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l03609"></a><span class="lineno"> 3609</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae9488183b3dc79abe459aaea83524d0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9488183b3dc79abe459aaea83524d0a">&#9670;&nbsp;</a></span>DepthwiseConvolution2dDepthNhwcTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; DepthwiseConvolution2dDepthNhwcTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03556">3556</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03561"></a><span class="lineno"> 3561</span>&#160;{</div><div class="line"><a name="l03562"></a><span class="lineno"> 3562</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dNhwcTestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03563"></a><span class="lineno"> 3563</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0, biasEnabled);</div><div class="line"><a name="l03564"></a><span class="lineno"> 3564</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1599b84e270875cb9b008c23cba9229f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1599b84e270875cb9b008c23cba9229f">&#9670;&nbsp;</a></span>DepthwiseConvolution2dInt16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t, 4&gt; DepthwiseConvolution2dInt16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03658">3658</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03664"></a><span class="lineno"> 3664</span>&#160;{</div><div class="line"><a name="l03665"></a><span class="lineno"> 3665</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dTestImpl&lt;armnn::DataType::QSymmS16, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03666"></a><span class="lineno"> 3666</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03667"></a><span class="lineno"> 3667</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae5aa717dc049d325cb92112049e5e626"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5aa717dc049d325cb92112049e5e626">&#9670;&nbsp;</a></span>DepthwiseConvolution2dMult2Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; DepthwiseConvolution2dMult2Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l02865">2865</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l02871"></a><span class="lineno"> 2871</span>&#160;{</div><div class="line"><a name="l02872"></a><span class="lineno"> 2872</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({1, 2, 3, 3}, ArmnnType);</div><div class="line"><a name="l02873"></a><span class="lineno"> 2873</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l02874"></a><span class="lineno"> 2874</span>&#160;            {</div><div class="line"><a name="l02875"></a><span class="lineno"> 2875</span>&#160;                    10.0, 10.0, 10.0,</div><div class="line"><a name="l02876"></a><span class="lineno"> 2876</span>&#160;                    10.0, 10.0, 10.0,</div><div class="line"><a name="l02877"></a><span class="lineno"> 2877</span>&#160;                    10.0, 10.0, 10.0,</div><div class="line"><a name="l02878"></a><span class="lineno"> 2878</span>&#160;</div><div class="line"><a name="l02879"></a><span class="lineno"> 2879</span>&#160;                    21.0, 22.0, 23.0,</div><div class="line"><a name="l02880"></a><span class="lineno"> 2880</span>&#160;                    24.0, 25.0, 26.0,</div><div class="line"><a name="l02881"></a><span class="lineno"> 2881</span>&#160;                    27.0, 28.0, 29.0</div><div class="line"><a name="l02882"></a><span class="lineno"> 2882</span>&#160;            };</div><div class="line"><a name="l02883"></a><span class="lineno"> 2883</span>&#160;</div><div class="line"><a name="l02884"></a><span class="lineno"> 2884</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 2, 2, 2, 2}, ArmnnType);</div><div class="line"><a name="l02885"></a><span class="lineno"> 2885</span>&#160;</div><div class="line"><a name="l02886"></a><span class="lineno"> 2886</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l02887"></a><span class="lineno"> 2887</span>&#160;            {</div><div class="line"><a name="l02888"></a><span class="lineno"> 2888</span>&#160;                    0.25f, 0.25f,</div><div class="line"><a name="l02889"></a><span class="lineno"> 2889</span>&#160;                    0.25f, 0.25f,</div><div class="line"><a name="l02890"></a><span class="lineno"> 2890</span>&#160;</div><div class="line"><a name="l02891"></a><span class="lineno"> 2891</span>&#160;                    0.2f , 0.0f,</div><div class="line"><a name="l02892"></a><span class="lineno"> 2892</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l02893"></a><span class="lineno"> 2893</span>&#160;</div><div class="line"><a name="l02894"></a><span class="lineno"> 2894</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l02895"></a><span class="lineno"> 2895</span>&#160;                    0.0f , 0.1f,</div><div class="line"><a name="l02896"></a><span class="lineno"> 2896</span>&#160;</div><div class="line"><a name="l02897"></a><span class="lineno"> 2897</span>&#160;                    0.0f , 0.3f,</div><div class="line"><a name="l02898"></a><span class="lineno"> 2898</span>&#160;                    0.0f , 0.0f</div><div class="line"><a name="l02899"></a><span class="lineno"> 2899</span>&#160;</div><div class="line"><a name="l02900"></a><span class="lineno"> 2900</span>&#160;            };</div><div class="line"><a name="l02901"></a><span class="lineno"> 2901</span>&#160;</div><div class="line"><a name="l02902"></a><span class="lineno"> 2902</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 4, 2, 2}, ArmnnType);</div><div class="line"><a name="l02903"></a><span class="lineno"> 2903</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l02904"></a><span class="lineno"> 2904</span>&#160;            {</div><div class="line"><a name="l02905"></a><span class="lineno"> 2905</span>&#160;                    10.f, 10.f,</div><div class="line"><a name="l02906"></a><span class="lineno"> 2906</span>&#160;                    10.f, 10.f,</div><div class="line"><a name="l02907"></a><span class="lineno"> 2907</span>&#160;</div><div class="line"><a name="l02908"></a><span class="lineno"> 2908</span>&#160;                    1.f, 1.f,</div><div class="line"><a name="l02909"></a><span class="lineno"> 2909</span>&#160;                    1.f, 1.f,</div><div class="line"><a name="l02910"></a><span class="lineno"> 2910</span>&#160;</div><div class="line"><a name="l02911"></a><span class="lineno"> 2911</span>&#160;                    4.2000003f, 4.4f,</div><div class="line"><a name="l02912"></a><span class="lineno"> 2912</span>&#160;                    4.8f, 5.f,</div><div class="line"><a name="l02913"></a><span class="lineno"> 2913</span>&#160;</div><div class="line"><a name="l02914"></a><span class="lineno"> 2914</span>&#160;                    6.6000004f, 6.9f,</div><div class="line"><a name="l02915"></a><span class="lineno"> 2915</span>&#160;                    7.5000005f, 7.8f</div><div class="line"><a name="l02916"></a><span class="lineno"> 2916</span>&#160;            };</div><div class="line"><a name="l02917"></a><span class="lineno"> 2917</span>&#160;</div><div class="line"><a name="l02918"></a><span class="lineno"> 2918</span>&#160;</div><div class="line"><a name="l02919"></a><span class="lineno"> 2919</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l02920"></a><span class="lineno"> 2920</span>&#160;            workloadFactory,</div><div class="line"><a name="l02921"></a><span class="lineno"> 2921</span>&#160;            memoryManager,</div><div class="line"><a name="l02922"></a><span class="lineno"> 2922</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l02923"></a><span class="lineno"> 2923</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l02924"></a><span class="lineno"> 2924</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l02925"></a><span class="lineno"> 2925</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l02926"></a><span class="lineno"> 2926</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l02927"></a><span class="lineno"> 2927</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l02928"></a><span class="lineno"> 2928</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l02929"></a><span class="lineno"> 2929</span>&#160;            1,</div><div class="line"><a name="l02930"></a><span class="lineno"> 2930</span>&#160;            1,</div><div class="line"><a name="l02931"></a><span class="lineno"> 2931</span>&#160;            layout,</div><div class="line"><a name="l02932"></a><span class="lineno"> 2932</span>&#160;            biasEnabled);</div><div class="line"><a name="l02933"></a><span class="lineno"> 2933</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a347ca1c8d1443563807e98e261a84954"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a347ca1c8d1443563807e98e261a84954">&#9670;&nbsp;</a></span>DepthwiseConvolution2dMult4Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; DepthwiseConvolution2dMult4Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l02771">2771</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l02777"></a><span class="lineno"> 2777</span>&#160;{</div><div class="line"><a name="l02778"></a><span class="lineno"> 2778</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({1, 2, 3, 3}, ArmnnType);</div><div class="line"><a name="l02779"></a><span class="lineno"> 2779</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l02780"></a><span class="lineno"> 2780</span>&#160;            {</div><div class="line"><a name="l02781"></a><span class="lineno"> 2781</span>&#160;                    10.0, 10.0, 10.0,</div><div class="line"><a name="l02782"></a><span class="lineno"> 2782</span>&#160;                    10.0, 10.0, 10.0,</div><div class="line"><a name="l02783"></a><span class="lineno"> 2783</span>&#160;                    10.0, 10.0, 10.0,</div><div class="line"><a name="l02784"></a><span class="lineno"> 2784</span>&#160;</div><div class="line"><a name="l02785"></a><span class="lineno"> 2785</span>&#160;                    21.0, 22.0, 23.0,</div><div class="line"><a name="l02786"></a><span class="lineno"> 2786</span>&#160;                    24.0, 25.0, 26.0,</div><div class="line"><a name="l02787"></a><span class="lineno"> 2787</span>&#160;                    27.0, 28.0, 29.0</div><div class="line"><a name="l02788"></a><span class="lineno"> 2788</span>&#160;            };</div><div class="line"><a name="l02789"></a><span class="lineno"> 2789</span>&#160;</div><div class="line"><a name="l02790"></a><span class="lineno"> 2790</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 4, 2, 2, 2}, ArmnnType);</div><div class="line"><a name="l02791"></a><span class="lineno"> 2791</span>&#160;</div><div class="line"><a name="l02792"></a><span class="lineno"> 2792</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l02793"></a><span class="lineno"> 2793</span>&#160;            {</div><div class="line"><a name="l02794"></a><span class="lineno"> 2794</span>&#160;                    0.25f, 0.25f,</div><div class="line"><a name="l02795"></a><span class="lineno"> 2795</span>&#160;                    0.25f, 0.25f,</div><div class="line"><a name="l02796"></a><span class="lineno"> 2796</span>&#160;</div><div class="line"><a name="l02797"></a><span class="lineno"> 2797</span>&#160;                    0.25f, 0.25f,</div><div class="line"><a name="l02798"></a><span class="lineno"> 2798</span>&#160;                    0.25f, 0.25f,</div><div class="line"><a name="l02799"></a><span class="lineno"> 2799</span>&#160;</div><div class="line"><a name="l02800"></a><span class="lineno"> 2800</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l02801"></a><span class="lineno"> 2801</span>&#160;                    0.0f , 0.1f,</div><div class="line"><a name="l02802"></a><span class="lineno"> 2802</span>&#160;</div><div class="line"><a name="l02803"></a><span class="lineno"> 2803</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l02804"></a><span class="lineno"> 2804</span>&#160;                    0.0f , 0.1f,</div><div class="line"><a name="l02805"></a><span class="lineno"> 2805</span>&#160;</div><div class="line"><a name="l02806"></a><span class="lineno"> 2806</span>&#160;                    0.2f , 0.0f,</div><div class="line"><a name="l02807"></a><span class="lineno"> 2807</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l02808"></a><span class="lineno"> 2808</span>&#160;</div><div class="line"><a name="l02809"></a><span class="lineno"> 2809</span>&#160;                    0.2f , 0.0f,</div><div class="line"><a name="l02810"></a><span class="lineno"> 2810</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l02811"></a><span class="lineno"> 2811</span>&#160;</div><div class="line"><a name="l02812"></a><span class="lineno"> 2812</span>&#160;                    0.0f , 0.3f,</div><div class="line"><a name="l02813"></a><span class="lineno"> 2813</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l02814"></a><span class="lineno"> 2814</span>&#160;</div><div class="line"><a name="l02815"></a><span class="lineno"> 2815</span>&#160;                    0.0f , 0.3f,</div><div class="line"><a name="l02816"></a><span class="lineno"> 2816</span>&#160;                    0.0f , 0.0f</div><div class="line"><a name="l02817"></a><span class="lineno"> 2817</span>&#160;            };</div><div class="line"><a name="l02818"></a><span class="lineno"> 2818</span>&#160;</div><div class="line"><a name="l02819"></a><span class="lineno"> 2819</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 8, 2, 2}, ArmnnType);</div><div class="line"><a name="l02820"></a><span class="lineno"> 2820</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l02821"></a><span class="lineno"> 2821</span>&#160;            {</div><div class="line"><a name="l02822"></a><span class="lineno"> 2822</span>&#160;                    10.f, 10.f,</div><div class="line"><a name="l02823"></a><span class="lineno"> 2823</span>&#160;                    10.f, 10.f,</div><div class="line"><a name="l02824"></a><span class="lineno"> 2824</span>&#160;</div><div class="line"><a name="l02825"></a><span class="lineno"> 2825</span>&#160;                    1.f, 1.f,</div><div class="line"><a name="l02826"></a><span class="lineno"> 2826</span>&#160;                    1.f, 1.f,</div><div class="line"><a name="l02827"></a><span class="lineno"> 2827</span>&#160;</div><div class="line"><a name="l02828"></a><span class="lineno"> 2828</span>&#160;                    2.f, 2.f,</div><div class="line"><a name="l02829"></a><span class="lineno"> 2829</span>&#160;                    2.f, 2.f,</div><div class="line"><a name="l02830"></a><span class="lineno"> 2830</span>&#160;</div><div class="line"><a name="l02831"></a><span class="lineno"> 2831</span>&#160;                    3.f, 3.f,</div><div class="line"><a name="l02832"></a><span class="lineno"> 2832</span>&#160;                    3.f, 3.f,</div><div class="line"><a name="l02833"></a><span class="lineno"> 2833</span>&#160;</div><div class="line"><a name="l02834"></a><span class="lineno"> 2834</span>&#160;                    23.f, 24.f,</div><div class="line"><a name="l02835"></a><span class="lineno"> 2835</span>&#160;                    26.f, 27.f,</div><div class="line"><a name="l02836"></a><span class="lineno"> 2836</span>&#160;</div><div class="line"><a name="l02837"></a><span class="lineno"> 2837</span>&#160;                    2.5f, 2.6000001f,</div><div class="line"><a name="l02838"></a><span class="lineno"> 2838</span>&#160;                    2.8f, 2.9f,</div><div class="line"><a name="l02839"></a><span class="lineno"> 2839</span>&#160;</div><div class="line"><a name="l02840"></a><span class="lineno"> 2840</span>&#160;                    4.2000003f, 4.4f,</div><div class="line"><a name="l02841"></a><span class="lineno"> 2841</span>&#160;                    4.8f, 5.f,</div><div class="line"><a name="l02842"></a><span class="lineno"> 2842</span>&#160;</div><div class="line"><a name="l02843"></a><span class="lineno"> 2843</span>&#160;                    6.6000004f, 6.9f,</div><div class="line"><a name="l02844"></a><span class="lineno"> 2844</span>&#160;                    7.5000005f, 7.8f</div><div class="line"><a name="l02845"></a><span class="lineno"> 2845</span>&#160;            };</div><div class="line"><a name="l02846"></a><span class="lineno"> 2846</span>&#160;</div><div class="line"><a name="l02847"></a><span class="lineno"> 2847</span>&#160;</div><div class="line"><a name="l02848"></a><span class="lineno"> 2848</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l02849"></a><span class="lineno"> 2849</span>&#160;            workloadFactory,</div><div class="line"><a name="l02850"></a><span class="lineno"> 2850</span>&#160;            memoryManager,</div><div class="line"><a name="l02851"></a><span class="lineno"> 2851</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l02852"></a><span class="lineno"> 2852</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l02853"></a><span class="lineno"> 2853</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l02854"></a><span class="lineno"> 2854</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l02855"></a><span class="lineno"> 2855</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l02856"></a><span class="lineno"> 2856</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l02857"></a><span class="lineno"> 2857</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l02858"></a><span class="lineno"> 2858</span>&#160;            1,</div><div class="line"><a name="l02859"></a><span class="lineno"> 2859</span>&#160;            1,</div><div class="line"><a name="l02860"></a><span class="lineno"> 2860</span>&#160;            layout,</div><div class="line"><a name="l02861"></a><span class="lineno"> 2861</span>&#160;            biasEnabled);</div><div class="line"><a name="l02862"></a><span class="lineno"> 2862</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aeb6f20ff65cd6c5fa68a70a2f3d27788"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb6f20ff65cd6c5fa68a70a2f3d27788">&#9670;&nbsp;</a></span>DepthwiseConvolution2dPerAxisQuantTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; DepthwiseConvolution2dPerAxisQuantTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03680">3680</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00019">AllocateAndCopyDataToITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">CopyDataFromITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l01386">IWorkloadFactory::CreateDepthwiseConvolution2d()</a>, <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">ITensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00506">DepthwiseConvolution2dDescriptor::m_BiasEnabled</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00508">DepthwiseConvolution2dDescriptor::m_DataLayout</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00502">DepthwiseConvolution2dDescriptor::m_DilationX</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00504">DepthwiseConvolution2dDescriptor::m_DilationY</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00496">DepthwiseConvolution2dDescriptor::m_PadBottom</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00490">DepthwiseConvolution2dDescriptor::m_PadLeft</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00492">DepthwiseConvolution2dDescriptor::m_PadRight</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00494">DepthwiseConvolution2dDescriptor::m_PadTop</a>, <a class="el" href="_workload_data_8hpp_source.xhtml#l00057">QueueDescriptorWithParameters&lt; LayerDescriptor &gt;::m_Parameters</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00498">DepthwiseConvolution2dDescriptor::m_StrideX</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00500">DepthwiseConvolution2dDescriptor::m_StrideY</a>, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>, <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00041">LayerTestResult&lt; T, n &gt;::output</a>, <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00042">LayerTestResult&lt; T, n &gt;::outputExpected</a>, and <a class="el" href="_data_layout_utils_8hpp_source.xhtml#l00026">PermuteTensorNhwcToNchw()</a>.</p>
<div class="fragment"><div class="line"><a name="l03685"></a><span class="lineno"> 3685</span>&#160;{</div><div class="line"><a name="l03686"></a><span class="lineno"> 3686</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a>;</div><div class="line"><a name="l03687"></a><span class="lineno"> 3687</span>&#160;</div><div class="line"><a name="l03688"></a><span class="lineno"> 3688</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> inputType  = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">DataType::QAsymmU8</a>;</div><div class="line"><a name="l03689"></a><span class="lineno"> 3689</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> kernelType = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">DataType::QSymmS8</a>;</div><div class="line"><a name="l03690"></a><span class="lineno"> 3690</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> biasType   = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">DataType::Signed32</a>;</div><div class="line"><a name="l03691"></a><span class="lineno"> 3691</span>&#160;</div><div class="line"><a name="l03692"></a><span class="lineno"> 3692</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> inputInfo ({ 1, 3, 3, 2 }, inputType, 0.5f, 128); <span class="comment">// N H W C</span></div><div class="line"><a name="l03693"></a><span class="lineno"> 3693</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> outputInfo({ 1, 2, 2, 4 }, inputType, 1.0f, 128); <span class="comment">// N H W C</span></div><div class="line"><a name="l03694"></a><span class="lineno"> 3694</span>&#160;</div><div class="line"><a name="l03695"></a><span class="lineno"> 3695</span>&#160;    <span class="keyword">const</span> std::vector&lt;float&gt; quantScales{ 1.0f, 0.5f, 1.0f, 0.5f };</div><div class="line"><a name="l03696"></a><span class="lineno"> 3696</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> quantDimension = 0;</div><div class="line"><a name="l03697"></a><span class="lineno"> 3697</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> kernelInfo({ 2, 2, 2, 2 }, kernelType, quantScales, quantDimension); <span class="comment">// M I H W</span></div><div class="line"><a name="l03698"></a><span class="lineno"> 3698</span>&#160;</div><div class="line"><a name="l03699"></a><span class="lineno"> 3699</span>&#160;    <span class="keyword">const</span> std::vector&lt;float&gt; biasQuantScales{ 0.5f, 0.25f, 0.5f, 0.25f };</div><div class="line"><a name="l03700"></a><span class="lineno"> 3700</span>&#160;    constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> biasQuantDimension = 0;</div><div class="line"><a name="l03701"></a><span class="lineno"> 3701</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> biasInfo({ 4 }, biasType, biasQuantScales, biasQuantDimension);</div><div class="line"><a name="l03702"></a><span class="lineno"> 3702</span>&#160;</div><div class="line"><a name="l03703"></a><span class="lineno"> 3703</span>&#160;    std::vector&lt;uint8_t&gt; inputData =</div><div class="line"><a name="l03704"></a><span class="lineno"> 3704</span>&#160;    {</div><div class="line"><a name="l03705"></a><span class="lineno"> 3705</span>&#160;        129, 130,</div><div class="line"><a name="l03706"></a><span class="lineno"> 3706</span>&#160;        129, 130,</div><div class="line"><a name="l03707"></a><span class="lineno"> 3707</span>&#160;        129, 130,</div><div class="line"><a name="l03708"></a><span class="lineno"> 3708</span>&#160;        129, 130,</div><div class="line"><a name="l03709"></a><span class="lineno"> 3709</span>&#160;        129, 130,</div><div class="line"><a name="l03710"></a><span class="lineno"> 3710</span>&#160;        129, 130,</div><div class="line"><a name="l03711"></a><span class="lineno"> 3711</span>&#160;        129, 130,</div><div class="line"><a name="l03712"></a><span class="lineno"> 3712</span>&#160;        129, 130,</div><div class="line"><a name="l03713"></a><span class="lineno"> 3713</span>&#160;        129, 130</div><div class="line"><a name="l03714"></a><span class="lineno"> 3714</span>&#160;    };</div><div class="line"><a name="l03715"></a><span class="lineno"> 3715</span>&#160;</div><div class="line"><a name="l03716"></a><span class="lineno"> 3716</span>&#160;    std::vector&lt;int8_t&gt; kernelData =</div><div class="line"><a name="l03717"></a><span class="lineno"> 3717</span>&#160;    {</div><div class="line"><a name="l03718"></a><span class="lineno"> 3718</span>&#160;        1, 1, 1, 1,</div><div class="line"><a name="l03719"></a><span class="lineno"> 3719</span>&#160;        1, 1, 1, 1,</div><div class="line"><a name="l03720"></a><span class="lineno"> 3720</span>&#160;        1, 1, 1, 1,</div><div class="line"><a name="l03721"></a><span class="lineno"> 3721</span>&#160;        1, 1, 1, 1</div><div class="line"><a name="l03722"></a><span class="lineno"> 3722</span>&#160;    };</div><div class="line"><a name="l03723"></a><span class="lineno"> 3723</span>&#160;</div><div class="line"><a name="l03724"></a><span class="lineno"> 3724</span>&#160;    std::vector&lt;int32_t&gt; biasData =</div><div class="line"><a name="l03725"></a><span class="lineno"> 3725</span>&#160;    {</div><div class="line"><a name="l03726"></a><span class="lineno"> 3726</span>&#160;        4, 4, 4, 4</div><div class="line"><a name="l03727"></a><span class="lineno"> 3727</span>&#160;    };</div><div class="line"><a name="l03728"></a><span class="lineno"> 3728</span>&#160;</div><div class="line"><a name="l03729"></a><span class="lineno"> 3729</span>&#160;    std::vector&lt;uint8_t&gt; expectedOutputData =</div><div class="line"><a name="l03730"></a><span class="lineno"> 3730</span>&#160;    {</div><div class="line"><a name="l03731"></a><span class="lineno"> 3731</span>&#160;        132, 130, 134, 131,</div><div class="line"><a name="l03732"></a><span class="lineno"> 3732</span>&#160;        132, 130, 134, 131,</div><div class="line"><a name="l03733"></a><span class="lineno"> 3733</span>&#160;        132, 130, 134, 131,</div><div class="line"><a name="l03734"></a><span class="lineno"> 3734</span>&#160;        132, 130, 134, 131</div><div class="line"><a name="l03735"></a><span class="lineno"> 3735</span>&#160;    };</div><div class="line"><a name="l03736"></a><span class="lineno"> 3736</span>&#160;</div><div class="line"><a name="l03737"></a><span class="lineno"> 3737</span>&#160;    <span class="keywordflow">if</span> (layout == <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div><div class="line"><a name="l03738"></a><span class="lineno"> 3738</span>&#160;    {</div><div class="line"><a name="l03739"></a><span class="lineno"> 3739</span>&#160;        <a class="code" href="_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a>(inputInfo, inputData);</div><div class="line"><a name="l03740"></a><span class="lineno"> 3740</span>&#160;        <a class="code" href="_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a>(outputInfo, expectedOutputData);</div><div class="line"><a name="l03741"></a><span class="lineno"> 3741</span>&#160;    }</div><div class="line"><a name="l03742"></a><span class="lineno"> 3742</span>&#160;</div><div class="line"><a name="l03743"></a><span class="lineno"> 3743</span>&#160;    <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> descriptor;</div><div class="line"><a name="l03744"></a><span class="lineno"> 3744</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">m_StrideX</a>     = 1;</div><div class="line"><a name="l03745"></a><span class="lineno"> 3745</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#ac1fe174bbadfb39a2b636940c2e647c8">m_StrideY</a>     = 1;</div><div class="line"><a name="l03746"></a><span class="lineno"> 3746</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#ac18546ebbebbb32fe0a03baa9bf2c600">m_PadLeft</a>     = 0;</div><div class="line"><a name="l03747"></a><span class="lineno"> 3747</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#a002bc30e590d78cbb4f4d12171055ca7">m_PadRight</a>    = 0;</div><div class="line"><a name="l03748"></a><span class="lineno"> 3748</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#a56b51f56cef50cdfa554258eecdab046">m_PadTop</a>      = 0;</div><div class="line"><a name="l03749"></a><span class="lineno"> 3749</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#aa9e49717ebdb741e8c767741647fc618">m_PadBottom</a>   = 0;</div><div class="line"><a name="l03750"></a><span class="lineno"> 3750</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#aa3c6a77a963a98ccb8ea7b8fd008a8c1">m_DilationX</a>   = 1;</div><div class="line"><a name="l03751"></a><span class="lineno"> 3751</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#a302b688d88dd73cde0fb1faef6679907">m_DilationY</a>   = 1;</div><div class="line"><a name="l03752"></a><span class="lineno"> 3752</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">m_BiasEnabled</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l03753"></a><span class="lineno"> 3753</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#a6089e1ca91914015777ea780a513131a">m_DataLayout</a>  = layout;</div><div class="line"><a name="l03754"></a><span class="lineno"> 3754</span>&#160;</div><div class="line"><a name="l03755"></a><span class="lineno"> 3755</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; inputHandle  = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputInfo);</div><div class="line"><a name="l03756"></a><span class="lineno"> 3756</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputInfo);</div><div class="line"><a name="l03757"></a><span class="lineno"> 3757</span>&#160;</div><div class="line"><a name="l03758"></a><span class="lineno"> 3758</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> workloadInfo;</div><div class="line"><a name="l03759"></a><span class="lineno"> 3759</span>&#160;    <a class="code" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> weightTensor(kernelInfo);</div><div class="line"><a name="l03760"></a><span class="lineno"> 3760</span>&#160;    <a class="code" href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">ScopedCpuTensorHandle</a> biasTensor(biasInfo);</div><div class="line"><a name="l03761"></a><span class="lineno"> 3761</span>&#160;</div><div class="line"><a name="l03762"></a><span class="lineno"> 3762</span>&#160;    <a class="code" href="_tensor_copy_utils_8cpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a>(&amp;weightTensor, kernelData.data());</div><div class="line"><a name="l03763"></a><span class="lineno"> 3763</span>&#160;    <a class="code" href="_tensor_copy_utils_8cpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a>(&amp;biasTensor, biasData.data());</div><div class="line"><a name="l03764"></a><span class="lineno"> 3764</span>&#160;</div><div class="line"><a name="l03765"></a><span class="lineno"> 3765</span>&#160;    <a class="code" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml">DepthwiseConvolution2dQueueDescriptor</a> queueDescriptor;</div><div class="line"><a name="l03766"></a><span class="lineno"> 3766</span>&#160;    queueDescriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a> = descriptor;</div><div class="line"><a name="l03767"></a><span class="lineno"> 3767</span>&#160;    queueDescriptor.m_Weight     = &amp;weightTensor;</div><div class="line"><a name="l03768"></a><span class="lineno"> 3768</span>&#160;    queueDescriptor.m_Bias       = &amp;biasTensor;</div><div class="line"><a name="l03769"></a><span class="lineno"> 3769</span>&#160;</div><div class="line"><a name="l03770"></a><span class="lineno"> 3770</span>&#160;    AddInputToWorkload(queueDescriptor, workloadInfo, inputInfo, inputHandle.get());</div><div class="line"><a name="l03771"></a><span class="lineno"> 3771</span>&#160;    AddOutputToWorkload(queueDescriptor, workloadInfo, outputInfo, outputHandle.get());</div><div class="line"><a name="l03772"></a><span class="lineno"> 3772</span>&#160;</div><div class="line"><a name="l03773"></a><span class="lineno"> 3773</span>&#160;    std::unique_ptr&lt;IWorkload&gt; workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#accb9759dfd2880efe0f8d2705ddee448">CreateDepthwiseConvolution2d</a>(queueDescriptor, workloadInfo);</div><div class="line"><a name="l03774"></a><span class="lineno"> 3774</span>&#160;    inputHandle-&gt;Allocate();</div><div class="line"><a name="l03775"></a><span class="lineno"> 3775</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l03776"></a><span class="lineno"> 3776</span>&#160;</div><div class="line"><a name="l03777"></a><span class="lineno"> 3777</span>&#160;    <a class="code" href="_tensor_copy_utils_8cpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputHandle.get(), inputData.data());</div><div class="line"><a name="l03778"></a><span class="lineno"> 3778</span>&#160;</div><div class="line"><a name="l03779"></a><span class="lineno"> 3779</span>&#160;    ExecuteWorkload(*workload, memoryManager);</div><div class="line"><a name="l03780"></a><span class="lineno"> 3780</span>&#160;</div><div class="line"><a name="l03781"></a><span class="lineno"> 3781</span>&#160;    <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 4&gt;</a> ret(outputInfo);</div><div class="line"><a name="l03782"></a><span class="lineno"> 3782</span>&#160;</div><div class="line"><a name="l03783"></a><span class="lineno"> 3783</span>&#160;    <a class="code" href="_tensor_copy_utils_8cpp.xhtml#a99b626c58a926dc7d6df78d22ec186c8">CopyDataFromITensorHandle</a>(ret.output.origin(), outputHandle.get());</div><div class="line"><a name="l03784"></a><span class="lineno"> 3784</span>&#160;    ret.outputExpected = MakeTensor&lt;uint8_t, 4&gt;(outputInfo, expectedOutputData);</div><div class="line"><a name="l03785"></a><span class="lineno"> 3785</span>&#160;</div><div class="line"><a name="l03786"></a><span class="lineno"> 3786</span>&#160;    <span class="keywordflow">return</span> ret;</div><div class="line"><a name="l03787"></a><span class="lineno"> 3787</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_aea202e14d8874cefd9a0f778022b7e25"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">armnn::DepthwiseConvolution2dDescriptor::m_BiasEnabled</a></div><div class="ttdeci">bool m_BiasEnabled</div><div class="ttdoc">Enable/disable bias. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00506">Descriptors.hpp:506</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_aa9e49717ebdb741e8c767741647fc618"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#aa9e49717ebdb741e8c767741647fc618">armnn::DepthwiseConvolution2dDescriptor::m_PadBottom</a></div><div class="ttdeci">uint32_t m_PadBottom</div><div class="ttdoc">Padding bottom value in the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00496">Descriptors.hpp:496</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_a6089e1ca91914015777ea780a513131a"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#a6089e1ca91914015777ea780a513131a">armnn::DepthwiseConvolution2dDescriptor::m_DataLayout</a></div><div class="ttdeci">DataLayout m_DataLayout</div><div class="ttdoc">The data layout to be used (NCHW, NHWC). </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00508">Descriptors.hpp:508</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_ac18546ebbebbb32fe0a03baa9bf2c600"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#ac18546ebbebbb32fe0a03baa9bf2c600">armnn::DepthwiseConvolution2dDescriptor::m_PadLeft</a></div><div class="ttdeci">uint32_t m_PadLeft</div><div class="ttdoc">Padding left value in the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00490">Descriptors.hpp:490</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__software__tools_8dox_source.xhtml#l00006">01_00_software_tools.dox:6</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00057">WorkloadData.hpp:57</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_a302b688d88dd73cde0fb1faef6679907"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#a302b688d88dd73cde0fb1faef6679907">armnn::DepthwiseConvolution2dDescriptor::m_DilationY</a></div><div class="ttdeci">uint32_t m_DilationY</div><div class="ttdoc">Dilation factor value for height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00504">Descriptors.hpp:504</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_afe6a3377c4531315354def9023c8fdda"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">armnn::DepthwiseConvolution2dDescriptor::m_StrideX</a></div><div class="ttdeci">uint32_t m_StrideX</div><div class="ttdoc">Stride value when proceeding through input for the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00498">Descriptors.hpp:498</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00032">Types.hpp:32</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_aa3c6a77a963a98ccb8ea7b8fd008a8c1"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#aa3c6a77a963a98ccb8ea7b8fd008a8c1">armnn::DepthwiseConvolution2dDescriptor::m_DilationX</a></div><div class="ttdeci">uint32_t m_DilationX</div><div class="ttdoc">Dilation factor value for width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00502">Descriptors.hpp:502</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_a56b51f56cef50cdfa554258eecdab046"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#a56b51f56cef50cdfa554258eecdab046">armnn::DepthwiseConvolution2dDescriptor::m_PadTop</a></div><div class="ttdeci">uint32_t m_PadTop</div><div class="ttdoc">Padding top value in the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00494">Descriptors.hpp:494</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="_tensor_copy_utils_8cpp_xhtml_afaaca8c3f3a467d124bba44067d2afa8"><div class="ttname"><a href="_tensor_copy_utils_8cpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a></div><div class="ttdeci">void AllocateAndCopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00019">TensorCopyUtils.cpp:19</a></div></div>
<div class="ttc" id="_tensor_copy_utils_8cpp_xhtml_a99b626c58a926dc7d6df78d22ec186c8"><div class="ttname"><a href="_tensor_copy_utils_8cpp.xhtml#a99b626c58a926dc7d6df78d22ec186c8">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *memory, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_scoped_cpu_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_scoped_cpu_tensor_handle.xhtml">armnn::ScopedCpuTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="_cpu_tensor_handle_8hpp_source.xhtml#l00106">CpuTensorHandle.hpp:106</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_ac1fe174bbadfb39a2b636940c2e647c8"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#ac1fe174bbadfb39a2b636940c2e647c8">armnn::DepthwiseConvolution2dDescriptor::m_StrideY</a></div><div class="ttdeci">uint32_t m_StrideY</div><div class="ttdoc">Stride value when proceeding through input for the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00500">Descriptors.hpp:500</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about inputs and outputs to a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_test_result_8hpp_source.xhtml#l00030">LayerTestResult.hpp:30</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::DataType::QSymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_accb9759dfd2880efe0f8d2705ddee448"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#accb9759dfd2880efe0f8d2705ddee448">armnn::IWorkloadFactory::CreateDepthwiseConvolution2d</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateDepthwiseConvolution2d(const DepthwiseConvolution2dQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01386">WorkloadFactory.cpp:1386</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a375f11dd42ff042435e8771cf287b20c"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">armnn::ITensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">virtual std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const =0</div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00460">Descriptors.hpp:460</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml">armnn::DepthwiseConvolution2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00207">WorkloadData.hpp:207</a></div></div>
<div class="ttc" id="_tensor_copy_utils_8cpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="_tensor_copy_utils_8cpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_a002bc30e590d78cbb4f4d12171055ca7"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#a002bc30e590d78cbb4f4d12171055ca7">armnn::DepthwiseConvolution2dDescriptor::m_PadRight</a></div><div class="ttdeci">uint32_t m_PadRight</div><div class="ttdoc">Padding right value in the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00492">Descriptors.hpp:492</a></div></div>
<div class="ttc" id="_data_layout_utils_8hpp_xhtml_a1452f049aef30409b3b649af2be7ff82"><div class="ttname"><a href="_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a></div><div class="ttdeci">void PermuteTensorNhwcToNchw(armnn::TensorInfo &amp;tensorInfo, std::vector&lt; T &gt; &amp;tensorData)</div><div class="ttdef"><b>Definition:</b> <a href="_data_layout_utils_8hpp_source.xhtml#l00026">DataLayoutUtils.hpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9ed9dc40170e362160eb6e6e7edda209"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ed9dc40170e362160eb6e6e7edda209">&#9670;&nbsp;</a></span>DepthwiseConvolution2dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; DepthwiseConvolution2dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03545">3545</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03551"></a><span class="lineno"> 3551</span>&#160;{</div><div class="line"><a name="l03552"></a><span class="lineno"> 3552</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dTestImpl&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03553"></a><span class="lineno"> 3553</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0, biasEnabled, layout);</div><div class="line"><a name="l03554"></a><span class="lineno"> 3554</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae739d5c6193a4b2192f155632a4e2cd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae739d5c6193a4b2192f155632a4e2cd6">&#9670;&nbsp;</a></span>DepthwiseConvolution2dUint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; DepthwiseConvolution2dUint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03622">3622</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03628"></a><span class="lineno"> 3628</span>&#160;{</div><div class="line"><a name="l03629"></a><span class="lineno"> 3629</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dTestImpl&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03630"></a><span class="lineno"> 3630</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03631"></a><span class="lineno"> 3631</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a4d3ce31fe572451e18fea5add8543bf4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d3ce31fe572451e18fea5add8543bf4">&#9670;&nbsp;</a></span>SimpleConvolution2d3x3NhwcTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; SimpleConvolution2d3x3NhwcTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03332">3332</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::NHWC</a>.</p>
<div class="fragment"><div class="line"><a name="l03337"></a><span class="lineno"> 3337</span>&#160;{</div><div class="line"><a name="l03338"></a><span class="lineno"> 3338</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x3NhwcTestCommon&lt;armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03339"></a><span class="lineno"> 3339</span>&#160;        workloadFactory,</div><div class="line"><a name="l03340"></a><span class="lineno"> 3340</span>&#160;        memoryManager,</div><div class="line"><a name="l03341"></a><span class="lineno"> 3341</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l03342"></a><span class="lineno"> 3342</span>&#160;        0.f,</div><div class="line"><a name="l03343"></a><span class="lineno"> 3343</span>&#160;        0,</div><div class="line"><a name="l03344"></a><span class="lineno"> 3344</span>&#160;        biasEnabled,</div><div class="line"><a name="l03345"></a><span class="lineno"> 3345</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l03346"></a><span class="lineno"> 3346</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aebd160fb0c5f5662a1cbaec5974c13ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebd160fb0c5f5662a1cbaec5974c13ea">&#9670;&nbsp;</a></span>SimpleConvolution2d3x3QSymm16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t, 4&gt; SimpleConvolution2d3x3QSymm16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03387">3387</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03393"></a><span class="lineno"> 3393</span>&#160;{</div><div class="line"><a name="l03394"></a><span class="lineno"> 3394</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x3TestCommon&lt;armnn::DataType::QSymmS16, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03395"></a><span class="lineno"> 3395</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03396"></a><span class="lineno"> 3396</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad232d77972b88a751dbf6ecd594b0faa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad232d77972b88a751dbf6ecd594b0faa">&#9670;&nbsp;</a></span>SimpleConvolution2d3x3Stride2x2Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; SimpleConvolution2d3x3Stride2x2Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03348">3348</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03354"></a><span class="lineno"> 3354</span>&#160;{</div><div class="line"><a name="l03355"></a><span class="lineno"> 3355</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x3Stride2x2TestCommon&lt;armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03356"></a><span class="lineno"> 3356</span>&#160;        workloadFactory,</div><div class="line"><a name="l03357"></a><span class="lineno"> 3357</span>&#160;        memoryManager,</div><div class="line"><a name="l03358"></a><span class="lineno"> 3358</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l03359"></a><span class="lineno"> 3359</span>&#160;        0.f,</div><div class="line"><a name="l03360"></a><span class="lineno"> 3360</span>&#160;        0,</div><div class="line"><a name="l03361"></a><span class="lineno"> 3361</span>&#160;        biasEnabled,</div><div class="line"><a name="l03362"></a><span class="lineno"> 3362</span>&#160;        layout);</div><div class="line"><a name="l03363"></a><span class="lineno"> 3363</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1c22cdfa99117a1cdbc4b25064fd4c25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c22cdfa99117a1cdbc4b25064fd4c25">&#9670;&nbsp;</a></span>SimpleConvolution2d3x3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; SimpleConvolution2d3x3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03321">3321</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03327"></a><span class="lineno"> 3327</span>&#160;{</div><div class="line"><a name="l03328"></a><span class="lineno"> 3328</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x3TestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03329"></a><span class="lineno"> 3329</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.f, 0, biasEnabled, layout);</div><div class="line"><a name="l03330"></a><span class="lineno"> 3330</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a9966f7b9070f4eb34deeb8fc3cb3d277"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9966f7b9070f4eb34deeb8fc3cb3d277">&#9670;&nbsp;</a></span>SimpleConvolution2d3x3Uint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; SimpleConvolution2d3x3Uint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03365">3365</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03371"></a><span class="lineno"> 3371</span>&#160;{</div><div class="line"><a name="l03372"></a><span class="lineno"> 3372</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x3TestCommon&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03373"></a><span class="lineno"> 3373</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03374"></a><span class="lineno"> 3374</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0f6ba53d8a3801fd33288c8a88a55902"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f6ba53d8a3801fd33288c8a88a55902">&#9670;&nbsp;</a></span>SimpleConvolution2d3x5QSymm16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t, 4&gt; SimpleConvolution2d3x5QSymm16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03376">3376</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03382"></a><span class="lineno"> 3382</span>&#160;{</div><div class="line"><a name="l03383"></a><span class="lineno"> 3383</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x5TestCommon&lt;armnn::DataType::QSymmS16, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03384"></a><span class="lineno"> 3384</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03385"></a><span class="lineno"> 3385</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="af541c93dcb094c01b52b99658704c500"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af541c93dcb094c01b52b99658704c500">&#9670;&nbsp;</a></span>SimpleConvolution2d3x5Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; SimpleConvolution2d3x5Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03299">3299</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03305"></a><span class="lineno"> 3305</span>&#160;{</div><div class="line"><a name="l03306"></a><span class="lineno"> 3306</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x5TestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03307"></a><span class="lineno"> 3307</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.f, 0, biasEnabled, layout);</div><div class="line"><a name="l03308"></a><span class="lineno"> 3308</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a10aae8f4c0c56c2c3574ca9ddf61a7af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10aae8f4c0c56c2c3574ca9ddf61a7af">&#9670;&nbsp;</a></span>SimpleConvolution2d3x5Uint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; SimpleConvolution2d3x5Uint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03310">3310</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03316"></a><span class="lineno"> 3316</span>&#160;{</div><div class="line"><a name="l03317"></a><span class="lineno"> 3317</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x5TestCommon&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03318"></a><span class="lineno"> 3318</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03319"></a><span class="lineno"> 3319</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="af089eef6b8fd167fe95899a3af69aa32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af089eef6b8fd167fe95899a3af69aa32">&#9670;&nbsp;</a></span>SimpleDepthwiseConvolution2d3x3Dilation3x3NhwcTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; SimpleDepthwiseConvolution2d3x3Dilation3x3NhwcTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03644">3644</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03648"></a><span class="lineno"> 3648</span>&#160;{</div><div class="line"><a name="l03649"></a><span class="lineno"> 3649</span>&#160;    <span class="keywordflow">return</span> SimpleDepthwiseConvolution2d3x3Dilation3x3NhwcTestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03650"></a><span class="lineno"> 3650</span>&#160;            workloadFactory,</div><div class="line"><a name="l03651"></a><span class="lineno"> 3651</span>&#160;            memoryManager,</div><div class="line"><a name="l03652"></a><span class="lineno"> 3652</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l03653"></a><span class="lineno"> 3653</span>&#160;            0.f,</div><div class="line"><a name="l03654"></a><span class="lineno"> 3654</span>&#160;            0,</div><div class="line"><a name="l03655"></a><span class="lineno"> 3655</span>&#160;            <span class="keyword">false</span>);</div><div class="line"><a name="l03656"></a><span class="lineno"> 3656</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_conv2d_test_impl_8hpp.xhtml">Conv2dTestImpl.hpp</a></li>
    <li class="footer">Generated on Fri Mar 19 2021 15:26:06 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
