<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: IBackendInternal Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_i_backend_internal.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classarmnn_1_1_i_backend_internal-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">IBackendInternal Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for IBackendInternal:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_i_backend_internal.png" usemap="#IBackendInternal_map" alt=""/>
  <map id="IBackendInternal_map" name="IBackendInternal_map">
<area href="classarmnn_1_1_i_backend.xhtml" title="Each backend should implement an IBackend. " alt="IBackend" shape="rect" coords="272,0,398,24"/>
<area href="classarmnn_1_1_cl_backend.xhtml" alt="ClBackend" shape="rect" coords="0,112,126,136"/>
<area href="classarmnn_1_1_mock_backend.xhtml" alt="MockBackend" shape="rect" coords="136,112,262,136"/>
<area href="classarmnn_1_1_mock_import_backend.xhtml" alt="MockImportBackend" shape="rect" coords="272,112,398,136"/>
<area href="classarmnn_1_1_neon_backend.xhtml" alt="NeonBackend" shape="rect" coords="408,112,534,136"/>
<area href="classarmnn_1_1_ref_backend.xhtml" alt="RefBackend" shape="rect" coords="544,112,670,136"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a72ca1cf423bda4b0a9ffb789627126de"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IWorkloadFactoryPtr</a> = std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">IWorkloadFactory</a> &gt;</td></tr>
<tr class="separator:a72ca1cf423bda4b0a9ffb789627126de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada6d56575c0fe53cf23c7ae4610c6367"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#ada6d56575c0fe53cf23c7ae4610c6367">IBackendContextPtr</a> = std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_backend_context.xhtml">IBackendContext</a> &gt;</td></tr>
<tr class="separator:ada6d56575c0fe53cf23c7ae4610c6367"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaece3a614f6691da8de8c7295cb1b07f"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#aaece3a614f6691da8de8c7295cb1b07f">IBackendProfilingContextPtr</a> = std::shared_ptr&lt; <a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling_context.xhtml">armnn::profiling::IBackendProfilingContext</a> &gt;</td></tr>
<tr class="memdesc:aaece3a614f6691da8de8c7295cb1b07f"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is the bridge between backend and backend profiling we'll keep it in the backend namespace.  <a href="#aaece3a614f6691da8de8c7295cb1b07f">More...</a><br /></td></tr>
<tr class="separator:aaece3a614f6691da8de8c7295cb1b07f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34ab83489d1c5043b2b9b4a2ec13c481"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a34ab83489d1c5043b2b9b4a2ec13c481">IBackendProfilingPtr</a> = std::unique_ptr&lt; <a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml">armnn::profiling::IBackendProfiling</a> &gt;</td></tr>
<tr class="separator:a34ab83489d1c5043b2b9b4a2ec13c481"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a621bdb49c4a2f879b27d27e771693a46"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a621bdb49c4a2f879b27d27e771693a46">OptimizationPtr</a> = std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_optimization.xhtml">Optimization</a> &gt;</td></tr>
<tr class="separator:a621bdb49c4a2f879b27d27e771693a46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1794808004025d6e06c176507197b24"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#ad1794808004025d6e06c176507197b24">Optimizations</a> = std::vector&lt; <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a621bdb49c4a2f879b27d27e771693a46">OptimizationPtr</a> &gt;</td></tr>
<tr class="separator:ad1794808004025d6e06c176507197b24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11fa919c11fe46aad613b2e960fcfe90"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">ILayerSupportSharedPtr</a> = std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml">ILayerSupport</a> &gt;</td></tr>
<tr class="separator:a11fa919c11fe46aad613b2e960fcfe90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d0238968a7643dbb170547dd22bba54"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendSpecificModelContextPtr</a> = std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_backend_model_context.xhtml">IBackendModelContext</a> &gt;</td></tr>
<tr class="separator:a4d0238968a7643dbb170547dd22bba54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12bff6d51d63dac1375c89bc8415dc46"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a12bff6d51d63dac1375c89bc8415dc46">IMemoryManagerUniquePtr</a> = std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt;</td></tr>
<tr class="separator:a12bff6d51d63dac1375c89bc8415dc46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a693b40e6b94e958836aeb0410ca186bd"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">IMemoryManagerSharedPtr</a> = std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt;</td></tr>
<tr class="separator:a693b40e6b94e958836aeb0410ca186bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d9d4ef183078690e3306320dc74b945"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a5d9d4ef183078690e3306320dc74b945">GraphUniquePtr</a> = std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_graph.xhtml">Graph</a> &gt;</td></tr>
<tr class="separator:a5d9d4ef183078690e3306320dc74b945"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25114a92f06d5d0a915111d97c7c4d7a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a25114a92f06d5d0a915111d97c7c4d7a">SubgraphViewUniquePtr</a> = std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &gt;</td></tr>
<tr class="separator:a25114a92f06d5d0a915111d97c7c4d7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a928c74de863a45a07986816d7c9ad68a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a928c74de863a45a07986816d7c9ad68a">supported</a> = std::unique_ptr&lt; ISubGraphConverter &gt;</td></tr>
<tr class="separator:a928c74de863a45a07986816d7c9ad68a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe076d3d98038ede095765ae6ee294ac"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#afe076d3d98038ede095765ae6ee294ac">instead</a> = std::unique_ptr&lt; SubGraph &gt;</td></tr>
<tr class="separator:afe076d3d98038ede095765ae6ee294ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8c507c220869f89aec2dc370ea6c5a0b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a8c507c220869f89aec2dc370ea6c5a0b">~IBackendInternal</a> () override=default</td></tr>
<tr class="memdesc:a8c507c220869f89aec2dc370ea6c5a0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow backends created by the factory function to be destroyed through <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml">IBackendInternal</a>.  <a href="#a8c507c220869f89aec2dc370ea6c5a0b">More...</a><br /></td></tr>
<tr class="separator:a8c507c220869f89aec2dc370ea6c5a0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0244952bb3d1d56b57736041c5a9fd3"><td class="memItemLeft" align="right" valign="top">virtual ISubGraphConverterPtr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#af0244952bb3d1d56b57736041c5a9fd3">CreateSubGraphConverter</a> (const std::shared_ptr&lt; SubGraph &gt; &amp;subGraph) const</td></tr>
<tr class="separator:af0244952bb3d1d56b57736041c5a9fd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad870e6e2951ea3693d9f89a7bf77d695"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#ad1794808004025d6e06c176507197b24">Optimizations</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#ad870e6e2951ea3693d9f89a7bf77d695">GetOptimizations</a> () const</td></tr>
<tr class="separator:ad870e6e2951ea3693d9f89a7bf77d695"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a226207e25fec42b47bd86621f3176686"><td class="memItemLeft" align="right" valign="top">virtual SubGraphUniquePtr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a226207e25fec42b47bd86621f3176686">OptimizeSubGraph</a> (const SubGraph &amp;subGraph, bool &amp;optimizationAttempted) const</td></tr>
<tr class="separator:a226207e25fec42b47bd86621f3176686"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e8cb8533d1d0b2cb93f926dac11dd16"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="_deprecated_8hpp.xhtml#ad762b11b48e5c1d1c1743f529485728a">ARMNN_NO_DEPRECATE_WARN_END</a> <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a12bff6d51d63dac1375c89bc8415dc46">IMemoryManagerUniquePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a0e8cb8533d1d0b2cb93f926dac11dd16">CreateMemoryManager</a> () const</td></tr>
<tr class="separator:a0e8cb8533d1d0b2cb93f926dac11dd16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd5a5e90515b31c0174f76ec8897e9b1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IWorkloadFactoryPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#afd5a5e90515b31c0174f76ec8897e9b1">CreateWorkloadFactory</a> (const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">IMemoryManagerSharedPtr</a> &amp;memoryManager=nullptr) const =0</td></tr>
<tr class="separator:afd5a5e90515b31c0174f76ec8897e9b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41c5c170ef6708c1efc683d900f624ff"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IWorkloadFactoryPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a41c5c170ef6708c1efc683d900f624ff">CreateWorkloadFactory</a> (class <a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> &amp;tensorHandleFactoryRegistry) const</td></tr>
<tr class="separator:a41c5c170ef6708c1efc683d900f624ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22973198ab5ac5624b4caa78100d2d25"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IWorkloadFactoryPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a22973198ab5ac5624b4caa78100d2d25">CreateWorkloadFactory</a> (const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> &amp;modelOptions) const</td></tr>
<tr class="separator:a22973198ab5ac5624b4caa78100d2d25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebacbea86fddc46858f6329671ccf750"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IWorkloadFactoryPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#aebacbea86fddc46858f6329671ccf750">CreateWorkloadFactory</a> (class <a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> &amp;tensorHandleFactoryRegistry, const <a class="el" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> &amp;modelOptions) const</td></tr>
<tr class="separator:aebacbea86fddc46858f6329671ccf750"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07a1b3f9ac897364b5c2aacc227cbebc"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#ada6d56575c0fe53cf23c7ae4610c6367">IBackendContextPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a07a1b3f9ac897364b5c2aacc227cbebc">CreateBackendContext</a> (const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">IRuntime::CreationOptions</a> &amp;) const</td></tr>
<tr class="memdesc:a07a1b3f9ac897364b5c2aacc227cbebc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the runtime context of the backend.  <a href="#a07a1b3f9ac897364b5c2aacc227cbebc">More...</a><br /></td></tr>
<tr class="separator:a07a1b3f9ac897364b5c2aacc227cbebc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41f38c8c2182463dec4f03769ea54f63"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendSpecificModelContextPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a41f38c8c2182463dec4f03769ea54f63">CreateBackendSpecificModelContext</a> (const <a class="el" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> &amp;modelOptions) const</td></tr>
<tr class="separator:a41f38c8c2182463dec4f03769ea54f63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c5064ef6323af5c547674d01b15d7ab"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#aaece3a614f6691da8de8c7295cb1b07f">IBackendProfilingContextPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a6c5064ef6323af5c547674d01b15d7ab">CreateBackendProfilingContext</a> (const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">IRuntime::CreationOptions</a> &amp;creationOptions, <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a34ab83489d1c5043b2b9b4a2ec13c481">IBackendProfilingPtr</a> &amp;backendProfiling)</td></tr>
<tr class="memdesc:a6c5064ef6323af5c547674d01b15d7ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create context specifically used for profiling interaction from backends.  <a href="#a6c5064ef6323af5c547674d01b15d7ab">More...</a><br /></td></tr>
<tr class="separator:a6c5064ef6323af5c547674d01b15d7ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad86597efa7c25997572c80dc29f3104a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">ILayerSupportSharedPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#ad86597efa7c25997572c80dc29f3104a">GetLayerSupport</a> () const =0</td></tr>
<tr class="separator:ad86597efa7c25997572c80dc29f3104a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa654fe558005ad90f2e9a2e1f175ebce"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">ILayerSupportSharedPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#aa654fe558005ad90f2e9a2e1f175ebce">GetLayerSupport</a> (const <a class="el" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> &amp;modelOptions) const</td></tr>
<tr class="separator:aa654fe558005ad90f2e9a2e1f175ebce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a674f56c735a3d6300463cefb642f808a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_optimization_views.xhtml">OptimizationViews</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a674f56c735a3d6300463cefb642f808a">OptimizeSubgraphView</a> (const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;subgraph) const</td></tr>
<tr class="separator:a674f56c735a3d6300463cefb642f808a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3623ac8294bf071d68eb7d71383e9a83"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_optimization_views.xhtml">OptimizationViews</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a3623ac8294bf071d68eb7d71383e9a83">OptimizeSubgraphView</a> (const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;subgraph, const <a class="el" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> &amp;modelOptions) const</td></tr>
<tr class="separator:a3623ac8294bf071d68eb7d71383e9a83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8f716b0eab6b9d63196d5a53d5fac81"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#af8f716b0eab6b9d63196d5a53d5fac81">SupportsTensorAllocatorAPI</a> () const</td></tr>
<tr class="separator:af8f716b0eab6b9d63196d5a53d5fac81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ccbb386cc96a5336a8295a3c25d33dd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a6ccbb386cc96a5336a8295a3c25d33dd">GetBackwardCompatibleFavoriteHandleFactory</a> ()</td></tr>
<tr class="separator:a6ccbb386cc96a5336a8295a3c25d33dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5d107c5672f446603b6e6b92bce6244"><td class="memItemLeft" align="right" valign="top">virtual std::vector&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#ac5d107c5672f446603b6e6b92bce6244">GetHandleFactoryPreferences</a> () const</td></tr>
<tr class="memdesc:ac5d107c5672f446603b6e6b92bce6244"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>) Returns a vector of supported TensorHandleFactory ids in preference order.  <a href="#ac5d107c5672f446603b6e6b92bce6244">More...</a><br /></td></tr>
<tr class="separator:ac5d107c5672f446603b6e6b92bce6244"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a517bc1a44d6d2d7a45c1847fba287135"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a517bc1a44d6d2d7a45c1847fba287135">RegisterTensorHandleFactories</a> (class <a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> &amp;)</td></tr>
<tr class="memdesc:a517bc1a44d6d2d7a45c1847fba287135"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>) Register TensorHandleFactories Either this method or <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a0e8cb8533d1d0b2cb93f926dac11dd16">CreateMemoryManager()</a> and IWorkloadFactory::CreateTensor()/IWorkloadFactory::CreateSubtensor() methods must be implemented.  <a href="#a517bc1a44d6d2d7a45c1847fba287135">More...</a><br /></td></tr>
<tr class="separator:a517bc1a44d6d2d7a45c1847fba287135"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_i_backend"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_i_backend')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_i_backend.xhtml">IBackend</a></td></tr>
<tr class="memitem:aa9fc23b7155bd678232eeb351059b748 inherit pub_methods_classarmnn_1_1_i_backend"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend.xhtml#aa9fc23b7155bd678232eeb351059b748">GetId</a> () const =0</td></tr>
<tr class="separator:aa9fc23b7155bd678232eeb351059b748 inherit pub_methods_classarmnn_1_1_i_backend"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a878b8f50d8a2f92ed624803e9f6968ae"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="structarmnn_1_1_backend_version.xhtml">BackendVersion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a878b8f50d8a2f92ed624803e9f6968ae">GetApiVersion</a> ()</td></tr>
<tr class="memdesc:a878b8f50d8a2f92ed624803e9f6968ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the version of the Backend API.  <a href="#a878b8f50d8a2f92ed624803e9f6968ae">More...</a><br /></td></tr>
<tr class="separator:a878b8f50d8a2f92ed624803e9f6968ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a675fed08e681be4343fb09ae73eb7641"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a675fed08e681be4343fb09ae73eb7641">IBackendInternal</a> ()=default</td></tr>
<tr class="memdesc:a675fed08e681be4343fb09ae73eb7641"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creation must be done through a specific backend interface.  <a href="#a675fed08e681be4343fb09ae73eb7641">More...</a><br /></td></tr>
<tr class="separator:a675fed08e681be4343fb09ae73eb7641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classarmnn_1_1_i_backend"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classarmnn_1_1_i_backend')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classarmnn_1_1_i_backend.xhtml">IBackend</a></td></tr>
<tr class="memitem:a7cfc55eae265fa65b7d25e7dd3203f22 inherit pro_methods_classarmnn_1_1_i_backend"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend.xhtml#a7cfc55eae265fa65b7d25e7dd3203f22">IBackend</a> ()</td></tr>
<tr class="separator:a7cfc55eae265fa65b7d25e7dd3203f22 inherit pro_methods_classarmnn_1_1_i_backend"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa73289e0503a4f7ec5909e117a57aa2b inherit pro_methods_classarmnn_1_1_i_backend"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_backend.xhtml#aa73289e0503a4f7ec5909e117a57aa2b">~IBackend</a> ()</td></tr>
<tr class="separator:aa73289e0503a4f7ec5909e117a57aa2b inherit pro_methods_classarmnn_1_1_i_backend"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00068">68</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a5d9d4ef183078690e3306320dc74b945"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d9d4ef183078690e3306320dc74b945">&#9670;&nbsp;</a></span>GraphUniquePtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a5d9d4ef183078690e3306320dc74b945">GraphUniquePtr</a> =  std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_graph.xhtml">Graph</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00094">94</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="ada6d56575c0fe53cf23c7ae4610c6367"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada6d56575c0fe53cf23c7ae4610c6367">&#9670;&nbsp;</a></span>IBackendContextPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#ada6d56575c0fe53cf23c7ae4610c6367">IBackendContextPtr</a> =  std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_i_backend_context.xhtml">IBackendContext</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00081">81</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="aaece3a614f6691da8de8c7295cb1b07f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaece3a614f6691da8de8c7295cb1b07f">&#9670;&nbsp;</a></span>IBackendProfilingContextPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#aaece3a614f6691da8de8c7295cb1b07f">IBackendProfilingContextPtr</a> =  std::shared_ptr&lt;<a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling_context.xhtml">armnn::profiling::IBackendProfilingContext</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This is the bridge between backend and backend profiling we'll keep it in the backend namespace. </p>

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00083">83</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="a34ab83489d1c5043b2b9b4a2ec13c481"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34ab83489d1c5043b2b9b4a2ec13c481">&#9670;&nbsp;</a></span>IBackendProfilingPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a34ab83489d1c5043b2b9b4a2ec13c481">IBackendProfilingPtr</a> =  std::unique_ptr&lt;<a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml">armnn::profiling::IBackendProfiling</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00084">84</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="a4d0238968a7643dbb170547dd22bba54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d0238968a7643dbb170547dd22bba54">&#9670;&nbsp;</a></span>IBackendSpecificModelContextPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendSpecificModelContextPtr</a> =  std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_i_backend_model_context.xhtml">IBackendModelContext</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00089">89</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="a11fa919c11fe46aad613b2e960fcfe90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11fa919c11fe46aad613b2e960fcfe90">&#9670;&nbsp;</a></span>ILayerSupportSharedPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">ILayerSupportSharedPtr</a> =  std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml">ILayerSupport</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00087">87</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="a693b40e6b94e958836aeb0410ca186bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a693b40e6b94e958836aeb0410ca186bd">&#9670;&nbsp;</a></span>IMemoryManagerSharedPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">IMemoryManagerSharedPtr</a> =  std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_i_memory_manager.xhtml">IMemoryManager</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00092">92</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="a12bff6d51d63dac1375c89bc8415dc46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12bff6d51d63dac1375c89bc8415dc46">&#9670;&nbsp;</a></span>IMemoryManagerUniquePtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a12bff6d51d63dac1375c89bc8415dc46">IMemoryManagerUniquePtr</a> =  std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_i_memory_manager.xhtml">IMemoryManager</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00091">91</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="afe076d3d98038ede095765ae6ee294ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe076d3d98038ede095765ae6ee294ac">&#9670;&nbsp;</a></span>instead</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#afe076d3d98038ede095765ae6ee294ac">instead</a> =  std::unique_ptr&lt;SubGraph&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00101">101</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="a72ca1cf423bda4b0a9ffb789627126de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72ca1cf423bda4b0a9ffb789627126de">&#9670;&nbsp;</a></span>IWorkloadFactoryPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IWorkloadFactoryPtr</a> =  std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">IWorkloadFactory</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00080">80</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="a621bdb49c4a2f879b27d27e771693a46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a621bdb49c4a2f879b27d27e771693a46">&#9670;&nbsp;</a></span>OptimizationPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a621bdb49c4a2f879b27d27e771693a46">OptimizationPtr</a> =  std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_optimization.xhtml">Optimization</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00085">85</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="ad1794808004025d6e06c176507197b24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1794808004025d6e06c176507197b24">&#9670;&nbsp;</a></span>Optimizations</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#ad1794808004025d6e06c176507197b24">Optimizations</a> =  std::vector&lt;<a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a621bdb49c4a2f879b27d27e771693a46">OptimizationPtr</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00086">86</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="a25114a92f06d5d0a915111d97c7c4d7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25114a92f06d5d0a915111d97c7c4d7a">&#9670;&nbsp;</a></span>SubgraphViewUniquePtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a25114a92f06d5d0a915111d97c7c4d7a">SubgraphViewUniquePtr</a> =  std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00095">95</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<a id="a928c74de863a45a07986816d7c9ad68a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a928c74de863a45a07986816d7c9ad68a">&#9670;&nbsp;</a></span>supported</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a928c74de863a45a07986816d7c9ad68a">supported</a> =  std::unique_ptr&lt;ISubGraphConverter&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00099">99</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a675fed08e681be4343fb09ae73eb7641"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a675fed08e681be4343fb09ae73eb7641">&#9670;&nbsp;</a></span>IBackendInternal()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml">IBackendInternal</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creation must be done through a specific backend interface. </p>

</div>
</div>
<a id="a8c507c220869f89aec2dc370ea6c5a0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c507c220869f89aec2dc370ea6c5a0b">&#9670;&nbsp;</a></span>~IBackendInternal()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1_i_backend_internal.xhtml">IBackendInternal</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow backends created by the factory function to be destroyed through <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml">IBackendInternal</a>. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a07a1b3f9ac897364b5c2aacc227cbebc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07a1b3f9ac897364b5c2aacc227cbebc">&#9670;&nbsp;</a></span>CreateBackendContext()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#ada6d56575c0fe53cf23c7ae4610c6367">IBackendInternal::IBackendContextPtr</a> CreateBackendContext </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">IRuntime::CreationOptions</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create the runtime context of the backend. </p>
<p>Implementations may return a default-constructed IBackendContextPtr if no context is needed at runtime. Implementations must throw <a class="el" href="classarmnn_1_1_backend_unavailable_exception.xhtml" title="Class for non-fatal exceptions raised while initialising a backend. ">BackendUnavailableException</a> if the backend cannot be used (for example, necessary accelerator hardware is not present). The default implementation always returns a default-constructed pointer. </p>

<p>Reimplemented in <a class="el" href="classarmnn_1_1_mock_backend.xhtml#a801cf3170dc777aca3e6f926d1bd70a5">MockBackend</a>, <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a801cf3170dc777aca3e6f926d1bd70a5">ClBackend</a>, <a class="el" href="classarmnn_1_1_mock_import_backend.xhtml#a801cf3170dc777aca3e6f926d1bd70a5">MockImportBackend</a>, <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a801cf3170dc777aca3e6f926d1bd70a5">NeonBackend</a>, and <a class="el" href="classarmnn_1_1_ref_backend.xhtml#a801cf3170dc777aca3e6f926d1bd70a5">RefBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00079">79</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#ada6d56575c0fe53cf23c7ae4610c6367">IBackendContextPtr</a>{};</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_ada6d56575c0fe53cf23c7ae4610c6367"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#ada6d56575c0fe53cf23c7ae4610c6367">armnn::IBackendInternal::IBackendContextPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IBackendContext &gt; IBackendContextPtr</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00081">IBackendInternal.hpp:81</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6c5064ef6323af5c547674d01b15d7ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c5064ef6323af5c547674d01b15d7ab">&#9670;&nbsp;</a></span>CreateBackendProfilingContext()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#aaece3a614f6691da8de8c7295cb1b07f">IBackendInternal::IBackendProfilingContextPtr</a> CreateBackendProfilingContext </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">IRuntime::CreationOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>creationOptions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a34ab83489d1c5043b2b9b4a2ec13c481">IBackendProfilingPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>backendProfiling</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create context specifically used for profiling interaction from backends. </p>

<p>Reimplemented in <a class="el" href="classarmnn_1_1_mock_backend.xhtml#ac2480fbc4ae790e2e64f55d78b7f31a0">MockBackend</a>, <a class="el" href="classarmnn_1_1_mock_import_backend.xhtml#ac2480fbc4ae790e2e64f55d78b7f31a0">MockImportBackend</a>, <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a68c2ef244261cc9649799284774af132">ClBackend</a>, <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a68c2ef244261cc9649799284774af132">NeonBackend</a>, and <a class="el" href="classarmnn_1_1_ref_backend.xhtml#ac2480fbc4ae790e2e64f55d78b7f31a0">RefBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00090">90</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#aaece3a614f6691da8de8c7295cb1b07f">IBackendProfilingContextPtr</a>{};</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_aaece3a614f6691da8de8c7295cb1b07f"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#aaece3a614f6691da8de8c7295cb1b07f">armnn::IBackendInternal::IBackendProfilingContextPtr</a></div><div class="ttdeci">std::shared_ptr&lt; armnn::profiling::IBackendProfilingContext &gt; IBackendProfilingContextPtr</div><div class="ttdoc">This is the bridge between backend and backend profiling we&amp;#39;ll keep it in the backend namespace...</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00083">IBackendInternal.hpp:83</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a41f38c8c2182463dec4f03769ea54f63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41f38c8c2182463dec4f03769ea54f63">&#9670;&nbsp;</a></span>CreateBackendSpecificModelContext()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendInternal::IBackendSpecificModelContextPtr</a> CreateBackendSpecificModelContext </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>modelOptions</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a2482b4a7d5bde88e9b963be08017ce2b">ClBackend</a>, and <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a2482b4a7d5bde88e9b963be08017ce2b">NeonBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00084">84</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendSpecificModelContextPtr</a>{};</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a4d0238968a7643dbb170547dd22bba54"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">armnn::IBackendInternal::IBackendSpecificModelContextPtr</a></div><div class="ttdeci">std::shared_ptr&lt; IBackendModelContext &gt; IBackendSpecificModelContextPtr</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00089">IBackendInternal.hpp:89</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0e8cb8533d1d0b2cb93f926dac11dd16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e8cb8533d1d0b2cb93f926dac11dd16">&#9670;&nbsp;</a></span>CreateMemoryManager()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_deprecated_8hpp.xhtml#ad762b11b48e5c1d1c1743f529485728a">ARMNN_NO_DEPRECATE_WARN_END</a> <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a12bff6d51d63dac1375c89bc8415dc46">IMemoryManagerUniquePtr</a> CreateMemoryManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarmnn_1_1_mock_backend.xhtml#a93fcb3bff141d8c77b53466a44b58eee">MockBackend</a>, <a class="el" href="classarmnn_1_1_mock_import_backend.xhtml#a93fcb3bff141d8c77b53466a44b58eee">MockImportBackend</a>, <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a93fcb3bff141d8c77b53466a44b58eee">ClBackend</a>, <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a93fcb3bff141d8c77b53466a44b58eee">NeonBackend</a>, and <a class="el" href="classarmnn_1_1_ref_backend.xhtml#a93fcb3bff141d8c77b53466a44b58eee">RefBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_loaded_network_8cpp_source.xhtml#l00083">LoadedNetwork::MakeLoadedNetwork()</a>.</p>
<div class="fragment"><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a12bff6d51d63dac1375c89bc8415dc46">IMemoryManagerUniquePtr</a>();</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a12bff6d51d63dac1375c89bc8415dc46"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a12bff6d51d63dac1375c89bc8415dc46">armnn::IBackendInternal::IMemoryManagerUniquePtr</a></div><div class="ttdeci">std::unique_ptr&lt; IMemoryManager &gt; IMemoryManagerUniquePtr</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00091">IBackendInternal.hpp:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="af0244952bb3d1d56b57736041c5a9fd3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0244952bb3d1d56b57736041c5a9fd3">&#9670;&nbsp;</a></span>CreateSubGraphConverter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_deprecated_8hpp.xhtml#ab66a241a0ed3ee89c866e777b035d0ed">ARMNN_NO_DEPRECATE_WARN_BEGIN</a> IBackendInternal::ISubGraphConverterPtr CreateSubGraphConverter </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; SubGraph &gt; &amp;&#160;</td>
          <td class="paramname"><em>subGraph</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00013">13</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keywordflow">return</span> ISubGraphConverterPtr{};</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="afd5a5e90515b31c0174f76ec8897e9b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd5a5e90515b31c0174f76ec8897e9b1">&#9670;&nbsp;</a></span>CreateWorkloadFactory() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IWorkloadFactoryPtr</a> CreateWorkloadFactory </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em> = <code>nullptr</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarmnn_1_1_mock_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">MockBackend</a>, <a class="el" href="classarmnn_1_1_mock_import_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">MockImportBackend</a>, <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">ClBackend</a>, <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">NeonBackend</a>, and <a class="el" href="classarmnn_1_1_ref_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">RefBackend</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00043">IBackendInternal::CreateWorkloadFactory()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l00083">LoadedNetwork::MakeLoadedNetwork()</a>, and <a class="el" href="_test_dynamic_backend_8cpp_source.xhtml#l00012">TestDynamicBackendId()</a>.</p>

</div>
</div>
<a id="a41c5c170ef6708c1efc683d900f624ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41c5c170ef6708c1efc683d900f624ff">&#9670;&nbsp;</a></span>CreateWorkloadFactory() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IBackendInternal::IWorkloadFactoryPtr</a> CreateWorkloadFactory </td>
          <td>(</td>
          <td class="paramtype">class <a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactoryRegistry</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarmnn_1_1_mock_import_backend.xhtml#afb0e4b4255c996c68fe87e3c13451a43">MockImportBackend</a>, <a class="el" href="classarmnn_1_1_cl_backend.xhtml#aa2d432e503780e146c08729323da519a">ClBackend</a>, <a class="el" href="classarmnn_1_1_neon_backend.xhtml#afb0e4b4255c996c68fe87e3c13451a43">NeonBackend</a>, and <a class="el" href="classarmnn_1_1_ref_backend.xhtml#afb0e4b4255c996c68fe87e3c13451a43">RefBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IWorkloadFactoryPtr</a>{};</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a72ca1cf423bda4b0a9ffb789627126de"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">armnn::IBackendInternal::IWorkloadFactoryPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkloadFactory &gt; IWorkloadFactoryPtr</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00080">IBackendInternal.hpp:80</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a22973198ab5ac5624b4caa78100d2d25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22973198ab5ac5624b4caa78100d2d25">&#9670;&nbsp;</a></span>CreateWorkloadFactory() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IBackendInternal::IWorkloadFactoryPtr</a> CreateWorkloadFactory </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>modelOptions</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a19441d1c63ca23efb8d4305933bcb712">ClBackend</a>, and <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a19441d1c63ca23efb8d4305933bcb712">NeonBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00043">43</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#afd5a5e90515b31c0174f76ec8897e9b1">IBackendInternal::CreateWorkloadFactory()</a>, and <a class="el" href="classarmnn_1_1_i_backend.xhtml#aa9fc23b7155bd678232eeb351059b748">IBackend::GetId()</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">if</span> (!modelOptions.empty())</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> optionsGroup : modelOptions)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordflow">if</span> (optionsGroup.GetBackendId() == <a class="code" href="classarmnn_1_1_i_backend.xhtml#aa9fc23b7155bd678232eeb351059b748">GetId</a>())</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IWorkloadFactoryPtr</a>{};</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#afd5a5e90515b31c0174f76ec8897e9b1">CreateWorkloadFactory</a>(memoryManager);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a72ca1cf423bda4b0a9ffb789627126de"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">armnn::IBackendInternal::IWorkloadFactoryPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkloadFactory &gt; IWorkloadFactoryPtr</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00080">IBackendInternal.hpp:80</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_xhtml_aa9fc23b7155bd678232eeb351059b748"><div class="ttname"><a href="classarmnn_1_1_i_backend.xhtml#aa9fc23b7155bd678232eeb351059b748">armnn::IBackend::GetId</a></div><div class="ttdeci">virtual const BackendId &amp; GetId() const =0</div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_afd5a5e90515b31c0174f76ec8897e9b1"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#afd5a5e90515b31c0174f76ec8897e9b1">armnn::IBackendInternal::CreateWorkloadFactory</a></div><div class="ttdeci">virtual IWorkloadFactoryPtr CreateWorkloadFactory(const IMemoryManagerSharedPtr &amp;memoryManager=nullptr) const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aebacbea86fddc46858f6329671ccf750"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebacbea86fddc46858f6329671ccf750">&#9670;&nbsp;</a></span>CreateWorkloadFactory() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IBackendInternal::IWorkloadFactoryPtr</a> CreateWorkloadFactory </td>
          <td>(</td>
          <td class="paramtype">class <a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactoryRegistry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>modelOptions</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a95c304f397c4ef9f0108834e16631219">ClBackend</a>, and <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a95c304f397c4ef9f0108834e16631219">NeonBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#afd5a5e90515b31c0174f76ec8897e9b1">IBackendInternal::CreateWorkloadFactory()</a>, and <a class="el" href="classarmnn_1_1_i_backend.xhtml#aa9fc23b7155bd678232eeb351059b748">IBackend::GetId()</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">if</span> (!modelOptions.empty())</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> optionsGroup : modelOptions)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <span class="keywordflow">if</span> (optionsGroup.GetBackendId() == <a class="code" href="classarmnn_1_1_i_backend.xhtml#aa9fc23b7155bd678232eeb351059b748">GetId</a>())</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IWorkloadFactoryPtr</a>{};</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#afd5a5e90515b31c0174f76ec8897e9b1">CreateWorkloadFactory</a>(tensorHandleFactoryRegistry);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a72ca1cf423bda4b0a9ffb789627126de"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">armnn::IBackendInternal::IWorkloadFactoryPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkloadFactory &gt; IWorkloadFactoryPtr</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00080">IBackendInternal.hpp:80</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_xhtml_aa9fc23b7155bd678232eeb351059b748"><div class="ttname"><a href="classarmnn_1_1_i_backend.xhtml#aa9fc23b7155bd678232eeb351059b748">armnn::IBackend::GetId</a></div><div class="ttdeci">virtual const BackendId &amp; GetId() const =0</div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_afd5a5e90515b31c0174f76ec8897e9b1"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#afd5a5e90515b31c0174f76ec8897e9b1">armnn::IBackendInternal::CreateWorkloadFactory</a></div><div class="ttdeci">virtual IWorkloadFactoryPtr CreateWorkloadFactory(const IMemoryManagerSharedPtr &amp;memoryManager=nullptr) const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a878b8f50d8a2f92ed624803e9f6968ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a878b8f50d8a2f92ed624803e9f6968ae">&#9670;&nbsp;</a></span>GetApiVersion()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="structarmnn_1_1_backend_version.xhtml">BackendVersion</a> GetApiVersion </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the version of the Backend API. </p>

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00166">166</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>

<p class="reference">References <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00037">BackendVersion::BackendVersion()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_dynamic_backend_8cpp_source.xhtml#l00012">DynamicBackend::DynamicBackend()</a>, <a class="el" href="_test_dynamic_backend_8cpp_source.xhtml#l00096">GetVersion()</a>, and <a class="el" href="_dynamic_backend_utils_8cpp_source.xhtml#l00050">DynamicBackendUtils::IsBackendCompatible()</a>.</p>
<div class="fragment"><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;{ <span class="keywordflow">return</span> BackendVersion(1, 0); }</div></div><!-- fragment -->
</div>
</div>
<a id="a6ccbb386cc96a5336a8295a3c25d33dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ccbb386cc96a5336a8295a3c25d33dd">&#9670;&nbsp;</a></span>GetBackwardCompatibleFavoriteHandleFactory()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a> GetBackwardCompatibleFavoriteHandleFactory </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00150">150</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>

<p class="reference">References <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00161">IBackendInternal::GetHandleFactoryPreferences()</a>, and <a class="el" href="include_2armnn_2backends_2_i_tensor_handle_factory_8hpp_source.xhtml#l00045">ITensorHandleFactory::LegacyFactoryId</a>.</p>
<div class="fragment"><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;{</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keyword">auto</span> favorites = <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#ac5d107c5672f446603b6e6b92bce6244">GetHandleFactoryPreferences</a>();</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">if</span> (favorites.empty())</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    {</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a9c95f90eb40e31f629e0e2947b8bc6f9">ITensorHandleFactory::LegacyFactoryId</a>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">return</span> favorites[0];</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_ac5d107c5672f446603b6e6b92bce6244"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#ac5d107c5672f446603b6e6b92bce6244">armnn::IBackendInternal::GetHandleFactoryPreferences</a></div><div class="ttdeci">virtual std::vector&lt; ITensorHandleFactory::FactoryId &gt; GetHandleFactoryPreferences() const</div><div class="ttdoc">(Optional) Returns a vector of supported TensorHandleFactory ids in preference order. </div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8cpp_source.xhtml#l00161">IBackendInternal.cpp:161</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a9c95f90eb40e31f629e0e2947b8bc6f9"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a9c95f90eb40e31f629e0e2947b8bc6f9">armnn::ITensorHandleFactory::LegacyFactoryId</a></div><div class="ttdeci">static const FactoryId LegacyFactoryId</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_factory_8hpp_source.xhtml#l00045">ITensorHandleFactory.hpp:45</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac5d107c5672f446603b6e6b92bce6244"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5d107c5672f446603b6e6b92bce6244">&#9670;&nbsp;</a></span>GetHandleFactoryPreferences()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a> &gt; GetHandleFactoryPreferences </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>(<a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>) Returns a vector of supported TensorHandleFactory ids in preference order. </p>

<p>Reimplemented in <a class="el" href="classarmnn_1_1_mock_import_backend.xhtml#a63559c7f206c265f5fff5ffcc8a58e3e">MockImportBackend</a>, <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a63559c7f206c265f5fff5ffcc8a58e3e">NeonBackend</a>, <a class="el" href="classarmnn_1_1_ref_backend.xhtml#a63559c7f206c265f5fff5ffcc8a58e3e">RefBackend</a>, and <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a63559c7f206c265f5fff5ffcc8a58e3e">ClBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00161">161</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_network_8cpp_source.xhtml#l01239">armnn::CalculateSlotOption()</a>, <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00150">IBackendInternal::GetBackwardCompatibleFavoriteHandleFactory()</a>, and <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00145">IBackendInternal::SupportsTensorAllocatorAPI()</a>.</p>
<div class="fragment"><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;{</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> std::vector&lt;ITensorHandleFactory::FactoryId&gt;();</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad86597efa7c25997572c80dc29f3104a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad86597efa7c25997572c80dc29f3104a">&#9670;&nbsp;</a></span>GetLayerSupport() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">ILayerSupportSharedPtr</a> GetLayerSupport </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarmnn_1_1_mock_backend.xhtml#a93d4285a3ea5e4e3b35578484d889daa">MockBackend</a>, <a class="el" href="classarmnn_1_1_mock_import_backend.xhtml#a93d4285a3ea5e4e3b35578484d889daa">MockImportBackend</a>, <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a93d4285a3ea5e4e3b35578484d889daa">ClBackend</a>, <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a93d4285a3ea5e4e3b35578484d889daa">NeonBackend</a>, and <a class="el" href="classarmnn_1_1_ref_backend.xhtml#a93d4285a3ea5e4e3b35578484d889daa">RefBackend</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00096">IBackendInternal::GetLayerSupport()</a>, and <a class="el" href="_test_dynamic_backend_8cpp_source.xhtml#l00012">TestDynamicBackendId()</a>.</p>

</div>
</div>
<a id="aa654fe558005ad90f2e9a2e1f175ebce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa654fe558005ad90f2e9a2e1f175ebce">&#9670;&nbsp;</a></span>GetLayerSupport() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">IBackendInternal::ILayerSupportSharedPtr</a> GetLayerSupport </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>modelOptions</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a9e458b98037dbb048877d0fc3fdbd17d">ClBackend</a>, and <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a9e458b98037dbb048877d0fc3fdbd17d">NeonBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarmnn_1_1_i_backend.xhtml#aa9fc23b7155bd678232eeb351059b748">IBackend::GetId()</a>, and <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#ad86597efa7c25997572c80dc29f3104a">IBackendInternal::GetLayerSupport()</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">if</span> (!modelOptions.empty())</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> optionsGroup : modelOptions)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">if</span> (optionsGroup.GetBackendId() == <a class="code" href="classarmnn_1_1_i_backend.xhtml#aa9fc23b7155bd678232eeb351059b748">GetId</a>())</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">ILayerSupportSharedPtr</a>{};</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#ad86597efa7c25997572c80dc29f3104a">GetLayerSupport</a>();</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_backend_xhtml_aa9fc23b7155bd678232eeb351059b748"><div class="ttname"><a href="classarmnn_1_1_i_backend.xhtml#aa9fc23b7155bd678232eeb351059b748">armnn::IBackend::GetId</a></div><div class="ttdeci">virtual const BackendId &amp; GetId() const =0</div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a11fa919c11fe46aad613b2e960fcfe90"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">armnn::IBackendInternal::ILayerSupportSharedPtr</a></div><div class="ttdeci">std::shared_ptr&lt; ILayerSupport &gt; ILayerSupportSharedPtr</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00087">IBackendInternal.hpp:87</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_ad86597efa7c25997572c80dc29f3104a"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#ad86597efa7c25997572c80dc29f3104a">armnn::IBackendInternal::GetLayerSupport</a></div><div class="ttdeci">virtual ILayerSupportSharedPtr GetLayerSupport() const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad870e6e2951ea3693d9f89a7bf77d695"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad870e6e2951ea3693d9f89a7bf77d695">&#9670;&nbsp;</a></span>GetOptimizations()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#ad1794808004025d6e06c176507197b24">IBackendInternal::Optimizations</a> GetOptimizations </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarmnn_1_1_mock_backend.xhtml#a87acb43c72272d9db21c547d4f4996cb">MockBackend</a>, <a class="el" href="classarmnn_1_1_mock_import_backend.xhtml#a87acb43c72272d9db21c547d4f4996cb">MockImportBackend</a>, <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a87acb43c72272d9db21c547d4f4996cb">ClBackend</a>, <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a87acb43c72272d9db21c547d4f4996cb">NeonBackend</a>, and <a class="el" href="classarmnn_1_1_ref_backend.xhtml#a87acb43c72272d9db21c547d4f4996cb">RefBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00019">19</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#ad1794808004025d6e06c176507197b24">Optimizations</a>{};</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_ad1794808004025d6e06c176507197b24"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#ad1794808004025d6e06c176507197b24">armnn::IBackendInternal::Optimizations</a></div><div class="ttdeci">std::vector&lt; OptimizationPtr &gt; Optimizations</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00086">IBackendInternal.hpp:86</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a226207e25fec42b47bd86621f3176686"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a226207e25fec42b47bd86621f3176686">&#9670;&nbsp;</a></span>OptimizeSubGraph()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">IBackendInternal::SubGraphUniquePtr OptimizeSubGraph </td>
          <td>(</td>
          <td class="paramtype">const SubGraph &amp;&#160;</td>
          <td class="paramname"><em>subGraph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>optimizationAttempted</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00024">24</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>

<p class="reference">References <a class="el" href="_deprecated_8hpp_source.xhtml#l00034">ARMNN_NO_DEPRECATE_WARN_END</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00114">IBackendInternal::OptimizeSubgraphView()</a>.</p>
<div class="fragment"><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    optimizationAttempted = <span class="keyword">false</span>;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a674f56c735a3d6300463cefb642f808a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a674f56c735a3d6300463cefb642f808a">&#9670;&nbsp;</a></span>OptimizeSubgraphView() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_optimization_views.xhtml">OptimizationViews</a> OptimizeSubgraphView </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;&#160;</td>
          <td class="paramname"><em>subgraph</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarmnn_1_1_mock_backend.xhtml#a3c7ed3d210544740ecb3fa9c28d56c34">MockBackend</a>, <a class="el" href="classarmnn_1_1_mock_import_backend.xhtml#a3c7ed3d210544740ecb3fa9c28d56c34">MockImportBackend</a>, <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a3c7ed3d210544740ecb3fa9c28d56c34">NeonBackend</a>, and <a class="el" href="classarmnn_1_1_ref_backend.xhtml#a3c7ed3d210544740ecb3fa9c28d56c34">RefBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00114">114</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>

<p class="reference">References <a class="el" href="include_2armnn_2backends_2_optimization_views_8hpp_source.xhtml#l00044">OptimizationViews::AddUntouchedSubgraph()</a>, <a class="el" href="_deprecated_8hpp_source.xhtml#l00033">ARMNN_NO_DEPRECATE_WARN_BEGIN</a>, <a class="el" href="_deprecated_8hpp_source.xhtml#l00034">ARMNN_NO_DEPRECATE_WARN_END</a>, and <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00024">IBackendInternal::OptimizeSubGraph()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00139">IBackendInternal::OptimizeSubgraphView()</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordtype">bool</span> optimizationAttempted = <span class="keyword">false</span>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#ab66a241a0ed3ee89c866e777b035d0ed">ARMNN_NO_DEPRECATE_WARN_BEGIN</a></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    SubGraphUniquePtr optSubgraph = <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a226207e25fec42b47bd86621f3176686">OptimizeSubGraph</a>(subgraph, optimizationAttempted);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#ad762b11b48e5c1d1c1743f529485728a">ARMNN_NO_DEPRECATE_WARN_END</a></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    OptimizationViews result;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">if</span> (!optimizationAttempted)</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        result.AddUntouchedSubgraph(SubgraphView(subgraph));</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (optSubgraph)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        result.AddSubstitution({subgraph, SubgraphView(*optSubgraph.get())});</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        result.AddFailedSubgraph(SubgraphView(subgraph));</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">return</span> result;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div><div class="ttc" id="_deprecated_8hpp_xhtml_ab66a241a0ed3ee89c866e777b035d0ed"><div class="ttname"><a href="_deprecated_8hpp.xhtml#ab66a241a0ed3ee89c866e777b035d0ed">ARMNN_NO_DEPRECATE_WARN_BEGIN</a></div><div class="ttdeci">#define ARMNN_NO_DEPRECATE_WARN_BEGIN</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00033">Deprecated.hpp:33</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_ad762b11b48e5c1d1c1743f529485728a"><div class="ttname"><a href="_deprecated_8hpp.xhtml#ad762b11b48e5c1d1c1743f529485728a">ARMNN_NO_DEPRECATE_WARN_END</a></div><div class="ttdeci">#define ARMNN_NO_DEPRECATE_WARN_END</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00034">Deprecated.hpp:34</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a226207e25fec42b47bd86621f3176686"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a226207e25fec42b47bd86621f3176686">armnn::IBackendInternal::OptimizeSubGraph</a></div><div class="ttdeci">virtual SubGraphUniquePtr OptimizeSubGraph(const SubGraph &amp;subGraph, bool &amp;optimizationAttempted) const</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8cpp_source.xhtml#l00024">IBackendInternal.cpp:24</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3623ac8294bf071d68eb7d71383e9a83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3623ac8294bf071d68eb7d71383e9a83">&#9670;&nbsp;</a></span>OptimizeSubgraphView() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_optimization_views.xhtml">OptimizationViews</a> OptimizeSubgraphView </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;&#160;</td>
          <td class="paramname"><em>subgraph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>modelOptions</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a339efc194a1738cd93fcdde4d948a5cd">ClBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00139">139</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>

<p class="reference">References <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00114">IBackendInternal::OptimizeSubgraphView()</a>.</p>
<div class="fragment"><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;{</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a674f56c735a3d6300463cefb642f808a">OptimizeSubgraphView</a>(subgraph);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a674f56c735a3d6300463cefb642f808a"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a674f56c735a3d6300463cefb642f808a">armnn::IBackendInternal::OptimizeSubgraphView</a></div><div class="ttdeci">virtual OptimizationViews OptimizeSubgraphView(const SubgraphView &amp;subgraph) const</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8cpp_source.xhtml#l00114">IBackendInternal.cpp:114</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a517bc1a44d6d2d7a45c1847fba287135"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a517bc1a44d6d2d7a45c1847fba287135">&#9670;&nbsp;</a></span>RegisterTensorHandleFactories()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void RegisterTensorHandleFactories </td>
          <td>(</td>
          <td class="paramtype">class <a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>(<a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>) Register TensorHandleFactories Either this method or <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a0e8cb8533d1d0b2cb93f926dac11dd16">CreateMemoryManager()</a> and IWorkloadFactory::CreateTensor()/IWorkloadFactory::CreateSubtensor() methods must be implemented. </p>

<p>Reimplemented in <a class="el" href="classarmnn_1_1_mock_import_backend.xhtml#a583bc4404a9d27ee1f8c46239637125d">MockImportBackend</a>, <a class="el" href="classarmnn_1_1_neon_backend.xhtml#a583bc4404a9d27ee1f8c46239637125d">NeonBackend</a>, <a class="el" href="classarmnn_1_1_ref_backend.xhtml#a583bc4404a9d27ee1f8c46239637125d">RefBackend</a>, and <a class="el" href="classarmnn_1_1_cl_backend.xhtml#a531177ce89c53c6af616175b0b05e5c0">ClBackend</a>.</p>

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml#l00163">163</a> of file <a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{}</div></div><!-- fragment -->
</div>
</div>
<a id="af8f716b0eab6b9d63196d5a53d5fac81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8f716b0eab6b9d63196d5a53d5fac81">&#9670;&nbsp;</a></span>SupportsTensorAllocatorAPI()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SupportsTensorAllocatorAPI </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00145">145</a> of file <a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a>.</p>

<p class="reference">References <a class="el" href="_i_backend_internal_8cpp_source.xhtml#l00161">IBackendInternal::GetHandleFactoryPreferences()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_loaded_network_8cpp_source.xhtml#l00083">LoadedNetwork::MakeLoadedNetwork()</a>.</p>
<div class="fragment"><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;{</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">return</span> !<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#ac5d107c5672f446603b6e6b92bce6244">GetHandleFactoryPreferences</a>().empty();</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_ac5d107c5672f446603b6e6b92bce6244"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#ac5d107c5672f446603b6e6b92bce6244">armnn::IBackendInternal::GetHandleFactoryPreferences</a></div><div class="ttdeci">virtual std::vector&lt; ITensorHandleFactory::FactoryId &gt; GetHandleFactoryPreferences() const</div><div class="ttdoc">(Optional) Returns a vector of supported TensorHandleFactory ids in preference order. </div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8cpp_source.xhtml#l00161">IBackendInternal.cpp:161</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnn/backends/<a class="el" href="include_2armnn_2backends_2_i_backend_internal_8hpp_source.xhtml">IBackendInternal.hpp</a></li>
<li>src/backends/backendsCommon/<a class="el" href="_i_backend_internal_8cpp_source.xhtml">IBackendInternal.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml">IBackendInternal</a></li>
    <li class="footer">Generated on Fri Mar 19 2021 15:26:11 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
