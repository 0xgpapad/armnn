<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/DynamicQuantizationStrategy.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_dynamic_quantization_strategy_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DynamicQuantizationStrategy.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_dynamic_quantization_strategy_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2021 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_layer_visitor_base_8hpp.xhtml">armnn/LayerVisitorBase.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_range_tracker_8hpp.xhtml">RangeTracker.hpp</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_debug_layer_8hpp.xhtml">layers/DebugLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_network_8hpp.xhtml">armnn/INetwork.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_network_quantizer_8hpp.xhtml">armnnQuantizer/INetworkQuantizer.hpp</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// Visitor class implementation to gather the TensorInfo for LayerBindingID for creation of ConstTensor for Refine.</span></div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classarmnn_1_1_dynamic_quantization_strategy.xhtml">   19</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classarmnn_1_1_dynamic_quantization_strategy.xhtml">DynamicQuantizationStrategy</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_i_strategy.xhtml">armnn::IStrategy</a></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <a class="code" href="classarmnn_1_1_dynamic_quantization_strategy.xhtml#a6fb3efd24b4041e55676acb41e7ab54c">DynamicQuantizationStrategy</a>(<a class="code" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a>&amp; rangeTracker, <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; graph);</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <a class="code" href="classarmnn_1_1_dynamic_quantization_strategy.xhtml#a6549a600bd000071fbb4232d1c1bfdc8">~DynamicQuantizationStrategy</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_dynamic_quantization_strategy.xhtml#a49f7f1098adb86fd2197d9aee3924de2">ExecuteStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                                 <span class="keyword">const</span> std::vector&lt;armnn::ConstTensor&gt;&amp; constants,</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>* name,</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span> = 0) <span class="keyword">override</span>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">const</span> std::vector&lt;armnn::LayerBindingId&gt;&amp; <a class="code" href="classarmnn_1_1_dynamic_quantization_strategy.xhtml#a2004cc285dba7f2d4e69352e60a9a7a0">GetOutputLayers</a>();</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_dynamic_quantization_strategy.xhtml#a795e9253dab52825add51ffc569eb81e">VisitNonCalibratedLayers</a>();</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_dynamic_quantization_strategy.xhtml#a920863784ebe170427bfe44016d978d8">FinishStrategy</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">    /// Set the range for an output slot on a layer</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> SetRange(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputIdx, <span class="keywordtype">float</span> min, <span class="keywordtype">float</span> max);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordtype">void</span> ForwardParentParameters(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">    /// Mapping from a layer Guid to an array of ranges for outputs</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a>&amp; m_RangeTracker;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; m_Graph;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    std::vector&lt;const IConnectableLayer*&gt; m_LayersToCalibrate;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    std::vector&lt;const IConnectableLayer*&gt; m_LayersNotToCalibrate;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    std::vector&lt;DebugLayer*&gt; m_DebugLayers;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    std::vector&lt;armnn::LayerBindingId&gt; m_OutputLayers;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordtype">void</span> AddToCalibratedLayers(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">void</span> AddToNonCalibratedLayers(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">void</span> RemoveDebugLayers();</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;};</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;} <span class="comment">//namespace armnn</span></div><div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00062">INetwork.hpp:62</a></div></div>
<div class="ttc" id="classarmnn_1_1_range_tracker_xhtml"><div class="ttname"><a href="classarmnn_1_1_range_tracker.xhtml">armnn::RangeTracker</a></div><div class="ttdef"><b>Definition:</b> <a href="_range_tracker_8hpp_source.xhtml#l00017">RangeTracker.hpp:17</a></div></div>
<div class="ttc" id="_debug_layer_8hpp_xhtml"><div class="ttname"><a href="_debug_layer_8hpp.xhtml">DebugLayer.hpp</a></div></div>
<div class="ttc" id="_range_tracker_8hpp_xhtml"><div class="ttname"><a href="_range_tracker_8hpp.xhtml">RangeTracker.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__software__tools_8dox_source.xhtml#l00006">01_00_software_tools.dox:6</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ab8cf8f9fb6792e654c2d8d8382f6f01b"><div class="ttname"><a href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a></div><div class="ttdeci">int LayerBindingId</div><div class="ttdoc">Type of identifiers for bindable layers (inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00210">Types.hpp:210</a></div></div>
<div class="ttc" id="structarmnn_1_1_base_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a></div><div class="ttdoc">Base class for all descriptors. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00022">Descriptors.hpp:22</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_strategy_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_strategy.xhtml">armnn::IStrategy</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_strategy_8hpp_source.xhtml#l00013">IStrategy.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_dynamic_quantization_strategy_xhtml_a49f7f1098adb86fd2197d9aee3924de2"><div class="ttname"><a href="classarmnn_1_1_dynamic_quantization_strategy.xhtml#a49f7f1098adb86fd2197d9aee3924de2">armnn::DynamicQuantizationStrategy::ExecuteStrategy</a></div><div class="ttdeci">virtual void ExecuteStrategy(const armnn::IConnectableLayer *layer, const armnn::BaseDescriptor &amp;descriptor, const std::vector&lt; armnn::ConstTensor &gt; &amp;constants, const char *name, const armnn::LayerBindingId id=0) override</div><div class="ttdef"><b>Definition:</b> <a href="_dynamic_quantization_strategy_8cpp_source.xhtml#l00087">DynamicQuantizationStrategy.cpp:87</a></div></div>
<div class="ttc" id="classarmnn_1_1_dynamic_quantization_strategy_xhtml_a795e9253dab52825add51ffc569eb81e"><div class="ttname"><a href="classarmnn_1_1_dynamic_quantization_strategy.xhtml#a795e9253dab52825add51ffc569eb81e">armnn::DynamicQuantizationStrategy::VisitNonCalibratedLayers</a></div><div class="ttdeci">void VisitNonCalibratedLayers()</div><div class="ttdef"><b>Definition:</b> <a href="_dynamic_quantization_strategy_8cpp_source.xhtml#l00078">DynamicQuantizationStrategy.cpp:78</a></div></div>
<div class="ttc" id="classarmnn_1_1_dynamic_quantization_strategy_xhtml_a6fb3efd24b4041e55676acb41e7ab54c"><div class="ttname"><a href="classarmnn_1_1_dynamic_quantization_strategy.xhtml#a6fb3efd24b4041e55676acb41e7ab54c">armnn::DynamicQuantizationStrategy::DynamicQuantizationStrategy</a></div><div class="ttdeci">DynamicQuantizationStrategy(RangeTracker &amp;rangeTracker, Graph &amp;graph)</div><div class="ttdef"><b>Definition:</b> <a href="_dynamic_quantization_strategy_8cpp_source.xhtml#l00018">DynamicQuantizationStrategy.cpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1_dynamic_quantization_strategy_xhtml_a920863784ebe170427bfe44016d978d8"><div class="ttname"><a href="classarmnn_1_1_dynamic_quantization_strategy.xhtml#a920863784ebe170427bfe44016d978d8">armnn::DynamicQuantizationStrategy::FinishStrategy</a></div><div class="ttdeci">void FinishStrategy() override</div><div class="ttdef"><b>Definition:</b> <a href="_dynamic_quantization_strategy_8cpp_source.xhtml#l00050">DynamicQuantizationStrategy.cpp:50</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00029">Graph.hpp:29</a></div></div>
<div class="ttc" id="classarmnn_1_1_dynamic_quantization_strategy_xhtml_a6549a600bd000071fbb4232d1c1bfdc8"><div class="ttname"><a href="classarmnn_1_1_dynamic_quantization_strategy.xhtml#a6549a600bd000071fbb4232d1c1bfdc8">armnn::DynamicQuantizationStrategy::~DynamicQuantizationStrategy</a></div><div class="ttdeci">~DynamicQuantizationStrategy()=default</div></div>
<div class="ttc" id="_i_network_8hpp_xhtml"><div class="ttname"><a href="_i_network_8hpp.xhtml">INetwork.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_dynamic_quantization_strategy_xhtml"><div class="ttname"><a href="classarmnn_1_1_dynamic_quantization_strategy.xhtml">armnn::DynamicQuantizationStrategy</a></div><div class="ttdoc">Visitor class implementation to gather the TensorInfo for LayerBindingID for creation of ConstTensor ...</div><div class="ttdef"><b>Definition:</b> <a href="_dynamic_quantization_strategy_8hpp_source.xhtml#l00019">DynamicQuantizationStrategy.hpp:19</a></div></div>
<div class="ttc" id="_layer_visitor_base_8hpp_xhtml"><div class="ttname"><a href="_layer_visitor_base_8hpp.xhtml">LayerVisitorBase.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_dynamic_quantization_strategy_xhtml_a2004cc285dba7f2d4e69352e60a9a7a0"><div class="ttname"><a href="classarmnn_1_1_dynamic_quantization_strategy.xhtml#a2004cc285dba7f2d4e69352e60a9a7a0">armnn::DynamicQuantizationStrategy::GetOutputLayers</a></div><div class="ttdeci">const std::vector&lt; armnn::LayerBindingId &gt; &amp; GetOutputLayers()</div><div class="ttdef"><b>Definition:</b> <a href="_dynamic_quantization_strategy_8cpp_source.xhtml#l00271">DynamicQuantizationStrategy.cpp:271</a></div></div>
<div class="ttc" id="_i_network_quantizer_8hpp_xhtml"><div class="ttname"><a href="_i_network_quantizer_8hpp.xhtml">INetworkQuantizer.hpp</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_dynamic_quantization_strategy_8hpp.xhtml">DynamicQuantizationStrategy.hpp</a></li>
    <li class="footer">Generated on Fri Mar 19 2021 15:25:36 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
