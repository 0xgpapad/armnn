<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/profiling/test/ProfilingConnectionDumpToFileDecoratorTests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_profiling_connection_dump_to_file_decorator_tests_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ProfilingConnectionDumpToFileDecoratorTests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_profiling_connection_dump_to_file_decorator_tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2019 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;../ProfilingConnectionDumpToFileDecorator.hpp&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_filesystem_8hpp.xhtml">Filesystem.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_runtime_8hpp.xhtml">Runtime.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_ignore_unused_8hpp.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_numeric_cast_8hpp.xhtml">armnn/utility/NumericCast.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;boost/test/unit_test.hpp&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearmnn_1_1profiling.xhtml">armnn::profiling</a>;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">const</span> std::vector&lt;char&gt; g_Data       = { <span class="charliteral">&#39;d&#39;</span>, <span class="charliteral">&#39;u&#39;</span>, <span class="charliteral">&#39;m&#39;</span>, <span class="charliteral">&#39;m&#39;</span>, <span class="charliteral">&#39;y&#39;</span> };</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">const</span> uint32_t          g_DataLength = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;uint32_t&gt;(g_Data.size());</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*    g_DataPtr    = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*<span class="keyword">&gt;</span>(g_Data.data());</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">class </span>DummyProfilingConnection : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml">IProfilingConnection</a></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    DummyProfilingConnection()</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        : m_Open(<a class="code" href="_cl_layer_tests_8cpp.xhtml#a88d84cc49602ca19491dea9c998035fe">true</a>)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        , m_PacketData(<a class="code" href="namespacestd.xhtml">std</a>::make_unique&lt;unsigned char[]&gt;(g_DataLength))</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="comment">// populate packet data and construct packet</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        std::memcpy(m_PacketData.get(), g_DataPtr, g_DataLength);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        m_Packet = std::make_unique&lt;arm::pipe::Packet&gt;(0u, g_DataLength, m_PacketData);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    }</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    ~DummyProfilingConnection() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordtype">bool</span> IsOpen()<span class="keyword"> const override</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">return</span> m_Open;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordtype">void</span> Close()<span class="keyword"> override</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        m_Open = <span class="keyword">false</span>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordtype">bool</span> WritePacket(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer, uint32_t length)<span class="keyword"> override</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(buffer);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(length);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    arm::pipe::Packet ReadPacket(uint32_t timeout)<span class="keyword"> override</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(timeout);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">return</span> std::move(*m_Packet);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">bool</span> m_Open;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    std::unique_ptr&lt;unsigned char[]&gt; m_PacketData;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    std::unique_ptr&lt;arm::pipe::Packet&gt; m_Packet;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;};</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;std::vector&lt;char&gt; ReadDumpFile(<span class="keyword">const</span> std::string&amp; dumpFileName)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    std::ifstream input(dumpFileName, std::ios::binary);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> std::vector&lt;char&gt;(std::istreambuf_iterator&lt;char&gt;(input), {});</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;} <span class="comment">// anonymous namespace</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<a class="code" href="_output_shape_of_squeeze_8cpp.xhtml#ae3a6cb217a792718f2bd0e8f45e3ca9e">BOOST_AUTO_TEST_SUITE</a>(ProfilingConnectionDumpToFileDecoratorTests)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="_profiling_connection_dump_to_file_decorator_tests_8cpp.xhtml#a10edc4fab8af7994633dfc7b401244b2">   79</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a10d15f3df1ab52b3b915a4be1dbf386b">BOOST_AUTO_TEST_CASE</a>(DumpIncomingInvalidFile)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">armnn::IRuntime::CreationOptions::ExternalProfilingOptions</a> options;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a36dd18e4f73d470e3234d72198aa5fef">m_IncomingCaptureFile</a> = <span class="stringliteral">&quot;/&quot;</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aa0d6aa79d683bc79d20d4ddcf7db87db">m_OutgoingCaptureFile</a> =  <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml">ProfilingConnectionDumpToFileDecorator</a> decorator(std::make_unique&lt;DummyProfilingConnection&gt;(), options, <span class="keyword">false</span>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    BOOST_CHECK_THROW(decorator.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml#a47c113357d105d4f7a549a058e5661ab">ReadPacket</a>(0), <a class="code" href="classarmnn_1_1_runtime_exception.xhtml">armnn::RuntimeException</a>);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="_profiling_connection_dump_to_file_decorator_tests_8cpp.xhtml#a8bf609e71434b827d7e70e162e3eb479">   88</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a10d15f3df1ab52b3b915a4be1dbf386b">BOOST_AUTO_TEST_CASE</a>(DumpIncomingInvalidFileIgnoreErrors)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">armnn::IRuntime::CreationOptions::ExternalProfilingOptions</a> options;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a36dd18e4f73d470e3234d72198aa5fef">m_IncomingCaptureFile</a> = <span class="stringliteral">&quot;/&quot;</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aa0d6aa79d683bc79d20d4ddcf7db87db">m_OutgoingCaptureFile</a> =  <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml">ProfilingConnectionDumpToFileDecorator</a> decorator(std::make_unique&lt;DummyProfilingConnection&gt;(), options, <span class="keyword">true</span>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    BOOST_CHECK_NO_THROW(decorator.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml#a47c113357d105d4f7a549a058e5661ab">ReadPacket</a>(0));</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="_profiling_connection_dump_to_file_decorator_tests_8cpp.xhtml#a9aea32b5076eb204516d8e08e4dbabe5">   97</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a10d15f3df1ab52b3b915a4be1dbf386b">BOOST_AUTO_TEST_CASE</a>(DumpIncomingValidFile)</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    fs::path fileName = <a class="code" href="namespacearmnn_utils_1_1_filesystem.xhtml#a606d65835d72a332109c3c9f96a01b8a">armnnUtils::Filesystem::NamedTempFile</a>(<span class="stringliteral">&quot;Armnn-DumpIncomingValidFileTest-TempFile&quot;</span>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">armnn::IRuntime::CreationOptions::ExternalProfilingOptions</a> options;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a36dd18e4f73d470e3234d72198aa5fef">m_IncomingCaptureFile</a> = fileName.string();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aa0d6aa79d683bc79d20d4ddcf7db87db">m_OutgoingCaptureFile</a> =  <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml">ProfilingConnectionDumpToFileDecorator</a> decorator(std::make_unique&lt;DummyProfilingConnection&gt;(), options, <span class="keyword">false</span>);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// NOTE: unique_ptr is needed here because operator=() is deleted for Packet</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    std::unique_ptr&lt;arm::pipe::Packet&gt; packet;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    BOOST_CHECK_NO_THROW(packet = std::make_unique&lt;arm::pipe::Packet&gt;(decorator.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml#a47c113357d105d4f7a549a058e5661ab">ReadPacket</a>(0)));</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    decorator.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml#a0f9aecd570c4e5e6d41337f0e2f1adf5">Close</a>();</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    std::vector&lt;char&gt; data = ReadDumpFile(options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a36dd18e4f73d470e3234d72198aa5fef">m_IncomingCaptureFile</a>);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* packetData = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">char</span>*<span class="keyword">&gt;</span>(packet-&gt;GetData());</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="comment">// check if the data read back from the dump file matches the original</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bytesToSkip = 2u * <span class="keyword">sizeof</span>(uint32_t); <span class="comment">// skip header and packet length</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordtype">int</span> diff = std::strncmp(data.data() + bytesToSkip, packetData, g_DataLength);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    BOOST_CHECK(diff == 0);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    fs::remove(fileName);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="_profiling_connection_dump_to_file_decorator_tests_8cpp.xhtml#a0f63813c62d808da0da829f013d20c20">  123</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a10d15f3df1ab52b3b915a4be1dbf386b">BOOST_AUTO_TEST_CASE</a>(DumpOutgoingInvalidFile)</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">armnn::IRuntime::CreationOptions::ExternalProfilingOptions</a> options;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a36dd18e4f73d470e3234d72198aa5fef">m_IncomingCaptureFile</a> = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aa0d6aa79d683bc79d20d4ddcf7db87db">m_OutgoingCaptureFile</a> = <span class="stringliteral">&quot;/&quot;</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml">ProfilingConnectionDumpToFileDecorator</a> decorator(std::make_unique&lt;DummyProfilingConnection&gt;(), options, <span class="keyword">false</span>);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    BOOST_CHECK_THROW(decorator.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml#a42eb542b5a1d73d00c4ce474140bb78c">WritePacket</a>(g_DataPtr, g_DataLength), <a class="code" href="classarmnn_1_1_runtime_exception.xhtml">armnn::RuntimeException</a>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="_profiling_connection_dump_to_file_decorator_tests_8cpp.xhtml#a0d64f99889b7ca80ab0f924c31a658c1">  132</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a10d15f3df1ab52b3b915a4be1dbf386b">BOOST_AUTO_TEST_CASE</a>(DumpOutgoingInvalidFileIgnoreErrors)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">armnn::IRuntime::CreationOptions::ExternalProfilingOptions</a> options;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a36dd18e4f73d470e3234d72198aa5fef">m_IncomingCaptureFile</a> = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aa0d6aa79d683bc79d20d4ddcf7db87db">m_OutgoingCaptureFile</a> = <span class="stringliteral">&quot;/&quot;</span>;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml">ProfilingConnectionDumpToFileDecorator</a> decorator(std::make_unique&lt;DummyProfilingConnection&gt;(), options, <span class="keyword">true</span>);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    BOOST_CHECK_NO_THROW(decorator.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml#a42eb542b5a1d73d00c4ce474140bb78c">WritePacket</a>(g_DataPtr, g_DataLength));</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordtype">bool</span> success = decorator.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml#a42eb542b5a1d73d00c4ce474140bb78c">WritePacket</a>(g_DataPtr, g_DataLength);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    BOOST_CHECK(!success);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="_profiling_connection_dump_to_file_decorator_tests_8cpp.xhtml#a6f0568d8e45cdbebfb96482e4141e591">  145</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a10d15f3df1ab52b3b915a4be1dbf386b">BOOST_AUTO_TEST_CASE</a>(DumpOutgoingValidFile)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;{</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    fs::path fileName = <a class="code" href="namespacearmnn_utils_1_1_filesystem.xhtml#a606d65835d72a332109c3c9f96a01b8a">armnnUtils::Filesystem::NamedTempFile</a>(<span class="stringliteral">&quot;Armnn-DumpOutgoingValidFileTest-TempFile&quot;</span>);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">armnn::IRuntime::CreationOptions::ExternalProfilingOptions</a> options;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a36dd18e4f73d470e3234d72198aa5fef">m_IncomingCaptureFile</a> = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aa0d6aa79d683bc79d20d4ddcf7db87db">m_OutgoingCaptureFile</a> = fileName.string();</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml">ProfilingConnectionDumpToFileDecorator</a> decorator(std::make_unique&lt;DummyProfilingConnection&gt;(), options, <span class="keyword">false</span>);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordtype">bool</span> success = <span class="keyword">false</span>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    BOOST_CHECK_NO_THROW(success = decorator.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml#a42eb542b5a1d73d00c4ce474140bb78c">WritePacket</a>(g_DataPtr, g_DataLength));</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    BOOST_CHECK(success);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    decorator.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml#a0f9aecd570c4e5e6d41337f0e2f1adf5">Close</a>();</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    std::vector&lt;char&gt; data = ReadDumpFile(options.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aa0d6aa79d683bc79d20d4ddcf7db87db">m_OutgoingCaptureFile</a>);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="comment">// check if the data read back from the dump file matches the original</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordtype">int</span> diff = std::strncmp(data.data(), g_Data.data(), g_DataLength);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    BOOST_CHECK(diff == 0);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    fs::remove(fileName);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;}</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<a class="code" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END</a>()</div><div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator_xhtml_a42eb542b5a1d73d00c4ce474140bb78c"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml#a42eb542b5a1d73d00c4ce474140bb78c">armnn::profiling::ProfilingConnectionDumpToFileDecorator::WritePacket</a></div><div class="ttdeci">bool WritePacket(const unsigned char *buffer, uint32_t length) override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_connection_dump_to_file_decorator_8cpp_source.xhtml#l00052">ProfilingConnectionDumpToFileDecorator.cpp:52</a></div></div>
<div class="ttc" id="_output_shape_of_squeeze_8cpp_xhtml_ae3a6cb217a792718f2bd0e8f45e3ca9e"><div class="ttname"><a href="_output_shape_of_squeeze_8cpp.xhtml#ae3a6cb217a792718f2bd0e8f45e3ca9e">BOOST_AUTO_TEST_SUITE</a></div><div class="ttdeci">BOOST_AUTO_TEST_SUITE(TensorflowLiteParser)</div></div>
<div class="ttc" id="_ignore_unused_8hpp_xhtml"><div class="ttname"><a href="_ignore_unused_8hpp.xhtml">IgnoreUnused.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator_xhtml_a0f9aecd570c4e5e6d41337f0e2f1adf5"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml#a0f9aecd570c4e5e6d41337f0e2f1adf5">armnn::profiling::ProfilingConnectionDumpToFileDecorator::Close</a></div><div class="ttdeci">void Close() override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_connection_dump_to_file_decorator_8cpp_source.xhtml#l00043">ProfilingConnectionDumpToFileDecorator.cpp:43</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_aa0d6aa79d683bc79d20d4ddcf7db87db"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#aa0d6aa79d683bc79d20d4ddcf7db87db">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_OutgoingCaptureFile</a></div><div class="ttdeci">std::string m_OutgoingCaptureFile</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00077">IRuntime.hpp:77</a></div></div>
<div class="ttc" id="_runtime_8hpp_xhtml"><div class="ttname"><a href="_runtime_8hpp.xhtml">Runtime.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml_a36dd18e4f73d470e3234d72198aa5fef"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml#a36dd18e4f73d470e3234d72198aa5fef">armnn::IRuntime::CreationOptions::ExternalProfilingOptions::m_IncomingCaptureFile</a></div><div class="ttdeci">std::string m_IncomingCaptureFile</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00078">IRuntime.hpp:78</a></div></div>
<div class="ttc" id="_filesystem_8hpp_xhtml"><div class="ttname"><a href="_filesystem_8hpp.xhtml">Filesystem.hpp</a></div></div>
<div class="ttc" id="_numeric_cast_8hpp_xhtml"><div class="ttname"><a href="_numeric_cast_8hpp.xhtml">NumericCast.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator_xhtml_a47c113357d105d4f7a549a058e5661ab"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml#a47c113357d105d4f7a549a058e5661ab">armnn::profiling::ProfilingConnectionDumpToFileDecorator::ReadPacket</a></div><div class="ttdeci">arm::pipe::Packet ReadPacket(uint32_t timeout) override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_connection_dump_to_file_decorator_8cpp_source.xhtml#l00063">ProfilingConnectionDumpToFileDecorator.cpp:63</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">armnn::IRuntime::CreationOptions::ExternalProfilingOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00062">IRuntime.hpp:62</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00147">BackendId.hpp:147</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml">armnn::profiling</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00168">BackendId.hpp:168</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a10d15f3df1ab52b3b915a4be1dbf386b"><div class="ttname"><a href="namespacearmnn.xhtml#a10d15f3df1ab52b3b915a4be1dbf386b">armnn::BOOST_AUTO_TEST_CASE</a></div><div class="ttdeci">BOOST_AUTO_TEST_CASE(CheckConvolution2dLayer)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00268">ConstTensorLayerVisitor.cpp:268</a></div></div>
<div class="ttc" id="classarmnn_1_1_runtime_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_runtime_exception.xhtml">armnn::RuntimeException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00120">Exceptions.hpp:120</a></div></div>
<div class="ttc" id="_profiler_tests_8cpp_xhtml_af7f71af5c6c124222dd1c42c5df892f4"><div class="ttname"><a href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END</a></div><div class="ttdeci">BOOST_AUTO_TEST_SUITE_END()</div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_profiling_connection_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml">armnn::profiling::IProfilingConnection</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_profiling_connection_8hpp_source.xhtml#l00020">IProfilingConnection.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a375ca3cff9f1b005d1412dc5f3cf5b6e"><div class="ttname"><a href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a></div><div class="ttdeci">std::enable_if_t&lt; std::is_unsigned&lt; Source &gt;::value &amp;&amp;std::is_unsigned&lt; Dest &gt;::value, Dest &gt; numeric_cast(Source source)</div><div class="ttdef"><b>Definition:</b> <a href="_numeric_cast_8hpp_source.xhtml#l00035">NumericCast.hpp:35</a></div></div>
<div class="ttc" id="namespacearmnn_utils_1_1_filesystem_xhtml_a606d65835d72a332109c3c9f96a01b8a"><div class="ttname"><a href="namespacearmnn_utils_1_1_filesystem.xhtml#a606d65835d72a332109c3c9f96a01b8a">armnnUtils::Filesystem::NamedTempFile</a></div><div class="ttdeci">fs::path NamedTempFile(const char *fileName)</div><div class="ttdoc">Construct a temporary file name. </div><div class="ttdef"><b>Definition:</b> <a href="_filesystem_8cpp_source.xhtml#l00023">Filesystem.cpp:23</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_connection_dump_to_file_decorator.xhtml">armnn::profiling::ProfilingConnectionDumpToFileDecorator</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_connection_dump_to_file_decorator_8hpp_source.xhtml#l00025">ProfilingConnectionDumpToFileDecorator.hpp:25</a></div></div>
<div class="ttc" id="_cl_layer_tests_8cpp_xhtml_a88d84cc49602ca19491dea9c998035fe"><div class="ttname"><a href="_cl_layer_tests_8cpp.xhtml#a88d84cc49602ca19491dea9c998035fe">true</a></div><div class="ttdeci">DataLayout::NCHW DataLayout::NCHW DataLayout::NHWC DataLayout::NHWC true</div><div class="ttdef"><b>Definition:</b> <a href="_cl_layer_tests_8cpp_source.xhtml#l00212">ClLayerTests.cpp:212</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_637c692f14729569dd2eac0c18e2a54a.xhtml">profiling</a></li><li class="navelem"><a class="el" href="dir_6b1198f6e738611120ec65b09506d2f8.xhtml">test</a></li><li class="navelem"><a class="el" href="_profiling_connection_dump_to_file_decorator_tests_8cpp.xhtml">ProfilingConnectionDumpToFileDecoratorTests.cpp</a></li>
    <li class="footer">Generated on Fri Mar 19 2021 15:26:05 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
