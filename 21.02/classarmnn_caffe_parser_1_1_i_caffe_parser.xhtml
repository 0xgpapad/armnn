<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: ICaffeParser Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classarmnn_caffe_parser_1_1_i_caffe_parser-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ICaffeParser Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_i_caffe_parser_8hpp_source.xhtml">ICaffeParser.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser_1_1_caffe_parser_impl.xhtml">CaffeParserImpl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:add49602ee9cd2bd16c1c4ccd25555d8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#add49602ee9cd2bd16c1c4ccd25555d8e">CreateNetworkFromTextFile</a> (const char *graphFile, const std::map&lt; std::string, <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &gt; &amp;inputShapes, const std::vector&lt; std::string &gt; &amp;requestedOutputs)</td></tr>
<tr class="memdesc:add49602ee9cd2bd16c1c4ccd25555d8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the network from a protobuf text file on the disk.  <a href="#add49602ee9cd2bd16c1c4ccd25555d8e">More...</a><br /></td></tr>
<tr class="separator:add49602ee9cd2bd16c1c4ccd25555d8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56e7dd134fad3b70cb926b447fe2d16e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#a56e7dd134fad3b70cb926b447fe2d16e">CreateNetworkFromBinaryFile</a> (const char *graphFile, const std::map&lt; std::string, <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &gt; &amp;inputShapes, const std::vector&lt; std::string &gt; &amp;requestedOutputs)</td></tr>
<tr class="memdesc:a56e7dd134fad3b70cb926b447fe2d16e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the network from a protobuf binary file on the disk.  <a href="#a56e7dd134fad3b70cb926b447fe2d16e">More...</a><br /></td></tr>
<tr class="separator:a56e7dd134fad3b70cb926b447fe2d16e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5448fd503a576d279c71aa8340e84b7f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#a5448fd503a576d279c71aa8340e84b7f">CreateNetworkFromString</a> (const char *protoText, const std::map&lt; std::string, <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &gt; &amp;inputShapes, const std::vector&lt; std::string &gt; &amp;requestedOutputs)</td></tr>
<tr class="memdesc:a5448fd503a576d279c71aa8340e84b7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the network directly from protobuf text in a string. Useful for debugging/testin.g.  <a href="#a5448fd503a576d279c71aa8340e84b7f">More...</a><br /></td></tr>
<tr class="separator:a5448fd503a576d279c71aa8340e84b7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b053a6c449d0814cc831c916c126668"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a280670a263dc4fd40491f6d0a2737f44">BindingPointInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#a8b053a6c449d0814cc831c916c126668">GetNetworkInputBindingInfo</a> (const std::string &amp;name) const</td></tr>
<tr class="memdesc:a8b053a6c449d0814cc831c916c126668"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve binding info (layer id and tensor info) for the network input identified by the given layer name.  <a href="#a8b053a6c449d0814cc831c916c126668">More...</a><br /></td></tr>
<tr class="separator:a8b053a6c449d0814cc831c916c126668"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b1fdcb1985af12dd1848a9ffa5d3271"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a280670a263dc4fd40491f6d0a2737f44">BindingPointInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#a4b1fdcb1985af12dd1848a9ffa5d3271">GetNetworkOutputBindingInfo</a> (const std::string &amp;name) const</td></tr>
<tr class="memdesc:a4b1fdcb1985af12dd1848a9ffa5d3271"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve binding info (layer id and tensor info) for the network output identified by the given layer name.  <a href="#a4b1fdcb1985af12dd1848a9ffa5d3271">More...</a><br /></td></tr>
<tr class="separator:a4b1fdcb1985af12dd1848a9ffa5d3271"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a706b8481b6bd660dd3c3898fdf7a2993"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml">ICaffeParser</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#a706b8481b6bd660dd3c3898fdf7a2993">CreateRaw</a> ()</td></tr>
<tr class="separator:a706b8481b6bd660dd3c3898fdf7a2993"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd42446e41480b0cc9df7ce06af412e3"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearmnn_caffe_parser.xhtml#a33c76910f1980ffaa41c22e0151cce2a">ICaffeParserPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#abd42446e41480b0cc9df7ce06af412e3">Create</a> ()</td></tr>
<tr class="separator:abd42446e41480b0cc9df7ce06af412e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e8137c09390352d2f8b420d147d3b2e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#a5e8137c09390352d2f8b420d147d3b2e">Destroy</a> (<a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml">ICaffeParser</a> *parser)</td></tr>
<tr class="separator:a5e8137c09390352d2f8b420d147d3b2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a52f87d1c851ac6194163d99bcb6b38ea"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#a52f87d1c851ac6194163d99bcb6b38ea">CaffeParser</a></td></tr>
<tr class="separator:a52f87d1c851ac6194163d99bcb6b38ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b7d7016d0fbaef93d7578e0ae131e83"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#a9b7d7016d0fbaef93d7578e0ae131e83">RecordByRecordCaffeParser</a></td></tr>
<tr class="separator:a9b7d7016d0fbaef93d7578e0ae131e83"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_i_caffe_parser_8hpp_source.xhtml#l00024">24</a> of file <a class="el" href="_i_caffe_parser_8hpp_source.xhtml">ICaffeParser.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="abd42446e41480b0cc9df7ce06af412e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd42446e41480b0cc9df7ce06af412e3">&#9670;&nbsp;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn_caffe_parser.xhtml#a33c76910f1980ffaa41c22e0151cce2a">ICaffeParserPtr</a> Create </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_caffe_parser_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="_caffe_parser_8cpp_source.xhtml">CaffeParser.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_test_inputs_8cpp_source.xhtml#l00020">BOOST_AUTO_TEST_CASE()</a>, and <a class="el" href="_multiple_networks_cifar10_8cpp_source.xhtml#l00026">main()</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn_caffe_parser.xhtml#a33c76910f1980ffaa41c22e0151cce2a">ICaffeParserPtr</a>(<a class="code" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#a706b8481b6bd660dd3c3898fdf7a2993">CreateRaw</a>(), &amp;<a class="code" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#a5e8137c09390352d2f8b420d147d3b2e">ICaffeParser::Destroy</a>);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div><div class="ttc" id="classarmnn_caffe_parser_1_1_i_caffe_parser_xhtml_a5e8137c09390352d2f8b420d147d3b2e"><div class="ttname"><a href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#a5e8137c09390352d2f8b420d147d3b2e">armnnCaffeParser::ICaffeParser::Destroy</a></div><div class="ttdeci">static void Destroy(ICaffeParser *parser)</div><div class="ttdef"><b>Definition:</b> <a href="_caffe_parser_8cpp_source.xhtml#l00080">CaffeParser.cpp:80</a></div></div>
<div class="ttc" id="namespacearmnn_caffe_parser_xhtml_a33c76910f1980ffaa41c22e0151cce2a"><div class="ttname"><a href="namespacearmnn_caffe_parser.xhtml#a33c76910f1980ffaa41c22e0151cce2a">armnnCaffeParser::ICaffeParserPtr</a></div><div class="ttdeci">std::unique_ptr&lt; ICaffeParser, void(*)(ICaffeParser *parser)&gt; ICaffeParserPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_caffe_parser_8hpp_source.xhtml#l00022">ICaffeParser.hpp:22</a></div></div>
<div class="ttc" id="classarmnn_caffe_parser_1_1_i_caffe_parser_xhtml_a706b8481b6bd660dd3c3898fdf7a2993"><div class="ttname"><a href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml#a706b8481b6bd660dd3c3898fdf7a2993">armnnCaffeParser::ICaffeParser::CreateRaw</a></div><div class="ttdeci">static ICaffeParser * CreateRaw()</div><div class="ttdef"><b>Definition:</b> <a href="_caffe_parser_8cpp_source.xhtml#l00070">CaffeParser.cpp:70</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a56e7dd134fad3b70cb926b447fe2d16e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56e7dd134fad3b70cb926b447fe2d16e">&#9670;&nbsp;</a></span>CreateNetworkFromBinaryFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromBinaryFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>graphFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::map&lt; std::string, <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>inputShapes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>requestedOutputs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create the network from a protobuf binary file on the disk. </p>

<p class="definition">Definition at line <a class="el" href="_caffe_parser_8cpp_source.xhtml#l00093">93</a> of file <a class="el" href="_caffe_parser_8cpp_source.xhtml">CaffeParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">return</span> pCaffeParserImpl-&gt;CreateNetworkFromBinaryFile(graphFile, inputShapes,requestedOutputs);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a5448fd503a576d279c71aa8340e84b7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5448fd503a576d279c71aa8340e84b7f">&#9670;&nbsp;</a></span>CreateNetworkFromString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromString </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>protoText</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::map&lt; std::string, <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>inputShapes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>requestedOutputs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create the network directly from protobuf text in a string. Useful for debugging/testin.g. </p>

<p class="definition">Definition at line <a class="el" href="_caffe_parser_8cpp_source.xhtml#l00101">101</a> of file <a class="el" href="_caffe_parser_8cpp_source.xhtml">CaffeParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">return</span> pCaffeParserImpl-&gt;CreateNetworkFromString(protoText, inputShapes, requestedOutputs);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="add49602ee9cd2bd16c1c4ccd25555d8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add49602ee9cd2bd16c1c4ccd25555d8e">&#9670;&nbsp;</a></span>CreateNetworkFromTextFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromTextFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>graphFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::map&lt; std::string, <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>inputShapes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>requestedOutputs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create the network from a protobuf text file on the disk. </p>

<p class="definition">Definition at line <a class="el" href="_caffe_parser_8cpp_source.xhtml#l00085">85</a> of file <a class="el" href="_caffe_parser_8cpp_source.xhtml">CaffeParser.cpp</a>.</p>

<p class="reference">References <a class="el" href="_caffe_parser_8cpp_source.xhtml#l00085">ICaffeParser::CreateNetworkFromTextFile()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_caffe_parser_8cpp_source.xhtml#l00085">ICaffeParser::CreateNetworkFromTextFile()</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">return</span> pCaffeParserImpl-&gt;CreateNetworkFromTextFile(graphFile, inputShapes, requestedOutputs);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a706b8481b6bd660dd3c3898fdf7a2993"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a706b8481b6bd660dd3c3898fdf7a2993">&#9670;&nbsp;</a></span>CreateRaw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml">ICaffeParser</a> * CreateRaw </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_caffe_parser_8cpp_source.xhtml#l00070">70</a> of file <a class="el" href="_caffe_parser_8cpp_source.xhtml">CaffeParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> ICaffeParser();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a5e8137c09390352d2f8b420d147d3b2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e8137c09390352d2f8b420d147d3b2e">&#9670;&nbsp;</a></span>Destroy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml">ICaffeParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_caffe_parser_8cpp_source.xhtml#l00080">80</a> of file <a class="el" href="_caffe_parser_8cpp_source.xhtml">CaffeParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">delete</span> parser;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8b053a6c449d0814cc831c916c126668"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b053a6c449d0814cc831c916c126668">&#9670;&nbsp;</a></span>GetNetworkInputBindingInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a280670a263dc4fd40491f6d0a2737f44">BindingPointInfo</a> GetNetworkInputBindingInfo </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieve binding info (layer id and tensor info) for the network input identified by the given layer name. </p>

<p class="definition">Definition at line <a class="el" href="_caffe_parser_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="_caffe_parser_8cpp_source.xhtml">CaffeParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;{</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> pCaffeParserImpl-&gt;GetNetworkInputBindingInfo(name);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a4b1fdcb1985af12dd1848a9ffa5d3271"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b1fdcb1985af12dd1848a9ffa5d3271">&#9670;&nbsp;</a></span>GetNetworkOutputBindingInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a280670a263dc4fd40491f6d0a2737f44">BindingPointInfo</a> GetNetworkOutputBindingInfo </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieve binding info (layer id and tensor info) for the network output identified by the given layer name. </p>

<p class="definition">Definition at line <a class="el" href="_caffe_parser_8cpp_source.xhtml#l00114">114</a> of file <a class="el" href="_caffe_parser_8cpp_source.xhtml">CaffeParser.cpp</a>.</p>

<p class="reference">References <a class="el" href="_exceptions_8hpp_source.xhtml#l00197">CHECK_LOCATION</a>, and <a class="el" href="_numeric_cast_8hpp_source.xhtml#l00035">armnn::numeric_cast()</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> pCaffeParserImpl-&gt;GetNetworkOutputBindingInfo(name);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a52f87d1c851ac6194163d99bcb6b38ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52f87d1c851ac6194163d99bcb6b38ea">&#9670;&nbsp;</a></span>CaffeParser</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="classarmnn_caffe_parser_1_1_caffe_parser.xhtml">CaffeParser</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_caffe_parser_8hpp_source.xhtml#l00056">56</a> of file <a class="el" href="_i_caffe_parser_8hpp_source.xhtml">ICaffeParser.hpp</a>.</p>

</div>
</div>
<a id="a9b7d7016d0fbaef93d7578e0ae131e83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b7d7016d0fbaef93d7578e0ae131e83">&#9670;&nbsp;</a></span>RecordByRecordCaffeParser</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="classarmnn_caffe_parser_1_1_record_by_record_caffe_parser.xhtml">RecordByRecordCaffeParser</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_caffe_parser_8hpp_source.xhtml#l00057">57</a> of file <a class="el" href="_i_caffe_parser_8hpp_source.xhtml">ICaffeParser.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnnCaffeParser/<a class="el" href="_i_caffe_parser_8hpp_source.xhtml">ICaffeParser.hpp</a></li>
<li>src/armnnCaffeParser/<a class="el" href="_caffe_parser_8cpp_source.xhtml">CaffeParser.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn_caffe_parser.xhtml">armnnCaffeParser</a></li><li class="navelem"><a class="el" href="classarmnn_caffe_parser_1_1_i_caffe_parser.xhtml">ICaffeParser</a></li>
    <li class="footer">Generated on Fri Mar 19 2021 15:26:14 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
