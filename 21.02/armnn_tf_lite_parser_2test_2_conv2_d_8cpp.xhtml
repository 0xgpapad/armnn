<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnnTfLiteParser/test/Conv2D.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('armnn_tf_lite_parser_2test_2_conv2_d_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Conv2D.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;boost/test/unit_test.hpp&gt;</code><br />
<code>#include &quot;<a class="el" href="_parser_flatbuffers_fixture_8hpp_source.xhtml">ParserFlatbuffersFixture.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_tf_lite_parser_8hpp_source.xhtml">../TfLiteParser.hpp</a>&quot;</code><br />
<code>#include &lt;sstream&gt;</code><br />
</div>
<p><a href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:afcc317a537dfa8ab47071d5c464bad43"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp.xhtml#afcc317a537dfa8ab47071d5c464bad43">BOOST_FIXTURE_TEST_CASE</a> (ParseSimpleConv2D, SimpleConv2DFixture)</td></tr>
<tr class="separator:afcc317a537dfa8ab47071d5c464bad43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f8274795936acc6692b9e18a2d7f7a0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp.xhtml#a1f8274795936acc6692b9e18a2d7f7a0">BOOST_FIXTURE_TEST_CASE</a> (ParseConv2DWithBias, SimpleConv2DWithBiasesFixture)</td></tr>
<tr class="separator:a1f8274795936acc6692b9e18a2d7f7a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a481135481b21278d387ae784ef850fea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp.xhtml#a481135481b21278d387ae784ef850fea">BOOST_FIXTURE_TEST_CASE</a> (ParseDynamicConv2DWithBias, DynamicConv2DWithBiasesFixture)</td></tr>
<tr class="separator:a481135481b21278d387ae784ef850fea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37807b86838def29aa4a342b5ee11a1e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp.xhtml#a37807b86838def29aa4a342b5ee11a1e">BOOST_FIXTURE_TEST_CASE</a> (ParseConv2D_112x112_out, Conv2DShapeTestFixture)</td></tr>
<tr class="separator:a37807b86838def29aa4a342b5ee11a1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeae31b1eb962892a52153424119c87e9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp.xhtml#aeae31b1eb962892a52153424119c87e9">BOOST_FIXTURE_TEST_CASE</a> (ParseConv2DAndReluWithBias, ReluConv2DWithBiasesFixture)</td></tr>
<tr class="separator:aeae31b1eb962892a52153424119c87e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16517509d65fc4291eb40bcc285c03fd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp.xhtml#a16517509d65fc4291eb40bcc285c03fd">BOOST_FIXTURE_TEST_CASE</a> (ParseConv2DAndRelu6WithBias, Relu6Conv2DWithBiasesFixture)</td></tr>
<tr class="separator:a16517509d65fc4291eb40bcc285c03fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="afcc317a537dfa8ab47071d5c464bad43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcc317a537dfa8ab47071d5c464bad43">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">ParseSimpleConv2D&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SimpleConv2DFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml#l00090">90</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml">Conv2D.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    RunTest&lt;4, armnn::DataType::QAsymmU8&gt;(</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        0,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            1, 2, 3,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            4, 5, 6,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            7, 8, 9,</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        },</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="comment">// because of the output scaling we need to take half of the values</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            (1*2 + 2*1 + 3*0 +</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;             4*6 + 5*2 + 6*1 +</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;             7*4 + 8*1 + 9*2) /2</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        });</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1f8274795936acc6692b9e18a2d7f7a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f8274795936acc6692b9e18a2d7f7a0">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">ParseConv2DWithBias&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SimpleConv2DWithBiasesFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml#l00220">220</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml">Conv2D.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;{</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    RunTest&lt;4, armnn::DataType::QAsymmU8&gt;(</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        0,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        {</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            1, 2,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            3, 4,</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        },</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="comment">// because of the output scaling we need to take half of the values</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            (1*2 + 2*1 + 3*0 + 4*6 + 10)/2,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            (2*2 + 0*1 + 4*0 + 0*6 + 10)/2,</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            (3*2 + 4*1 + 0*0 + 0*6 + 10)/2,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            (4*2 + 0*1 + 0*0 + 0*6 + 10)/2</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        });</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a481135481b21278d387ae784ef850fea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a481135481b21278d387ae784ef850fea">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">ParseDynamicConv2DWithBias&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DynamicConv2DWithBiasesFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml#l00250">250</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml">Conv2D.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>.</p>
<div class="fragment"><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;{</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    RunTest&lt;4,</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>,</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        armnn::DataType::QAsymmU8&gt;(0,</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                                   { { <span class="stringliteral">&quot;inputTensor&quot;</span>, { 1, 2, 3, 4, } } },</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                                   { { <span class="stringliteral">&quot;outputTensor&quot;</span>, {   (1*2 + 2*1 + 3*0 + 4*6 + 10)/2,</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                                           (2*2 + 0*1 + 4*0 + 0*6 + 10)/2,</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                                                           (3*2 + 4*1 + 0*0 + 0*6 + 10)/2,</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                                                           (4*2 + 0*1 + 0*0 + 0*6 + 10)/2} } },</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                   <span class="keyword">true</span>);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a37807b86838def29aa4a342b5ee11a1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37807b86838def29aa4a342b5ee11a1e">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">ParseConv2D_112x112_out&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Conv2DShapeTestFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml#l00291">291</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml">Conv2D.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;{</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aeae31b1eb962892a52153424119c87e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeae31b1eb962892a52153424119c87e9">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">ParseConv2DAndReluWithBias&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ReluConv2DWithBiasesFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml#l00313">313</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml">Conv2D.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;{</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    uint8_t bias = 16;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    uint8_t outZero = 20;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    uint8_t fz = 4; <span class="comment">// filter zero point</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    RunTest&lt;4, armnn::DataType::QAsymmU8&gt;(</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        0,</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        {</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            1, 2,</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            4, 8,</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        },</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="comment">// factors to consider:</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="comment">// - the filter zero point is non zero, hence the (x-fz)</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="comment">// - the output scale is 2 hence the /2</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="comment">// - output zero point is non zero, hence the +outZero</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="comment">// - RELU cuts negative values and then we add the output zero point</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        {</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            std::max(outZero, static_cast&lt;uint8_t&gt;((1*(2-fz) + 2*(1-fz) + 4*(0-fz) + 8*(6-fz) + bias)/2 + outZero)),</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            std::max(outZero, static_cast&lt;uint8_t&gt;((2*(2-fz) + 0*(1-fz) + 8*(0-fz) + 0*(6-fz) + bias)/2 + outZero)),</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            std::max(outZero, static_cast&lt;uint8_t&gt;((4*(2-fz) + 8*(1-fz) + 0*(0-fz) + 0*(6-fz) + bias)/2 + outZero)),</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            std::max(outZero, static_cast&lt;uint8_t&gt;((8*(2-fz) + 0*(1-fz) + 0*(0-fz) + 0*(6-fz) + bias)/2 + outZero))</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        });</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a16517509d65fc4291eb40bcc285c03fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16517509d65fc4291eb40bcc285c03fd">&#9670;&nbsp;</a></span>BOOST_FIXTURE_TEST_CASE() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOST_FIXTURE_TEST_CASE </td>
          <td>(</td>
          <td class="paramtype">ParseConv2DAndRelu6WithBias&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Relu6Conv2DWithBiasesFixture&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml#l00356">356</a> of file <a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp_source.xhtml">Conv2D.cpp</a>.</p>

<p class="reference">References <a class="el" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END()</a>.</p>
<div class="fragment"><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;{</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    uint8_t relu6Min = 6 / 2; <span class="comment">// divide by output scale</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    RunTest&lt;4, armnn::DataType::QAsymmU8&gt;(</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        0,</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        {</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            1, 2,</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            4, 1,</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        },</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <span class="comment">// factors to consider:</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="comment">// - the output scale is 2 hence the /2</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="comment">// - RELU6 cuts output values at +6</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        {</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            std::min(relu6Min, static_cast&lt;uint8_t&gt;((1*2 + 2*1 + 4*0 + 1*6)/2)),</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            std::min(relu6Min, static_cast&lt;uint8_t&gt;((2*2 + 0*1 + 1*0 + 0*6)/2)),</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            std::min(relu6Min, static_cast&lt;uint8_t&gt;((4*2 + 1*1 + 0*0 + 0*6)/2)),</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            std::min(relu6Min, static_cast&lt;uint8_t&gt;((1*2 + 0*1 + 0*0 + 0*6)/2))</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        });</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_510324e450b9df55f9aac2d01fae83d8.xhtml">armnnTfLiteParser</a></li><li class="navelem"><a class="el" href="dir_6d8d07609c57029a35488d2120e28fbd.xhtml">test</a></li><li class="navelem"><a class="el" href="armnn_tf_lite_parser_2test_2_conv2_d_8cpp.xhtml">Conv2D.cpp</a></li>
    <li class="footer">Generated on Thu Feb 25 2021 17:27:54 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
