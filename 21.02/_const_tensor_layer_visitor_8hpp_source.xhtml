<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/ConstTensorLayerVisitor.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_const_tensor_layer_visitor_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ConstTensorLayerVisitor.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_const_tensor_layer_visitor_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_layer_visitor_8hpp.xhtml">TestLayerVisitor.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_descriptors_8hpp.xhtml">armnn/Descriptors.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_lstm_params_8hpp.xhtml">armnn/LstmParams.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_quantized_lstm_params_8hpp.xhtml">armnn/QuantizedLstmParams.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml">   15</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml">TestConvolution2dLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#aaf33927bcb93fa77d08e4bd547c481d9">   18</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#aaf33927bcb93fa77d08e4bd547c481d9">TestConvolution2dLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp; convolution2dDescriptor,</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        , m_Descriptor(convolution2dDescriptor)</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        , m_Weights(weights)</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        , m_Biases(biases)</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    {}</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#a4695ae76f4755027c44036cb10d8705c">   28</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#a4695ae76f4755027c44036cb10d8705c">~TestConvolution2dLayerVisitor</a>() {}</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac2f379ba77b06095e0c024e232ec1fd4">   30</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac2f379ba77b06095e0c024e232ec1fd4">VisitConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp; convolution2dDescriptor,</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)<span class="keyword"> override</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(convolution2dDescriptor);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Weights, weights);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a2d389b5affe2059991cfd9184b8e0b47">CheckOptionalConstTensors</a>(m_Biases, biases);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp; convolution2dDescriptor);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> m_Descriptor;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Weights;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a> m_Biases;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;};</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml">   52</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml">TestDepthwiseConvolution2dLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a4b830ea7321e27826a2d2c5c3e9e0105">   55</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a4b830ea7321e27826a2d2c5c3e9e0105">TestDepthwiseConvolution2dLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                                    <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        , m_Descriptor(descriptor)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        , m_Weights(weights)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        , m_Biases(biases)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {}</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a3d4d903af45c0c69dfc39d4f193824a0">   65</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a3d4d903af45c0c69dfc39d4f193824a0">~TestDepthwiseConvolution2dLayerVisitor</a>() {}</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#ad68842514df44ee37485f2c1d0ef5b29">   67</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#ad68842514df44ee37485f2c1d0ef5b29">VisitDepthwiseConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp; convolution2dDescriptor,</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)<span class="keyword"> override</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(convolution2dDescriptor);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Weights, weights);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a2d389b5affe2059991cfd9184b8e0b47">CheckOptionalConstTensors</a>(m_Biases, biases);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp; convolution2dDescriptor);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> m_Descriptor;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Weights;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a> m_Biases;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;};</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml">   89</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml">TestFullyConnectedLayerVistor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#aaae8730f2764c51d1dc27de5326f6aed">   92</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#aaae8730f2764c51d1dc27de5326f6aed">TestFullyConnectedLayerVistor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a> biases,</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        , m_Descriptor(descriptor)</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        , m_Weights(weights)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        , m_Biases(biases)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    {}</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#a02ff0e9c7746d68985fae379fd6f1dfa">  102</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#a02ff0e9c7746d68985fae379fd6f1dfa">~TestFullyConnectedLayerVistor</a>() {}</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#ad40e29d0b682d39b260cea5966f591ac">  104</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#ad40e29d0b682d39b260cea5966f591ac">VisitFullyConnectedLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp; fullyConnectedDescriptor,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)<span class="keyword"> override</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(fullyConnectedDescriptor);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Weights, weights);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a2d389b5affe2059991cfd9184b8e0b47">CheckOptionalConstTensors</a>(m_Biases, biases);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp; descriptor);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a> m_Descriptor;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Weights;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a> m_Biases;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;};</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml">  125</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml">TestBatchNormalizationLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;{</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml#ac22fdba4058911b3b322e7382203973a">  128</a></span>&#160;    <a class="code" href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml#ac22fdba4058911b3b322e7382203973a">TestBatchNormalizationLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; mean,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; variance,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; beta,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; gamma,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                       <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        , m_Descriptor(descriptor)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        , m_Mean(mean)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        , m_Variance(variance)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        , m_Beta(beta)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        , m_Gamma(gamma)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    {}</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml#a66833912b4e3a62df3111ca9325a2097">  142</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml#a66833912b4e3a62df3111ca9325a2097">VisitBatchNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; mean,</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; variance,</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; beta,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; gamma,</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                                      <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)<span class="keyword"> override</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(descriptor);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Mean, mean);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Variance, variance);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Beta, beta);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Gamma, gamma);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    }</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a>&amp; descriptor);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a> m_Descriptor;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Mean;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Variance;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Beta;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Gamma;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;};</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_constant_layer_visitor.xhtml">  170</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_constant_layer_visitor.xhtml">TestConstantLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;{</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_constant_layer_visitor.xhtml#acdb9da3b37ea3265b7ffdf1b5ff3b342">  173</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_constant_layer_visitor.xhtml#acdb9da3b37ea3265b7ffdf1b5ff3b342">TestConstantLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; input,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                      <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        , m_Input(input)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    {}</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_constant_layer_visitor.xhtml#a8fc14cd9ff3e7d4581bbd0cf3d91014f">  179</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_constant_layer_visitor.xhtml#a8fc14cd9ff3e7d4581bbd0cf3d91014f">VisitConstantLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; input,</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Input, input);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    }</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Input;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;};</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_lstm_layer_visitor.xhtml">  192</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_lstm_layer_visitor.xhtml">TestLstmLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_lstm_layer_visitor.xhtml#a8dc5d172f9d6f4740aceddf9041282e2">  195</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_lstm_layer_visitor.xhtml#a8dc5d172f9d6f4740aceddf9041282e2">TestLstmLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        , m_Descriptor(descriptor)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        , m_InputParams(params)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    {}</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_lstm_layer_visitor.xhtml#a17f68e9e232fe06a015da85ff9e147a6">  203</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_lstm_layer_visitor.xhtml#a17f68e9e232fe06a015da85ff9e147a6">VisitLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(descriptor);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        CheckInputParameters(params);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    }</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp; descriptor);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordtype">void</span> CheckInputParameters(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; inputParams);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordtype">void</span> CheckConstTensorPtrs(<span class="keyword">const</span> std::string&amp; name, <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>* expected, <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>* actual);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> m_Descriptor;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a> m_InputParams;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;};</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml">  224</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml">TestQLstmLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;{</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml#a1c9f427927208da2660adcfd3cd67aed">  227</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml#a1c9f427927208da2660adcfd3cd67aed">TestQLstmLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            , m_Descriptor(descriptor)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            , m_InputParams(params)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    {}</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml#a36602061e420666a085b6ffbcd23ad2f">  235</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml#a36602061e420666a085b6ffbcd23ad2f">VisitQLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    {</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(descriptor);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        CheckInputParameters(params);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    }</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a>&amp; descriptor);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keywordtype">void</span> CheckInputParameters(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; inputParams);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordtype">void</span> CheckConstTensorPtrs(<span class="keyword">const</span> std::string&amp; name, <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>* expected, <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>* actual);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a> m_Descriptor;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a> m_InputParams;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;};</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml">  257</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml">TestQuantizedLstmLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;{</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#a1d72b0f4a1516fc85b2c04789d562392">  260</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#a1d72b0f4a1516fc85b2c04789d562392">TestQuantizedLstmLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a>&amp; params,</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        , m_InputParams(params)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    {}</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#ad5e5c9b46d43895fad6a14529494ac32">  266</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#ad5e5c9b46d43895fad6a14529494ac32">VisitQuantizedLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a>&amp; params,</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    {</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        CheckInputParameters(params);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    }</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordtype">void</span> CheckInputParameters(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a>&amp; inputParams);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keywordtype">void</span> CheckConstTensorPtrs(<span class="keyword">const</span> std::string&amp; name, <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>* expected, <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>* actual);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a> m_InputParams;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;};</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml">armnn::TestLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8hpp_source.xhtml#l00013">TestLayerVisitor.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml_a50d9ed2d05fac25795824c880f0eee6b"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">armnn::TestLayerVisitor::CheckLayerName</a></div><div class="ttdeci">void CheckLayerName(const char *name)</div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8cpp_source.xhtml#l00012">TestLayerVisitor.cpp:12</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_q_lstm_layer_visitor_xhtml_a36602061e420666a085b6ffbcd23ad2f"><div class="ttname"><a href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml#a36602061e420666a085b6ffbcd23ad2f">armnn::TestQLstmLayerVisitor::VisitQLstmLayer</a></div><div class="ttdeci">void VisitQLstmLayer(const IConnectableLayer *layer, const QLstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdoc">Function a QLstm layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00235">ConstTensorLayerVisitor.hpp:235</a></div></div>
<div class="ttc" id="_test_layer_visitor_8hpp_xhtml"><div class="ttname"><a href="_test_layer_visitor_8hpp.xhtml">TestLayerVisitor.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_fully_connected_layer_vistor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml">armnn::TestFullyConnectedLayerVistor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00089">ConstTensorLayerVisitor.hpp:89</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_quantized_lstm_layer_visitor_xhtml_ad5e5c9b46d43895fad6a14529494ac32"><div class="ttname"><a href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#ad5e5c9b46d43895fad6a14529494ac32">armnn::TestQuantizedLstmLayerVisitor::VisitQuantizedLstmLayer</a></div><div class="ttdeci">void VisitQuantizedLstmLayer(const IConnectableLayer *layer, const QuantizedLstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdoc">Function a QuantizedLstm layer should call back to when its Accept(ILayerVisitor&amp;) function is invoke...</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00266">ConstTensorLayerVisitor.hpp:266</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_batch_normalization_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml">armnn::TestBatchNormalizationLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00125">ConstTensorLayerVisitor.hpp:125</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00062">INetwork.hpp:62</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml">armnn::TestDepthwiseConvolution2dLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00052">ConstTensorLayerVisitor.hpp:52</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00408">Descriptors.hpp:408</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml_a3fb243351836fe2feebd36e7e3869154"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">armnn::TestLayerVisitor::CheckLayerPointer</a></div><div class="ttdeci">void CheckLayerPointer(const IConnectableLayer *layer)</div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8cpp_source.xhtml#l00028">TestLayerVisitor.cpp:28</a></div></div>
<div class="ttc" id="_quantized_lstm_params_8hpp_xhtml"><div class="ttname"><a href="_quantized_lstm_params_8hpp.xhtml">QuantizedLstmParams.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_lstm_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_lstm_layer_visitor.xhtml">armnn::TestLstmLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00192">ConstTensorLayerVisitor.hpp:192</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__software__tools_8dox_source.xhtml#l00006">01_00_software_tools.dox:6</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml">armnn::QuantizedLstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00013">QuantizedLstmParams.hpp:13</a></div></div>
<div class="ttc" id="_lstm_params_8hpp_xhtml"><div class="ttname"><a href="_lstm_params_8hpp.xhtml">LstmParams.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor_xhtml_a4b830ea7321e27826a2d2c5c3e9e0105"><div class="ttname"><a href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a4b830ea7321e27826a2d2c5c3e9e0105">armnn::TestDepthwiseConvolution2dLayerVisitor::TestDepthwiseConvolution2dLayerVisitor</a></div><div class="ttdeci">TestDepthwiseConvolution2dLayerVisitor(const DepthwiseConvolution2dDescriptor &amp;descriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00055">ConstTensorLayerVisitor.hpp:55</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml_ab49c9a185af94e39ae9cd81aa8ec926c"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">armnn::TestLayerVisitor::CheckConstTensors</a></div><div class="ttdeci">void CheckConstTensors(const ConstTensor &amp;expected, const ConstTensor &amp;actual)</div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8cpp_source.xhtml#l00033">TestLayerVisitor.cpp:33</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_fully_connected_layer_vistor_xhtml_aaae8730f2764c51d1dc27de5326f6aed"><div class="ttname"><a href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#aaae8730f2764c51d1dc27de5326f6aed">armnn::TestFullyConnectedLayerVistor::TestFullyConnectedLayerVistor</a></div><div class="ttdeci">TestFullyConnectedLayerVistor(const FullyConnectedDescriptor &amp;descriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; biases, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00092">ConstTensorLayerVisitor.hpp:92</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_batch_normalization_layer_visitor_xhtml_ac22fdba4058911b3b322e7382203973a"><div class="ttname"><a href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml#ac22fdba4058911b3b322e7382203973a">armnn::TestBatchNormalizationLayerVisitor::TestBatchNormalizationLayerVisitor</a></div><div class="ttdeci">TestBatchNormalizationLayerVisitor(const BatchNormalizationDescriptor &amp;descriptor, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00128">ConstTensorLayerVisitor.hpp:128</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a></div><div class="ttdoc">An LstmDescriptor for the LstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00911">Descriptors.hpp:911</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00389">Descriptors.hpp:389</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00314">Tensor.hpp:314</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml">armnn::LstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00013">LstmParams.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_convolution2d_layer_visitor_xhtml_aaf33927bcb93fa77d08e4bd547c481d9"><div class="ttname"><a href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#aaf33927bcb93fa77d08e4bd547c481d9">armnn::TestConvolution2dLayerVisitor::TestConvolution2dLayerVisitor</a></div><div class="ttdeci">TestConvolution2dLayerVisitor(const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00018">ConstTensorLayerVisitor.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_constant_layer_visitor_xhtml_acdb9da3b37ea3265b7ffdf1b5ff3b342"><div class="ttname"><a href="classarmnn_1_1_test_constant_layer_visitor.xhtml#acdb9da3b37ea3265b7ffdf1b5ff3b342">armnn::TestConstantLayerVisitor::TestConstantLayerVisitor</a></div><div class="ttdeci">TestConstantLayerVisitor(const ConstTensor &amp;input, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00173">ConstTensorLayerVisitor.hpp:173</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_batch_normalization_layer_visitor_xhtml_a66833912b4e3a62df3111ca9325a2097"><div class="ttname"><a href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml#a66833912b4e3a62df3111ca9325a2097">armnn::TestBatchNormalizationLayerVisitor::VisitBatchNormalizationLayer</a></div><div class="ttdeci">void VisitBatchNormalizationLayer(const IConnectableLayer *layer, const BatchNormalizationDescriptor &amp;descriptor, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr) override</div><div class="ttdoc">Function that a batch normalization layer should call back to when its Accept(ILayerVisitor&amp;) functio...</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00142">ConstTensorLayerVisitor.hpp:142</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_convolution2d_layer_visitor_xhtml_ac8b078bb166c52b45f04cae3e74557ad"><div class="ttname"><a href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">armnn::TestConvolution2dLayerVisitor::CheckDescriptor</a></div><div class="ttdeci">void CheckDescriptor(const Convolution2dDescriptor &amp;convolution2dDescriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00014">ConstTensorLayerVisitor.cpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a></div><div class="ttdoc">A QLstmDescriptor for the QLstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01153">Descriptors.hpp:1153</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor_xhtml_ad68842514df44ee37485f2c1d0ef5b29"><div class="ttname"><a href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#ad68842514df44ee37485f2c1d0ef5b29">armnn::TestDepthwiseConvolution2dLayerVisitor::VisitDepthwiseConvolution2dLayer</a></div><div class="ttdeci">void VisitDepthwiseConvolution2dLayer(const IConnectableLayer *layer, const DepthwiseConvolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</div><div class="ttdoc">Function that a 2D depthwise convolution layer with biases should call back to when its Accept(ILayer...</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00067">ConstTensorLayerVisitor.hpp:67</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_quantized_lstm_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml">armnn::TestQuantizedLstmLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00257">ConstTensorLayerVisitor.hpp:257</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_q_lstm_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml">armnn::TestQLstmLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00224">ConstTensorLayerVisitor.hpp:224</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_constant_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_constant_layer_visitor.xhtml">armnn::TestConstantLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00170">ConstTensorLayerVisitor.hpp:170</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor_xhtml_a3d4d903af45c0c69dfc39d4f193824a0"><div class="ttname"><a href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a3d4d903af45c0c69dfc39d4f193824a0">armnn::TestDepthwiseConvolution2dLayerVisitor::~TestDepthwiseConvolution2dLayerVisitor</a></div><div class="ttdeci">virtual ~TestDepthwiseConvolution2dLayerVisitor()</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00065">ConstTensorLayerVisitor.hpp:65</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_lstm_layer_visitor_xhtml_a17f68e9e232fe06a015da85ff9e147a6"><div class="ttname"><a href="classarmnn_1_1_test_lstm_layer_visitor.xhtml#a17f68e9e232fe06a015da85ff9e147a6">armnn::TestLstmLayerVisitor::VisitLstmLayer</a></div><div class="ttdeci">void VisitLstmLayer(const IConnectableLayer *layer, const LstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdoc">Function an Lstm layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00203">ConstTensorLayerVisitor.hpp:203</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_convolution2d_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml">armnn::TestConvolution2dLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00015">ConstTensorLayerVisitor.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_fully_connected_layer_vistor_xhtml_a02ff0e9c7746d68985fae379fd6f1dfa"><div class="ttname"><a href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#a02ff0e9c7746d68985fae379fd6f1dfa">armnn::TestFullyConnectedLayerVistor::~TestFullyConnectedLayerVistor</a></div><div class="ttdeci">virtual ~TestFullyConnectedLayerVistor()</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00102">ConstTensorLayerVisitor.hpp:102</a></div></div>
<div class="ttc" id="_descriptors_8hpp_xhtml"><div class="ttname"><a href="_descriptors_8hpp.xhtml">Descriptors.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_fully_connected_layer_vistor_xhtml_ad40e29d0b682d39b260cea5966f591ac"><div class="ttname"><a href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#ad40e29d0b682d39b260cea5966f591ac">armnn::TestFullyConnectedLayerVistor::VisitFullyConnectedLayer</a></div><div class="ttdeci">void VisitFullyConnectedLayer(const IConnectableLayer *layer, const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</div><div class="ttdoc">Function that a fully connected layer should call back to when its Accept(ILayerVisitor&amp;) function is...</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00104">ConstTensorLayerVisitor.hpp:104</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_lstm_layer_visitor_xhtml_a8dc5d172f9d6f4740aceddf9041282e2"><div class="ttname"><a href="classarmnn_1_1_test_lstm_layer_visitor.xhtml#a8dc5d172f9d6f4740aceddf9041282e2">armnn::TestLstmLayerVisitor::TestLstmLayerVisitor</a></div><div class="ttdeci">TestLstmLayerVisitor(const LstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00195">ConstTensorLayerVisitor.hpp:195</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_convolution2d_layer_visitor_xhtml_ac2f379ba77b06095e0c024e232ec1fd4"><div class="ttname"><a href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac2f379ba77b06095e0c024e232ec1fd4">armnn::TestConvolution2dLayerVisitor::VisitConvolution2dLayer</a></div><div class="ttdeci">void VisitConvolution2dLayer(const IConnectableLayer *layer, const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</div><div class="ttdoc">Function that a 2D convolution layer should call back to when its Accept(ILayerVisitor&amp;) function is ...</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00030">ConstTensorLayerVisitor.hpp:30</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_convolution2d_layer_visitor_xhtml_a4695ae76f4755027c44036cb10d8705c"><div class="ttname"><a href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#a4695ae76f4755027c44036cb10d8705c">armnn::TestConvolution2dLayerVisitor::~TestConvolution2dLayerVisitor</a></div><div class="ttdeci">virtual ~TestConvolution2dLayerVisitor()</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00028">ConstTensorLayerVisitor.hpp:28</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml_a2d389b5affe2059991cfd9184b8e0b47"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml#a2d389b5affe2059991cfd9184b8e0b47">armnn::TestLayerVisitor::CheckOptionalConstTensors</a></div><div class="ttdeci">void CheckOptionalConstTensors(const Optional&lt; ConstTensor &gt; &amp;expected, const Optional&lt; ConstTensor &gt; &amp;actual)</div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8cpp_source.xhtml#l00051">TestLayerVisitor.cpp:51</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_q_lstm_layer_visitor_xhtml_a1c9f427927208da2660adcfd3cd67aed"><div class="ttname"><a href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml#a1c9f427927208da2660adcfd3cd67aed">armnn::TestQLstmLayerVisitor::TestQLstmLayerVisitor</a></div><div class="ttdeci">TestQLstmLayerVisitor(const QLstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00227">ConstTensorLayerVisitor.hpp:227</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_quantized_lstm_layer_visitor_xhtml_a1d72b0f4a1516fc85b2c04789d562392"><div class="ttname"><a href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#a1d72b0f4a1516fc85b2c04789d562392">armnn::TestQuantizedLstmLayerVisitor::TestQuantizedLstmLayerVisitor</a></div><div class="ttdeci">TestQuantizedLstmLayerVisitor(const QuantizedLstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00260">ConstTensorLayerVisitor.hpp:260</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_constant_layer_visitor_xhtml_a8fc14cd9ff3e7d4581bbd0cf3d91014f"><div class="ttname"><a href="classarmnn_1_1_test_constant_layer_visitor.xhtml#a8fc14cd9ff3e7d4581bbd0cf3d91014f">armnn::TestConstantLayerVisitor::VisitConstantLayer</a></div><div class="ttdeci">void VisitConstantLayer(const IConnectableLayer *layer, const ConstTensor &amp;input, const char *name=nullptr)</div><div class="ttdoc">Function a layer with no inputs and a single output, which always corresponds to the passed in consta...</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00179">ConstTensorLayerVisitor.hpp:179</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00460">Descriptors.hpp:460</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00626">Descriptors.hpp:626</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_const_tensor_layer_visitor_8hpp.xhtml">ConstTensorLayerVisitor.hpp</a></li>
    <li class="footer">Generated on Thu Feb 25 2021 17:27:29 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
