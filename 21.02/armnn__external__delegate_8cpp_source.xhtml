<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: delegate/src/armnn_external_delegate.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('armnn__external__delegate_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">armnn_external_delegate.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="armnn__external__delegate_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2020 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="armnn__delegate_8hpp.xhtml">armnn_delegate.hpp</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_logging_8hpp.xhtml">armnn/Logging.hpp</a>&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;tensorflow/lite/minimal_logging.h&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="namespacetflite.xhtml">   11</a></span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacetflite.xhtml">tflite</a></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">/**</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * This file defines two symbols that need to be exported to use the TFLite external delegate provider. This is a plugin</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * that can be used for fast integration of delegates into benchmark tests and other tools. It allows loading of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * a dynamic delegate library at runtime.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * The external delegate also has Tensorflow Lite Python bindings. Therefore the dynamic external delegate</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * can be directly used with Tensorflow Lite Python APIs.</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * See tensorflow/lite/delegates/external for details or visit the tensorflow guide</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> * [here](https://www.tensorflow.org/lite/performance/implementing_delegate#option_2_leverage_external_delegate)</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="namespacetflite.xhtml#a50d961d3de1ccba630ccb3361fe3879d">   28</a></span>&#160;std::vector&lt;std::string&gt; <a class="code" href="namespacetflite.xhtml#a50d961d3de1ccba630ccb3361fe3879d">gpu_options</a> {<span class="stringliteral">&quot;gpu-tuning-level&quot;</span>,</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                                      <span class="stringliteral">&quot;gpu-tuning-file&quot;</span>,</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                                      <span class="stringliteral">&quot;gpu-kernel-profiling-enabled&quot;</span>};</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">/**</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"> * Create an ArmNN delegate plugin</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> * Available options:</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"> *    Option key: &quot;backends&quot; \n</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> *    Possible values: [&quot;EthosNPU&quot;/&quot;GpuAcc&quot;/&quot;CpuAcc&quot;/&quot;CpuRef&quot;] \n</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"> *    Descriptions: A comma separated list without whitespaces of</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> *                  backends which should be used for execution. Falls</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> *                  back to next backend in list if previous doesn&#39;t</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> *                  provide support for operation. e.g. &quot;GpuAcc,CpuAcc&quot;</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> *    Option key: &quot;logging-severity&quot; \n</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> *    Possible values: [&quot;trace&quot;/&quot;debug&quot;/&quot;info&quot;/&quot;warning&quot;/&quot;error&quot;/&quot;fatal&quot;] \n</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> *    Description: Sets the logging severity level for ArmNN. Logging</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> *                 is turned off if this option is not provided.</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> *    Option key: &quot;gpu-tuning-level&quot; \n</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> *    Possible values: [&quot;0&quot;/&quot;1&quot;/&quot;2&quot;/&quot;3&quot;] \n</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> *    Description: 0=UseOnly(default), 1=RapidTuning, 2=NormalTuning,</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> *                 3=ExhaustiveTuning. Requires option gpu-tuning-file.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"> *                 1,2 and 3 will create a tuning-file, 0 will apply the</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> *                 tunings from an existing file</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> *    Option key: &quot;gpu-tuning-file&quot; \n</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> *    Possible values: [filenameString] \n</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> *    Description: File name for the tuning file.</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"> *    Option key: &quot;gpu-kernel-profiling-enabled&quot; \n</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"> *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"> *    Description: Enables GPU kernel profiling</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> *    Option key: &quot;reduce-fp32-to-fp16&quot; \n</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> *    Description: Reduce Fp32 data to Fp16 for faster processing</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> *    Option key: &quot;reduce-fp32-to-bf16&quot; \n</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"> *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"> *    Description: Reduce Fp32 data to Bf16 for faster processing</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"> *    Option key: &quot;debug-data&quot; \n</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"> *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"> *    Description: Add debug data for easier troubleshooting</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"> *    Option key: &quot;memory-import&quot; \n</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"> *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"> *    Description: Enable memory import</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"> * @param[in]     option_keys     Delegate option names</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"> * @param[in]     options_values  Delegate option values</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"> * @param[in]     num_options     Number of delegate options</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"> * @param[in,out] report_error    Error callback function</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"> * @return An ArmNN delegate if it succeeds else NULL</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="namespacetflite.xhtml#a8e21a0acecdf21e909d9d7dc13acdcef">   89</a></span>&#160;TfLiteDelegate* <a class="code" href="namespacetflite.xhtml#a8e21a0acecdf21e909d9d7dc13acdcef">tflite_plugin_create_delegate</a>(<span class="keywordtype">char</span>** options_keys,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                                              <span class="keywordtype">char</span>** options_values,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                              <span class="keywordtype">size_t</span> num_options,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                              <span class="keywordtype">void</span> (*report_error)(<span class="keyword">const</span> <span class="keywordtype">char</span>*))</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">// Returning null indicates an error during delegate creation so we initialize with that</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    TfLiteDelegate* delegate = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="comment">// (Initializes with CpuRef backend)</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml">armnnDelegate::DelegateOptions</a> options = <a class="code" href="namespacearmnn_delegate.xhtml#a542da521454a5a61933cf44df32e5ca2">armnnDelegate::TfLiteArmnnDelegateOptionsDefault</a>();</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> optimizerOptions;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; num_options; ++i)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="comment">// Process backends</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">if</span> (std::string(options_keys[i]) == std::string(<span class="stringliteral">&quot;backends&quot;</span>))</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="comment">// The backend option is a comma separated string of backendIDs that needs to be split</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                std::vector&lt;armnn::BackendId&gt; backends;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                <span class="keywordtype">char</span>* pch;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                pch = strtok(options_values[i],<span class="stringliteral">&quot;,&quot;</span>);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                <span class="keywordflow">while</span> (pch != NULL)</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    backends.push_back(pch);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                    pch = strtok (NULL, <span class="stringliteral">&quot;,&quot;</span>);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                options.<a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5">SetBackends</a>(backends);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="comment">// Process logging level</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (std::string(options_keys[i]) == std::string(<span class="stringliteral">&quot;logging-severity&quot;</span>))</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                options.<a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a98cd1055c58e98f7009c4e770fac96ec">SetLoggingSeverity</a>(options_values[i]);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="comment">// Process GPU backend options</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (std::string(options_keys[i]) == std::string(<span class="stringliteral">&quot;gpu-tuning-level&quot;</span>))</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                <a class="code" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> option(<span class="stringliteral">&quot;GpuAcc&quot;</span>, {{<span class="stringliteral">&quot;TuningLevel&quot;</span>, atoi(options_values[i])}});</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                options.<a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8b99570afa7d17ce4b1c7dab770fe467">AddBackendOption</a>(option);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (std::string(options_keys[i]) == std::string(<span class="stringliteral">&quot;gpu-mlgo-tuning-file&quot;</span>))</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                <a class="code" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> option(<span class="stringliteral">&quot;GpuAcc&quot;</span>, {{<span class="stringliteral">&quot;MLGOTuningFilePath&quot;</span>, std::string(options_values[i])}});</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                options.<a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8b99570afa7d17ce4b1c7dab770fe467">AddBackendOption</a>(option);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (std::string(options_keys[i]) == std::string(<span class="stringliteral">&quot;gpu-tuning-file&quot;</span>))</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            {</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <a class="code" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> option(<span class="stringliteral">&quot;GpuAcc&quot;</span>, {{<span class="stringliteral">&quot;TuningFile&quot;</span>, std::string(options_values[i])}});</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                options.<a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8b99570afa7d17ce4b1c7dab770fe467">AddBackendOption</a>(option);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (std::string(options_keys[i]) == std::string(<span class="stringliteral">&quot;gpu-kernel-profiling-enabled&quot;</span>))</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                <a class="code" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> option(<span class="stringliteral">&quot;GpuAcc&quot;</span>, {{<span class="stringliteral">&quot;KernelProfilingEnabled&quot;</span>, (*options_values[i] != <span class="charliteral">&#39;0&#39;</span>)}});</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                options.<a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8b99570afa7d17ce4b1c7dab770fe467">AddBackendOption</a>(option);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            }</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="comment">// Process reduce-fp32-to-fp16 option</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (std::string(options_keys[i]) == std::string(<span class="stringliteral">&quot;reduce-fp32-to-fp16&quot;</span>))</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;               optimizerOptions.<a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a6e1a42622ca43dafc7ba8e684c016eb4">m_ReduceFp32ToFp16</a> = *options_values[i] != <span class="charliteral">&#39;0&#39;</span>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="comment">// Process reduce-fp32-to-bf16 option</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (std::string(options_keys[i]) == std::string(<span class="stringliteral">&quot;reduce-fp32-to-bf16&quot;</span>))</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;               optimizerOptions.<a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a11f463726addcc1d2845266997d79e9c">m_ReduceFp32ToBf16</a> = *options_values[i] != <span class="charliteral">&#39;0&#39;</span>;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="comment">// Process debug-data</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (std::string(options_keys[i]) == std::string(<span class="stringliteral">&quot;debug-data&quot;</span>))</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;               optimizerOptions.<a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a69eb14082d40fa0a3cff50457344a5e0">m_Debug</a> = *options_values[i] != <span class="charliteral">&#39;0&#39;</span>;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            }</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="comment">// Process memory-import</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (std::string(options_keys[i]) == std::string(<span class="stringliteral">&quot;memory-import&quot;</span>))</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;               optimizerOptions.<a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a05c1bba6ba3ecc1339d4c4c10c0d8890">m_ImportEnabled</a> = *options_values[i] != <span class="charliteral">&#39;0&#39;</span>;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_exception.xhtml">armnn::Exception</a>(<span class="stringliteral">&quot;Unknown option for the ArmNN Delegate given: &quot;</span> + std::string(options_keys[i]));</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        options.<a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#ab4a44278190ff1282d94d6a1a39e77ee">SetOptimizerOptions</a>(optimizerOptions);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        delegate = <a class="code" href="namespacearmnn_delegate.xhtml#aaab840e387d9a4e7de223fbc8c969eb3">TfLiteArmnnDelegateCreate</a>(options);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordflow">catch</span> (<span class="keyword">const</span> std::exception&amp; ex)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    {</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordflow">if</span>(report_error)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            report_error(ex.what());</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">return</span> delegate;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">/** Destroy a given delegate plugin</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment"> * @param[in] delegate Delegate to destruct</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="namespacetflite.xhtml#ae2501fc8679230dab265774a84264f19">  185</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacetflite.xhtml#ae2501fc8679230dab265774a84264f19">tflite_plugin_destroy_delegate</a>(TfLiteDelegate* delegate)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;{</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="namespacearmnn_delegate.xhtml#a29bbb05765039d65532d61301b56749e">armnnDelegate::TfLiteArmnnDelegateDelete</a>(delegate);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;}  <span class="comment">// extern &quot;C&quot;</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}  <span class="comment">// namespace tflite</span></div><div class="ttc" id="namespacetflite_xhtml"><div class="ttname"><a href="namespacetflite.xhtml">tflite</a></div><div class="ttdef"><b>Definition:</b> <a href="armnn__external__delegate_8cpp_source.xhtml#l00011">armnn_external_delegate.cpp:11</a></div></div>
<div class="ttc" id="structarmnn_1_1_optimizer_options_xhtml_a11f463726addcc1d2845266997d79e9c"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a11f463726addcc1d2845266997d79e9c">armnn::OptimizerOptions::m_ReduceFp32ToBf16</a></div><div class="ttdeci">bool m_ReduceFp32ToBf16</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00159">INetwork.hpp:159</a></div></div>
<div class="ttc" id="namespacetflite_xhtml_a8e21a0acecdf21e909d9d7dc13acdcef"><div class="ttname"><a href="namespacetflite.xhtml#a8e21a0acecdf21e909d9d7dc13acdcef">tflite::tflite_plugin_create_delegate</a></div><div class="ttdeci">TfLiteDelegate * tflite_plugin_create_delegate(char **options_keys, char **options_values, size_t num_options, void(*report_error)(const char *))</div><div class="ttdoc">Create an ArmNN delegate plugin. </div><div class="ttdef"><b>Definition:</b> <a href="armnn__external__delegate_8cpp_source.xhtml#l00089">armnn_external_delegate.cpp:89</a></div></div>
<div class="ttc" id="structarmnn_1_1_optimizer_options_xhtml_a6e1a42622ca43dafc7ba8e684c016eb4"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a6e1a42622ca43dafc7ba8e684c016eb4">armnn::OptimizerOptions::m_ReduceFp32ToFp16</a></div><div class="ttdeci">bool m_ReduceFp32ToFp16</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00153">INetwork.hpp:153</a></div></div>
<div class="ttc" id="structarmnn_1_1_optimizer_options_xhtml_a69eb14082d40fa0a3cff50457344a5e0"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a69eb14082d40fa0a3cff50457344a5e0">armnn::OptimizerOptions::m_Debug</a></div><div class="ttdeci">bool m_Debug</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00156">INetwork.hpp:156</a></div></div>
<div class="ttc" id="namespacetflite_xhtml_a50d961d3de1ccba630ccb3361fe3879d"><div class="ttname"><a href="namespacetflite.xhtml#a50d961d3de1ccba630ccb3361fe3879d">tflite::gpu_options</a></div><div class="ttdeci">std::vector&lt; std::string &gt; gpu_options</div><div class="ttdoc">This file defines two symbols that need to be exported to use the TFLite external delegate provider...</div><div class="ttdef"><b>Definition:</b> <a href="armnn__external__delegate_8cpp_source.xhtml#l00028">armnn_external_delegate.cpp:28</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a98cd1055c58e98f7009c4e770fac96ec"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a98cd1055c58e98f7009c4e770fac96ec">armnnDelegate::DelegateOptions::SetLoggingSeverity</a></div><div class="ttdeci">void SetLoggingSeverity(const armnn::LogSeverity &amp;level)</div><div class="ttdoc">Sets the severity level for logging within ArmNN that will be used on creation of the delegate...</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00050">DelegateOptions.hpp:50</a></div></div>
<div class="ttc" id="structarmnn_1_1_optimizer_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00110">INetwork.hpp:110</a></div></div>
<div class="ttc" id="_logging_8hpp_xhtml"><div class="ttname"><a href="_logging_8hpp.xhtml">Logging.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_optimizer_options_xhtml_a05c1bba6ba3ecc1339d4c4c10c0d8890"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a05c1bba6ba3ecc1339d4c4c10c0d8890">armnn::OptimizerOptions::m_ImportEnabled</a></div><div class="ttdeci">bool m_ImportEnabled</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00165">INetwork.hpp:165</a></div></div>
<div class="ttc" id="structarmnn_1_1_backend_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a></div><div class="ttdoc">Struct for the users to pass backend specific options. </div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00020">BackendOptions.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_delegate_xhtml_aaab840e387d9a4e7de223fbc8c969eb3"><div class="ttname"><a href="namespacearmnn_delegate.xhtml#aaab840e387d9a4e7de223fbc8c969eb3">armnnDelegate::TfLiteArmnnDelegateCreate</a></div><div class="ttdeci">TfLiteDelegate * TfLiteArmnnDelegateCreate(armnnDelegate::DelegateOptions options)</div></div>
<div class="ttc" id="classarmnn_1_1_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml">armnn::Exception</a></div><div class="ttdoc">Base class for all ArmNN exceptions so that users can filter to just those. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00046">Exceptions.hpp:46</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5">armnnDelegate::DelegateOptions::SetBackends</a></div><div class="ttdeci">void SetBackends(const std::vector&lt; armnn::BackendId &gt; &amp;backends)</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00042">DelegateOptions.hpp:42</a></div></div>
<div class="ttc" id="namespacearmnn_delegate_xhtml_a29bbb05765039d65532d61301b56749e"><div class="ttname"><a href="namespacearmnn_delegate.xhtml#a29bbb05765039d65532d61301b56749e">armnnDelegate::TfLiteArmnnDelegateDelete</a></div><div class="ttdeci">void TfLiteArmnnDelegateDelete(TfLiteDelegate *tfLiteDelegate)</div></div>
<div class="ttc" id="namespacearmnn_delegate_xhtml_a542da521454a5a61933cf44df32e5ca2"><div class="ttname"><a href="namespacearmnn_delegate.xhtml#a542da521454a5a61933cf44df32e5ca2">armnnDelegate::TfLiteArmnnDelegateOptionsDefault</a></div><div class="ttdeci">DelegateOptions TfLiteArmnnDelegateOptionsDefault()</div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml">armnnDelegate::DelegateOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00019">DelegateOptions.hpp:19</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a8b99570afa7d17ce4b1c7dab770fe467"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a8b99570afa7d17ce4b1c7dab770fe467">armnnDelegate::DelegateOptions::AddBackendOption</a></div><div class="ttdeci">void AddBackendOption(const armnn::BackendOptions &amp;option)</div><div class="ttdoc">Appends a backend option to the list of backend options. </div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00047">DelegateOptions.hpp:47</a></div></div>
<div class="ttc" id="armnn__delegate_8hpp_xhtml"><div class="ttname"><a href="armnn__delegate_8hpp.xhtml">armnn_delegate.hpp</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_ab4a44278190ff1282d94d6a1a39e77ee"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#ab4a44278190ff1282d94d6a1a39e77ee">armnnDelegate::DelegateOptions::SetOptimizerOptions</a></div><div class="ttdeci">void SetOptimizerOptions(const armnn::OptimizerOptions &amp;optimizerOptions)</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00060">DelegateOptions.hpp:60</a></div></div>
<div class="ttc" id="namespacetflite_xhtml_ae2501fc8679230dab265774a84264f19"><div class="ttname"><a href="namespacetflite.xhtml#ae2501fc8679230dab265774a84264f19">tflite::tflite_plugin_destroy_delegate</a></div><div class="ttdeci">void tflite_plugin_destroy_delegate(TfLiteDelegate *delegate)</div><div class="ttdoc">Destroy a given delegate plugin. </div><div class="ttdef"><b>Definition:</b> <a href="armnn__external__delegate_8cpp_source.xhtml#l00185">armnn_external_delegate.cpp:185</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_8dcde0c2eaea8bb7ad9196fbb23d9248.xhtml">delegate</a></li><li class="navelem"><a class="el" href="dir_e02f97d75023783db2a46daf7c07af7f.xhtml">src</a></li><li class="navelem"><a class="el" href="armnn__external__delegate_8cpp.xhtml">armnn_external_delegate.cpp</a></li>
    <li class="footer">Generated on Thu Feb 25 2021 17:27:28 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
