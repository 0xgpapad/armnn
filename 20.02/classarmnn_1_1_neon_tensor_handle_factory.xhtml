<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: NeonTensorHandleFactory Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_neon_tensor_handle_factory.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classarmnn_1_1_neon_tensor_handle_factory-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NeonTensorHandleFactory Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml">NeonTensorHandleFactory.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NeonTensorHandleFactory:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_neon_tensor_handle_factory.png" usemap="#NeonTensorHandleFactory_map" alt=""/>
  <map id="NeonTensorHandleFactory_map" name="NeonTensorHandleFactory_map">
<area href="classarmnn_1_1_i_tensor_handle_factory.xhtml" alt="ITensorHandleFactory" shape="rect" coords="0,0,165,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a07a3328cd4d6d3de55f19db56386c87a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#a07a3328cd4d6d3de55f19db56386c87a">NeonTensorHandleFactory</a> (std::weak_ptr&lt; <a class="el" href="classarmnn_1_1_neon_memory_manager.xhtml">NeonMemoryManager</a> &gt; mgr)</td></tr>
<tr class="separator:a07a3328cd4d6d3de55f19db56386c87a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9edb76ddc7ba9d619f93192388e25cb3"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#a9edb76ddc7ba9d619f93192388e25cb3">CreateSubTensorHandle</a> (<a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &amp;parent, const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> &amp;subTensorShape, const unsigned int *subTensorOrigin) const override</td></tr>
<tr class="separator:a9edb76ddc7ba9d619f93192388e25cb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36255ab20159b07024f505d5a58644d0"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#a36255ab20159b07024f505d5a58644d0">CreateTensorHandle</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensorInfo) const override</td></tr>
<tr class="separator:a36255ab20159b07024f505d5a58644d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3da30737e325dcae4479e96bdcb6a862"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#a3da30737e325dcae4479e96bdcb6a862">CreateTensorHandle</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensorInfo, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> dataLayout) const override</td></tr>
<tr class="separator:a3da30737e325dcae4479e96bdcb6a862"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7239477811c44d4398f0c2d291d9ea76"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#a7239477811c44d4398f0c2d291d9ea76">CreateTensorHandle</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensorInfo, const bool IsMemoryManaged=<a class="el" href="_ref_layer_tests_8cpp.xhtml#a37f1c3ccc9fc906be85185350dd83d48">true</a>) const override</td></tr>
<tr class="memdesc:a7239477811c44d4398f0c2d291d9ea76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility Functions for backends which require TensorHandles to have unmanaged memory.  <a href="#a7239477811c44d4398f0c2d291d9ea76">More...</a><br /></td></tr>
<tr class="separator:a7239477811c44d4398f0c2d291d9ea76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaed323bbcbaded57334783e4732ee3ed"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#aaed323bbcbaded57334783e4732ee3ed">CreateTensorHandle</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensorInfo, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> dataLayout, const bool IsMemoryManaged=<a class="el" href="_ref_layer_tests_8cpp.xhtml#a37f1c3ccc9fc906be85185350dd83d48">true</a>) const override</td></tr>
<tr class="separator:aaed323bbcbaded57334783e4732ee3ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f624341aa5ff798d7a678f612994b98"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">FactoryId</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#a0f624341aa5ff798d7a678f612994b98">GetId</a> () const override</td></tr>
<tr class="separator:a0f624341aa5ff798d7a678f612994b98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed0a782f32856bde72bc10d9381dc11e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#aed0a782f32856bde72bc10d9381dc11e">SupportsSubTensors</a> () const override</td></tr>
<tr class="separator:aed0a782f32856bde72bc10d9381dc11e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d6272060edbc0c5ed7d43db78cc65c6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#a4d6272060edbc0c5ed7d43db78cc65c6">GetExportFlags</a> () const override</td></tr>
<tr class="separator:a4d6272060edbc0c5ed7d43db78cc65c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1d3334a17a9f136fe65ed833fbf68b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#aa1d3334a17a9f136fe65ed833fbf68b4">GetImportFlags</a> () const override</td></tr>
<tr class="separator:aa1d3334a17a9f136fe65ed833fbf68b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_i_tensor_handle_factory"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_i_tensor_handle_factory')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">ITensorHandleFactory</a></td></tr>
<tr class="memitem:adb85a4d24c06a926c5fe50a2fd73111c inherit pub_methods_classarmnn_1_1_i_tensor_handle_factory"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#adb85a4d24c06a926c5fe50a2fd73111c">~ITensorHandleFactory</a> ()</td></tr>
<tr class="memdesc:adb85a4d24c06a926c5fe50a2fd73111c inherit pub_methods_classarmnn_1_1_i_tensor_handle_factory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Some TensorHandleFactory decisions are deferred to run-time.  <a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#adb85a4d24c06a926c5fe50a2fd73111c">More...</a><br /></td></tr>
<tr class="separator:adb85a4d24c06a926c5fe50a2fd73111c inherit pub_methods_classarmnn_1_1_i_tensor_handle_factory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa262a54803b53b8198cd60e7af2f60e4 inherit pub_methods_classarmnn_1_1_i_tensor_handle_factory"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#aa262a54803b53b8198cd60e7af2f60e4">SupportsMapUnmap</a> () const final</td></tr>
<tr class="separator:aa262a54803b53b8198cd60e7af2f60e4 inherit pub_methods_classarmnn_1_1_i_tensor_handle_factory"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:acdecb5b442434112c2cc8fc48c0ea922"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">FactoryId</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#acdecb5b442434112c2cc8fc48c0ea922">GetIdStatic</a> ()</td></tr>
<tr class="separator:acdecb5b442434112c2cc8fc48c0ea922"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classarmnn_1_1_i_tensor_handle_factory"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classarmnn_1_1_i_tensor_handle_factory')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">ITensorHandleFactory</a></td></tr>
<tr class="memitem:a32f4aa6a7089d877af08928139c2c277 inherit pub_types_classarmnn_1_1_i_tensor_handle_factory"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">FactoryId</a> = std::string</td></tr>
<tr class="separator:a32f4aa6a7089d877af08928139c2c277 inherit pub_types_classarmnn_1_1_i_tensor_handle_factory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_classarmnn_1_1_i_tensor_handle_factory"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classarmnn_1_1_i_tensor_handle_factory')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">ITensorHandleFactory</a></td></tr>
<tr class="memitem:a9c95f90eb40e31f629e0e2947b8bc6f9 inherit pub_static_attribs_classarmnn_1_1_i_tensor_handle_factory"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">FactoryId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a9c95f90eb40e31f629e0e2947b8bc6f9">LegacyFactoryId</a> = &quot;armnn_legacy_factory&quot;</td></tr>
<tr class="separator:a9c95f90eb40e31f629e0e2947b8bc6f9 inherit pub_static_attribs_classarmnn_1_1_i_tensor_handle_factory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac043d9a6e3f861fc6aa057ff95e56f18 inherit pub_static_attribs_classarmnn_1_1_i_tensor_handle_factory"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">FactoryId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#ac043d9a6e3f861fc6aa057ff95e56f18">DeferredFactoryId</a> = &quot;armnn_deferred_factory&quot;</td></tr>
<tr class="memdesc:ac043d9a6e3f861fc6aa057ff95e56f18 inherit pub_static_attribs_classarmnn_1_1_i_tensor_handle_factory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use the workload factory to create the tensor handle.  <a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#ac043d9a6e3f861fc6aa057ff95e56f18">More...</a><br /></td></tr>
<tr class="separator:ac043d9a6e3f861fc6aa057ff95e56f18 inherit pub_static_attribs_classarmnn_1_1_i_tensor_handle_factory"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml#l00016">16</a> of file <a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml">NeonTensorHandleFactory.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a07a3328cd4d6d3de55f19db56386c87a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07a3328cd4d6d3de55f19db56386c87a">&#9670;&nbsp;</a></span>NeonTensorHandleFactory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml">NeonTensorHandleFactory</a> </td>
          <td>(</td>
          <td class="paramtype">std::weak_ptr&lt; <a class="el" href="classarmnn_1_1_neon_memory_manager.xhtml">NeonMemoryManager</a> &gt;&#160;</td>
          <td class="paramname"><em>mgr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml">NeonTensorHandleFactory.hpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00016">NeonTensorHandleFactory::CreateSubTensorHandle()</a>, <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00042">NeonTensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00100">NeonTensorHandleFactory::GetExportFlags()</a>, <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00090">NeonTensorHandleFactory::GetId()</a>, <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00084">NeonTensorHandleFactory::GetIdStatic()</a>, <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00105">NeonTensorHandleFactory::GetImportFlags()</a>, and <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00095">NeonTensorHandleFactory::SupportsSubTensors()</a>.</p>
<div class="fragment"><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                            : m_MemoryManager(mgr)</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    {}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9edb76ddc7ba9d619f93192388e25cb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9edb76ddc7ba9d619f93192388e25cb3">&#9670;&nbsp;</a></span>CreateSubTensorHandle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt; CreateSubTensorHandle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>subTensorShape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int *&#160;</td>
          <td class="paramname"><em>subTensorOrigin</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#ac043991b839903b2ba9da884e4020848">ITensorHandleFactory</a>.</p>

<p class="definition">Definition at line <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00016">16</a> of file <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml">NeonTensorHandleFactory.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml#l00019">NeonTensorHandleFactory::NeonTensorHandleFactory()</a>.</p>
<div class="fragment"><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keyword">const</span> arm_compute::TensorShape shape = armcomputetensorutils::BuildArmComputeTensorShape(subTensorShape);</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ac6e86c1def7f674d3c4cb7f577874aa6">arm_compute::Coordinates</a> coords;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    coords.set_num_dimensions(subTensorShape.GetNumDimensions());</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; subTensorShape.GetNumDimensions(); ++i)</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="comment">// Arm compute indexes tensor coords in reverse order.</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> revertedIndex = subTensorShape.GetNumDimensions() - i - 1;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        coords.set(i, boost::numeric_cast&lt;int&gt;(subTensorOrigin[revertedIndex]));</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">const</span> arm_compute::TensorShape parentShape = armcomputetensorutils::BuildArmComputeTensorShape(parent.GetShape());</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">if</span> (!::arm_compute::error_on_invalid_subtensor(__func__, __FILE__, __LINE__, parentShape, coords, shape))</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    }</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">return</span> std::make_unique&lt;NeonSubTensorHandle&gt;(</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            boost::polymorphic_downcast&lt;IAclTensorHandle*&gt;(&amp;parent), shape, coords);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ac6e86c1def7f674d3c4cb7f577874aa6"><div class="ttname"><a href="namespacearmnn.xhtml#ac6e86c1def7f674d3c4cb7f577874aa6">armnn::Coordinates</a></div><div class="ttdeci">std::array&lt; unsigned int, MaxNumOfTensorDimensions &gt; Coordinates</div><div class="ttdef"><b>Definition:</b> <a href="_internal_types_8hpp_source.xhtml#l00080">InternalTypes.hpp:80</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a36255ab20159b07024f505d5a58644d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36255ab20159b07024f505d5a58644d0">&#9670;&nbsp;</a></span>CreateTensorHandle() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt; CreateTensorHandle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorInfo</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">ITensorHandleFactory</a>.</p>

<p class="definition">Definition at line <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml">NeonTensorHandleFactory.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00047">NeonTensorHandleFactory::CreateTensorHandle()</a>, and <a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml#l00019">NeonTensorHandleFactory::NeonTensorHandleFactory()</a>.</p>
<div class="fragment"><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#a36255ab20159b07024f505d5a58644d0">NeonTensorHandleFactory::CreateTensorHandle</a>(tensorInfo, <span class="keyword">true</span>);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_neon_tensor_handle_factory_xhtml_a36255ab20159b07024f505d5a58644d0"><div class="ttname"><a href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#a36255ab20159b07024f505d5a58644d0">armnn::NeonTensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00042">NeonTensorHandleFactory.cpp:42</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3da30737e325dcae4479e96bdcb6a862"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3da30737e325dcae4479e96bdcb6a862">&#9670;&nbsp;</a></span>CreateTensorHandle() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt; CreateTensorHandle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a82c11d5c2878a7beaed8b916eb1df648">ITensorHandleFactory</a>.</p>

<p class="definition">Definition at line <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00047">47</a> of file <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml">NeonTensorHandleFactory.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00042">NeonTensorHandleFactory::CreateTensorHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#a36255ab20159b07024f505d5a58644d0">NeonTensorHandleFactory::CreateTensorHandle</a>(tensorInfo, dataLayout, <span class="keyword">true</span>);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_neon_tensor_handle_factory_xhtml_a36255ab20159b07024f505d5a58644d0"><div class="ttname"><a href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#a36255ab20159b07024f505d5a58644d0">armnn::NeonTensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00042">NeonTensorHandleFactory.cpp:42</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7239477811c44d4398f0c2d291d9ea76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7239477811c44d4398f0c2d291d9ea76">&#9670;&nbsp;</a></span>CreateTensorHandle() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt; CreateTensorHandle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>IsMemoryManaged</em> = <code><a class="el" href="_ref_layer_tests_8cpp.xhtml#a37f1c3ccc9fc906be85185350dd83d48">true</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Utility Functions for backends which require TensorHandles to have unmanaged memory. </p>
<p>These should be overloaded if required to facilitate direct import of input tensors and direct export of output tensors. </p>

<p>Reimplemented from <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a42c6c26eed9d9ed8df7bb24f951c282c">ITensorHandleFactory</a>.</p>

<p class="definition">Definition at line <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00053">53</a> of file <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml">NeonTensorHandleFactory.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00105">NeonTensorHandleFactory::GetImportFlags()</a>.</p>
<div class="fragment"><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">auto</span> tensorHandle = std::make_unique&lt;NeonTensorHandle&gt;(tensorInfo);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">if</span> (IsMemoryManaged)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        tensorHandle-&gt;SetMemoryGroup(m_MemoryManager-&gt;GetInterLayerMemoryGroup());</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="comment">// If we are not Managing the Memory then we must be importing</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    tensorHandle-&gt;SetImportEnabledFlag(!IsMemoryManaged);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    tensorHandle-&gt;SetImportFlags(<a class="code" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#aa1d3334a17a9f136fe65ed833fbf68b4">GetImportFlags</a>());</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">return</span> tensorHandle;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_neon_tensor_handle_factory_xhtml_aa1d3334a17a9f136fe65ed833fbf68b4"><div class="ttname"><a href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#aa1d3334a17a9f136fe65ed833fbf68b4">armnn::NeonTensorHandleFactory::GetImportFlags</a></div><div class="ttdeci">MemorySourceFlags GetImportFlags() const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00105">NeonTensorHandleFactory.cpp:105</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aaed323bbcbaded57334783e4732ee3ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaed323bbcbaded57334783e4732ee3ed">&#9670;&nbsp;</a></span>CreateTensorHandle() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt; CreateTensorHandle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>IsMemoryManaged</em> = <code><a class="el" href="_ref_layer_tests_8cpp.xhtml#a37f1c3ccc9fc906be85185350dd83d48">true</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a3d113070d658f1dea761060b297ba6ed">ITensorHandleFactory</a>.</p>

<p class="definition">Definition at line <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml">NeonTensorHandleFactory.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00105">NeonTensorHandleFactory::GetImportFlags()</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">auto</span> tensorHandle = std::make_unique&lt;NeonTensorHandle&gt;(tensorInfo, dataLayout);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">if</span> (IsMemoryManaged)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        tensorHandle-&gt;SetMemoryGroup(m_MemoryManager-&gt;GetInterLayerMemoryGroup());</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="comment">// If we are not Managing the Memory then we must be importing</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    tensorHandle-&gt;SetImportEnabledFlag(!IsMemoryManaged);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    tensorHandle-&gt;SetImportFlags(<a class="code" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#aa1d3334a17a9f136fe65ed833fbf68b4">GetImportFlags</a>());</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> tensorHandle;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_neon_tensor_handle_factory_xhtml_aa1d3334a17a9f136fe65ed833fbf68b4"><div class="ttname"><a href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#aa1d3334a17a9f136fe65ed833fbf68b4">armnn::NeonTensorHandleFactory::GetImportFlags</a></div><div class="ttdeci">MemorySourceFlags GetImportFlags() const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00105">NeonTensorHandleFactory.cpp:105</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4d6272060edbc0c5ed7d43db78cc65c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d6272060edbc0c5ed7d43db78cc65c6">&#9670;&nbsp;</a></span>GetExportFlags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> GetExportFlags </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a9892b82652ffac03f1e4e7ad93906078">ITensorHandleFactory</a>.</p>

<p class="definition">Definition at line <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00100">100</a> of file <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml">NeonTensorHandleFactory.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml#l00019">NeonTensorHandleFactory::NeonTensorHandleFactory()</a>.</p>
<div class="fragment"><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0f624341aa5ff798d7a678f612994b98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f624341aa5ff798d7a678f612994b98">&#9670;&nbsp;</a></span>GetId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">FactoryId</a> &amp; GetId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a4afcbe1ccd8f71ba118f210f2a591a4c">ITensorHandleFactory</a>.</p>

<p class="definition">Definition at line <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00090">90</a> of file <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml">NeonTensorHandleFactory.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00084">NeonTensorHandleFactory::GetIdStatic()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml#l00019">NeonTensorHandleFactory::NeonTensorHandleFactory()</a>.</p>
<div class="fragment"><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#acdecb5b442434112c2cc8fc48c0ea922">GetIdStatic</a>();</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_neon_tensor_handle_factory_xhtml_acdecb5b442434112c2cc8fc48c0ea922"><div class="ttname"><a href="classarmnn_1_1_neon_tensor_handle_factory.xhtml#acdecb5b442434112c2cc8fc48c0ea922">armnn::NeonTensorHandleFactory::GetIdStatic</a></div><div class="ttdeci">static const FactoryId &amp; GetIdStatic()</div><div class="ttdef"><b>Definition:</b> <a href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00084">NeonTensorHandleFactory.cpp:84</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acdecb5b442434112c2cc8fc48c0ea922"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acdecb5b442434112c2cc8fc48c0ea922">&#9670;&nbsp;</a></span>GetIdStatic()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">FactoryId</a> &amp; GetIdStatic </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00084">84</a> of file <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml">NeonTensorHandleFactory.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml#l00014">armnn::NeonTensorHandleFactoryId()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00090">NeonTensorHandleFactory::GetId()</a>, and <a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml#l00019">NeonTensorHandleFactory::NeonTensorHandleFactory()</a>.</p>
<div class="fragment"><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">FactoryId</a> s_Id(<a class="code" href="namespacearmnn.xhtml#aad5d4888304a57fb22c4608dc5d94dc1">NeonTensorHandleFactoryId</a>());</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> s_Id;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_aad5d4888304a57fb22c4608dc5d94dc1"><div class="ttname"><a href="namespacearmnn.xhtml#aad5d4888304a57fb22c4608dc5d94dc1">armnn::NeonTensorHandleFactoryId</a></div><div class="ttdeci">constexpr const char * NeonTensorHandleFactoryId()</div><div class="ttdef"><b>Definition:</b> <a href="_neon_tensor_handle_factory_8hpp_source.xhtml#l00014">NeonTensorHandleFactory.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a32f4aa6a7089d877af08928139c2c277"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">armnn::ITensorHandleFactory::FactoryId</a></div><div class="ttdeci">std::string FactoryId</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_factory_8hpp_source.xhtml#l00021">ITensorHandleFactory.hpp:21</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa1d3334a17a9f136fe65ed833fbf68b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1d3334a17a9f136fe65ed833fbf68b4">&#9670;&nbsp;</a></span>GetImportFlags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> GetImportFlags </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#ab17a7eb3afac8667ace153b0fe2f82fe">ITensorHandleFactory</a>.</p>

<p class="definition">Definition at line <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00105">105</a> of file <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml">NeonTensorHandleFactory.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00053">NeonTensorHandleFactory::CreateTensorHandle()</a>, and <a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml#l00019">NeonTensorHandleFactory::NeonTensorHandleFactory()</a>.</p>
<div class="fragment"><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;{</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aed0a782f32856bde72bc10d9381dc11e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed0a782f32856bde72bc10d9381dc11e">&#9670;&nbsp;</a></span>SupportsSubTensors()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SupportsSubTensors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a37f4eba7877deb34f4d8d64c9bcb9ab5">ITensorHandleFactory</a>.</p>

<p class="definition">Definition at line <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml#l00095">95</a> of file <a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml">NeonTensorHandleFactory.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml#l00019">NeonTensorHandleFactory::NeonTensorHandleFactory()</a>.</p>
<div class="fragment"><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/backends/neon/<a class="el" href="_neon_tensor_handle_factory_8hpp_source.xhtml">NeonTensorHandleFactory.hpp</a></li>
<li>src/backends/neon/<a class="el" href="_neon_tensor_handle_factory_8cpp_source.xhtml">NeonTensorHandleFactory.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml">NeonTensorHandleFactory</a></li>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:19 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
