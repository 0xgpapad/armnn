<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/layers/BatchNormalizationLayer.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_batch_normalization_layer_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">BatchNormalizationLayer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_batch_normalization_layer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_batch_normalization_layer_8hpp.xhtml">BatchNormalizationLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_layer_clone_base_8hpp.xhtml">LayerCloneBase.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_types_utils_8hpp.xhtml">armnn/TypesUtils.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_cpu_tensor_handle_8hpp.xhtml">backendsCommon/CpuTensorHandle.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_workload_factory_8hpp.xhtml">backendsCommon/WorkloadFactory.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="classarmnn_1_1_batch_normalization_layer.xhtml#a422383d53af27cac50c856a1b97ee5a8">   16</a></span>&#160;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a422383d53af27cac50c856a1b97ee5a8">BatchNormalizationLayer::BatchNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a>&amp; param, <span class="keyword">const</span> <span class="keywordtype">char</span>* name)</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    : <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml">LayerWithParameters</a>(1, 1, <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a>::<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e">BatchNormalization</a>, param, name)</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="classarmnn_1_1_batch_normalization_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">   21</a></span>&#160;std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">BatchNormalizationLayer::CreateWorkload</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">IWorkloadFactory</a>&amp; factory)<span class="keyword"> const</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="comment">// on this level constant data should not be released..</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    BOOST_ASSERT_MSG(<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">m_Mean</a> != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;BatchNormalizationLayer: Mean data should not be null.&quot;</span>);</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    BOOST_ASSERT_MSG(<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aa5685ee78433980cf535d745d1fcab55">m_Variance</a> != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;BatchNormalizationLayer: Variance data should not be null.&quot;</span>);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    BOOST_ASSERT_MSG(<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a77c30d191e7ee8917e2c0ff5e97f5640">m_Beta</a> != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;BatchNormalizationLayer: Beta data should not be null.&quot;</span>);</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    BOOST_ASSERT_MSG(<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aec22bddf14a932c4a72796c30669066b">m_Gamma</a> != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;BatchNormalizationLayer: Gamma data should not be null.&quot;</span>);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml">BatchNormalizationQueueDescriptor</a> descriptor;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a40051a7aa82f25df43cc4244de04a7ec">m_Mean</a> = <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">m_Mean</a>.get();</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a8cd8696bb773a02714d3fc095794ec54">m_Variance</a> = <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aa5685ee78433980cf535d745d1fcab55">m_Variance</a>.get();</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#ad5f8f205ba69eb186688ca1c2aec207c">m_Beta</a> = <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a77c30d191e7ee8917e2c0ff5e97f5640">m_Beta</a>.get();</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#afbe59e02a5464703b865ea1ccfff49fd">m_Gamma</a> = <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aec22bddf14a932c4a72796c30669066b">m_Gamma</a>.get();</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordflow">return</span> factory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#abe1e0d40e23195022c0bc10a8aab55ea">CreateBatchNormalization</a>(descriptor, <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#a30a858b2b26d651a066537e499fbf40d">PrepInfoAndDesc</a>(descriptor));</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarmnn_1_1_batch_normalization_layer.xhtml#a0a42b443052ed2114f9b8d8eac8bd7fd">   39</a></span>&#160;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a>* <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a0a42b443052ed2114f9b8d8eac8bd7fd">BatchNormalizationLayer::Clone</a>(<a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; graph)<span class="keyword"> const</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">auto</span> layer = CloneBase&lt;BatchNormalizationLayer&gt;(graph, <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>, <a class="code" href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">GetName</a>());</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">m_Mean</a> = <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">m_Mean</a> ? std::make_unique&lt;ScopedCpuTensorHandle&gt;(*m_Mean) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    layer-&gt;m_Variance = <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aa5685ee78433980cf535d745d1fcab55">m_Variance</a> ? std::make_unique&lt;ScopedCpuTensorHandle&gt;(*m_Variance) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    layer-&gt;m_Beta = <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a77c30d191e7ee8917e2c0ff5e97f5640">m_Beta</a> ? std::make_unique&lt;ScopedCpuTensorHandle&gt;(*m_Beta) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    layer-&gt;m_Gamma = <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aec22bddf14a932c4a72796c30669066b">m_Gamma</a> ? std::make_unique&lt;ScopedCpuTensorHandle&gt;(*m_Gamma) : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">return</span> std::move(layer);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classarmnn_1_1_batch_normalization_layer.xhtml#a8c8f543d7e9729362c266d12ec169966">   51</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a8c8f543d7e9729362c266d12ec169966">BatchNormalizationLayer::ValidateTensorShapesFromInputs</a>()</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml#a0607e36e88f38c34c71c663164b76776">VerifyLayerConnections</a>(1, <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>());</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">auto</span> inferredShapes = <a class="code" href="classarmnn_1_1_layer.xhtml#a65ca562c882ad619684445a1402f415a">InferOutputShapes</a>({ <a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a3153abb7c0c0a84629079b2fac7db54f">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>() });</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    BOOST_ASSERT(inferredShapes.size() == 1);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    ConditionalThrowIfNotEqual&lt;LayerValidationException&gt;(</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="stringliteral">&quot;BatchNormalizationLayer: TensorShape set on OutputSlot[0] does not match the inferred shape.&quot;</span>,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(),</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        inferredShapes[0]);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classarmnn_1_1_batch_normalization_layer.xhtml#abe659a5afa7523f5dbc04bcba9b31f1a">   66</a></span>&#160;<a class="code" href="classarmnn_1_1_layer.xhtml#a585d59ec610af46a76487fd6c1c55ac1">Layer::ConstantTensors</a> <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#abe659a5afa7523f5dbc04bcba9b31f1a">BatchNormalizationLayer::GetConstantTensorsByRef</a>()</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">return</span> {<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">m_Mean</a>, <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aa5685ee78433980cf535d745d1fcab55">m_Variance</a>, <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a77c30d191e7ee8917e2c0ff5e97f5640">m_Beta</a>, <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aec22bddf14a932c4a72796c30669066b">m_Gamma</a>};</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classarmnn_1_1_batch_normalization_layer.xhtml#a75a50f464326fefa605ea84ae2c9be85">   71</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a75a50f464326fefa605ea84ae2c9be85">BatchNormalizationLayer::Accept</a>(<a class="code" href="classarmnn_1_1_i_layer_visitor.xhtml">ILayerVisitor</a>&amp; visitor)<span class="keyword"> const</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> meanTensor(<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">m_Mean</a>-&gt;GetTensorInfo(), <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">m_Mean</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> varianceTensor(<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aa5685ee78433980cf535d745d1fcab55">m_Variance</a>-&gt;GetTensorInfo(), <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aa5685ee78433980cf535d745d1fcab55">m_Variance</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> betaTensor(<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a77c30d191e7ee8917e2c0ff5e97f5640">m_Beta</a>-&gt;GetTensorInfo(), <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a77c30d191e7ee8917e2c0ff5e97f5640">m_Beta</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> gammaTensor(<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aec22bddf14a932c4a72796c30669066b">m_Gamma</a>-&gt;GetTensorInfo(), <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#aec22bddf14a932c4a72796c30669066b">m_Gamma</a>-&gt;Map(<span class="keyword">true</span>));</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    visitor.<a class="code" href="classarmnn_1_1_i_layer_visitor.xhtml#a9e642355474f31268e66a404e6c1b81d">VisitBatchNormalizationLayer</a>(</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keyword">this</span>, <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#a502c06a1b13e6d90a6cbf47c081f1444">GetParameters</a>(), meanTensor, varianceTensor, betaTensor, gammaTensor, <a class="code" href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">GetName</a>());</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_abe1e0d40e23195022c0bc10a8aab55ea"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#abe1e0d40e23195022c0bc10a8aab55ea">armnn::IWorkloadFactory::CreateBatchNormalization</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateBatchNormalization(const BatchNormalizationQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01117">WorkloadFactory.cpp:1117</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml_afbe59e02a5464703b865ea1ccfff49fd"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#afbe59e02a5464703b865ea1ccfff49fd">armnn::BatchNormalizationQueueDescriptor::m_Gamma</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_Gamma</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00282">WorkloadData.hpp:282</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml_ad5f8f205ba69eb186688ca1c2aec207c"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#ad5f8f205ba69eb186688ca1c2aec207c">armnn::BatchNormalizationQueueDescriptor::m_Beta</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_Beta</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00281">WorkloadData.hpp:281</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml">armnn::BatchNormalizationLayer</a></div><div class="ttdoc">This layer represents a batch normalization operation. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00015">BatchNormalizationLayer.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_adfa912d0c4c6c00f1af2cbfa799572b7"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">armnn::BatchNormalizationLayer::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(const IWorkloadFactory &amp;factory) const override</div><div class="ttdoc">Makes a workload for the BatchNormalization type. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8cpp_source.xhtml#l00021">BatchNormalizationLayer.cpp:21</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_ad32ac22bc72e28dfd6b466d143c8e262"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">armnn::LayerWithParameters&lt; BatchNormalizationDescriptor &gt;::m_Param</a></div><div class="ttdeci">BatchNormalizationDescriptor m_Param</div><div class="ttdoc">The parameters for the layer (not including tensor-valued weights etc.). </div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00050">LayerWithParameters.hpp:50</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_a502c06a1b13e6d90a6cbf47c081f1444"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#a502c06a1b13e6d90a6cbf47c081f1444">armnn::LayerWithParameters&lt; BatchNormalizationDescriptor &gt;::GetParameters</a></div><div class="ttdeci">const BatchNormalizationDescriptor &amp; GetParameters() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00018">LayerWithParameters.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_a0a42b443052ed2114f9b8d8eac8bd7fd"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#a0a42b443052ed2114f9b8d8eac8bd7fd">armnn::BatchNormalizationLayer::Clone</a></div><div class="ttdeci">BatchNormalizationLayer * Clone(Graph &amp;graph) const override</div><div class="ttdoc">Creates a dynamically-allocated copy of this layer. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8cpp_source.xhtml#l00039">BatchNormalizationLayer.cpp:39</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00088">Tensor.hpp:88</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a65ca562c882ad619684445a1402f415a"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a65ca562c882ad619684445a1402f415a">armnn::Layer::InferOutputShapes</a></div><div class="ttdeci">std::vector&lt; TensorShape &gt; InferOutputShapes(const std::vector&lt; TensorShape &gt; &amp;inputShapes) const override</div><div class="ttdoc">Infer the shape of the output(s) based on the provided input shape(s) </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00371">Layer.cpp:371</a></div></div>
<div class="ttc" id="_workload_factory_8hpp_xhtml"><div class="ttname"><a href="_workload_factory_8hpp.xhtml">WorkloadFactory.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8hpp_source.xhtml#l00021">WorkloadFactory.hpp:21</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml_a40051a7aa82f25df43cc4244de04a7ec"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a40051a7aa82f25df43cc4244de04a7ec">armnn::BatchNormalizationQueueDescriptor::m_Mean</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_Mean</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00279">WorkloadData.hpp:279</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_aec22bddf14a932c4a72796c30669066b"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#aec22bddf14a932c4a72796c30669066b">armnn::BatchNormalizationLayer::m_Gamma</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Gamma</div><div class="ttdoc">A unique pointer to store Gamma values. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00025">BatchNormalizationLayer.hpp:25</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml_a8cd8696bb773a02714d3fc095794ec54"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a8cd8696bb773a02714d3fc095794ec54">armnn::BatchNormalizationQueueDescriptor::m_Variance</a></div><div class="ttdeci">const ConstCpuTensorHandle * m_Variance</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00280">WorkloadData.hpp:280</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_aa5685ee78433980cf535d745d1fcab55"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#aa5685ee78433980cf535d745d1fcab55">armnn::BatchNormalizationLayer::m_Variance</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Variance</div><div class="ttdoc">A unique pointer to store Variance values. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00021">BatchNormalizationLayer.hpp:21</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2020 ARM Limited. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00025">00_introduction.dox:25</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_a75a50f464326fefa605ea84ae2c9be85"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#a75a50f464326fefa605ea84ae2c9be85">armnn::BatchNormalizationLayer::Accept</a></div><div class="ttdeci">void Accept(ILayerVisitor &amp;visitor) const override</div><div class="ttdoc">Apply a visitor to this layer. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8cpp_source.xhtml#l00071">BatchNormalizationLayer.cpp:71</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_slot_xhtml_a3153abb7c0c0a84629079b2fac7db54f"><div class="ttname"><a href="classarmnn_1_1_input_slot.xhtml#a3153abb7c0c0a84629079b2fac7db54f">armnn::InputSlot::GetConnection</a></div><div class="ttdeci">const IOutputSlot * GetConnection() const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00199">Layer.hpp:199</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_visitor_xhtml_a9e642355474f31268e66a404e6c1b81d"><div class="ttname"><a href="classarmnn_1_1_i_layer_visitor.xhtml#a9e642355474f31268e66a404e6c1b81d">armnn::ILayerVisitor::VisitBatchNormalizationLayer</a></div><div class="ttdeci">virtual void VisitBatchNormalizationLayer(const IConnectableLayer *layer, const BatchNormalizationDescriptor &amp;desc, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr)=0</div><div class="ttdoc">Function that a batch normalization layer should call back to when its Accept(ILayerVisitor&amp;) functio...</div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_a77c30d191e7ee8917e2c0ff5e97f5640"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#a77c30d191e7ee8917e2c0ff5e97f5640">armnn::BatchNormalizationLayer::m_Beta</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Beta</div><div class="ttdoc">A unique pointer to store Beta values. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00023">BatchNormalizationLayer.hpp:23</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a0607e36e88f38c34c71c663164b76776"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a0607e36e88f38c34c71c663164b76776">armnn::Layer::VerifyLayerConnections</a></div><div class="ttdeci">void VerifyLayerConnections(unsigned int expectedConnections, const CheckLocation &amp;location) const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00338">Layer.cpp:338</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_acf8b8e23bf647836592982f97088d375"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">armnn::Layer::GetInputSlot</a></div><div class="ttdeci">const InputSlot &amp; GetInputSlot(unsigned int index) const override</div><div class="ttdoc">Get a const input slot handle by slot index. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00310">Layer.hpp:310</a></div></div>
<div class="ttc" id="_types_utils_8hpp_xhtml"><div class="ttname"><a href="_types_utils_8hpp.xhtml">TypesUtils.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_a3540afac8fad99bbe68b3f7b57590160"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#a3540afac8fad99bbe68b3f7b57590160">armnn::BatchNormalizationLayer::m_Mean</a></div><div class="ttdeci">std::unique_ptr&lt; ScopedCpuTensorHandle &gt; m_Mean</div><div class="ttdoc">A unique pointer to store Mean values. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00019">BatchNormalizationLayer.hpp:19</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00199">Tensor.hpp:199</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_a8c8f543d7e9729362c266d12ec169966"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#a8c8f543d7e9729362c266d12ec169966">armnn::BatchNormalizationLayer::ValidateTensorShapesFromInputs</a></div><div class="ttdeci">void ValidateTensorShapesFromInputs() override</div><div class="ttdoc">Check if the input tensor shape(s) will lead to a valid configuration of BatchNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8cpp_source.xhtml#l00051">BatchNormalizationLayer.cpp:51</a></div></div>
<div class="ttc" id="_exceptions_8hpp_xhtml_aa3be76aec4ce713822a5ea1ecbb7bc61"><div class="ttname"><a href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a></div><div class="ttdeci">#define CHECK_LOCATION()</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00192">Exceptions.hpp:192</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00029">Graph.hpp:29</a></div></div>
<div class="ttc" id="_batch_normalization_layer_8hpp_xhtml"><div class="ttname"><a href="_batch_normalization_layer_8hpp.xhtml">BatchNormalizationLayer.hpp</a></div></div>
<div class="ttc" id="_cpu_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="_cpu_tensor_handle_8hpp.xhtml">CpuTensorHandle.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_abe659a5afa7523f5dbc04bcba9b31f1a"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#abe659a5afa7523f5dbc04bcba9b31f1a">armnn::BatchNormalizationLayer::GetConstantTensorsByRef</a></div><div class="ttdeci">ConstantTensors GetConstantTensorsByRef() override</div><div class="ttdoc">Retrieve the handles to the constant values stored by the layer. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8cpp_source.xhtml#l00066">BatchNormalizationLayer.cpp:66</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml">armnn::BatchNormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00269">WorkloadData.hpp:269</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_a30a858b2b26d651a066537e499fbf40d"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#a30a858b2b26d651a066537e499fbf40d">armnn::LayerWithParameters&lt; BatchNormalizationDescriptor &gt;::PrepInfoAndDesc</a></div><div class="ttdeci">WorkloadInfo PrepInfoAndDesc(QueueDescriptor &amp;descriptor) const</div><div class="ttdoc">Helper function to reduce duplication in *LayerCreateWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00043">LayerWithParameters.hpp:43</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_layer_visitor.xhtml">armnn::ILayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_visitor_8hpp_source.xhtml#l00016">ILayerVisitor.hpp:16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e">armnn::LayerType::BatchNormalization</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a0e36688a43c35668d8db5257274c68fe"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">armnn::Layer::GetOutputSlot</a></div><div class="ttdeci">const OutputSlot &amp; GetOutputSlot(unsigned int index=0) const override</div><div class="ttdoc">Get the const output slot handle by slot index. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00312">Layer.hpp:312</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a9943775a364fc4ab53b85ac88f311886"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">armnn::IOutputSlot::GetTensorInfo</a></div><div class="ttdeci">virtual const TensorInfo &amp; GetTensorInfo() const =0</div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a7ddf0cf6f620d59c10e63495ace795d0"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">armnn::Layer::GetName</a></div><div class="ttdeci">const char * GetName() const override</div><div class="ttdoc">Returns the name of the layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00305">Layer.hpp:305</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml">armnn::LayerWithParameters</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00013">LayerWithParameters.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a585d59ec610af46a76487fd6c1c55ac1"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a585d59ec610af46a76487fd6c1c55ac1">armnn::Layer::ConstantTensors</a></div><div class="ttdeci">std::vector&lt; std::reference_wrapper&lt; std::unique_ptr&lt; ScopedCpuTensorHandle &gt; &gt;&gt; ConstantTensors</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00363">Layer.hpp:363</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_slot_xhtml_ada2ad7d1caeeb4ef6195c8925fad6a65"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">armnn::OutputSlot::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo() const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00063">Layer.cpp:63</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_normalization_layer_xhtml_a422383d53af27cac50c856a1b97ee5a8"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#a422383d53af27cac50c856a1b97ee5a8">armnn::BatchNormalizationLayer::BatchNormalizationLayer</a></div><div class="ttdeci">BatchNormalizationLayer(const BatchNormalizationDescriptor &amp;param, const char *name)</div><div class="ttdoc">Constructor to create a BatchNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8cpp_source.xhtml#l00016">BatchNormalizationLayer.cpp:16</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00610">Descriptors.hpp:610</a></div></div>
<div class="ttc" id="_layer_clone_base_8hpp_xhtml"><div class="ttname"><a href="_layer_clone_base_8hpp.xhtml">LayerCloneBase.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdef"><b>Definition:</b> <a href="_internal_types_8hpp_source.xhtml#l00014">InternalTypes.hpp:14</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9da6642ce0fd5a8c83524f1b621275be.xhtml">layers</a></li><li class="navelem"><a class="el" href="_batch_normalization_layer_8cpp.xhtml">BatchNormalizationLayer.cpp</a></li>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:08 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
