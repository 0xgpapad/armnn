<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: LayerTestResult&lt; T, n &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('struct_layer_test_result.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="struct_layer_test_result-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">LayerTestResult&lt; T, n &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0ff3d1ccdaff4db423043d2f758c08da"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#a0ff3d1ccdaff4db423043d2f758c08da">LayerTestResult</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;outputInfo)</td></tr>
<tr class="separator:a0ff3d1ccdaff4db423043d2f758c08da"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ac9d44d346bb7c89f7a7aa31d2bee947f"><td class="memItemLeft" align="right" valign="top">boost::multi_array&lt; T, n &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#ac9d44d346bb7c89f7a7aa31d2bee947f">output</a></td></tr>
<tr class="separator:ac9d44d346bb7c89f7a7aa31d2bee947f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73610ea6c776cc66e5a78dd842a39b8b"><td class="memItemLeft" align="right" valign="top">boost::multi_array&lt; T, n &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#a73610ea6c776cc66e5a78dd842a39b8b">outputExpected</a></td></tr>
<tr class="separator:a73610ea6c776cc66e5a78dd842a39b8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23a6c8147ba9825335d1d6246c11d675"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#a23a6c8147ba9825335d1d6246c11d675">supported</a></td></tr>
<tr class="separator:a23a6c8147ba9825335d1d6246c11d675"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf486f22af9761356425ade095f8a7fe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#acf486f22af9761356425ade095f8a7fe">compareBoolean</a></td></tr>
<tr class="separator:acf486f22af9761356425ade095f8a7fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T, std::size_t n&gt;<br />
struct LayerTestResult&lt; T, n &gt;</h3>


<p class="definition">Definition at line <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00029">29</a> of file <a class="el" href="_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0ff3d1ccdaff4db423043d2f758c08da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ff3d1ccdaff4db423043d2f758c08da">&#9670;&nbsp;</a></span>LayerTestResult()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>outputInfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00031">31</a> of file <a class="el" href="_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>

<p class="reference">References <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00043">LayerTestResult&lt; T, n &gt;::compareBoolean</a>, <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00040">LayerTestResult&lt; T, n &gt;::output</a>, <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00041">LayerTestResult&lt; T, n &gt;::outputExpected</a>, and <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00042">LayerTestResult&lt; T, n &gt;::supported</a>.</p>
<div class="fragment"><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keyword">auto</span> shape( GetTensorShapeAsArray&lt;n&gt;(outputInfo) );</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <a class="code" href="struct_layer_test_result.xhtml#ac9d44d346bb7c89f7a7aa31d2bee947f">output</a>.resize(shape);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <a class="code" href="struct_layer_test_result.xhtml#a73610ea6c776cc66e5a78dd842a39b8b">outputExpected</a>.resize(shape);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <a class="code" href="struct_layer_test_result.xhtml#a23a6c8147ba9825335d1d6246c11d675">supported</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <a class="code" href="struct_layer_test_result.xhtml#acf486f22af9761356425ade095f8a7fe">compareBoolean</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    }</div><div class="ttc" id="struct_layer_test_result_xhtml_acf486f22af9761356425ade095f8a7fe"><div class="ttname"><a href="struct_layer_test_result.xhtml#acf486f22af9761356425ade095f8a7fe">LayerTestResult::compareBoolean</a></div><div class="ttdeci">bool compareBoolean</div><div class="ttdef"><b>Definition:</b> <a href="_layer_test_result_8hpp_source.xhtml#l00043">LayerTestResult.hpp:43</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a73610ea6c776cc66e5a78dd842a39b8b"><div class="ttname"><a href="struct_layer_test_result.xhtml#a73610ea6c776cc66e5a78dd842a39b8b">LayerTestResult::outputExpected</a></div><div class="ttdeci">boost::multi_array&lt; T, n &gt; outputExpected</div><div class="ttdef"><b>Definition:</b> <a href="_layer_test_result_8hpp_source.xhtml#l00041">LayerTestResult.hpp:41</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_ac9d44d346bb7c89f7a7aa31d2bee947f"><div class="ttname"><a href="struct_layer_test_result.xhtml#ac9d44d346bb7c89f7a7aa31d2bee947f">LayerTestResult::output</a></div><div class="ttdeci">boost::multi_array&lt; T, n &gt; output</div><div class="ttdef"><b>Definition:</b> <a href="_layer_test_result_8hpp_source.xhtml#l00040">LayerTestResult.hpp:40</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a23a6c8147ba9825335d1d6246c11d675"><div class="ttname"><a href="struct_layer_test_result.xhtml#a23a6c8147ba9825335d1d6246c11d675">LayerTestResult::supported</a></div><div class="ttdeci">bool supported</div><div class="ttdef"><b>Definition:</b> <a href="_layer_test_result_8hpp_source.xhtml#l00042">LayerTestResult.hpp:42</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="acf486f22af9761356425ade095f8a7fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf486f22af9761356425ade095f8a7fe">&#9670;&nbsp;</a></span>compareBoolean</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool compareBoolean</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00043">43</a> of file <a class="el" href="_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_unit_tests_8hpp_source.xhtml#l00036">CompareTestResultIfSupported()</a>, <a class="el" href="_elementwise_test_impl_8hpp_source.xhtml#l00041">ElementwiseTestHelper()</a>, and <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00031">LayerTestResult&lt; T, n &gt;::LayerTestResult()</a>.</p>

</div>
</div>
<a id="ac9d44d346bb7c89f7a7aa31d2bee947f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9d44d346bb7c89f7a7aa31d2bee947f">&#9670;&nbsp;</a></span>output</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">boost::multi_array&lt;T, n&gt; output</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00040">40</a> of file <a class="el" href="_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00245">AdditionBroadcast1ElementTestImpl()</a>, <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00162">AdditionBroadcastTestImpl()</a>, <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00047">BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00023">BoundedReLuTestCommon()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00284">CompareBoundedReLuTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01277">CompareConvolution2dTestImpl()</a>, <a class="el" href="_multiplication_test_impl_8cpp_source.xhtml#l00399">CompareMultiplicationTest()</a>, <a class="el" href="_unit_tests_8hpp_source.xhtml#l00036">CompareTestResultIfSupported()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00450">Concat2dTestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00715">Concat3dTestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01399">Concat4dTestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01916">ConcatDifferentInputOutputQParamTest()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02635">ConcatUint16Test()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02352">ConcatUint8DifferentQParamsTest()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02497">ConcatUint8Test()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00307">ConstantLinearActivationTestCommon()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00460">Convolution1dTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03092">Convolution2dPerAxisQuantTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03316">DepthwiseConvolution2dPerAxisQuantTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01884">DepthwiseConvolution2dTestImpl()</a>, <a class="el" href="_elementwise_test_impl_8hpp_source.xhtml#l00041">ElementwiseTestHelper()</a>, <a class="el" href="_elementwise_unary_test_impl_8hpp_source.xhtml#l00035">ElementwiseUnaryTestHelper()</a>, <a class="el" href="_fake_quantization_test_impl_8cpp_source.xhtml#l00016">FakeQuantizationTest()</a>, <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00031">LayerTestResult&lt; T, n &gt;::LayerTestResult()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00020">Pad2dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00093">Pad3dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00177">Pad4dTestCommon()</a>, <a class="el" href="_prelu_test_impl_8hpp_source.xhtml#l00023">PreluTest()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00392">SimpleActivationTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00367">SimpleConvolution2dNhwcTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00201">SimpleConvolution2dTestImpl()</a>, <a class="el" href="_floor_test_impl_8cpp_source.xhtml#l00015">SimpleFloorTest()</a>, <a class="el" href="_fully_connected_test_impl_8cpp_source.xhtml#l00024">SimpleFullyConnectedTestImpl()</a>, and <a class="el" href="_transpose_convolution2d_test_impl_8cpp_source.xhtml#l00561">TransposeConvolution2dPerAxisQuantTest()</a>.</p>

</div>
</div>
<a id="a73610ea6c776cc66e5a78dd842a39b8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73610ea6c776cc66e5a78dd842a39b8b">&#9670;&nbsp;</a></span>outputExpected</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">boost::multi_array&lt;T, n&gt; outputExpected</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00041">41</a> of file <a class="el" href="_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00245">AdditionBroadcast1ElementTestImpl()</a>, <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00162">AdditionBroadcastTestImpl()</a>, <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00047">BOOST_AUTO_TEST_CASE()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00023">BoundedReLuTestCommon()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00284">CompareBoundedReLuTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01277">CompareConvolution2dTestImpl()</a>, <a class="el" href="_multiplication_test_impl_8cpp_source.xhtml#l00399">CompareMultiplicationTest()</a>, <a class="el" href="_unit_tests_8hpp_source.xhtml#l00036">CompareTestResultIfSupported()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00507">Concat2dDim0TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00544">Concat2dDim1TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00809">Concat3dDim0TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00882">Concat3dDim1TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00955">Concat3dDim2TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01462">Concat4dDim0TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01502">Concat4dDim1TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01542">Concat4dDim2TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01582">Concat4dDim3TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01916">ConcatDifferentInputOutputQParamTest()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02635">ConcatUint16Test()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02352">ConcatUint8DifferentQParamsTest()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02497">ConcatUint8Test()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00307">ConstantLinearActivationTestCommon()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00460">Convolution1dTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03092">Convolution2dPerAxisQuantTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03316">DepthwiseConvolution2dPerAxisQuantTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01884">DepthwiseConvolution2dTestImpl()</a>, <a class="el" href="_elementwise_test_impl_8hpp_source.xhtml#l00041">ElementwiseTestHelper()</a>, <a class="el" href="_elementwise_unary_test_impl_8hpp_source.xhtml#l00035">ElementwiseUnaryTestHelper()</a>, <a class="el" href="_fake_quantization_test_impl_8cpp_source.xhtml#l00016">FakeQuantizationTest()</a>, <a class="el" href="_fully_connected_test_impl_8cpp_source.xhtml#l00247">FullyConnectedFloat32Test()</a>, <a class="el" href="_fully_connected_test_impl_8cpp_source.xhtml#l00148">FullyConnectedLargeTestCommon()</a>, <a class="el" href="_fully_connected_test_impl_8cpp_source.xhtml#l00071">FullyConnectedTest()</a>, <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00031">LayerTestResult&lt; T, n &gt;::LayerTestResult()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00020">Pad2dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00093">Pad3dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00177">Pad4dTestCommon()</a>, <a class="el" href="_prelu_test_impl_8hpp_source.xhtml#l00023">PreluTest()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00392">SimpleActivationTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00367">SimpleConvolution2dNhwcTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00201">SimpleConvolution2dTestImpl()</a>, <a class="el" href="_floor_test_impl_8cpp_source.xhtml#l00015">SimpleFloorTest()</a>, and <a class="el" href="_transpose_convolution2d_test_impl_8cpp_source.xhtml#l00561">TransposeConvolution2dPerAxisQuantTest()</a>.</p>

</div>
</div>
<a id="a23a6c8147ba9825335d1d6246c11d675"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23a6c8147ba9825335d1d6246c11d675">&#9670;&nbsp;</a></span>supported</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool supported</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00042">42</a> of file <a class="el" href="_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_unit_tests_8hpp_source.xhtml#l00036">CompareTestResultIfSupported()</a>, and <a class="el" href="_layer_test_result_8hpp_source.xhtml#l00031">LayerTestResult&lt; T, n &gt;::LayerTestResult()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>src/backends/backendsCommon/test/layerTests/<a class="el" href="_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a></li>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:16 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
