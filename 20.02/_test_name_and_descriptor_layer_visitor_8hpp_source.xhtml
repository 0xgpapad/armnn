<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/TestNameAndDescriptorLayerVisitor.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_test_name_and_descriptor_layer_visitor_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TestNameAndDescriptorLayerVisitor.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_layer_visitor_8hpp.xhtml">TestLayerVisitor.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;boost/test/unit_test.hpp&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">   15</a></span>&#160;<span class="preprocessor">#define DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS(name) \</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">class Test##name##LayerVisitor : public armnn::TestLayerVisitor \</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">{ \</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">private: \</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">    using Descriptor = armnn::name##Descriptor; \</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">    Descriptor m_Descriptor; \</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">    \</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">    bool CheckDescriptor(const Descriptor&amp; descriptor) \</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">    { \</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">        return descriptor == m_Descriptor; \</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">    } \</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">\</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">public: \</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">    explicit Test##name##LayerVisitor(const Descriptor&amp; descriptor, \</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">                                      const char* layerName = nullptr) \</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">        : armnn::TestLayerVisitor(layerName) \</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">        , m_Descriptor(descriptor) {}; \</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">    \</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">    void Visit##name##Layer(const armnn::IConnectableLayer* layer, \</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">                            const Descriptor&amp; descriptor, \</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">                            const char* layerName = nullptr) override \</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">    { \</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">        CheckLayerPointer(layer); \</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">        CheckDescriptor(descriptor); \</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">        CheckLayerName(layerName); \</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">    } \</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">};</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;} <span class="comment">// anonymous namespace</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="class_test_activation_layer_visitor.xhtml#a70104e9bd1dc97e0ec593d53ca07ceed">   45</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#a7636fbbc4f8ea2d0cf9f3ac2d12a4c62">Activation</a>)</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="class_test_arg_min_max_layer_visitor.xhtml#ad182e15a8f78b102792e81a1f00d42a5">   46</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#a374120de442fe42c26536bb4f1e2a5a1">ArgMinMax</a>)</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="class_test_batch_to_space_nd_layer_visitor.xhtml#abd5b11a31d323707f10145455d772945">   47</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#a8746512fab5ec10c2c57800c66311ba7">BatchToSpaceNd</a>)</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="class_test_comparison_layer_visitor.xhtml#afd43077d8634db560f46af7cf1b04511">   48</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(Comparison)</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="class_test_concat_layer_visitor.xhtml#a82a4d1fee8d0f7c207835e11d889ce47">   49</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(Concat)</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="class_test_depth_to_space_layer_visitor.xhtml#af12dba5e6a354df7c18370a3a7a36061">   50</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#ab023d9a7687e35c0f108458a094c1f56">DepthToSpace</a>)</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="class_test_elementwise_unary_layer_visitor.xhtml#ab0de6425150b30ba857eae132efe5f58">   51</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(ElementwiseUnary)</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="class_test_instance_normalization_layer_visitor.xhtml#a25af7a2d5f41733c34d69a2a8b7af322">   52</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(InstanceNormalization)</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="class_test_l2_normalization_layer_visitor.xhtml#ac7bbd8c7a31ff2b4b864f1114faa6f62">   53</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(L2Normalization)</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="class_test_log_softmax_layer_visitor.xhtml#a4eb04f9ec8e68aa3e7262a8ea537793a">   54</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#ac52e04c0e349e25bcdaa72c27395ef8f">LogSoftmax</a>)</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="class_test_mean_layer_visitor.xhtml#a4474b89b12f8cf84ddad2f69fa56b4b3">   55</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#a165ae372a7f67cad64ef3395d30122ce">Mean</a>)</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="class_test_normalization_layer_visitor.xhtml#ad844c577a58cae918e3c33fabe7ee53a">   56</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(Normalization)</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="class_test_pad_layer_visitor.xhtml#a2d6f74a95551413af84e39e7bc945ee6">   57</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#a28e115f5d28500324b53fae9e6c00b77">Pad</a>)</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="class_test_permute_layer_visitor.xhtml#a181b55393cb73902343f9ba888d5aee5">   58</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn_utils.xhtml#af3c74017185773dd61d8ca6662d65d43">Permute</a>)</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="class_test_pooling2d_layer_visitor.xhtml#ade7046687c2407a419046043cd898929">   59</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#ae2e93e304cf516841c521e3eaee025cd">Pooling2d</a>)</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="class_test_reshape_layer_visitor.xhtml#a2c919bfe0206ba436a368f0e6c5a145f">   60</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(Reshape)</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="class_test_resize_layer_visitor.xhtml#a574ae8c8a32c4028b05f1e4e672430b2">   61</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#a25dc224be48103343302b5a6fd588fe7">Resize</a>)</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="class_test_slice_layer_visitor.xhtml#a30ebaf9fe550a2135b9a642aca6bd578">   62</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#a044ea0cc993d4d1fbe4ec877b17b8d39">Slice</a>)</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="class_test_softmax_layer_visitor.xhtml#abc95aaf7e818fe803ebd1da23b825e35">   63</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#aa999ff2585ad75b95954a9323f63c32b">Softmax</a>)</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="class_test_space_to_batch_nd_layer_visitor.xhtml#aad7ede69e2035c4bd1baa6047659ede4">   64</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#a4a180e425d4c19b2cdea4ce5760180e1">SpaceToBatchNd</a>)</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="class_test_space_to_depth_layer_visitor.xhtml#afbbc42602e9740b6dec20dc620c65d25">   65</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#a5e1dc69443b64ad16b669388a6023f7a">SpaceToDepth</a>)</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="class_test_splitter_layer_visitor.xhtml#ad202b3d5cbf22158c4e3dccd9fb31c44">   66</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#a427c3d26d05b518b1ace407035f5920e">Splitter</a>)</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="class_test_stack_layer_visitor.xhtml#a1d9b846a26fadfc1e87778a235e5653d">   67</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#a6ef2dcac2ec0683d52df1b051404e7d6">Stack</a>)</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="class_test_stand_in_layer_visitor.xhtml#aab375a07b377ddb7066440e686101ebf">   68</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(StandIn)</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="class_test_strided_slice_layer_visitor.xhtml#a1e5648d30dc1cafce96708941b2e4c03">   69</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn.xhtml#a86d7a7168ac00b75b4971f9aad623698">StridedSlice</a>)</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="class_test_transpose_layer_visitor.xhtml#ae0b779e4ca5e1ae6b27ad38ab1611b38">   70</a></span>&#160;<a class="code" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a>(<a class="code" href="namespacearmnn_utils.xhtml#a405d5f966ec992d1717711e5a2d7909d">Transpose</a>)</div><div class="ttc" id="_test_layer_visitor_8hpp_xhtml"><div class="ttname"><a href="_test_layer_visitor_8hpp.xhtml">TestLayerVisitor.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a044ea0cc993d4d1fbe4ec877b17b8d39"><div class="ttname"><a href="namespacearmnn.xhtml#a044ea0cc993d4d1fbe4ec877b17b8d39">armnn::Slice</a></div><div class="ttdeci">void Slice(const TensorInfo &amp;inputInfo, const SliceDescriptor &amp;descriptor, const void *inputData, void *outputData, unsigned int dataTypeSize)</div><div class="ttdef"><b>Definition:</b> <a href="backends_2reference_2workloads_2_slice_8cpp_source.xhtml#l00016">Slice.cpp:16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a374120de442fe42c26536bb4f1e2a5a1"><div class="ttname"><a href="namespacearmnn.xhtml#a374120de442fe42c26536bb4f1e2a5a1">armnn::ArgMinMax</a></div><div class="ttdeci">void ArgMinMax(Decoder&lt; float &gt; &amp;in, int32_t *out, const TensorInfo &amp;inputTensorInfo, const TensorInfo &amp;outputTensorInfo, ArgMinMaxFunction function, int axis)</div><div class="ttdef"><b>Definition:</b> <a href="_arg_min_max_8cpp_source.xhtml#l00015">ArgMinMax.cpp:15</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml_a405d5f966ec992d1717711e5a2d7909d"><div class="ttname"><a href="namespacearmnn_utils.xhtml#a405d5f966ec992d1717711e5a2d7909d">armnnUtils::Transpose</a></div><div class="ttdeci">void Transpose(const armnn::TensorShape &amp;dstShape, const armnn::PermutationVector &amp;mappings, const void *src, void *dst, size_t dataTypeSize)</div><div class="ttdef"><b>Definition:</b> <a href="armnn_utils_2_transpose_8cpp_source.xhtml#l00120">Transpose.cpp:120</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ab023d9a7687e35c0f108458a094c1f56"><div class="ttname"><a href="namespacearmnn.xhtml#ab023d9a7687e35c0f108458a094c1f56">armnn::DepthToSpace</a></div><div class="ttdeci">void DepthToSpace(const TensorInfo &amp;inputInfo, const DepthToSpaceDescriptor &amp;descriptor, const void *inputData, void *outputData, unsigned int dataTypeSize)</div><div class="ttdef"><b>Definition:</b> <a href="_depth_to_space_8cpp_source.xhtml#l00018">DepthToSpace.cpp:18</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a6ef2dcac2ec0683d52df1b051404e7d6"><div class="ttname"><a href="namespacearmnn.xhtml#a6ef2dcac2ec0683d52df1b051404e7d6">armnn::Stack</a></div><div class="ttdeci">void Stack(const StackQueueDescriptor &amp;data, std::vector&lt; std::unique_ptr&lt; Decoder&lt; float &gt;&gt;&gt; &amp;inputs, Encoder&lt; float &gt; &amp;output)</div><div class="ttdef"><b>Definition:</b> <a href="backends_2reference_2workloads_2_stack_8cpp_source.xhtml#l00012">Stack.cpp:12</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a28e115f5d28500324b53fae9e6c00b77"><div class="ttname"><a href="namespacearmnn.xhtml#a28e115f5d28500324b53fae9e6c00b77">armnn::Pad</a></div><div class="ttdeci">void Pad(const TensorInfo &amp;inputInfo, const TensorInfo &amp;outputInfo, std::vector&lt; std::pair&lt; unsigned int, unsigned int &gt;&gt; m_padList, const T *inputData, T *outData, const float padValue)</div><div class="ttdef"><b>Definition:</b> <a href="backends_2reference_2workloads_2_pad_8cpp_source.xhtml#l00022">Pad.cpp:22</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml_af3c74017185773dd61d8ca6662d65d43"><div class="ttname"><a href="namespacearmnn_utils.xhtml#af3c74017185773dd61d8ca6662d65d43">armnnUtils::Permute</a></div><div class="ttdeci">void Permute(const armnn::TensorShape &amp;dstShape, const armnn::PermutationVector &amp;mappings, const void *src, void *dst, size_t dataTypeSize)</div><div class="ttdef"><b>Definition:</b> <a href="_permute_8cpp_source.xhtml#l00121">Permute.cpp:121</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a7636fbbc4f8ea2d0cf9f3ac2d12a4c62"><div class="ttname"><a href="namespacearmnn.xhtml#a7636fbbc4f8ea2d0cf9f3ac2d12a4c62">armnn::Activation</a></div><div class="ttdeci">float Activation(float in, ActivationFunction function, float a, float b)</div><div class="ttdef"><b>Definition:</b> <a href="_activation_8cpp_source.xhtml#l00013">Activation.cpp:13</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a25dc224be48103343302b5a6fd588fe7"><div class="ttname"><a href="namespacearmnn.xhtml#a25dc224be48103343302b5a6fd588fe7">armnn::Resize</a></div><div class="ttdeci">void Resize(Decoder&lt; float &gt; &amp;in, const TensorInfo &amp;inputInfo, Encoder&lt; float &gt; &amp;out, const TensorInfo &amp;outputInfo, DataLayoutIndexed dataLayout, armnn::ResizeMethod resizeMethod, bool alignCorners)</div><div class="ttdef"><b>Definition:</b> <a href="_resize_8cpp_source.xhtml#l00035">Resize.cpp:35</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ac52e04c0e349e25bcdaa72c27395ef8f"><div class="ttname"><a href="namespacearmnn.xhtml#ac52e04c0e349e25bcdaa72c27395ef8f">armnn::LogSoftmax</a></div><div class="ttdeci">void LogSoftmax(Decoder&lt; float &gt; &amp;input, Encoder&lt; float &gt; &amp;output, const TensorInfo &amp;inputInfo, const LogSoftmaxDescriptor &amp;descriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_log_softmax_8cpp_source.xhtml#l00030">LogSoftmax.cpp:30</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4a180e425d4c19b2cdea4ce5760180e1"><div class="ttname"><a href="namespacearmnn.xhtml#a4a180e425d4c19b2cdea4ce5760180e1">armnn::SpaceToBatchNd</a></div><div class="ttdeci">void SpaceToBatchNd(const TensorInfo &amp;inputInfo, const TensorInfo &amp;outputInfo, const SpaceToBatchNdDescriptor &amp;params, Decoder&lt; float &gt; &amp;inputData, Encoder&lt; float &gt; &amp;outputData)</div><div class="ttdef"><b>Definition:</b> <a href="backends_2reference_2workloads_2_space_to_batch_n_d_8cpp_source.xhtml#l00034">SpaceToBatchNd.cpp:34</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a86d7a7168ac00b75b4971f9aad623698"><div class="ttname"><a href="namespacearmnn.xhtml#a86d7a7168ac00b75b4971f9aad623698">armnn::StridedSlice</a></div><div class="ttdeci">void StridedSlice(const TensorInfo &amp;inputInfo, const StridedSliceDescriptor &amp;params, const void *inputData, void *outputData, unsigned int dataTypeSize)</div><div class="ttdef"><b>Definition:</b> <a href="backends_2reference_2workloads_2_strided_slice_8cpp_source.xhtml#l00090">StridedSlice.cpp:90</a></div></div>
<div class="ttc" id="_test_name_and_descriptor_layer_visitor_8hpp_xhtml_abb64418b249a328aae53463610990dc4"><div class="ttname"><a href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml#abb64418b249a328aae53463610990dc4">DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS</a></div><div class="ttdeci">#define DECLARE_TEST_NAME_AND_DESCRIPTOR_LAYER_VISITOR_CLASS(name)</div><div class="ttdef"><b>Definition:</b> <a href="_test_name_and_descriptor_layer_visitor_8hpp_source.xhtml#l00015">TestNameAndDescriptorLayerVisitor.hpp:15</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a165ae372a7f67cad64ef3395d30122ce"><div class="ttname"><a href="namespacearmnn.xhtml#a165ae372a7f67cad64ef3395d30122ce">armnn::Mean</a></div><div class="ttdeci">void Mean(const armnn::TensorInfo &amp;inputInfo, const armnn::TensorInfo &amp;outputInfo, const std::vector&lt; unsigned int &gt; &amp;axis, Decoder&lt; float &gt; &amp;input, Encoder&lt; float &gt; &amp;output)</div><div class="ttdef"><b>Definition:</b> <a href="backends_2reference_2workloads_2_mean_8cpp_source.xhtml#l00071">Mean.cpp:71</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a5e1dc69443b64ad16b669388a6023f7a"><div class="ttname"><a href="namespacearmnn.xhtml#a5e1dc69443b64ad16b669388a6023f7a">armnn::SpaceToDepth</a></div><div class="ttdeci">void SpaceToDepth(const TensorInfo &amp;inputInfo, const TensorInfo &amp;outputInfo, const SpaceToDepthDescriptor &amp;params, Decoder&lt; float &gt; &amp;inputData, Encoder&lt; float &gt; &amp;outputData)</div><div class="ttdef"><b>Definition:</b> <a href="_space_to_depth_8cpp_source.xhtml#l00036">SpaceToDepth.cpp:36</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a8746512fab5ec10c2c57800c66311ba7"><div class="ttname"><a href="namespacearmnn.xhtml#a8746512fab5ec10c2c57800c66311ba7">armnn::BatchToSpaceNd</a></div><div class="ttdeci">void BatchToSpaceNd(const DataLayoutIndexed &amp;dataLayout, const TensorInfo &amp;inputTensorInfo, const TensorInfo &amp;outputTensorInfo, const std::vector&lt; unsigned int &gt; &amp;blockShape, const std::vector&lt; std::pair&lt; unsigned int, unsigned int &gt;&gt; &amp;cropsData, Decoder&lt; float &gt; &amp;inputDecoder, Encoder&lt; float &gt; &amp;outputEncoder)</div><div class="ttdef"><b>Definition:</b> <a href="backends_2reference_2workloads_2_batch_to_space_n_d_8cpp_source.xhtml#l00035">BatchToSpaceNd.cpp:35</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae2e93e304cf516841c521e3eaee025cd"><div class="ttname"><a href="namespacearmnn.xhtml#ae2e93e304cf516841c521e3eaee025cd">armnn::Pooling2d</a></div><div class="ttdeci">void Pooling2d(Decoder&lt; float &gt; &amp;rInputDecoder, Encoder&lt; float &gt; &amp;rOutputEncoder, const TensorInfo &amp;inputInfo, const TensorInfo &amp;outputInfo, const Pooling2dDescriptor &amp;params)</div><div class="ttdoc">Computes the Pooling2d operation. </div><div class="ttdef"><b>Definition:</b> <a href="_pooling2d_8cpp_source.xhtml#l00143">Pooling2d.cpp:143</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a427c3d26d05b518b1ace407035f5920e"><div class="ttname"><a href="namespacearmnn.xhtml#a427c3d26d05b518b1ace407035f5920e">armnn::Splitter</a></div><div class="ttdeci">void Splitter(const SplitterQueueDescriptor &amp;data)</div><div class="ttdef"><b>Definition:</b> <a href="_splitter_8hpp_source.xhtml#l00017">Splitter.hpp:17</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_aa999ff2585ad75b95954a9323f63c32b"><div class="ttname"><a href="namespacearmnn.xhtml#aa999ff2585ad75b95954a9323f63c32b">armnn::Softmax</a></div><div class="ttdeci">void Softmax(Decoder&lt; float &gt; &amp;in, Encoder&lt; float &gt; &amp;out, const TensorInfo &amp;inputTensorInfo, float beta, int axis)</div><div class="ttdoc">Computes the softmax function on some inputs, into outputs, with a shape given by tensorInfo...</div><div class="ttdef"><b>Definition:</b> <a href="backends_2reference_2workloads_2_softmax_8cpp_source.xhtml#l00017">Softmax.cpp:17</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_test_name_and_descriptor_layer_visitor_8hpp.xhtml">TestNameAndDescriptorLayerVisitor.hpp</a></li>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:09 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
