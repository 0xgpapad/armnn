<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/QuantizerVisitor.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_quantizer_visitor_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">QuantizerVisitor.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_quantizer_visitor_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_layer_visitor_base_8hpp.xhtml">armnn/LayerVisitorBase.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_static_range_visitor_8hpp.xhtml">StaticRangeVisitor.hpp</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_network_quantization_scheme_8hpp.xhtml">NetworkQuantizationScheme.hpp</a>&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_network_8hpp.xhtml">armnn/INetwork.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_types_8hpp.xhtml">armnn/Types.hpp</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_network_quantizer_8hpp.xhtml">armnnQuantizer/INetworkQuantizer.hpp</a>&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">// Forward declaration</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">class </span>StaticRangeVisitor;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">/// Visitor object for quantizing layers in a network</span></div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classarmnn_1_1_quantizer_visitor.xhtml">   25</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml">QuantizerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase</a>&lt;VisitorThrowingPolicy&gt;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a72d00eb366b367af08007d472d5edebb">QuantizerVisitor</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a>&amp; rangeTracker,</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                     <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_i_quantization_scheme.xhtml">IQuantizationScheme</a>* quantizationScheme,</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                     <span class="keywordtype">bool</span> preserveType = <span class="keyword">false</span>);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a78cb6c9b6239cd69574c65dab44eb3b1">~QuantizerVisitor</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">    /// Functions to quantize the individual layers, overridden from ILayerVisitor</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"></span>    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use VisitElementwiseUnaryLayer instead&quot;</span>)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a4abca3536debe2dac00f1d6a0b14a435">VisitAbsLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer, <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#af493528dec93f39f5081dbefb40bff75">VisitActivationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a>&amp; activationDescriptor,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a7cb4ef1bc9588c4319144460c288022f">VisitAdditionLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer, <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a2482bba03a17e59a8ead45530e8efea5">VisitArgMinMaxLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">ArgMinMaxDescriptor</a>&amp; argMinMaxDescriptor,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a1532cb8f551812e784ccc14faae407b9">VisitBatchNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a>&amp; desc,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; mean,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; variance,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; beta,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; gamma,</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                      <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#af5d09e03a578afa9c0bb8afd11c65485">VisitBatchToSpaceNdLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a>&amp; batchToSpaceNdDescriptor,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a6a1adf7bf81e5cbb74b4cc4e8946c653">VisitComparisonLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a>&amp; comparisonDescriptor,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#afb527e0c7c30b56da911fee8c7b7a011">VisitConcatLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_origins_descriptor.xhtml">OriginsDescriptor</a>&amp; originsDescriptor,</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#aeb652d74e4b3596e85b22c2d52144f73">VisitConstantLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; input,</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#ac2f379ba77b06095e0c024e232ec1fd4">VisitConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp; convolution2dDescriptor,</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#ac0daac0e6ce49805580a8a50a8d3d514">VisitDepthToSpaceLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">DepthToSpaceDescriptor</a>&amp; depthToSpaceDescriptor,</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a554e88817e6fd98645388873a108f868">VisitDepthwiseConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp; desc,</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a237f88794e504388160a87813b66b9e3">VisitElementwiseUnaryLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a>&amp; elementwiseUnaryDescriptor,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                                    <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#abbdd655f9e0bec625369079ed97f1328">VisitFullyConnectedLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> *layer,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp; desc,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span> *name = <span class="keyword">nullptr</span>)  <span class="keyword">override</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a2ca539d734553e606c0134940e444298">VisitInputLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer, <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#ac6da520014db9cd2d4bede451e37ca0a">VisitInstanceNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a>&amp; instanceNormalizationDescriptor,</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#abe0c29cd370a84c3e669d28dda18afb7">VisitLogSoftmaxLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">LogSoftmaxDescriptor</a>&amp; logSoftmaxDescriptor,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a0a2f55bda910ccf8816d2678b7c980b6">VisitMeanLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a>&amp; meanDescriptor,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a1c587861e672cedaedd1f32bbce44afc">VisitMultiplicationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#ab0946e6e13740185d7b7939720f347f1">VisitNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a>&amp; normalizationDescriptor,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#ac75d60924c52b96ea6f9567fcfa2db10">VisitOutputLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer, <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)  <span class="keyword">override</span>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a0b4b2e9b5578bf50197c6929a6a48071">VisitPadLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a>&amp;,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                       <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a8667c9d0c42575e31c7a630fea8c7256">VisitPermuteLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a>&amp; permuteDescriptor,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#aaee763832ceb783dcffde56e1c1a6d93">VisitPooling2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a>&amp; pooling2dDescriptor,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a34f5745a60988b4a109ec213f8d0cb77">VisitPreluLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a4a7f7f33591fd91e8fb1c08d06c0733a">VisitReshapeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a>&amp; reshapeDescriptor,</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a7eea0e93f066099f3549fef15881a4cb">VisitResizeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a>&amp; resizeDescriptor,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use VisitResizeLayer instead&quot;</span>)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a5abbca55c908440acecfa6e0f921092d">VisitResizeBilinearLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_resize_bilinear_descriptor.xhtml">ResizeBilinearDescriptor</a>&amp; resizeDesc,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use VisitElementwiseUnaryLayer instead&quot;</span>)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a990bfe643729a7dedcc55da1f7d1b3bf">VisitRsqrtLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a20a228046c2aacd8664e50841af84e2b">VisitSliceLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a>&amp; sliceDescriptor,</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a98f34d2511f43324833060154cbdba8d">VisitSoftmaxLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a>&amp; softmaxDescriptor,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a8e327cc6432697fd55d6b91e554360d9">VisitSpaceToBatchNdLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a>&amp; spaceToBatchNdDescriptor,</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a2c416fbd39598732dd3c6255ceaf1b66">VisitSpaceToDepthLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a>&amp; spaceToDepthDescriptor,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                                <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#afbea8aa2295f2ab71ea5bb64ccd47871">VisitSplitterLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">SplitterDescriptor</a>&amp; splitterDescriptor,</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a1b4325b20242a2db0922f68aea195d00">VisitStackLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stack_descriptor.xhtml">StackDescriptor</a>&amp; stackDescriptor,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a61b7aa0305e7c45a625f7835fa26b9b6">VisitStridedSliceLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a>&amp; stridedSliceDescriptor,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#abffdcc9b528d64b510103f5b280e246e">VisitSubtractionLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                               <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a9e7ddd6c869af052317c6de0df53c942">VisitTransposeConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#a8c918592332c5e8339d43a9288350964">VisitTransposeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* layer,</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>) <span class="keyword">override</span>;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">    /// Extract the quantized network</span></div><div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classarmnn_1_1_quantizer_visitor.xhtml#ae25c71d0c8fceed87f0b84fc032f71c8">  195</a></span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">INetworkPtr</a> <a class="code" href="classarmnn_1_1_quantizer_visitor.xhtml#ae25c71d0c8fceed87f0b84fc032f71c8">RetrieveFinalNetwork</a>() { <span class="keywordflow">return</span> std::move(m_QuantizedNetwork); }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">    /// Connects the layer to preceeding layers and sets the quantization parameters based on recorded ranges</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> SetQuantizedInputConnections(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* srcLayer, <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* quantizedLayer);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">    /// Record the guids so we can easily find the layers later</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> RecordLayer(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* srcLayer, <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* qLayer);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">    /// Sets the bias quantization scale based on input and weight scales</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> CreateQuantizedBias(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* srcLayer,</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                    std::vector&lt;int32_t&gt;&amp; weightsBacking);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">    /// Reference to the static range visitor used to retrieve the quantization ranges</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment"></span>    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a>&amp; m_Ranges;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">    /// Quantized version of the model we are building up</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">INetworkPtr</a> m_QuantizedNetwork;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">    /// Mapping from input network guids to quantized network guids</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment"></span>    std::unordered_map&lt;LayerGuid, LayerGuid&gt; m_OriginalToQuantizedGuidMap;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">    /// Mapping from guid to layer in quantized network</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment"></span>    std::unordered_map&lt;LayerGuid, IConnectableLayer*&gt; m_QuantizedGuidToLayerMap;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_i_quantization_scheme.xhtml">IQuantizationScheme</a>* m_QuantizationScheme;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> m_PreserveType;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;};</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;} <span class="comment">//namespace armnn</span></div><div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a2ca539d734553e606c0134940e444298"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a2ca539d734553e606c0134940e444298">armnn::QuantizerVisitor::VisitInputLayer</a></div><div class="ttdeci">void VisitInputLayer(const IConnectableLayer *layer, LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Function that an InputLayer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00311">QuantizerVisitor.cpp:311</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a9e7ddd6c869af052317c6de0df53c942"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a9e7ddd6c869af052317c6de0df53c942">armnn::QuantizerVisitor::VisitTransposeConvolution2dLayer</a></div><div class="ttdeci">void VisitTransposeConvolution2dLayer(const IConnectableLayer *layer, const TransposeConvolution2dDescriptor &amp;descriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</div><div class="ttdoc">Function that a 2D transpose convolution layer should call back to when its Accept(ILayerVisitor&amp;) fu...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00536">QuantizerVisitor.cpp:536</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a></div><div class="ttdoc">A ViewsDescriptor for the SplitterLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00190">Descriptors.hpp:190</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00061">INetwork.hpp:61</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a72d00eb366b367af08007d472d5edebb"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a72d00eb366b367af08007d472d5edebb">armnn::QuantizerVisitor::QuantizerVisitor</a></div><div class="ttdeci">QuantizerVisitor(const RangeTracker &amp;rangeTracker, const IQuantizationScheme *quantizationScheme, bool preserveType=false)</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00014">QuantizerVisitor.cpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a990bfe643729a7dedcc55da1f7d1b3bf"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a990bfe643729a7dedcc55da1f7d1b3bf">armnn::QuantizerVisitor::VisitRsqrtLayer</a></div><div class="ttdeci">void VisitRsqrtLayer(const IConnectableLayer *, const char *name=nullptr) override</div><div class="ttdoc">Function a Reciprocal of square root layer should call back to when its Accept(ILayerVisitor&amp;) functi...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00460">QuantizerVisitor.cpp:460</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">armnn::TransposeConvolution2dDescriptor</a></div><div class="ttdoc">A TransposeConvolution2dDescriptor for the TransposeConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01079">Descriptors.hpp:1079</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="structarmnn_1_1_reshape_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reshape_descriptor.xhtml">armnn::ReshapeDescriptor</a></div><div class="ttdoc">A ReshapeDescriptor for the ReshapeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00758">Descriptors.hpp:758</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_ae25c71d0c8fceed87f0b84fc032f71c8"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#ae25c71d0c8fceed87f0b84fc032f71c8">armnn::QuantizerVisitor::RetrieveFinalNetwork</a></div><div class="ttdeci">INetworkPtr RetrieveFinalNetwork()</div><div class="ttdoc">Extract the quantized network. </div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8hpp_source.xhtml#l00195">QuantizerVisitor.hpp:195</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a0b4b2e9b5578bf50197c6929a6a48071"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a0b4b2e9b5578bf50197c6929a6a48071">armnn::QuantizerVisitor::VisitPadLayer</a></div><div class="ttdeci">void VisitPadLayer(const IConnectableLayer *, const PadDescriptor &amp;, const char *name=nullptr) override</div><div class="ttdoc">Function a pad layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00394">QuantizerVisitor.cpp:394</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a1c587861e672cedaedd1f32bbce44afc"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a1c587861e672cedaedd1f32bbce44afc">armnn::QuantizerVisitor::VisitMultiplicationLayer</a></div><div class="ttdeci">void VisitMultiplicationLayer(const IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function that a multiplication layer should call back to when its Accept(ILayerVisitor&amp;) function is ...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00356">QuantizerVisitor.cpp:356</a></div></div>
<div class="ttc" id="structarmnn_1_1_comparison_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_comparison_descriptor.xhtml">armnn::ComparisonDescriptor</a></div><div class="ttdoc">A ComparisonDescriptor for the ComparisonLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00062">Descriptors.hpp:62</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_ac6da520014db9cd2d4bede451e37ca0a"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#ac6da520014db9cd2d4bede451e37ca0a">armnn::QuantizerVisitor::VisitInstanceNormalizationLayer</a></div><div class="ttdeci">void VisitInstanceNormalizationLayer(const IConnectableLayer *layer, const InstanceNormalizationDescriptor &amp;instanceNormalizationDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that an instance normalization layer should call back to when its Accept(ILayerVisitor&amp;) fun...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00329">QuantizerVisitor.cpp:329</a></div></div>
<div class="ttc" id="classarmnn_1_1_range_tracker_xhtml"><div class="ttname"><a href="classarmnn_1_1_range_tracker.xhtml">armnn::RangeTracker</a></div><div class="ttdef"><b>Definition:</b> <a href="_range_tracker_8hpp_source.xhtml#l00017">RangeTracker.hpp:17</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00392">Descriptors.hpp:392</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a4a7f7f33591fd91e8fb1c08d06c0733a"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a4a7f7f33591fd91e8fb1c08d06c0733a">armnn::QuantizerVisitor::VisitReshapeLayer</a></div><div class="ttdeci">void VisitReshapeLayer(const IConnectableLayer *layer, const ReshapeDescriptor &amp;reshapeDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a reshape layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00429">QuantizerVisitor.cpp:429</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a7cb4ef1bc9588c4319144460c288022f"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a7cb4ef1bc9588c4319144460c288022f">armnn::QuantizerVisitor::VisitAdditionLayer</a></div><div class="ttdeci">void VisitAdditionLayer(const IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function that an addition layer should call back to when its Accept(ILayerVisitor&amp;) function is invok...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00130">QuantizerVisitor.cpp:130</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_abe0c29cd370a84c3e669d28dda18afb7"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#abe0c29cd370a84c3e669d28dda18afb7">armnn::QuantizerVisitor::VisitLogSoftmaxLayer</a></div><div class="ttdeci">void VisitLogSoftmaxLayer(const IConnectableLayer *layer, const LogSoftmaxDescriptor &amp;logSoftmaxDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a log softmax layer should call back to when its Accept(ILayerVisitor&amp;) function is inv...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00338">QuantizerVisitor.cpp:338</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a78cb6c9b6239cd69574c65dab44eb3b1"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a78cb6c9b6239cd69574c65dab44eb3b1">armnn::QuantizerVisitor::~QuantizerVisitor</a></div><div class="ttdeci">~QuantizerVisitor()=default</div></div>
<div class="ttc" id="_static_range_visitor_8hpp_xhtml"><div class="ttname"><a href="_static_range_visitor_8hpp.xhtml">StaticRangeVisitor.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a5abbca55c908440acecfa6e0f921092d"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a5abbca55c908440acecfa6e0f921092d">armnn::QuantizerVisitor::VisitResizeBilinearLayer</a></div><div class="ttdeci">void VisitResizeBilinearLayer(const IConnectableLayer *layer, const ResizeBilinearDescriptor &amp;resizeDesc, const char *name=nullptr) override</div><div class="ttdoc">Function that a resize bilinear layer should call back to when its Accept(ILayerVisitor&amp;) function is...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00438">QuantizerVisitor.cpp:438</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a61b7aa0305e7c45a625f7835fa26b9b6"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a61b7aa0305e7c45a625f7835fa26b9b6">armnn::QuantizerVisitor::VisitStridedSliceLayer</a></div><div class="ttdeci">void VisitStridedSliceLayer(const IConnectableLayer *layer, const StridedSliceDescriptor &amp;stridedSliceDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a strided slice layer should call back to when its Accept(ILayerVisitor&amp;) function is invoke...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00519">QuantizerVisitor.cpp:519</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2020 ARM Limited. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00025">00_introduction.dox:25</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a1b4325b20242a2db0922f68aea195d00"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a1b4325b20242a2db0922f68aea195d00">armnn::QuantizerVisitor::VisitStackLayer</a></div><div class="ttdeci">void VisitStackLayer(const IConnectableLayer *layer, const StackDescriptor &amp;stackDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a stack layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00510">QuantizerVisitor.cpp:510</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_depth_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_depth_descriptor.xhtml">armnn::SpaceToDepthDescriptor</a></div><div class="ttdoc">A SpaceToDepthDescriptor for the SpaceToDepthLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00810">Descriptors.hpp:810</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a1532cb8f551812e784ccc14faae407b9"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a1532cb8f551812e784ccc14faae407b9">armnn::QuantizerVisitor::VisitBatchNormalizationLayer</a></div><div class="ttdeci">void VisitBatchNormalizationLayer(const IConnectableLayer *layer, const BatchNormalizationDescriptor &amp;desc, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr) override</div><div class="ttdoc">Function that a batch normalization layer should call back to when its Accept(ILayerVisitor&amp;) functio...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00146">QuantizerVisitor.cpp:146</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_abffdcc9b528d64b510103f5b280e246e"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#abffdcc9b528d64b510103f5b280e246e">armnn::QuantizerVisitor::VisitSubtractionLayer</a></div><div class="ttdeci">void VisitSubtractionLayer(const IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function a subtraction layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00528">QuantizerVisitor.cpp:528</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_to_space_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">armnn::BatchToSpaceNdDescriptor</a></div><div class="ttdoc">A BatchToSpaceNdDescriptor for the BatchToSpaceNdLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00657">Descriptors.hpp:657</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ab8cf8f9fb6792e654c2d8d8382f6f01b"><div class="ttname"><a href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a></div><div class="ttdeci">int LayerBindingId</div><div class="ttdoc">Type of identifiers for bindable layers (inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00171">Types.hpp:171</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a8e327cc6432697fd55d6b91e554360d9"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a8e327cc6432697fd55d6b91e554360d9">armnn::QuantizerVisitor::VisitSpaceToBatchNdLayer</a></div><div class="ttdeci">void VisitSpaceToBatchNdLayer(const IConnectableLayer *layer, const SpaceToBatchNdDescriptor &amp;spaceToBatchNdDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a space to batch layer should call back to when its Accept(ILayerVisitor&amp;) function is invok...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00483">QuantizerVisitor.cpp:483</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a4abca3536debe2dac00f1d6a0b14a435"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a4abca3536debe2dac00f1d6a0b14a435">armnn::QuantizerVisitor::VisitAbsLayer</a></div><div class="ttdeci">void VisitAbsLayer(const IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Functions to quantize the individual layers, overridden from ILayerVisitor. </div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00116">QuantizerVisitor.cpp:116</a></div></div>
<div class="ttc" id="structarmnn_1_1_resize_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_descriptor.xhtml">armnn::ResizeDescriptor</a></div><div class="ttdoc">A ResizeDescriptor for the ResizeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00724">Descriptors.hpp:724</a></div></div>
<div class="ttc" id="structarmnn_1_1_stack_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stack_descriptor.xhtml">armnn::StackDescriptor</a></div><div class="ttdoc">A StackDescriptor for the StackLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00950">Descriptors.hpp:950</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a554e88817e6fd98645388873a108f868"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a554e88817e6fd98645388873a108f868">armnn::QuantizerVisitor::VisitDepthwiseConvolution2dLayer</a></div><div class="ttdeci">void VisitDepthwiseConvolution2dLayer(const IConnectableLayer *layer, const DepthwiseConvolution2dDescriptor &amp;desc, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</div><div class="ttdoc">Function that a 2D depthwise convolution layer with biases should call back to when its Accept(ILayer...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00250">QuantizerVisitor.cpp:250</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a7eea0e93f066099f3549fef15881a4cb"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a7eea0e93f066099f3549fef15881a4cb">armnn::QuantizerVisitor::VisitResizeLayer</a></div><div class="ttdeci">void VisitResizeLayer(const IConnectableLayer *layer, const ResizeDescriptor &amp;resizeDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a resize layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00451">QuantizerVisitor.cpp:451</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml">armnn::PadDescriptor</a></div><div class="ttdoc">A PadDescriptor for the PadLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00901">Descriptors.hpp:901</a></div></div>
<div class="ttc" id="structarmnn_1_1_arg_min_max_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_arg_min_max_descriptor.xhtml">armnn::ArgMinMaxDescriptor</a></div><div class="ttdoc">An ArgMinMaxDescriptor for ArgMinMaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00043">Descriptors.hpp:43</a></div></div>
<div class="ttc" id="structarmnn_1_1_origins_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml">armnn::OriginsDescriptor</a></div><div class="ttdoc">An OriginsDescriptor for the ConcatLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00147">Descriptors.hpp:147</a></div></div>
<div class="ttc" id="_types_8hpp_xhtml"><div class="ttname"><a href="_types_8hpp.xhtml">Types.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00373">Descriptors.hpp:373</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a8c918592332c5e8339d43a9288350964"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a8c918592332c5e8339d43a9288350964">armnn::QuantizerVisitor::VisitTransposeLayer</a></div><div class="ttdeci">void VisitTransposeLayer(const IConnectableLayer *layer, const TransposeDescriptor &amp;descriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a transpose layer should call back to when its Accept(ILayerVisitor&amp;) function is invok...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00564">QuantizerVisitor.cpp:564</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00199">Tensor.hpp:199</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_ac0daac0e6ce49805580a8a50a8d3d514"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#ac0daac0e6ce49805580a8a50a8d3d514">armnn::QuantizerVisitor::VisitDepthToSpaceLayer</a></div><div class="ttdeci">void VisitDepthToSpaceLayer(const IConnectableLayer *layer, const DepthToSpaceDescriptor &amp;depthToSpaceDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a depth to space layer should call back to when its Accept(ILayerVisitor&amp;) function is invok...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00241">QuantizerVisitor.cpp:241</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_afb527e0c7c30b56da911fee8c7b7a011"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#afb527e0c7c30b56da911fee8c7b7a011">armnn::QuantizerVisitor::VisitConcatLayer</a></div><div class="ttdeci">void VisitConcatLayer(const IConnectableLayer *layer, const OriginsDescriptor &amp;originsDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a concat layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00195">QuantizerVisitor.cpp:195</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml">armnn::QuantizerVisitor</a></div><div class="ttdoc">Visitor object for quantizing layers in a network. </div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8hpp_source.xhtml#l00025">QuantizerVisitor.hpp:25</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_ac2f379ba77b06095e0c024e232ec1fd4"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#ac2f379ba77b06095e0c024e232ec1fd4">armnn::QuantizerVisitor::VisitConvolution2dLayer</a></div><div class="ttdeci">void VisitConvolution2dLayer(const IConnectableLayer *layer, const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</div><div class="ttdoc">Function that a 2D convolution layer should call back to when its Accept(ILayerVisitor&amp;) function is ...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00215">QuantizerVisitor.cpp:215</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a8667c9d0c42575e31c7a630fea8c7256"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a8667c9d0c42575e31c7a630fea8c7256">armnn::QuantizerVisitor::VisitPermuteLayer</a></div><div class="ttdeci">void VisitPermuteLayer(const IConnectableLayer *layer, const PermuteDescriptor &amp;permuteDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a permute layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00403">QuantizerVisitor.cpp:403</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00020">Descriptors.hpp:20</a></div></div>
<div class="ttc" id="structarmnn_1_1_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_slice_descriptor.xhtml">armnn::SliceDescriptor</a></div><div class="ttdoc">A SliceDescriptor for the SliceLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00927">Descriptors.hpp:927</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml">armnn::LayerVisitorBase</a></div><div class="ttdoc">Visitor base class with empty implementations. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00025">LayerVisitorBase.hpp:25</a></div></div>
<div class="ttc" id="_i_network_8hpp_xhtml"><div class="ttname"><a href="_i_network_8hpp.xhtml">INetwork.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_batch_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">armnn::SpaceToBatchNdDescriptor</a></div><div class="ttdoc">A SpaceToBatchNdDescriptor for the SpaceToBatchNdLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00778">Descriptors.hpp:778</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_af493528dec93f39f5081dbefb40bff75"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#af493528dec93f39f5081dbefb40bff75">armnn::QuantizerVisitor::VisitActivationLayer</a></div><div class="ttdeci">void VisitActivationLayer(const IConnectableLayer *layer, const ActivationDescriptor &amp;activationDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that an activation layer should call back to when its Accept(ILayerVisitor&amp;) function is inv...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00121">QuantizerVisitor.cpp:121</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a6a1adf7bf81e5cbb74b4cc4e8946c653"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a6a1adf7bf81e5cbb74b4cc4e8946c653">armnn::QuantizerVisitor::VisitComparisonLayer</a></div><div class="ttdeci">void VisitComparisonLayer(const IConnectableLayer *layer, const ComparisonDescriptor &amp;comparisonDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a Comparison layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00186">QuantizerVisitor.cpp:186</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_unary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">armnn::ElementwiseUnaryDescriptor</a></div><div class="ttdoc">A ElementwiseUnaryDescriptor for the ElementwiseUnaryLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00082">Descriptors.hpp:82</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a98f34d2511f43324833060154cbdba8d"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a98f34d2511f43324833060154cbdba8d">armnn::QuantizerVisitor::VisitSoftmaxLayer</a></div><div class="ttdeci">void VisitSoftmaxLayer(const IConnectableLayer *layer, const SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a softmax layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00474">QuantizerVisitor.cpp:474</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a0a2f55bda910ccf8816d2678b7c980b6"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a0a2f55bda910ccf8816d2678b7c980b6">armnn::QuantizerVisitor::VisitMeanLayer</a></div><div class="ttdeci">void VisitMeanLayer(const IConnectableLayer *layer, const MeanDescriptor &amp;meanDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a Mean layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00347">QuantizerVisitor.cpp:347</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a2482bba03a17e59a8ead45530e8efea5"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a2482bba03a17e59a8ead45530e8efea5">armnn::QuantizerVisitor::VisitArgMinMaxLayer</a></div><div class="ttdeci">void VisitArgMinMaxLayer(const IConnectableLayer *layer, const ArgMinMaxDescriptor &amp;argMinMaxDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that an arg min max layer should call back to when its Accept(ILayerVisitor&amp;) function is in...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00137">QuantizerVisitor.cpp:137</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a237f88794e504388160a87813b66b9e3"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a237f88794e504388160a87813b66b9e3">armnn::QuantizerVisitor::VisitElementwiseUnaryLayer</a></div><div class="ttdeci">void VisitElementwiseUnaryLayer(const IConnectableLayer *layer, const ElementwiseUnaryDescriptor &amp;elementwiseUnaryDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a ElementwiseUnary layer should call back to when its Accept(ILayerVisitor&amp;) function is inv...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00276">QuantizerVisitor.cpp:276</a></div></div>
<div class="ttc" id="structarmnn_1_1_mean_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mean_descriptor.xhtml">armnn::MeanDescriptor</a></div><div class="ttdoc">A MeanDescriptor for the MeanLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00877">Descriptors.hpp:877</a></div></div>
<div class="ttc" id="_network_quantization_scheme_8hpp_xhtml"><div class="ttname"><a href="_network_quantization_scheme_8hpp.xhtml">NetworkQuantizationScheme.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_quantization_scheme_xhtml"><div class="ttname"><a href="structarmnn_1_1_i_quantization_scheme.xhtml">armnn::IQuantizationScheme</a></div><div class="ttdef"><b>Definition:</b> <a href="_network_quantization_scheme_8hpp_source.xhtml#l00018">NetworkQuantizationScheme.hpp:18</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_descriptor.xhtml">armnn::TransposeDescriptor</a></div><div class="ttdoc">A TransposeDescriptor for the TransposeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01123">Descriptors.hpp:1123</a></div></div>
<div class="ttc" id="structarmnn_1_1_strided_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_strided_slice_descriptor.xhtml">armnn::StridedSliceDescriptor</a></div><div class="ttdoc">A StridedSliceDescriptor for the StridedSliceLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01002">Descriptors.hpp:1002</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_aeb652d74e4b3596e85b22c2d52144f73"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#aeb652d74e4b3596e85b22c2d52144f73">armnn::QuantizerVisitor::VisitConstantLayer</a></div><div class="ttdeci">void VisitConstantLayer(const IConnectableLayer *layer, const ConstTensor &amp;input, const char *name=nullptr) override</div><div class="ttdoc">Function a layer with no inputs and a single output, which always corresponds to the passed in consta...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00204">QuantizerVisitor.cpp:204</a></div></div>
<div class="ttc" id="_layer_visitor_base_8hpp_xhtml"><div class="ttname"><a href="_layer_visitor_base_8hpp.xhtml">LayerVisitorBase.hpp</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_a76fb13a018f8e01087a7ae0eb23509e1"><div class="ttname"><a href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a></div><div class="ttdeci">#define ARMNN_DEPRECATED_MSG(message)</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00043">Deprecated.hpp:43</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ace74f6f9feb95a964a49d79458232703"><div class="ttname"><a href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; INetwork, void(*)(INetwork *network)&gt; INetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00101">INetwork.hpp:101</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a2c416fbd39598732dd3c6255ceaf1b66"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a2c416fbd39598732dd3c6255ceaf1b66">armnn::QuantizerVisitor::VisitSpaceToDepthLayer</a></div><div class="ttdeci">void VisitSpaceToDepthLayer(const IConnectableLayer *layer, const SpaceToDepthDescriptor &amp;spaceToDepthDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function a space to depth layer should call back to when its Accept(ILayerVisitor&amp;) function is invok...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00492">QuantizerVisitor.cpp:492</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_af5d09e03a578afa9c0bb8afd11c65485"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#af5d09e03a578afa9c0bb8afd11c65485">armnn::QuantizerVisitor::VisitBatchToSpaceNdLayer</a></div><div class="ttdeci">void VisitBatchToSpaceNdLayer(const IConnectableLayer *layer, const BatchToSpaceNdDescriptor &amp;batchToSpaceNdDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a batch to space ND layer should call back to when its Accept(ILayerVisitor&amp;) function ...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00177">QuantizerVisitor.cpp:177</a></div></div>
<div class="ttc" id="structarmnn_1_1_pooling2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a></div><div class="ttdoc">A Pooling2dDescriptor for the Pooling2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00313">Descriptors.hpp:313</a></div></div>
<div class="ttc" id="structarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00551">Descriptors.hpp:551</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a20a228046c2aacd8664e50841af84e2b"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a20a228046c2aacd8664e50841af84e2b">armnn::QuantizerVisitor::VisitSliceLayer</a></div><div class="ttdeci">void VisitSliceLayer(const IConnectableLayer *layer, const SliceDescriptor &amp;sliceDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a slice layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00465">QuantizerVisitor.cpp:465</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_ac75d60924c52b96ea6f9567fcfa2db10"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#ac75d60924c52b96ea6f9567fcfa2db10">armnn::QuantizerVisitor::VisitOutputLayer</a></div><div class="ttdeci">void VisitOutputLayer(const IConnectableLayer *layer, LayerBindingId id, const char *name=nullptr) override</div><div class="ttdoc">Function an output layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00373">QuantizerVisitor.cpp:373</a></div></div>
<div class="ttc" id="structarmnn_1_1_instance_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_instance_normalization_descriptor.xhtml">armnn::InstanceNormalizationDescriptor</a></div><div class="ttdoc">An InstanceNormalizationDescriptor for InstanceNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00629">Descriptors.hpp:629</a></div></div>
<div class="ttc" id="structarmnn_1_1_resize_bilinear_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_bilinear_descriptor.xhtml">armnn::ResizeBilinearDescriptor</a></div><div class="ttdoc">A ResizeBilinearDescriptor for the ResizeBilinearLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00707">Descriptors.hpp:707</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00123">Descriptors.hpp:123</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_a34f5745a60988b4a109ec213f8d0cb77"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#a34f5745a60988b4a109ec213f8d0cb77">armnn::QuantizerVisitor::VisitPreluLayer</a></div><div class="ttdeci">void VisitPreluLayer(const IConnectableLayer *layer, const char *name=nullptr) override</div><div class="ttdoc">Function that a PReLU activation layer should call back to when its Accept(ILayerVisitor&amp;) function i...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00421">QuantizerVisitor.cpp:421</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_ab0946e6e13740185d7b7939720f347f1"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#ab0946e6e13740185d7b7939720f347f1">armnn::QuantizerVisitor::VisitNormalizationLayer</a></div><div class="ttdeci">void VisitNormalizationLayer(const IConnectableLayer *layer, const NormalizationDescriptor &amp;normalizationDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a normalization layer should call back to when its Accept(ILayerVisitor&amp;) function is i...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00364">QuantizerVisitor.cpp:364</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00444">Descriptors.hpp:444</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00610">Descriptors.hpp:610</a></div></div>
<div class="ttc" id="_i_network_quantizer_8hpp_xhtml"><div class="ttname"><a href="_i_network_quantizer_8hpp.xhtml">INetworkQuantizer.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_aaee763832ceb783dcffde56e1c1a6d93"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#aaee763832ceb783dcffde56e1c1a6d93">armnn::QuantizerVisitor::VisitPooling2dLayer</a></div><div class="ttdeci">void VisitPooling2dLayer(const IConnectableLayer *layer, const Pooling2dDescriptor &amp;pooling2dDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a pooling layer should call back to when its Accept(ILayerVisitor&amp;) function is invoked...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00412">QuantizerVisitor.cpp:412</a></div></div>
<div class="ttc" id="structarmnn_1_1_permute_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_permute_descriptor.xhtml">armnn::PermuteDescriptor</a></div><div class="ttdoc">A PermuteDescriptor for the PermuteLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00102">Descriptors.hpp:102</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_abbdd655f9e0bec625369079ed97f1328"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#abbdd655f9e0bec625369079ed97f1328">armnn::QuantizerVisitor::VisitFullyConnectedLayer</a></div><div class="ttdeci">void VisitFullyConnectedLayer(const IConnectableLayer *layer, const FullyConnectedDescriptor &amp;desc, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr) override</div><div class="ttdoc">Function that a fully connected layer should call back to when its Accept(ILayerVisitor&amp;) function is...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00285">QuantizerVisitor.cpp:285</a></div></div>
<div class="ttc" id="classarmnn_1_1_quantizer_visitor_xhtml_afbea8aa2295f2ab71ea5bb64ccd47871"><div class="ttname"><a href="classarmnn_1_1_quantizer_visitor.xhtml#afbea8aa2295f2ab71ea5bb64ccd47871">armnn::QuantizerVisitor::VisitSplitterLayer</a></div><div class="ttdeci">void VisitSplitterLayer(const IConnectableLayer *layer, const SplitterDescriptor &amp;splitterDescriptor, const char *name=nullptr) override</div><div class="ttdoc">Function that a splitter layer should call back to when its Accept(ILayerVisitor&amp;) function is invoke...</div><div class="ttdef"><b>Definition:</b> <a href="_quantizer_visitor_8cpp_source.xhtml#l00501">QuantizerVisitor.cpp:501</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_quantizer_visitor_8hpp.xhtml">QuantizerVisitor.hpp</a></li>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:08 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
