<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: ITfLiteParser Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ITfLiteParser Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_i_tf_lite_parser_8hpp_source.xhtml">ITfLiteParser.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ITfLiteParser:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.png" usemap="#ITfLiteParser_map" alt=""/>
  <map id="ITfLiteParser_map" name="ITfLiteParser_map">
<area href="classarmnn_tf_lite_parser_1_1_tf_lite_parser.xhtml" alt="TfLiteParser" shape="rect" coords="0,56,84,80"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_tf_lite_parser_1_1_i_tf_lite_parser_1_1_tf_lite_parser_options.xhtml">TfLiteParserOptions</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad92bc619ba8c78c9a4200d6635fde326"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#ad92bc619ba8c78c9a4200d6635fde326">CreateNetworkFromBinaryFile</a> (const char *graphFile)=0</td></tr>
<tr class="memdesc:ad92bc619ba8c78c9a4200d6635fde326"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the network from a flatbuffers binary file on disk.  <a href="#ad92bc619ba8c78c9a4200d6635fde326">More...</a><br /></td></tr>
<tr class="separator:ad92bc619ba8c78c9a4200d6635fde326"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dd0134440a006226f95d547f0b3e89c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a7dd0134440a006226f95d547f0b3e89c">CreateNetworkFromBinary</a> (const std::vector&lt; uint8_t &gt; &amp;binaryContent)=0</td></tr>
<tr class="memdesc:a7dd0134440a006226f95d547f0b3e89c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the network from a flatbuffers binary.  <a href="#a7dd0134440a006226f95d547f0b3e89c">More...</a><br /></td></tr>
<tr class="separator:a7dd0134440a006226f95d547f0b3e89c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a276dd9f2bb03bd0ea4424c5e5512ef"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn_tf_lite_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a5a276dd9f2bb03bd0ea4424c5e5512ef">GetNetworkInputBindingInfo</a> (size_t subgraphId, const std::string &amp;name) const =0</td></tr>
<tr class="memdesc:a5a276dd9f2bb03bd0ea4424c5e5512ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve binding info (layer id and tensor info) for the network input identified by the given layer name and subgraph id.  <a href="#a5a276dd9f2bb03bd0ea4424c5e5512ef">More...</a><br /></td></tr>
<tr class="separator:a5a276dd9f2bb03bd0ea4424c5e5512ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5da770529a8e9a75a6efd878f6307740"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn_tf_lite_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a5da770529a8e9a75a6efd878f6307740">GetNetworkOutputBindingInfo</a> (size_t subgraphId, const std::string &amp;name) const =0</td></tr>
<tr class="memdesc:a5da770529a8e9a75a6efd878f6307740"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve binding info (layer id and tensor info) for the network output identified by the given layer name and subgraph id.  <a href="#a5da770529a8e9a75a6efd878f6307740">More...</a><br /></td></tr>
<tr class="separator:a5da770529a8e9a75a6efd878f6307740"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4185c55afdabd36f63cd50a8cafab00"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#ad4185c55afdabd36f63cd50a8cafab00">GetSubgraphCount</a> () const =0</td></tr>
<tr class="memdesc:ad4185c55afdabd36f63cd50a8cafab00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the number of subgraphs in the parsed model.  <a href="#ad4185c55afdabd36f63cd50a8cafab00">More...</a><br /></td></tr>
<tr class="separator:ad4185c55afdabd36f63cd50a8cafab00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a394089772c3eb50f180906c145b5bc11"><td class="memItemLeft" align="right" valign="top">virtual std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a394089772c3eb50f180906c145b5bc11">GetSubgraphInputTensorNames</a> (size_t subgraphId) const =0</td></tr>
<tr class="memdesc:a394089772c3eb50f180906c145b5bc11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the input tensor names for a given subgraph.  <a href="#a394089772c3eb50f180906c145b5bc11">More...</a><br /></td></tr>
<tr class="separator:a394089772c3eb50f180906c145b5bc11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72c5886e46c21556946d4f62eaf16270"><td class="memItemLeft" align="right" valign="top">virtual std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a72c5886e46c21556946d4f62eaf16270">GetSubgraphOutputTensorNames</a> (size_t subgraphId) const =0</td></tr>
<tr class="memdesc:a72c5886e46c21556946d4f62eaf16270"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the output tensor names for a given subgraph.  <a href="#a72c5886e46c21556946d4f62eaf16270">More...</a><br /></td></tr>
<tr class="separator:a72c5886e46c21556946d4f62eaf16270"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:acf8cc929eadbabf197b36f7364d3d2cb"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">ITfLiteParser</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#acf8cc929eadbabf197b36f7364d3d2cb">CreateRaw</a> (const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="structarmnn_tf_lite_parser_1_1_i_tf_lite_parser_1_1_tf_lite_parser_options.xhtml">TfLiteParserOptions</a> &gt; &amp;<a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>())</td></tr>
<tr class="separator:acf8cc929eadbabf197b36f7364d3d2cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9932449a89a62cfcfd72a4fedbee1ab7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearmnn_tf_lite_parser.xhtml#af69bedce3c37be895f75146016ba8a17">ITfLiteParserPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a9932449a89a62cfcfd72a4fedbee1ab7">Create</a> (const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="structarmnn_tf_lite_parser_1_1_i_tf_lite_parser_1_1_tf_lite_parser_options.xhtml">TfLiteParserOptions</a> &gt; &amp;<a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>())</td></tr>
<tr class="separator:a9932449a89a62cfcfd72a4fedbee1ab7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29a2a153962a701843d5c8ae953cb032"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a29a2a153962a701843d5c8ae953cb032">Destroy</a> (<a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">ITfLiteParser</a> *parser)</td></tr>
<tr class="separator:a29a2a153962a701843d5c8ae953cb032"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a13235fd3261f0637807bc8e8970124b0"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a13235fd3261f0637807bc8e8970124b0">~ITfLiteParser</a> ()</td></tr>
<tr class="separator:a13235fd3261f0637807bc8e8970124b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_i_tf_lite_parser_8hpp_source.xhtml#l00025">25</a> of file <a class="el" href="_i_tf_lite_parser_8hpp_source.xhtml">ITfLiteParser.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a13235fd3261f0637807bc8e8970124b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13235fd3261f0637807bc8e8970124b0">&#9670;&nbsp;</a></span>~ITfLiteParser()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">ITfLiteParser</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_tf_lite_parser_8hpp_source.xhtml#l00066">66</a> of file <a class="el" href="_i_tf_lite_parser_8hpp_source.xhtml">ITfLiteParser.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{};</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9932449a89a62cfcfd72a4fedbee1ab7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9932449a89a62cfcfd72a4fedbee1ab7">&#9670;&nbsp;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn_tf_lite_parser.xhtml#af69bedce3c37be895f75146016ba8a17">ITfLiteParserPtr</a> Create </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="structarmnn_tf_lite_parser_1_1_i_tf_lite_parser_1_1_tf_lite_parser_options.xhtml">TfLiteParserOptions</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l03054">3054</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l03049">ITfLiteParser::CreateRaw()</a>, and <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l03059">ITfLiteParser::Destroy()</a>.</p>
<div class="fragment"><div class="line"><a name="l03055"></a><span class="lineno"> 3055</span>&#160;{</div><div class="line"><a name="l03056"></a><span class="lineno"> 3056</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn_tf_lite_parser.xhtml#af69bedce3c37be895f75146016ba8a17">ITfLiteParserPtr</a>(<a class="code" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#acf8cc929eadbabf197b36f7364d3d2cb">CreateRaw</a>(options), &amp;<a class="code" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a29a2a153962a701843d5c8ae953cb032">ITfLiteParser::Destroy</a>);</div><div class="line"><a name="l03057"></a><span class="lineno"> 3057</span>&#160;}</div><div class="ttc" id="namespacearmnn_tf_lite_parser_xhtml_af69bedce3c37be895f75146016ba8a17"><div class="ttname"><a href="namespacearmnn_tf_lite_parser.xhtml#af69bedce3c37be895f75146016ba8a17">armnnTfLiteParser::ITfLiteParserPtr</a></div><div class="ttdeci">std::unique_ptr&lt; ITfLiteParser, void(*)(ITfLiteParser *parser)&gt; ITfLiteParserPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_tf_lite_parser_8hpp_source.xhtml#l00023">ITfLiteParser.hpp:23</a></div></div>
<div class="ttc" id="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser_xhtml_a29a2a153962a701843d5c8ae953cb032"><div class="ttname"><a href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a29a2a153962a701843d5c8ae953cb032">armnnTfLiteParser::ITfLiteParser::Destroy</a></div><div class="ttdeci">static void Destroy(ITfLiteParser *parser)</div><div class="ttdef"><b>Definition:</b> <a href="_tf_lite_parser_8cpp_source.xhtml#l03059">TfLiteParser.cpp:3059</a></div></div>
<div class="ttc" id="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser_xhtml_acf8cc929eadbabf197b36f7364d3d2cb"><div class="ttname"><a href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#acf8cc929eadbabf197b36f7364d3d2cb">armnnTfLiteParser::ITfLiteParser::CreateRaw</a></div><div class="ttdeci">static ITfLiteParser * CreateRaw(const armnn::Optional&lt; TfLiteParserOptions &gt; &amp;options=armnn::EmptyOptional())</div><div class="ttdef"><b>Definition:</b> <a href="_tf_lite_parser_8cpp_source.xhtml#l03049">TfLiteParser.cpp:3049</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7dd0134440a006226f95d547f0b3e89c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dd0134440a006226f95d547f0b3e89c">&#9670;&nbsp;</a></span>CreateNetworkFromBinary()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromBinary </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; uint8_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>binaryContent</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create the network from a flatbuffers binary. </p>

<p>Implemented in <a class="el" href="classarmnn_tf_lite_parser_1_1_tf_lite_parser.xhtml#ae8ee09f5e3e78ecfdf00acfdc37588dc">TfLiteParser</a>.</p>

</div>
</div>
<a id="ad92bc619ba8c78c9a4200d6635fde326"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad92bc619ba8c78c9a4200d6635fde326">&#9670;&nbsp;</a></span>CreateNetworkFromBinaryFile()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromBinaryFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>graphFile</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create the network from a flatbuffers binary file on disk. </p>

<p>Implemented in <a class="el" href="classarmnn_tf_lite_parser_1_1_tf_lite_parser.xhtml#a012b24cafd443425314d4f9e06cec6c1">TfLiteParser</a>.</p>

</div>
</div>
<a id="acf8cc929eadbabf197b36f7364d3d2cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf8cc929eadbabf197b36f7364d3d2cb">&#9670;&nbsp;</a></span>CreateRaw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">ITfLiteParser</a> * CreateRaw </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="structarmnn_tf_lite_parser_1_1_i_tf_lite_parser_1_1_tf_lite_parser_options.xhtml">TfLiteParserOptions</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l03049">3049</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00488">TfLiteParser::TfLiteParser()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l03054">ITfLiteParser::Create()</a>.</p>
<div class="fragment"><div class="line"><a name="l03050"></a><span class="lineno"> 3050</span>&#160;{</div><div class="line"><a name="l03051"></a><span class="lineno"> 3051</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> TfLiteParser(options);</div><div class="line"><a name="l03052"></a><span class="lineno"> 3052</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a29a2a153962a701843d5c8ae953cb032"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29a2a153962a701843d5c8ae953cb032">&#9670;&nbsp;</a></span>Destroy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">ITfLiteParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l03059">3059</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l03054">ITfLiteParser::Create()</a>.</p>
<div class="fragment"><div class="line"><a name="l03060"></a><span class="lineno"> 3060</span>&#160;{</div><div class="line"><a name="l03061"></a><span class="lineno"> 3061</span>&#160;    <span class="keyword">delete</span> parser;</div><div class="line"><a name="l03062"></a><span class="lineno"> 3062</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a5a276dd9f2bb03bd0ea4424c5e5512ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a276dd9f2bb03bd0ea4424c5e5512ef">&#9670;&nbsp;</a></span>GetNetworkInputBindingInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn_tf_lite_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a> GetNetworkInputBindingInfo </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>subgraphId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieve binding info (layer id and tensor info) for the network input identified by the given layer name and subgraph id. </p>

<p>Implemented in <a class="el" href="classarmnn_tf_lite_parser_1_1_tf_lite_parser.xhtml#a91ba75587a31033088cb4f156e847efb">TfLiteParser</a>.</p>

</div>
</div>
<a id="a5da770529a8e9a75a6efd878f6307740"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5da770529a8e9a75a6efd878f6307740">&#9670;&nbsp;</a></span>GetNetworkOutputBindingInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearmnn_tf_lite_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a> GetNetworkOutputBindingInfo </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>subgraphId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieve binding info (layer id and tensor info) for the network output identified by the given layer name and subgraph id. </p>

<p>Implemented in <a class="el" href="classarmnn_tf_lite_parser_1_1_tf_lite_parser.xhtml#a475b7cb5db683bb6fbb1c3fae40cb2b3">TfLiteParser</a>.</p>

</div>
</div>
<a id="ad4185c55afdabd36f63cd50a8cafab00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4185c55afdabd36f63cd50a8cafab00">&#9670;&nbsp;</a></span>GetSubgraphCount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual size_t GetSubgraphCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the number of subgraphs in the parsed model. </p>

<p>Implemented in <a class="el" href="classarmnn_tf_lite_parser_1_1_tf_lite_parser.xhtml#ae18739116b52dbab31bbf490450beb90">TfLiteParser</a>.</p>

</div>
</div>
<a id="a394089772c3eb50f180906c145b5bc11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a394089772c3eb50f180906c145b5bc11">&#9670;&nbsp;</a></span>GetSubgraphInputTensorNames()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::vector&lt;std::string&gt; GetSubgraphInputTensorNames </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>subgraphId</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the input tensor names for a given subgraph. </p>

<p>Implemented in <a class="el" href="classarmnn_tf_lite_parser_1_1_tf_lite_parser.xhtml#a58501692772880e7ef55485a4c95aab9">TfLiteParser</a>.</p>

</div>
</div>
<a id="a72c5886e46c21556946d4f62eaf16270"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72c5886e46c21556946d4f62eaf16270">&#9670;&nbsp;</a></span>GetSubgraphOutputTensorNames()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::vector&lt;std::string&gt; GetSubgraphOutputTensorNames </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>subgraphId</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the output tensor names for a given subgraph. </p>

<p>Implemented in <a class="el" href="classarmnn_tf_lite_parser_1_1_tf_lite_parser.xhtml#ab97e69d07f06e392bd0cc2e5bcbf1be6">TfLiteParser</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnnTfLiteParser/<a class="el" href="_i_tf_lite_parser_8hpp_source.xhtml">ITfLiteParser.hpp</a></li>
<li>src/armnnTfLiteParser/<a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn_tf_lite_parser.xhtml">armnnTfLiteParser</a></li><li class="navelem"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">ITfLiteParser</a></li>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:21 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
