<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: FileOnlyProfilingConnection Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1profiling_1_1_file_only_profiling_connection-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">FileOnlyProfilingConnection Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml">FileOnlyProfilingConnection.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for FileOnlyProfilingConnection:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1profiling_1_1_file_only_profiling_connection.png" usemap="#FileOnlyProfilingConnection_map" alt=""/>
  <map id="FileOnlyProfilingConnection_map" name="FileOnlyProfilingConnection_map">
<area href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml" alt="IProfilingConnection" shape="rect" coords="0,0,171,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5cd8e59fba0c1b4f5e9b09de59a75951"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a5cd8e59fba0c1b4f5e9b09de59a75951">FileOnlyProfilingConnection</a> (const Runtime::CreationOptions::ExternalProfilingOptions &amp;<a class="el" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>, const bool quietOp=<a class="el" href="_ref_layer_tests_8cpp.xhtml#a37f1c3ccc9fc906be85185350dd83d48">true</a>)</td></tr>
<tr class="separator:a5cd8e59fba0c1b4f5e9b09de59a75951"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af05e56dee203f12a40d407ef64023467"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#af05e56dee203f12a40d407ef64023467">~FileOnlyProfilingConnection</a> ()</td></tr>
<tr class="separator:af05e56dee203f12a40d407ef64023467"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91bdc9d5497d47f5d707418beb83b140"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a91bdc9d5497d47f5d707418beb83b140">IsOpen</a> () const override</td></tr>
<tr class="separator:a91bdc9d5497d47f5d707418beb83b140"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f9aecd570c4e5e6d41337f0e2f1adf5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a0f9aecd570c4e5e6d41337f0e2f1adf5">Close</a> () override</td></tr>
<tr class="separator:a0f9aecd570c4e5e6d41337f0e2f1adf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42eb542b5a1d73d00c4ce474140bb78c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a42eb542b5a1d73d00c4ce474140bb78c">WritePacket</a> (const unsigned char *buffer, uint32_t length) override</td></tr>
<tr class="separator:a42eb542b5a1d73d00c4ce474140bb78c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1adbda8257d3a74a0566e0d8407ff458"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1profiling_1_1_packet.xhtml">Packet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a1adbda8257d3a74a0566e0d8407ff458">ReadPacket</a> (uint32_t timeout) override</td></tr>
<tr class="separator:a1adbda8257d3a74a0566e0d8407ff458"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1profiling_1_1_i_profiling_connection"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1profiling_1_1_i_profiling_connection')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml">IProfilingConnection</a></td></tr>
<tr class="memitem:a8c5a75b8ee005a7aa9391f3991480d74 inherit pub_methods_classarmnn_1_1profiling_1_1_i_profiling_connection"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml#a8c5a75b8ee005a7aa9391f3991480d74">~IProfilingConnection</a> ()</td></tr>
<tr class="separator:a8c5a75b8ee005a7aa9391f3991480d74 inherit pub_methods_classarmnn_1_1profiling_1_1_i_profiling_connection"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml#l00037">37</a> of file <a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml">FileOnlyProfilingConnection.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a5cd8e59fba0c1b4f5e9b09de59a75951"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cd8e59fba0c1b4f5e9b09de59a75951">&#9670;&nbsp;</a></span>FileOnlyProfilingConnection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml">FileOnlyProfilingConnection</a> </td>
          <td>(</td>
          <td class="paramtype">const Runtime::CreationOptions::ExternalProfilingOptions &amp;&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>quietOp</em> = <code><a class="el" href="_ref_layer_tests_8cpp.xhtml#a37f1c3ccc9fc906be85185350dd83d48">true</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml#l00040">40</a> of file <a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml">FileOnlyProfilingConnection.hpp</a>.</p>

<p class="reference">References <a class="el" href="_network_sockets_8cpp_source.xhtml#l00028">armnnUtils::Sockets::Close()</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        : m_Options(<a class="code" href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a>)</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        , m_QuietOp(quietOp)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        , m_Endianness(<a class="code" href="namespacearmnn_1_1profiling.xhtml#a006732ecc1f16712db06bf622eb79651ab2db365e5027e9a57988c7054e9bd6b7">TargetEndianness::LeWire</a>)    <span class="comment">// Set a sensible default. WaitForStreamMeta will set a real value.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        {};</div><div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a006732ecc1f16712db06bf622eb79651ab2db365e5027e9a57988c7054e9bd6b7"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a006732ecc1f16712db06bf622eb79651ab2db365e5027e9a57988c7054e9bd6b7">armnn::profiling::TargetEndianness::LeWire</a></div></div>
<div class="ttc" id="_file_only_profiling_decorator_tests_8cpp_xhtml_a6560146509197f3e197d8d36f76c1347"><div class="ttname"><a href="_file_only_profiling_decorator_tests_8cpp.xhtml#a6560146509197f3e197d8d36f76c1347">options</a></div><div class="ttdeci">armnn::Runtime::CreationOptions::ExternalProfilingOptions options</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_decorator_tests_8cpp_source.xhtml#l00045">FileOnlyProfilingDecoratorTests.cpp:45</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="af05e56dee203f12a40d407ef64023467"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af05e56dee203f12a40d407ef64023467">&#9670;&nbsp;</a></span>~FileOnlyProfilingConnection()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml">FileOnlyProfilingConnection</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00021">21</a> of file <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a>.</p>

<p class="reference">References <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00032">FileOnlyProfilingConnection::Close()</a>.</p>
<div class="fragment"><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a0f9aecd570c4e5e6d41337f0e2f1adf5">Close</a>();</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_file_only_profiling_connection_xhtml_a0f9aecd570c4e5e6d41337f0e2f1adf5"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a0f9aecd570c4e5e6d41337f0e2f1adf5">armnn::profiling::FileOnlyProfilingConnection::Close</a></div><div class="ttdeci">void Close() override</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_connection_8cpp_source.xhtml#l00032">FileOnlyProfilingConnection.cpp:32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0f9aecd570c4e5e6d41337f0e2f1adf5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f9aecd570c4e5e6d41337f0e2f1adf5">&#9670;&nbsp;</a></span>Close()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml#aacb6d0e5e6d570cdc2b0da14c3921ff0">IProfilingConnection</a>.</p>

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn_1_1profiling.xhtml#a006732ecc1f16712db06bf622eb79651aefe19217ee8d2186e7bbecbf2f171eb9">armnn::profiling::BeWire</a>, <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>, <a class="el" href="namespacearmnn_1_1profiling.xhtml#a006732ecc1f16712db06bf622eb79651ab2db365e5027e9a57988c7054e9bd6b7">armnn::profiling::LeWire</a>, <a class="el" href="_numeric_cast_8hpp_source.xhtml#l00033">armnn::numeric_cast()</a>, <a class="el" href="_directory_capture_command_handler_8cpp_source.xhtml#l00020">armnn::profiling::uint16_t_size</a>, <a class="el" href="_directory_capture_command_handler_8cpp_source.xhtml#l00021">armnn::profiling::uint32_t_size</a>, <a class="el" href="_profiling_utils_8cpp_source.xhtml#l00126">armnn::profiling::WriteUint16()</a>, and <a class="el" href="_profiling_utils_8cpp_source.xhtml#l00119">armnn::profiling::WriteUint32()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00166">FileOnlyProfilingConnection::ReadPacket()</a>, and <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00021">FileOnlyProfilingConnection::~FileOnlyProfilingConnection()</a>.</p>
<div class="fragment"><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="comment">// Dump any unread packets out of the queue.</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; m_PacketQueue.size(); i++)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        m_PacketQueue.pop();</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a91bdc9d5497d47f5d707418beb83b140"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91bdc9d5497d47f5d707418beb83b140">&#9670;&nbsp;</a></span>IsOpen()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOpen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml#a8a3511046982c64efa3e3833d749e5ef">IProfilingConnection</a>.</p>

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00026">26</a> of file <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="comment">// This type of connection is always open.</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1adbda8257d3a74a0566e0d8407ff458"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1adbda8257d3a74a0566e0d8407ff458">&#9670;&nbsp;</a></span>ReadPacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1profiling_1_1_packet.xhtml">Packet</a> ReadPacket </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>timeout</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml#a935e16d85893a31f23cd78e47b85466d">IProfilingConnection</a>.</p>

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00166">166</a> of file <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn_1_1profiling.xhtml#a006732ecc1f16712db06bf622eb79651aefe19217ee8d2186e7bbecbf2f171eb9">armnn::profiling::BeWire</a>, <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00032">FileOnlyProfilingConnection::Close()</a>, <a class="el" href="namespacearmnn_1_1profiling.xhtml#a083225fb2313ee056142bbee0c44de36ad2cacb6bc37a3363ae810b656e3b6190">armnn::profiling::CounterDirectory</a>, <a class="el" href="namespacearmnn_1_1profiling.xhtml#a083225fb2313ee056142bbee0c44de36ae43273a3645f4894a1088081feb9827d">armnn::profiling::StreamMetaData</a>, and <a class="el" href="namespacearmnn_1_1profiling.xhtml#a083225fb2313ee056142bbee0c44de36a88183b946cc5f0e8c96b2e66e1c74a7e">armnn::profiling::Unknown</a>.</p>
<div class="fragment"><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;{</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    std::unique_lock&lt;std::mutex&gt; lck(m_PacketAvailableMutex);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="comment">// Here we are using m_PacketQueue.empty() as a predicate variable</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment">// The conditional variable will wait until packetQueue is not empty or until a timeout</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">if</span>(!m_ConditionPacketAvailable.wait_for(lck,</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                                            std::chrono::milliseconds(timeout),</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                            [&amp;]{return !m_PacketQueue.empty();}))</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_timeout_exception.xhtml">armnn::TimeoutException</a>(<span class="stringliteral">&quot;Thread has timed out as per requested time limit&quot;</span>);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    Packet returnedPacket = std::move(m_PacketQueue.front());</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    m_PacketQueue.pop();</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">return</span> returnedPacket;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_timeout_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_timeout_exception.xhtml">armnn::TimeoutException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00135">Exceptions.hpp:135</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a42eb542b5a1d73d00c4ce474140bb78c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42eb542b5a1d73d00c4ce474140bb78c">&#9670;&nbsp;</a></span>WritePacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool WritePacket </td>
          <td>(</td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml#ac78c6bd1a545934a805c88194214b09d">IProfilingConnection</a>.</p>

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00112">112</a> of file <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn_1_1profiling.xhtml#a083225fb2313ee056142bbee0c44de36ad2cacb6bc37a3363ae810b656e3b6190">armnn::profiling::CounterDirectory</a>, <a class="el" href="classarmnn_1_1profiling_1_1_i_counter_directory.xhtml#a718a75d4c178cf3f687b3f27b8f55091">ICounterDirectory::GetCategories()</a>, <a class="el" href="_encode_version_8hpp_source.xhtml#l00045">Version::GetEncodedValue()</a>, <a class="el" href="_packet_version_resolver_8cpp_source.xhtml#l00055">PacketVersionResolver::ResolvePacketVersion()</a>, and <a class="el" href="namespacearmnn_1_1profiling.xhtml#a083225fb2313ee056142bbee0c44de36ae43273a3645f4894a1088081feb9827d">armnn::profiling::StreamMetaData</a>.</p>
<div class="fragment"><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    BOOST_ASSERT(buffer);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="comment">// Read Header and determine case</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    uint32_t outgoingHeaderAsWords[2];</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="namespacearmnn_1_1profiling.xhtml#a083225fb2313ee056142bbee0c44de36">PackageActivity</a> packageActivity = GetPackageActivity(buffer, outgoingHeaderAsWords);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">switch</span> (packageActivity)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a083225fb2313ee056142bbee0c44de36ae43273a3645f4894a1088081feb9827d">PackageActivity::StreamMetaData</a>:</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keywordflow">if</span> (!WaitForStreamMeta(buffer, length))</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <span class="keywordflow">return</span> EXIT_FAILURE;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            SendConnectionAck();</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a083225fb2313ee056142bbee0c44de36ad2cacb6bc37a3363ae810b656e3b6190">PackageActivity::CounterDirectory</a>:</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            std::unique_ptr&lt;unsigned char[]&gt; uniqueCounterData = std::make_unique&lt;unsigned char[]&gt;(length - 8);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            std::memcpy(uniqueCounterData.get(), buffer + 8, length - 8);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            Packet directoryPacket(outgoingHeaderAsWords[0], length - 8, uniqueCounterData);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <a class="code" href="classarmnn_1_1profiling_1_1_packet_version_resolver.xhtml">armnn::profiling::PacketVersionResolver</a> packetVersionResolver;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            DirectoryCaptureCommandHandler directoryCaptureCommandHandler(</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                0, 2, packetVersionResolver.<a class="code" href="classarmnn_1_1profiling_1_1_packet_version_resolver.xhtml#ac8ad466123304f923e64997ac096926a">ResolvePacketVersion</a>(0, 2).<a class="code" href="classarmnn_1_1profiling_1_1_version.xhtml#a0ab0d5a402c197d4093cbc5fdbf81214">GetEncodedValue</a>());</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            directoryCaptureCommandHandler.operator()(directoryPacket);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keyword">const</span> ICounterDirectory&amp; counterDirectory = directoryCaptureCommandHandler.GetCounterDirectory();</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; category : counterDirectory.GetCategories())</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                <span class="comment">// Remember we need to translate the Uid&#39;s from our CounterDirectory instance to the parent one.</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                std::vector&lt;uint16_t&gt; translatedCounters;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <span class="keywordflow">for</span> (<span class="keyword">auto</span> <span class="keyword">const</span>&amp; copyUid : category-&gt;m_Counters)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                    translatedCounters.emplace_back(directoryCaptureCommandHandler.TranslateUIDCopyToOriginal(copyUid));</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                m_IdList.insert(std::end(m_IdList), std::begin(translatedCounters), std::end(translatedCounters));</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            }</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            SendCounterSelectionPacket();</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        }</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        {</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        }</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_version_xhtml_a0ab0d5a402c197d4093cbc5fdbf81214"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_version.xhtml#a0ab0d5a402c197d4093cbc5fdbf81214">armnn::profiling::Version::GetEncodedValue</a></div><div class="ttdeci">uint32_t GetEncodedValue()</div><div class="ttdef"><b>Definition:</b> <a href="_encode_version_8hpp_source.xhtml#l00045">EncodeVersion.hpp:45</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_packet_version_resolver_xhtml_ac8ad466123304f923e64997ac096926a"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_packet_version_resolver.xhtml#ac8ad466123304f923e64997ac096926a">armnn::profiling::PacketVersionResolver::ResolvePacketVersion</a></div><div class="ttdeci">Version ResolvePacketVersion(uint32_t familyId, uint32_t packetId) const</div><div class="ttdef"><b>Definition:</b> <a href="_packet_version_resolver_8cpp_source.xhtml#l00055">PacketVersionResolver.cpp:55</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_packet_version_resolver_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_packet_version_resolver.xhtml">armnn::profiling::PacketVersionResolver</a></div><div class="ttdef"><b>Definition:</b> <a href="_packet_version_resolver_8hpp_source.xhtml#l00036">PacketVersionResolver.hpp:36</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a083225fb2313ee056142bbee0c44de36ae43273a3645f4894a1088081feb9827d"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a083225fb2313ee056142bbee0c44de36ae43273a3645f4894a1088081feb9827d">armnn::profiling::PackageActivity::StreamMetaData</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a083225fb2313ee056142bbee0c44de36ad2cacb6bc37a3363ae810b656e3b6190"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a083225fb2313ee056142bbee0c44de36ad2cacb6bc37a3363ae810b656e3b6190">armnn::profiling::PackageActivity::CounterDirectory</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a083225fb2313ee056142bbee0c44de36"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a083225fb2313ee056142bbee0c44de36">armnn::profiling::PackageActivity</a></div><div class="ttdeci">PackageActivity</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_connection_8hpp_source.xhtml#l00030">FileOnlyProfilingConnection.hpp:30</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/profiling/<a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml">FileOnlyProfilingConnection.hpp</a></li>
<li>src/profiling/<a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="namespacearmnn_1_1profiling.xhtml">profiling</a></li><li class="navelem"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml">FileOnlyProfilingConnection</a></li>
    <li class="footer">Generated on Fri Mar 13 2020 16:09:21 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
