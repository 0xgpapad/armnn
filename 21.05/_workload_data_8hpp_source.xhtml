<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/WorkloadData.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_workload_data_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">WorkloadData.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_workload_data_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tensor_handle_fwd_8hpp.xhtml">armnn/backends/TensorHandleFwd.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_2backends_2_i_tensor_handle_8hpp.xhtml">armnn/backends/ITensorHandle.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_internal_types_8hpp.xhtml">InternalTypes.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_deprecated_8hpp.xhtml">armnn/Deprecated.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_descriptors_8hpp.xhtml">armnn/Descriptors.hpp</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_exceptions_8hpp.xhtml">armnn/Exceptions.hpp</a>&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_types_8hpp.xhtml">armnn/Types.hpp</a>&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tensor_8hpp.xhtml">armnn/Tensor.hpp</a>&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="src_2backends_2backends_common_2_workload_info_8hpp.xhtml">backendsCommon/WorkloadInfo.hpp</a>&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">//A helper function that returns the bias data type required for given input data type.</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="namespacearmnn.xhtml#a872803f5667392efc3c8e5607bd453ad">GetBiasDataType</a>(<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> inputDataType);</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">struct </span>WorkloadInfo;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="structarmnn_1_1_queue_descriptor.xhtml">   28</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">   30</a></span>&#160;    std::vector&lt;ITensorHandle*&gt; <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>;</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">   31</a></span>&#160;    std::vector&lt;ITensorHandle*&gt; <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a>;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="structarmnn_1_1_queue_descriptor.xhtml#a2f2e6134cabedfc58aa53fe38a2b8a67">   32</a></span>&#160;    <span class="keywordtype">void</span>* <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a2f2e6134cabedfc58aa53fe38a2b8a67">m_AdditionalInfoObject</a>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a765d2cee4ccce5b9467e0c2b6d25b84a">ValidateInputsOutputs</a>(<span class="keyword">const</span> std::string&amp; descName,</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                               <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numExpectedIn,</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                               <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numExpectedOut) <span class="keyword">const</span>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="structarmnn_1_1_queue_descriptor.xhtml#a0428f0a7927f8c29264d9c9a287840da">   39</a></span>&#160;    <span class="keyword">const</span> T* <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a0428f0a7927f8c29264d9c9a287840da">GetAdditionalInformation</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>T*<span class="keyword">&gt;</span>(<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a2f2e6134cabedfc58aa53fe38a2b8a67">m_AdditionalInfoObject</a>);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#af67c3785421c91d37fb22132d441f704">~QueueDescriptor</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="structarmnn_1_1_queue_descriptor.xhtml#ab088ef357662bcea45cbd49674ad0ff7">   46</a></span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#ab088ef357662bcea45cbd49674ad0ff7">QueueDescriptor</a>()</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        : m_AdditionalInfoObject(nullptr)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    {}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#ab088ef357662bcea45cbd49674ad0ff7">QueueDescriptor</a>(<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a> <span class="keyword">const</span>&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a>&amp; <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a1c928b975a0de05cf2536c721ba6b521">operator=</a>(<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a> <span class="keyword">const</span>&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;};</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">// Base class for queue descriptors which contain parameters.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> LayerDescriptor&gt;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">   55</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> : <span class="keyword">public</span> <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">   57</a></span>&#160;    LayerDescriptor <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    ~<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>(<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> <span class="keyword">const</span>&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&amp; <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a1c928b975a0de05cf2536c721ba6b521">operator=</a>(<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> <span class="keyword">const</span>&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;};</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="structarmnn_1_1_map_queue_descriptor.xhtml">   66</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_map_queue_descriptor.xhtml">MapQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;};</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="structarmnn_1_1_unmap_queue_descriptor.xhtml">   71</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_unmap_queue_descriptor.xhtml">UnmapQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;};</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">   76</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">MemCopyQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;};</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a2231ac018fe2c465f2d42fef597d67e7">   81</a></span>&#160;<span class="keyword">using</span> <a class="code" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">InputQueueDescriptor</a> = <a class="code" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">MemCopyQueueDescriptor</a>;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a37a1a6b381ccc76df203fee023234996">   82</a></span>&#160;<span class="keyword">using</span> <a class="code" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">OutputQueueDescriptor</a> = <a class="code" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">MemCopyQueueDescriptor</a>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="structarmnn_1_1_mem_import_queue_descriptor.xhtml">   84</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_mem_import_queue_descriptor.xhtml">MemImportQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;};</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="structarmnn_1_1_mem_sync_queue_descriptor.xhtml">   89</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_mem_sync_queue_descriptor.xhtml">MemSyncQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;};</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">// Softmax layer workload data.</span></div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="structarmnn_1_1_softmax_queue_descriptor.xhtml">   95</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_softmax_queue_descriptor.xhtml">SoftmaxQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;SoftmaxDescriptor&gt;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;};</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">// Splitter layer workload data.</span></div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="structarmnn_1_1_splitter_queue_descriptor.xhtml">  101</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_splitter_queue_descriptor.xhtml">SplitterQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;ViewsDescriptor&gt;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml">  103</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml">ViewOrigin</a></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml#aaf1763105778061ed5a2863e9ac68c76">  105</a></span>&#160;        <a class="code" href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml#aaf1763105778061ed5a2863e9ac68c76">ViewOrigin</a>() {}</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml#aa139b7f0b8d4028da5355b1a25ac04ca">  106</a></span>&#160;        <a class="code" href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml#aa139b7f0b8d4028da5355b1a25ac04ca">ViewOrigin</a>(std::vector&lt;unsigned int&gt; <span class="keyword">const</span>&amp; origin) : m_Origin(origin) {}</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="comment">//View origin (size of the vector is the same as number of dimensions of the view).</span></div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml#af2f0a8c9eb32861711c0ce30b7986c44">  109</a></span>&#160;        std::vector&lt;unsigned int&gt; <a class="code" href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml#af2f0a8c9eb32861711c0ce30b7986c44">m_Origin</a>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    };</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="comment">//View defines a tensor that will be carved from the input tensor.</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="comment">//View origins are stored here, the extents are defined by sizes of the output tensors.</span></div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="structarmnn_1_1_splitter_queue_descriptor.xhtml#ab1794eb3e74c9700cd3d500fc06dc2e5">  114</a></span>&#160;    std::vector&lt;ViewOrigin&gt; <a class="code" href="structarmnn_1_1_splitter_queue_descriptor.xhtml#ab1794eb3e74c9700cd3d500fc06dc2e5">m_ViewOrigins</a>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;};</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">// Concat layer workload data.</span></div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="structarmnn_1_1_concat_queue_descriptor.xhtml">  120</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_concat_queue_descriptor.xhtml">ConcatQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;OriginsDescriptor&gt;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;{</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml">  122</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml">ViewOrigin</a></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    {</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml#aaf1763105778061ed5a2863e9ac68c76">  124</a></span>&#160;        <a class="code" href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml#aaf1763105778061ed5a2863e9ac68c76">ViewOrigin</a>() {}</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml#a1dacfbc716d2b787e6ea3cfc7e9e2da6">  125</a></span>&#160;        <a class="code" href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml#a1dacfbc716d2b787e6ea3cfc7e9e2da6">ViewOrigin</a>(<span class="keyword">const</span> std::vector&lt;unsigned int&gt;&amp; origin) : m_Origin(origin) {}</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="comment">//View origin (size of the vector is the same as number of dimensions of the view).</span></div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml#af2f0a8c9eb32861711c0ce30b7986c44">  128</a></span>&#160;        std::vector&lt;unsigned int&gt; <a class="code" href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml#af2f0a8c9eb32861711c0ce30b7986c44">m_Origin</a>;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    };</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="comment">//View defines a sub-area of the output tensor that will be filled with the corresponding input tensor.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="comment">//View origins are stored here, the extents are defined by sizes of the input tensors.</span></div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="structarmnn_1_1_concat_queue_descriptor.xhtml#ab1794eb3e74c9700cd3d500fc06dc2e5">  133</a></span>&#160;    std::vector&lt;ViewOrigin&gt; <a class="code" href="structarmnn_1_1_concat_queue_descriptor.xhtml#ab1794eb3e74c9700cd3d500fc06dc2e5">m_ViewOrigins</a>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;};</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">// Deprecated. Use ConcatQueueDescriptor instead</span></div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a308ba160745ba35e1de8d698d0139eb4">  139</a></span>&#160;<span class="keyword">using</span> <a class="code" href="structarmnn_1_1_concat_queue_descriptor.xhtml">MergerQueueDescriptor</a> = <a class="code" href="structarmnn_1_1_concat_queue_descriptor.xhtml">ConcatQueueDescriptor</a>;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">// Stack layer workload data.</span></div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="structarmnn_1_1_stack_queue_descriptor.xhtml">  142</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_stack_queue_descriptor.xhtml">StackQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;StackDescriptor&gt;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;};</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">// Activation layer workload data.</span></div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="structarmnn_1_1_activation_queue_descriptor.xhtml">  148</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_activation_queue_descriptor.xhtml">ActivationQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;ActivationDescriptor&gt;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;};</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="structarmnn_1_1_arg_min_max_queue_descriptor.xhtml">  153</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_arg_min_max_queue_descriptor.xhtml">ArgMinMaxQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;ArgMinMaxDescriptor&gt;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;{</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;};</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="structarmnn_1_1_cast_queue_descriptor.xhtml">  158</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_cast_queue_descriptor.xhtml">CastQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;};</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">// Fill layer workload data.</span></div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="structarmnn_1_1_fill_queue_descriptor.xhtml">  164</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_fill_queue_descriptor.xhtml">FillQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;FillDescriptor&gt;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;};</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">// Fully connected layer workload data.</span></div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml">  170</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml">FullyConnectedQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;FullyConnectedDescriptor&gt;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;{</div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml#a755d2bc24ab7b24dba1092e20e307f7f">  172</a></span>&#160;    <a class="code" href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml#a755d2bc24ab7b24dba1092e20e307f7f">FullyConnectedQueueDescriptor</a>()</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        : m_Weight(nullptr)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        , m_Bias(nullptr)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">  178</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">m_Weight</a>;</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">  179</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">m_Bias</a>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;};</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">// Permute layer workload data.</span></div><div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="structarmnn_1_1_permute_queue_descriptor.xhtml">  185</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_permute_queue_descriptor.xhtml">PermuteQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;PermuteDescriptor&gt;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;{</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;};</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">// Pooling 2D layer workload data.</span></div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="structarmnn_1_1_pooling2d_queue_descriptor.xhtml">  191</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_pooling2d_queue_descriptor.xhtml">Pooling2dQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;Pooling2dDescriptor&gt;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;{</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;};</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">// Convolution 2D layer workload data.</span></div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml">  197</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml">Convolution2dQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;Convolution2dDescriptor&gt;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;{</div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml#a7a17a5850701c7f7c74215d4b98a0721">  199</a></span>&#160;    <a class="code" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml#a7a17a5850701c7f7c74215d4b98a0721">Convolution2dQueueDescriptor</a>()</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        : m_Weight(nullptr)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        , m_Bias(nullptr)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">  205</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">m_Weight</a>;</div><div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">  206</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">m_Bias</a>;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;};</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">// Depthwise Convolution 2D layer workload data.</span></div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml">  212</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml">DepthwiseConvolution2dQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;DepthwiseConvolution2dDescriptor&gt;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;{</div><div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#ab9e53258c253442b468f1c94037bada3">  214</a></span>&#160;    <a class="code" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#ab9e53258c253442b468f1c94037bada3">DepthwiseConvolution2dQueueDescriptor</a>()</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        : m_Weight(nullptr)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        , m_Bias(nullptr)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    }</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">  220</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">m_Weight</a>;</div><div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">  221</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">m_Bias</a>;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;};</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml">  226</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml">DetectionPostProcessQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;DetectionPostProcessDescriptor&gt;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;{</div><div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml#a6d834a3bbfc6050d9d5fd8732689f9b3">  228</a></span>&#160;    <a class="code" href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml#a6d834a3bbfc6050d9d5fd8732689f9b3">DetectionPostProcessQueueDescriptor</a>()</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        : m_Anchors(nullptr)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    {</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno"><a class="line" href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml#aeb542471c225031a9922db3433f40b56">  233</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml#aeb542471c225031a9922db3433f40b56">m_Anchors</a>;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;};</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">// Normalization layer workload data.</span></div><div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="structarmnn_1_1_normalization_queue_descriptor.xhtml">  239</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_normalization_queue_descriptor.xhtml">NormalizationQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;NormalizationDescriptor&gt;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;{</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;};</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">// Add layer workload data.</span></div><div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="structarmnn_1_1_addition_queue_descriptor.xhtml">  245</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_addition_queue_descriptor.xhtml">AdditionQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;{</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;};</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">// Multiplication layer workload data.</span></div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">  251</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">MultiplicationQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;{</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;};</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">// Division layer workload data.</span></div><div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="structarmnn_1_1_division_queue_descriptor.xhtml">  257</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_division_queue_descriptor.xhtml">DivisionQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;{</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;};</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">// Subtraction layer workload data.</span></div><div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">  263</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">SubtractionQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;{</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;};</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">// Maximum layer workload data.</span></div><div class="line"><a name="l00269"></a><span class="lineno"><a class="line" href="structarmnn_1_1_maximum_queue_descriptor.xhtml">  269</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_maximum_queue_descriptor.xhtml">MaximumQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;{</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;};</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">// Mean layer workload data.</span></div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="structarmnn_1_1_mean_queue_descriptor.xhtml">  275</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_mean_queue_descriptor.xhtml">MeanQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;MeanDescriptor&gt;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;{</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;};</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">// Pad layer workload data</span></div><div class="line"><a name="l00281"></a><span class="lineno"><a class="line" href="structarmnn_1_1_pad_queue_descriptor.xhtml">  281</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_pad_queue_descriptor.xhtml">PadQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;PadDescriptor&gt;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;{</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;};</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantize_queue_descriptor.xhtml">  286</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_quantize_queue_descriptor.xhtml">QuantizeQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;{</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;};</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">// Deprecated use ComparisonQueueDescriptor instead</span></div><div class="line"><a name="l00292"></a><span class="lineno"><a class="line" href="structarmnn_1_1_equal_queue_descriptor.xhtml">  292</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_equal_queue_descriptor.xhtml">EqualQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;{</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;};</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">// Batch norm layer workload data.</span></div><div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml">  298</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml">BatchNormalizationQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;BatchNormalizationDescriptor&gt;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;{</div><div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#aaa27bfa8baa39d3bc09adab1977a2a76">  300</a></span>&#160;    <a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#aaa27bfa8baa39d3bc09adab1977a2a76">BatchNormalizationQueueDescriptor</a>()</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        : m_Mean(nullptr)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        , m_Variance(nullptr)</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        , m_Beta(nullptr)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        , m_Gamma(nullptr)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    }</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a0ae7224f556b0d008d060f847c8f8901">  308</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a0ae7224f556b0d008d060f847c8f8901">m_Mean</a>;</div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a744e5178444c4b7bc4d516f4bbee8fcd">  309</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a744e5178444c4b7bc4d516f4bbee8fcd">m_Variance</a>;</div><div class="line"><a name="l00310"></a><span class="lineno"><a class="line" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#addb90eb7f4baa493fce64fdb7f140018">  310</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#addb90eb7f4baa493fce64fdb7f140018">m_Beta</a>;</div><div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a96ee5ab4a7d2d8a4634b77d4eb9a949f">  311</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a96ee5ab4a7d2d8a4634b77d4eb9a949f">m_Gamma</a>;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;};</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="structarmnn_1_1_rank_queue_descriptor.xhtml">  316</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_rank_queue_descriptor.xhtml">RankQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;{</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;};</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="structarmnn_1_1_resize_bilinear_queue_descriptor.xhtml">  321</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_resize_bilinear_queue_descriptor.xhtml">ResizeBilinearQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;ResizeBilinearDescriptor&gt;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;{</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;};</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="structarmnn_1_1_resize_queue_descriptor.xhtml">  326</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_resize_queue_descriptor.xhtml">ResizeQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;ResizeDescriptor&gt;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;{</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;};</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno"><a class="line" href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml">  331</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml">FakeQuantizationQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;FakeQuantizationDescriptor&gt;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;{</div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml#a275fbb91c39758c86dc9426cf40b3903">  333</a></span>&#160;    <a class="code" href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml#a275fbb91c39758c86dc9426cf40b3903">FakeQuantizationQueueDescriptor</a>()</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    : m_Min(nullptr)</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    , m_Max(nullptr)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    {</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    }</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml#a0473c3f5fd1ad36876416dd5555f336d">  339</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml#a0473c3f5fd1ad36876416dd5555f336d">m_Min</a>;</div><div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml#ad9b3054e90dc8118c9f7146a2a940e1b">  340</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml#ad9b3054e90dc8118c9f7146a2a940e1b">m_Max</a>;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;};</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno"><a class="line" href="structarmnn_1_1_instance_normalization_queue_descriptor.xhtml">  345</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_instance_normalization_queue_descriptor.xhtml">InstanceNormalizationQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;InstanceNormalizationDescriptor&gt;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;{</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;};</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno"><a class="line" href="structarmnn_1_1_l2_normalization_queue_descriptor.xhtml">  350</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_l2_normalization_queue_descriptor.xhtml">L2NormalizationQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;L2NormalizationDescriptor&gt;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;{</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;};</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="structarmnn_1_1_log_softmax_queue_descriptor.xhtml">  355</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_log_softmax_queue_descriptor.xhtml">LogSoftmaxQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;LogSoftmaxDescriptor&gt;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;{</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;};</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno"><a class="line" href="structarmnn_1_1_constant_queue_descriptor.xhtml">  360</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_constant_queue_descriptor.xhtml">ConstantQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;{</div><div class="line"><a name="l00362"></a><span class="lineno"><a class="line" href="structarmnn_1_1_constant_queue_descriptor.xhtml#a57d6b17f92c0fc7f21df264d337ef61e">  362</a></span>&#160;    <a class="code" href="structarmnn_1_1_constant_queue_descriptor.xhtml#a57d6b17f92c0fc7f21df264d337ef61e">ConstantQueueDescriptor</a>()</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        : m_LayerOutput(nullptr)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    {</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    }</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno"><a class="line" href="structarmnn_1_1_constant_queue_descriptor.xhtml#acd77c51cdb162e2b541bc8b474290b7a">  367</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_constant_queue_descriptor.xhtml#acd77c51cdb162e2b541bc8b474290b7a">m_LayerOutput</a>;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;};</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="structarmnn_1_1_reshape_queue_descriptor.xhtml">  372</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_reshape_queue_descriptor.xhtml">ReshapeQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;ReshapeDescriptor&gt;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;{</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;};</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="structarmnn_1_1_space_to_batch_nd_queue_descriptor.xhtml">  377</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_space_to_batch_nd_queue_descriptor.xhtml">SpaceToBatchNdQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;SpaceToBatchNdDescriptor&gt;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;{</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;};</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno"><a class="line" href="structarmnn_1_1_space_to_depth_queue_descriptor.xhtml">  382</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_space_to_depth_queue_descriptor.xhtml">SpaceToDepthQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;SpaceToDepthDescriptor&gt;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;{</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;};</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno"><a class="line" href="structarmnn_1_1_floor_queue_descriptor.xhtml">  387</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_floor_queue_descriptor.xhtml">FloorQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;{</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;};</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml">  392</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml">LstmQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;LstmDescriptor&gt;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;{</div><div class="line"><a name="l00394"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a1f701da89f9eeded946647212e5eebc9">  394</a></span>&#160;    <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a1f701da89f9eeded946647212e5eebc9">LstmQueueDescriptor</a>()</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        : m_InputToInputWeights(nullptr)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        , m_InputToForgetWeights(nullptr)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        , m_InputToCellWeights(nullptr)</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        , m_InputToOutputWeights(nullptr)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        , m_RecurrentToInputWeights(nullptr)</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        , m_RecurrentToForgetWeights(nullptr)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        , m_RecurrentToCellWeights(nullptr)</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        , m_RecurrentToOutputWeights(nullptr)</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        , m_CellToInputWeights(nullptr)</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        , m_CellToForgetWeights(nullptr)</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        , m_CellToOutputWeights(nullptr)</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        , m_InputGateBias(nullptr)</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        , m_ForgetGateBias(nullptr)</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        , m_CellBias(nullptr)</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        , m_OutputGateBias(nullptr)</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        , m_ProjectionWeights(nullptr)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        , m_ProjectionBias(nullptr)</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        , m_InputLayerNormWeights(nullptr)</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        , m_ForgetLayerNormWeights(nullptr)</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        , m_CellLayerNormWeights(nullptr)</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        , m_OutputLayerNormWeights(nullptr)</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    {</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    }</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">  419</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">m_InputToInputWeights</a>;</div><div class="line"><a name="l00420"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">  420</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">m_InputToForgetWeights</a>;</div><div class="line"><a name="l00421"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">  421</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">m_InputToCellWeights</a>;</div><div class="line"><a name="l00422"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">  422</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">m_InputToOutputWeights</a>;</div><div class="line"><a name="l00423"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">  423</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">m_RecurrentToInputWeights</a>;</div><div class="line"><a name="l00424"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">  424</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">m_RecurrentToForgetWeights</a>;</div><div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">  425</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">m_RecurrentToCellWeights</a>;</div><div class="line"><a name="l00426"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">  426</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">m_RecurrentToOutputWeights</a>;</div><div class="line"><a name="l00427"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a951b7c90b862138071a298065f16be61">  427</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a951b7c90b862138071a298065f16be61">m_CellToInputWeights</a>;</div><div class="line"><a name="l00428"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a20c10fcb26657477377d07b7b1e13120">  428</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a20c10fcb26657477377d07b7b1e13120">m_CellToForgetWeights</a>;</div><div class="line"><a name="l00429"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa09f7bdb9fd0d06b6386e412a4e72dd6">  429</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa09f7bdb9fd0d06b6386e412a4e72dd6">m_CellToOutputWeights</a>;</div><div class="line"><a name="l00430"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">  430</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">m_InputGateBias</a>;</div><div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">  431</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">m_ForgetGateBias</a>;</div><div class="line"><a name="l00432"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">  432</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">m_CellBias</a>;</div><div class="line"><a name="l00433"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">  433</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">m_OutputGateBias</a>;</div><div class="line"><a name="l00434"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a3ead2ef8da00b2709d561d85996fc513">  434</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a3ead2ef8da00b2709d561d85996fc513">m_ProjectionWeights</a>;</div><div class="line"><a name="l00435"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#ac668b31de6fb0f19d4c793d5ed3c3316">  435</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#ac668b31de6fb0f19d4c793d5ed3c3316">m_ProjectionBias</a>;</div><div class="line"><a name="l00436"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a1dbad32cad5c0437e1272f59fedf52ea">  436</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a1dbad32cad5c0437e1272f59fedf52ea">m_InputLayerNormWeights</a>;</div><div class="line"><a name="l00437"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#ad9442e26aa79f896da5f404ab825a9c8">  437</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#ad9442e26aa79f896da5f404ab825a9c8">m_ForgetLayerNormWeights</a>;</div><div class="line"><a name="l00438"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aeef6f1ac3efad8ec8b0a7118652b64c9">  438</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aeef6f1ac3efad8ec8b0a7118652b64c9">m_CellLayerNormWeights</a>;</div><div class="line"><a name="l00439"></a><span class="lineno"><a class="line" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a0e0f66bd03c88f3d2dc666f581d3cf12">  439</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a0e0f66bd03c88f3d2dc666f581d3cf12">m_OutputLayerNormWeights</a>;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;};</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno"><a class="line" href="structarmnn_1_1_convert_bf16_to_fp32_queue_descriptor.xhtml">  444</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_convert_bf16_to_fp32_queue_descriptor.xhtml">ConvertBf16ToFp32QueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;{</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;};</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno"><a class="line" href="structarmnn_1_1_convert_fp32_to_bf16_queue_descriptor.xhtml">  449</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_convert_fp32_to_bf16_queue_descriptor.xhtml">ConvertFp32ToBf16QueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;{</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;};</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno"><a class="line" href="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor.xhtml">  454</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor.xhtml">ConvertFp16ToFp32QueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;{</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;};</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno"><a class="line" href="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor.xhtml">  459</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor.xhtml">ConvertFp32ToFp16QueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;{</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;};</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno"><a class="line" href="structarmnn_1_1_batch_to_space_nd_queue_descriptor.xhtml">  464</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_batch_to_space_nd_queue_descriptor.xhtml">BatchToSpaceNdQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;BatchToSpaceNdDescriptor&gt;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;{</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;};</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno"><a class="line" href="structarmnn_1_1_strided_slice_queue_descriptor.xhtml">  469</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_strided_slice_queue_descriptor.xhtml">StridedSliceQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;StridedSliceDescriptor&gt;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;{</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;};</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">// Minimum layer workload data.</span></div><div class="line"><a name="l00475"></a><span class="lineno"><a class="line" href="structarmnn_1_1_minimum_queue_descriptor.xhtml">  475</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_minimum_queue_descriptor.xhtml">MinimumQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;{</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;};</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="comment">// Deprecated use ComparisonQueueDescriptor instead</span></div><div class="line"><a name="l00481"></a><span class="lineno"><a class="line" href="structarmnn_1_1_greater_queue_descriptor.xhtml">  481</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_greater_queue_descriptor.xhtml">GreaterQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;{</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;};</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno"><a class="line" href="structarmnn_1_1_debug_queue_descriptor.xhtml">  486</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml">DebugQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;{</div><div class="line"><a name="l00488"></a><span class="lineno"><a class="line" href="structarmnn_1_1_debug_queue_descriptor.xhtml#aa3a1f59f5a8e8ab4ca6dc4044fc776df">  488</a></span>&#160;    <a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#aa3a1f59f5a8e8ab4ca6dc4044fc776df">DebugQueueDescriptor</a>() : m_Guid(0) {}</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno"><a class="line" href="structarmnn_1_1_debug_queue_descriptor.xhtml#a04f1026633579df1913f80db2877ce8c">  492</a></span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_profiling_guid.xhtml">LayerGuid</a> <a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#a04f1026633579df1913f80db2877ce8c">m_Guid</a>;</div><div class="line"><a name="l00493"></a><span class="lineno"><a class="line" href="structarmnn_1_1_debug_queue_descriptor.xhtml#a2b4595e9b6c840810995558801be6f6c">  493</a></span>&#160;    std::string <a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#a2b4595e9b6c840810995558801be6f6c">m_LayerName</a>;</div><div class="line"><a name="l00494"></a><span class="lineno"><a class="line" href="structarmnn_1_1_debug_queue_descriptor.xhtml#ab53d42063d018ffebfceb019b26bf65a">  494</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#ab53d42063d018ffebfceb019b26bf65a">m_SlotIndex</a>;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;};</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno"><a class="line" href="structarmnn_1_1_rsqrt_queue_descriptor.xhtml">  497</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_rsqrt_queue_descriptor.xhtml">RsqrtQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;{</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;};</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div><div class="line"><a name="l00502"></a><span class="lineno"><a class="line" href="structarmnn_1_1_gather_queue_descriptor.xhtml">  502</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_gather_queue_descriptor.xhtml">GatherQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;GatherDescriptor&gt;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;{</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;};</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div><div class="line"><a name="l00507"></a><span class="lineno"><a class="line" href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml">  507</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml">PreCompiledQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;PreCompiledDescriptor&gt;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;{</div><div class="line"><a name="l00509"></a><span class="lineno"><a class="line" href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml#a49909be258870a12af07079f497727ab">  509</a></span>&#160;    <a class="code" href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml#a49909be258870a12af07079f497727ab">PreCompiledQueueDescriptor</a>()</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        : m_PreCompiledObject(nullptr)</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    {</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    }</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno"><a class="line" href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml#aa1fedd1a6371526cb68cc5cc58c87465">  514</a></span>&#160;    <span class="keywordtype">void</span>* <a class="code" href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml#aa1fedd1a6371526cb68cc5cc58c87465">m_PreCompiledObject</a>;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;};</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno"><a class="line" href="structarmnn_1_1_dequantize_queue_descriptor.xhtml">  519</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_dequantize_queue_descriptor.xhtml">DequantizeQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;{</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;};</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div><div class="line"><a name="l00524"></a><span class="lineno"><a class="line" href="structarmnn_1_1_merge_queue_descriptor.xhtml">  524</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_merge_queue_descriptor.xhtml">MergeQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;{</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;};</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno"><a class="line" href="structarmnn_1_1_switch_queue_descriptor.xhtml">  529</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_switch_queue_descriptor.xhtml">SwitchQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;{</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;};</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno"><a class="line" href="structarmnn_1_1_prelu_queue_descriptor.xhtml">  534</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_prelu_queue_descriptor.xhtml">PreluQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;{</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;};</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno"><a class="line" href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml">  539</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml">TransposeConvolution2dQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;TransposeConvolution2dDescriptor&gt;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;{</div><div class="line"><a name="l00541"></a><span class="lineno"><a class="line" href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml#a19c7d575dd8c0c9b01b35ad1aa38f8e9">  541</a></span>&#160;    <a class="code" href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml#a19c7d575dd8c0c9b01b35ad1aa38f8e9">TransposeConvolution2dQueueDescriptor</a>() :</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        m_Weight(nullptr),</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        m_Bias(nullptr)</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    {}</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno"><a class="line" href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">  546</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">m_Weight</a>;</div><div class="line"><a name="l00547"></a><span class="lineno"><a class="line" href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">  547</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">m_Bias</a>;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;};</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno"><a class="line" href="structarmnn_1_1_transpose_queue_descriptor.xhtml">  552</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_transpose_queue_descriptor.xhtml">TransposeQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;TransposeDescriptor&gt;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;{</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;};</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">  557</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">QLstmQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;QLstmDescriptor&gt;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;{</div><div class="line"><a name="l00559"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ae632fa69e135c7871fcecf4658a0a634">  559</a></span>&#160;    <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ae632fa69e135c7871fcecf4658a0a634">QLstmQueueDescriptor</a>()</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            : m_InputToInputWeights(nullptr)</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            , m_InputToForgetWeights(nullptr)</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            , m_InputToCellWeights(nullptr)</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;            , m_InputToOutputWeights(nullptr)</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;            , m_RecurrentToInputWeights(nullptr)</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;            , m_RecurrentToForgetWeights(nullptr)</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;            , m_RecurrentToCellWeights(nullptr)</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            , m_RecurrentToOutputWeights(nullptr)</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;            , m_CellToInputWeights(nullptr)</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;            , m_CellToForgetWeights(nullptr)</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            , m_CellToOutputWeights(nullptr)</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;            , m_InputGateBias(nullptr)</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            , m_ForgetGateBias(nullptr)</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            , m_CellBias(nullptr)</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            , m_OutputGateBias(nullptr)</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;            , m_ProjectionWeights(nullptr)</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;            , m_ProjectionBias(nullptr)</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;            , m_InputLayerNormWeights(nullptr)</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;            , m_ForgetLayerNormWeights(nullptr)</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;            , m_CellLayerNormWeights(nullptr)</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;            , m_OutputLayerNormWeights(nullptr)</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    {</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    }</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">  584</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">m_InputToInputWeights</a>;</div><div class="line"><a name="l00585"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">  585</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">m_InputToForgetWeights</a>;</div><div class="line"><a name="l00586"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">  586</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">m_InputToCellWeights</a>;</div><div class="line"><a name="l00587"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">  587</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">m_InputToOutputWeights</a>;</div><div class="line"><a name="l00588"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">  588</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">m_RecurrentToInputWeights</a>;</div><div class="line"><a name="l00589"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">  589</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">m_RecurrentToForgetWeights</a>;</div><div class="line"><a name="l00590"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">  590</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">m_RecurrentToCellWeights</a>;</div><div class="line"><a name="l00591"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">  591</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">m_RecurrentToOutputWeights</a>;</div><div class="line"><a name="l00592"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a951b7c90b862138071a298065f16be61">  592</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a951b7c90b862138071a298065f16be61">m_CellToInputWeights</a>;</div><div class="line"><a name="l00593"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a20c10fcb26657477377d07b7b1e13120">  593</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a20c10fcb26657477377d07b7b1e13120">m_CellToForgetWeights</a>;</div><div class="line"><a name="l00594"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aa09f7bdb9fd0d06b6386e412a4e72dd6">  594</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aa09f7bdb9fd0d06b6386e412a4e72dd6">m_CellToOutputWeights</a>;</div><div class="line"><a name="l00595"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">  595</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">m_InputGateBias</a>;</div><div class="line"><a name="l00596"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">  596</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">m_ForgetGateBias</a>;</div><div class="line"><a name="l00597"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">  597</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">m_CellBias</a>;</div><div class="line"><a name="l00598"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">  598</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">m_OutputGateBias</a>;</div><div class="line"><a name="l00599"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a3ead2ef8da00b2709d561d85996fc513">  599</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a3ead2ef8da00b2709d561d85996fc513">m_ProjectionWeights</a>;</div><div class="line"><a name="l00600"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac668b31de6fb0f19d4c793d5ed3c3316">  600</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac668b31de6fb0f19d4c793d5ed3c3316">m_ProjectionBias</a>;</div><div class="line"><a name="l00601"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a1dbad32cad5c0437e1272f59fedf52ea">  601</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a1dbad32cad5c0437e1272f59fedf52ea">m_InputLayerNormWeights</a>;</div><div class="line"><a name="l00602"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ad9442e26aa79f896da5f404ab825a9c8">  602</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ad9442e26aa79f896da5f404ab825a9c8">m_ForgetLayerNormWeights</a>;</div><div class="line"><a name="l00603"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aeef6f1ac3efad8ec8b0a7118652b64c9">  603</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aeef6f1ac3efad8ec8b0a7118652b64c9">m_CellLayerNormWeights</a>;</div><div class="line"><a name="l00604"></a><span class="lineno"><a class="line" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a0e0f66bd03c88f3d2dc666f581d3cf12">  604</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a0e0f66bd03c88f3d2dc666f581d3cf12">m_OutputLayerNormWeights</a>;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;};</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div><div class="line"><a name="l00609"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">  609</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">QuantizedLstmQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;{</div><div class="line"><a name="l00611"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aafdc5119a81b0104cd742401cec60f3a">  611</a></span>&#160;    <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aafdc5119a81b0104cd742401cec60f3a">QuantizedLstmQueueDescriptor</a>()</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        : m_InputToInputWeights(nullptr)</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        , m_InputToForgetWeights(nullptr)</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        , m_InputToCellWeights(nullptr)</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        , m_InputToOutputWeights(nullptr)</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        , m_RecurrentToInputWeights(nullptr)</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        , m_RecurrentToForgetWeights(nullptr)</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        , m_RecurrentToCellWeights(nullptr)</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        , m_RecurrentToOutputWeights(nullptr)</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        , m_InputGateBias(nullptr)</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        , m_ForgetGateBias(nullptr)</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        , m_CellBias(nullptr)</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        , m_OutputGateBias(nullptr)</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    {}</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">  628</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">m_InputToInputWeights</a>;</div><div class="line"><a name="l00629"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">  629</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">m_InputToForgetWeights</a>;</div><div class="line"><a name="l00630"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">  630</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">m_InputToCellWeights</a>;</div><div class="line"><a name="l00631"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">  631</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">m_InputToOutputWeights</a>;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00633"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">  633</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">m_RecurrentToInputWeights</a>;</div><div class="line"><a name="l00634"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">  634</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">m_RecurrentToForgetWeights</a>;</div><div class="line"><a name="l00635"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">  635</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">m_RecurrentToCellWeights</a>;</div><div class="line"><a name="l00636"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">  636</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">m_RecurrentToOutputWeights</a>;</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div><div class="line"><a name="l00638"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">  638</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">m_InputGateBias</a>;</div><div class="line"><a name="l00639"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">  639</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">m_ForgetGateBias</a>;</div><div class="line"><a name="l00640"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">  640</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">m_CellBias</a>;</div><div class="line"><a name="l00641"></a><span class="lineno"><a class="line" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">  641</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">m_OutputGateBias</a>;</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;};</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;</div><div class="line"><a name="l00646"></a><span class="lineno"><a class="line" href="structarmnn_1_1_abs_queue_descriptor.xhtml">  646</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_abs_queue_descriptor.xhtml">AbsQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;{</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;};</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno"><a class="line" href="structarmnn_1_1_slice_queue_descriptor.xhtml">  651</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_slice_queue_descriptor.xhtml">SliceQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;SliceDescriptor&gt;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;{</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;};</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno"><a class="line" href="structarmnn_1_1_depth_to_space_queue_descriptor.xhtml">  656</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_depth_to_space_queue_descriptor.xhtml">DepthToSpaceQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;DepthToSpaceDescriptor&gt;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;{</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;};</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;</div><div class="line"><a name="l00661"></a><span class="lineno"><a class="line" href="structarmnn_1_1_comparison_queue_descriptor.xhtml">  661</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_comparison_queue_descriptor.xhtml">ComparisonQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;ComparisonDescriptor&gt;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;{</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;};</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno"><a class="line" href="structarmnn_1_1_elementwise_unary_queue_descriptor.xhtml">  666</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_elementwise_unary_queue_descriptor.xhtml">ElementwiseUnaryQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;ElementwiseUnaryDescriptor&gt;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;{</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;};</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno"><a class="line" href="structarmnn_1_1_logical_binary_queue_descriptor.xhtml">  671</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_logical_binary_queue_descriptor.xhtml">LogicalBinaryQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;LogicalBinaryDescriptor&gt;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;{</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;};</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div><div class="line"><a name="l00676"></a><span class="lineno"><a class="line" href="structarmnn_1_1_reduce_queue_descriptor.xhtml">  676</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_reduce_queue_descriptor.xhtml">ReduceQueueDescriptor</a> : <a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt;ReduceDescriptor&gt;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;{</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    <span class="keywordtype">void</span> Validate(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; workloadInfo) <span class="keyword">const</span>;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;};</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="structarmnn_1_1_multiplication_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">armnn::MultiplicationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00251">WorkloadData.hpp:251</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_aeef6f1ac3efad8ec8b0a7118652b64c9"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aeef6f1ac3efad8ec8b0a7118652b64c9">armnn::QLstmQueueDescriptor::m_CellLayerNormWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_CellLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00603">WorkloadData.hpp:603</a></div></div>
<div class="ttc" id="structarmnn_1_1_cast_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_cast_queue_descriptor.xhtml">armnn::CastQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00158">WorkloadData.hpp:158</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_queue_descriptor_xhtml_a755d2bc24ab7b24dba1092e20e307f7f"><div class="ttname"><a href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml#a755d2bc24ab7b24dba1092e20e307f7f">armnn::FullyConnectedQueueDescriptor::FullyConnectedQueueDescriptor</a></div><div class="ttdeci">FullyConnectedQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00172">WorkloadData.hpp:172</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_aafdc5119a81b0104cd742401cec60f3a"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aafdc5119a81b0104cd742401cec60f3a">armnn::QuantizedLstmQueueDescriptor::QuantizedLstmQueueDescriptor</a></div><div class="ttdeci">QuantizedLstmQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00611">WorkloadData.hpp:611</a></div></div>
<div class="ttc" id="structarmnn_1_1_instance_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_instance_normalization_queue_descriptor.xhtml">armnn::InstanceNormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00345">WorkloadData.hpp:345</a></div></div>
<div class="ttc" id="structarmnn_1_1_permute_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_permute_queue_descriptor.xhtml">armnn::PermuteQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00185">WorkloadData.hpp:185</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a3ead2ef8da00b2709d561d85996fc513"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a3ead2ef8da00b2709d561d85996fc513">armnn::QLstmQueueDescriptor::m_ProjectionWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_ProjectionWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00599">WorkloadData.hpp:599</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a3ead2ef8da00b2709d561d85996fc513"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a3ead2ef8da00b2709d561d85996fc513">armnn::LstmQueueDescriptor::m_ProjectionWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_ProjectionWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00434">WorkloadData.hpp:434</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantize_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantize_queue_descriptor.xhtml">armnn::QuantizeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00286">WorkloadData.hpp:286</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_adf8571dd1867ee91082bd005f94f2610"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">armnn::LstmQueueDescriptor::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00424">WorkloadData.hpp:424</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a29fa293fffbf9c6f00cd75db1dc0a52a"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">armnn::QLstmQueueDescriptor::m_ForgetGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00596">WorkloadData.hpp:596</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a1c928b975a0de05cf2536c721ba6b521"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a1c928b975a0de05cf2536c721ba6b521">armnn::QueueDescriptor::operator=</a></div><div class="ttdeci">QueueDescriptor &amp; operator=(QueueDescriptor const &amp;)=default</div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a17ba1c8bcc71a55a95b2a3913f8cb203"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">armnn::QLstmQueueDescriptor::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00587">WorkloadData.hpp:587</a></div></div>
<div class="ttc" id="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin_xhtml_af2f0a8c9eb32861711c0ce30b7986c44"><div class="ttname"><a href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml#af2f0a8c9eb32861711c0ce30b7986c44">armnn::ConcatQueueDescriptor::ViewOrigin::m_Origin</a></div><div class="ttdeci">std::vector&lt; unsigned int &gt; m_Origin</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00128">WorkloadData.hpp:128</a></div></div>
<div class="ttc" id="structarmnn_1_1_maximum_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_maximum_queue_descriptor.xhtml">armnn::MaximumQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00269">WorkloadData.hpp:269</a></div></div>
<div class="ttc" id="_tensor_8hpp_xhtml"><div class="ttname"><a href="_tensor_8hpp.xhtml">Tensor.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml">armnn::DetectionPostProcessQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00226">WorkloadData.hpp:226</a></div></div>
<div class="ttc" id="structarmnn_1_1_map_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_map_queue_descriptor.xhtml">armnn::MapQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00066">WorkloadData.hpp:66</a></div></div>
<div class="ttc" id="structarmnn_1_1_gather_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_gather_queue_descriptor.xhtml">armnn::GatherQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00502">WorkloadData.hpp:502</a></div></div>
<div class="ttc" id="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin_xhtml"><div class="ttname"><a href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml">armnn::ConcatQueueDescriptor::ViewOrigin</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00122">WorkloadData.hpp:122</a></div></div>
<div class="ttc" id="structarmnn_1_1_constant_queue_descriptor_xhtml_acd77c51cdb162e2b541bc8b474290b7a"><div class="ttname"><a href="structarmnn_1_1_constant_queue_descriptor.xhtml#acd77c51cdb162e2b541bc8b474290b7a">armnn::ConstantQueueDescriptor::m_LayerOutput</a></div><div class="ttdeci">const ConstTensorHandle * m_LayerOutput</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00367">WorkloadData.hpp:367</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a44eb7524badcca9b2073359e3814c98b"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">armnn::LstmQueueDescriptor::m_InputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00430">WorkloadData.hpp:430</a></div></div>
<div class="ttc" id="structarmnn_1_1_splitter_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_splitter_queue_descriptor.xhtml">armnn::SplitterQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00101">WorkloadData.hpp:101</a></div></div>
<div class="ttc" id="structarmnn_1_1_constant_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_constant_queue_descriptor.xhtml">armnn::ConstantQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00360">WorkloadData.hpp:360</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">armnn::QuantizedLstmQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00609">WorkloadData.hpp:609</a></div></div>
<div class="ttc" id="structarmnn_1_1_debug_queue_descriptor_xhtml_a2b4595e9b6c840810995558801be6f6c"><div class="ttname"><a href="structarmnn_1_1_debug_queue_descriptor.xhtml#a2b4595e9b6c840810995558801be6f6c">armnn::DebugQueueDescriptor::m_LayerName</a></div><div class="ttdeci">std::string m_LayerName</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00493">WorkloadData.hpp:493</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_ac18c8b8b2039267d8282e91b4162d8aa"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">armnn::LstmQueueDescriptor::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00425">WorkloadData.hpp:425</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml">armnn::QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00028">WorkloadData.hpp:28</a></div></div>
<div class="ttc" id="structarmnn_1_1_convert_bf16_to_fp32_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convert_bf16_to_fp32_queue_descriptor.xhtml">armnn::ConvertBf16ToFp32QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00444">WorkloadData.hpp:444</a></div></div>
<div class="ttc" id="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin_xhtml_a1dacfbc716d2b787e6ea3cfc7e9e2da6"><div class="ttname"><a href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml#a1dacfbc716d2b787e6ea3cfc7e9e2da6">armnn::ConcatQueueDescriptor::ViewOrigin::ViewOrigin</a></div><div class="ttdeci">ViewOrigin(const std::vector&lt; unsigned int &gt; &amp;origin)</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00125">WorkloadData.hpp:125</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a6e9593869b82984de198fed27f72cdcf"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">armnn::LstmQueueDescriptor::m_CellBias</a></div><div class="ttdeci">const ConstTensorHandle * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00432">WorkloadData.hpp:432</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_ab160eba2493d5fe52185c0986dcb190c"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">armnn::QLstmQueueDescriptor::m_InputToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00584">WorkloadData.hpp:584</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_guid_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_guid.xhtml">armnn::profiling::ProfilingGuid</a></div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00327">Types.hpp:327</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_aa09f7bdb9fd0d06b6386e412a4e72dd6"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aa09f7bdb9fd0d06b6386e412a4e72dd6">armnn::QLstmQueueDescriptor::m_CellToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_CellToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00594">WorkloadData.hpp:594</a></div></div>
<div class="ttc" id="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin_xhtml"><div class="ttname"><a href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml">armnn::SplitterQueueDescriptor::ViewOrigin</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00103">WorkloadData.hpp:103</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml_a744e5178444c4b7bc4d516f4bbee8fcd"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a744e5178444c4b7bc4d516f4bbee8fcd">armnn::BatchNormalizationQueueDescriptor::m_Variance</a></div><div class="ttdeci">const ConstTensorHandle * m_Variance</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00309">WorkloadData.hpp:309</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a951b7c90b862138071a298065f16be61"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a951b7c90b862138071a298065f16be61">armnn::QLstmQueueDescriptor::m_CellToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_CellToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00592">WorkloadData.hpp:592</a></div></div>
<div class="ttc" id="structarmnn_1_1_stack_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stack_queue_descriptor.xhtml">armnn::StackQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00142">WorkloadData.hpp:142</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_queue_descriptor_xhtml_a9a8a6e0c6074b895eb2ff9a16e5003a5"><div class="ttname"><a href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">armnn::Convolution2dQueueDescriptor::m_Weight</a></div><div class="ttdeci">const ConstTensorHandle * m_Weight</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00205">WorkloadData.hpp:205</a></div></div>
<div class="ttc" id="structarmnn_1_1_rsqrt_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_rsqrt_queue_descriptor.xhtml">armnn::RsqrtQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00497">WorkloadData.hpp:497</a></div></div>
<div class="ttc" id="structarmnn_1_1_merge_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_merge_queue_descriptor.xhtml">armnn::MergeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00524">WorkloadData.hpp:524</a></div></div>
<div class="ttc" id="structarmnn_1_1_debug_queue_descriptor_xhtml_aa3a1f59f5a8e8ab4ca6dc4044fc776df"><div class="ttname"><a href="structarmnn_1_1_debug_queue_descriptor.xhtml#aa3a1f59f5a8e8ab4ca6dc4044fc776df">armnn::DebugQueueDescriptor::DebugQueueDescriptor</a></div><div class="ttdeci">DebugQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00488">WorkloadData.hpp:488</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a44eb7524badcca9b2073359e3814c98b"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">armnn::QuantizedLstmQueueDescriptor::m_InputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00638">WorkloadData.hpp:638</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_queue_descriptor_xhtml_a1f3f6acdd5436ccf488d5ee3e9e60c02"><div class="ttname"><a href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">armnn::Convolution2dQueueDescriptor::m_Bias</a></div><div class="ttdeci">const ConstTensorHandle * m_Bias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00206">WorkloadData.hpp:206</a></div></div>
<div class="ttc" id="structarmnn_1_1_addition_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_addition_queue_descriptor.xhtml">armnn::AdditionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00245">WorkloadData.hpp:245</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a17ba1c8bcc71a55a95b2a3913f8cb203"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">armnn::LstmQueueDescriptor::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00422">WorkloadData.hpp:422</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_queue_descriptor_xhtml_a6d834a3bbfc6050d9d5fd8732689f9b3"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml#a6d834a3bbfc6050d9d5fd8732689f9b3">armnn::DetectionPostProcessQueueDescriptor::DetectionPostProcessQueueDescriptor</a></div><div class="ttdeci">DetectionPostProcessQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00228">WorkloadData.hpp:228</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a765d2cee4ccce5b9467e0c2b6d25b84a"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a765d2cee4ccce5b9467e0c2b6d25b84a">armnn::QueueDescriptor::ValidateInputsOutputs</a></div><div class="ttdeci">void ValidateInputsOutputs(const std::string &amp;descName, unsigned int numExpectedIn, unsigned int numExpectedOut) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8cpp_source.xhtml#l00459">WorkloadData.cpp:459</a></div></div>
<div class="ttc" id="structarmnn_1_1_minimum_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_minimum_queue_descriptor.xhtml">armnn::MinimumQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00475">WorkloadData.hpp:475</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a0e0f66bd03c88f3d2dc666f581d3cf12"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a0e0f66bd03c88f3d2dc666f581d3cf12">armnn::LstmQueueDescriptor::m_OutputLayerNormWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_OutputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00439">WorkloadData.hpp:439</a></div></div>
<div class="ttc" id="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin_xhtml_aa139b7f0b8d4028da5355b1a25ac04ca"><div class="ttname"><a href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml#aa139b7f0b8d4028da5355b1a25ac04ca">armnn::SplitterQueueDescriptor::ViewOrigin::ViewOrigin</a></div><div class="ttdeci">ViewOrigin(std::vector&lt; unsigned int &gt; const &amp;origin)</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00106">WorkloadData.hpp:106</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml_aaa27bfa8baa39d3bc09adab1977a2a76"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#aaa27bfa8baa39d3bc09adab1977a2a76">armnn::BatchNormalizationQueueDescriptor::BatchNormalizationQueueDescriptor</a></div><div class="ttdeci">BatchNormalizationQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00300">WorkloadData.hpp:300</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__software__tools_8dox_source.xhtml#l00006">01_00_software_tools.dox:6</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml">armnn::FullyConnectedQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00170">WorkloadData.hpp:170</a></div></div>
<div class="ttc" id="_tensor_handle_fwd_8hpp_xhtml"><div class="ttname"><a href="_tensor_handle_fwd_8hpp.xhtml">TensorHandleFwd.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_af67c3785421c91d37fb22132d441f704"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#af67c3785421c91d37fb22132d441f704">armnn::QueueDescriptor::~QueueDescriptor</a></div><div class="ttdeci">~QueueDescriptor()=default</div></div>
<div class="ttc" id="structarmnn_1_1_prelu_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_prelu_queue_descriptor.xhtml">armnn::PreluQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00534">WorkloadData.hpp:534</a></div></div>
<div class="ttc" id="structarmnn_1_1_equal_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_equal_queue_descriptor.xhtml">armnn::EqualQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00292">WorkloadData.hpp:292</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_to_space_nd_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_to_space_nd_queue_descriptor.xhtml">armnn::BatchToSpaceNdQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00464">WorkloadData.hpp:464</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a299587d4f3fca029492700f3e2585bd8"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00633">WorkloadData.hpp:633</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_queue_descriptor.xhtml">armnn::SoftmaxQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00095">WorkloadData.hpp:95</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_queue_descriptor_xhtml_a7a17a5850701c7f7c74215d4b98a0721"><div class="ttname"><a href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml#a7a17a5850701c7f7c74215d4b98a0721">armnn::Convolution2dQueueDescriptor::Convolution2dQueueDescriptor</a></div><div class="ttdeci">Convolution2dQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00199">WorkloadData.hpp:199</a></div></div>
<div class="ttc" id="structarmnn_1_1_division_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_division_queue_descriptor.xhtml">armnn::DivisionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00257">WorkloadData.hpp:257</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_queue_descriptor_xhtml_a1f3f6acdd5436ccf488d5ee3e9e60c02"><div class="ttname"><a href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">armnn::FullyConnectedQueueDescriptor::m_Bias</a></div><div class="ttdeci">const ConstTensorHandle * m_Bias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00179">WorkloadData.hpp:179</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00057">WorkloadData.hpp:57</a></div></div>
<div class="ttc" id="_internal_types_8hpp_xhtml"><div class="ttname"><a href="_internal_types_8hpp.xhtml">InternalTypes.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_subtraction_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">armnn::SubtractionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00263">WorkloadData.hpp:263</a></div></div>
<div class="ttc" id="structarmnn_1_1_fake_quantization_queue_descriptor_xhtml_a0473c3f5fd1ad36876416dd5555f336d"><div class="ttname"><a href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml#a0473c3f5fd1ad36876416dd5555f336d">armnn::FakeQuantizationQueueDescriptor::m_Min</a></div><div class="ttdeci">const ConstTensorHandle * m_Min</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00339">WorkloadData.hpp:339</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00281">WorkloadData.hpp:281</a></div></div>
<div class="ttc" id="structarmnn_1_1_concat_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_concat_queue_descriptor.xhtml">armnn::ConcatQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00120">WorkloadData.hpp:120</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor_handle.xhtml">armnn::ConstTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_8hpp_source.xhtml#l00027">TensorHandle.hpp:27</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_ad9442e26aa79f896da5f404ab825a9c8"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ad9442e26aa79f896da5f404ab825a9c8">armnn::QLstmQueueDescriptor::m_ForgetLayerNormWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_ForgetLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00602">WorkloadData.hpp:602</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_depth_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_depth_queue_descriptor.xhtml">armnn::SpaceToDepthQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00382">WorkloadData.hpp:382</a></div></div>
<div class="ttc" id="structarmnn_1_1_abs_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_abs_queue_descriptor.xhtml">armnn::AbsQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00646">WorkloadData.hpp:646</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a5ff4158b1b363b898d0da04c42d37ce0"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">armnn::LstmQueueDescriptor::m_OutputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00433">WorkloadData.hpp:433</a></div></div>
<div class="ttc" id="structarmnn_1_1_resize_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_queue_descriptor.xhtml">armnn::ResizeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00326">WorkloadData.hpp:326</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_batch_nd_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_batch_nd_queue_descriptor.xhtml">armnn::SpaceToBatchNdQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00377">WorkloadData.hpp:377</a></div></div>
<div class="ttc" id="structarmnn_1_1_floor_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_floor_queue_descriptor.xhtml">armnn::FloorQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00387">WorkloadData.hpp:387</a></div></div>
<div class="ttc" id="structarmnn_1_1_constant_queue_descriptor_xhtml_a57d6b17f92c0fc7f21df264d337ef61e"><div class="ttname"><a href="structarmnn_1_1_constant_queue_descriptor.xhtml#a57d6b17f92c0fc7f21df264d337ef61e">armnn::ConstantQueueDescriptor::ConstantQueueDescriptor</a></div><div class="ttdeci">ConstantQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00362">WorkloadData.hpp:362</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_convolution2d_queue_descriptor_xhtml_a19c7d575dd8c0c9b01b35ad1aa38f8e9"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml#a19c7d575dd8c0c9b01b35ad1aa38f8e9">armnn::TransposeConvolution2dQueueDescriptor::TransposeConvolution2dQueueDescriptor</a></div><div class="ttdeci">TransposeConvolution2dQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00541">WorkloadData.hpp:541</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_aab77f54a037658ca9b2bf9cc8a1fadf1"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">armnn::QuantizedLstmQueueDescriptor::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00629">WorkloadData.hpp:629</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a1f701da89f9eeded946647212e5eebc9"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a1f701da89f9eeded946647212e5eebc9">armnn::LstmQueueDescriptor::LstmQueueDescriptor</a></div><div class="ttdeci">LstmQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00394">WorkloadData.hpp:394</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_aeef6f1ac3efad8ec8b0a7118652b64c9"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aeef6f1ac3efad8ec8b0a7118652b64c9">armnn::LstmQueueDescriptor::m_CellLayerNormWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_CellLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00438">WorkloadData.hpp:438</a></div></div>
<div class="ttc" id="structarmnn_1_1_resize_bilinear_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_bilinear_queue_descriptor.xhtml">armnn::ResizeBilinearQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00321">WorkloadData.hpp:321</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00036">Types.hpp:36</a></div></div>
<div class="ttc" id="structarmnn_1_1_concat_queue_descriptor_xhtml_ab1794eb3e74c9700cd3d500fc06dc2e5"><div class="ttname"><a href="structarmnn_1_1_concat_queue_descriptor.xhtml#ab1794eb3e74c9700cd3d500fc06dc2e5">armnn::ConcatQueueDescriptor::m_ViewOrigins</a></div><div class="ttdeci">std::vector&lt; ViewOrigin &gt; m_ViewOrigins</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00133">WorkloadData.hpp:133</a></div></div>
<div class="ttc" id="structarmnn_1_1_fake_quantization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml">armnn::FakeQuantizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00331">WorkloadData.hpp:331</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml">armnn::LstmQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00392">WorkloadData.hpp:392</a></div></div>
<div class="ttc" id="structarmnn_1_1_greater_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_greater_queue_descriptor.xhtml">armnn::GreaterQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00481">WorkloadData.hpp:481</a></div></div>
<div class="ttc" id="_types_8hpp_xhtml"><div class="ttname"><a href="_types_8hpp.xhtml">Types.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin_xhtml_aaf1763105778061ed5a2863e9ac68c76"><div class="ttname"><a href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml#aaf1763105778061ed5a2863e9ac68c76">armnn::ConcatQueueDescriptor::ViewOrigin::ViewOrigin</a></div><div class="ttdeci">ViewOrigin()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00124">WorkloadData.hpp:124</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_aab77f54a037658ca9b2bf9cc8a1fadf1"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">armnn::QLstmQueueDescriptor::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00585">WorkloadData.hpp:585</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_ac18c8b8b2039267d8282e91b4162d8aa"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00635">WorkloadData.hpp:635</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a29fa293fffbf9c6f00cd75db1dc0a52a"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">armnn::QuantizedLstmQueueDescriptor::m_ForgetGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00639">WorkloadData.hpp:639</a></div></div>
<div class="ttc" id="structarmnn_1_1_comparison_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_comparison_queue_descriptor.xhtml">armnn::ComparisonQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00661">WorkloadData.hpp:661</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_queue_descriptor_xhtml_a1f3f6acdd5436ccf488d5ee3e9e60c02"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">armnn::DepthwiseConvolution2dQueueDescriptor::m_Bias</a></div><div class="ttdeci">const ConstTensorHandle * m_Bias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00221">WorkloadData.hpp:221</a></div></div>
<div class="ttc" id="structarmnn_1_1_unmap_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_unmap_queue_descriptor.xhtml">armnn::UnmapQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00071">WorkloadData.hpp:71</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a6e9593869b82984de198fed27f72cdcf"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">armnn::QLstmQueueDescriptor::m_CellBias</a></div><div class="ttdeci">const ConstTensorHandle * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00597">WorkloadData.hpp:597</a></div></div>
<div class="ttc" id="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor.xhtml">armnn::ConvertFp16ToFp32QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00454">WorkloadData.hpp:454</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_aa09f7bdb9fd0d06b6386e412a4e72dd6"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aa09f7bdb9fd0d06b6386e412a4e72dd6">armnn::LstmQueueDescriptor::m_CellToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_CellToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00429">WorkloadData.hpp:429</a></div></div>
<div class="ttc" id="structarmnn_1_1_pre_compiled_queue_descriptor_xhtml_aa1fedd1a6371526cb68cc5cc58c87465"><div class="ttname"><a href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml#aa1fedd1a6371526cb68cc5cc58c87465">armnn::PreCompiledQueueDescriptor::m_PreCompiledObject</a></div><div class="ttdeci">void * m_PreCompiledObject</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00514">WorkloadData.hpp:514</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a4c27716f61bb68e8ea0bd4e8389ba01a"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00636">WorkloadData.hpp:636</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a1dbad32cad5c0437e1272f59fedf52ea"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a1dbad32cad5c0437e1272f59fedf52ea">armnn::QLstmQueueDescriptor::m_InputLayerNormWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00601">WorkloadData.hpp:601</a></div></div>
<div class="ttc" id="structarmnn_1_1_pre_compiled_queue_descriptor_xhtml_a49909be258870a12af07079f497727ab"><div class="ttname"><a href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml#a49909be258870a12af07079f497727ab">armnn::PreCompiledQueueDescriptor::PreCompiledQueueDescriptor</a></div><div class="ttdeci">PreCompiledQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00509">WorkloadData.hpp:509</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a841439e3b8dc157a7368b19c9ecb7d03"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">armnn::LstmQueueDescriptor::m_InputToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00421">WorkloadData.hpp:421</a></div></div>
<div class="ttc" id="structarmnn_1_1_reduce_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reduce_queue_descriptor.xhtml">armnn::ReduceQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00676">WorkloadData.hpp:676</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_queue_descriptor_xhtml_a9a8a6e0c6074b895eb2ff9a16e5003a5"><div class="ttname"><a href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">armnn::FullyConnectedQueueDescriptor::m_Weight</a></div><div class="ttdeci">const ConstTensorHandle * m_Weight</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00178">WorkloadData.hpp:178</a></div></div>
<div class="ttc" id="structarmnn_1_1_fake_quantization_queue_descriptor_xhtml_a275fbb91c39758c86dc9426cf40b3903"><div class="ttname"><a href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml#a275fbb91c39758c86dc9426cf40b3903">armnn::FakeQuantizationQueueDescriptor::FakeQuantizationQueueDescriptor</a></div><div class="ttdeci">FakeQuantizationQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00333">WorkloadData.hpp:333</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a5ff4158b1b363b898d0da04c42d37ce0"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">armnn::QuantizedLstmQueueDescriptor::m_OutputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00641">WorkloadData.hpp:641</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_aab77f54a037658ca9b2bf9cc8a1fadf1"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">armnn::LstmQueueDescriptor::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00420">WorkloadData.hpp:420</a></div></div>
<div class="ttc" id="structarmnn_1_1_splitter_queue_descriptor_xhtml_ab1794eb3e74c9700cd3d500fc06dc2e5"><div class="ttname"><a href="structarmnn_1_1_splitter_queue_descriptor.xhtml#ab1794eb3e74c9700cd3d500fc06dc2e5">armnn::SplitterQueueDescriptor::m_ViewOrigins</a></div><div class="ttdeci">std::vector&lt; ViewOrigin &gt; m_ViewOrigins</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00114">WorkloadData.hpp:114</a></div></div>
<div class="ttc" id="structarmnn_1_1_rank_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_rank_queue_descriptor.xhtml">armnn::RankQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00316">WorkloadData.hpp:316</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_queue_descriptor_xhtml_a9a8a6e0c6074b895eb2ff9a16e5003a5"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">armnn::DepthwiseConvolution2dQueueDescriptor::m_Weight</a></div><div class="ttdeci">const ConstTensorHandle * m_Weight</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00220">WorkloadData.hpp:220</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_adf8571dd1867ee91082bd005f94f2610"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00634">WorkloadData.hpp:634</a></div></div>
<div class="ttc" id="structarmnn_1_1_logical_binary_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_logical_binary_queue_descriptor.xhtml">armnn::LogicalBinaryQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00671">WorkloadData.hpp:671</a></div></div>
<div class="ttc" id="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor.xhtml">armnn::ConvertFp32ToFp16QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00459">WorkloadData.hpp:459</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a872803f5667392efc3c8e5607bd453ad"><div class="ttname"><a href="namespacearmnn.xhtml#a872803f5667392efc3c8e5607bd453ad">armnn::GetBiasDataType</a></div><div class="ttdeci">DataType GetBiasDataType(DataType inputDataType)</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8cpp_source.xhtml#l00026">WorkloadData.cpp:26</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a299587d4f3fca029492700f3e2585bd8"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">armnn::LstmQueueDescriptor::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00423">WorkloadData.hpp:423</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a2f2e6134cabedfc58aa53fe38a2b8a67"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a2f2e6134cabedfc58aa53fe38a2b8a67">armnn::QueueDescriptor::m_AdditionalInfoObject</a></div><div class="ttdeci">void * m_AdditionalInfoObject</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00032">WorkloadData.hpp:32</a></div></div>
<div class="ttc" id="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin_xhtml_aaf1763105778061ed5a2863e9ac68c76"><div class="ttname"><a href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml#aaf1763105778061ed5a2863e9ac68c76">armnn::SplitterQueueDescriptor::ViewOrigin::ViewOrigin</a></div><div class="ttdeci">ViewOrigin()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00105">WorkloadData.hpp:105</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a841439e3b8dc157a7368b19c9ecb7d03"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">armnn::QLstmQueueDescriptor::m_InputToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00586">WorkloadData.hpp:586</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_queue_descriptor_xhtml_ab9e53258c253442b468f1c94037bada3"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#ab9e53258c253442b468f1c94037bada3">armnn::DepthwiseConvolution2dQueueDescriptor::DepthwiseConvolution2dQueueDescriptor</a></div><div class="ttdeci">DepthwiseConvolution2dQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00214">WorkloadData.hpp:214</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml">armnn::TransposeConvolution2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00539">WorkloadData.hpp:539</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml">armnn::Convolution2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00197">WorkloadData.hpp:197</a></div></div>
<div class="ttc" id="structarmnn_1_1_mem_copy_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">armnn::MemCopyQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00076">WorkloadData.hpp:76</a></div></div>
<div class="ttc" id="structarmnn_1_1_fill_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fill_queue_descriptor.xhtml">armnn::FillQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00164">WorkloadData.hpp:164</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a29fa293fffbf9c6f00cd75db1dc0a52a"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">armnn::LstmQueueDescriptor::m_ForgetGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00431">WorkloadData.hpp:431</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a0428f0a7927f8c29264d9c9a287840da"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a0428f0a7927f8c29264d9c9a287840da">armnn::QueueDescriptor::GetAdditionalInformation</a></div><div class="ttdeci">const T * GetAdditionalInformation() const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00039">WorkloadData.hpp:39</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml"><div class="ttname"><a href="_deprecated_8hpp.xhtml">Deprecated.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a20c10fcb26657477377d07b7b1e13120"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a20c10fcb26657477377d07b7b1e13120">armnn::QLstmQueueDescriptor::m_CellToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_CellToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00593">WorkloadData.hpp:593</a></div></div>
<div class="ttc" id="structarmnn_1_1_fake_quantization_queue_descriptor_xhtml_ad9b3054e90dc8118c9f7146a2a940e1b"><div class="ttname"><a href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml#ad9b3054e90dc8118c9f7146a2a940e1b">armnn::FakeQuantizationQueueDescriptor::m_Max</a></div><div class="ttdeci">const ConstTensorHandle * m_Max</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00340">WorkloadData.hpp:340</a></div></div>
<div class="ttc" id="structarmnn_1_1_slice_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_slice_queue_descriptor.xhtml">armnn::SliceQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00651">WorkloadData.hpp:651</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a17ba1c8bcc71a55a95b2a3913f8cb203"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">armnn::QuantizedLstmQueueDescriptor::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00631">WorkloadData.hpp:631</a></div></div>
<div class="ttc" id="structarmnn_1_1_depth_to_space_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depth_to_space_queue_descriptor.xhtml">armnn::DepthToSpaceQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00656">WorkloadData.hpp:656</a></div></div>
<div class="ttc" id="structarmnn_1_1_l2_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_l2_normalization_queue_descriptor.xhtml">armnn::L2NormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00350">WorkloadData.hpp:350</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_ac668b31de6fb0f19d4c793d5ed3c3316"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac668b31de6fb0f19d4c793d5ed3c3316">armnn::QLstmQueueDescriptor::m_ProjectionBias</a></div><div class="ttdeci">const ConstTensorHandle * m_ProjectionBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00600">WorkloadData.hpp:600</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a20c10fcb26657477377d07b7b1e13120"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a20c10fcb26657477377d07b7b1e13120">armnn::LstmQueueDescriptor::m_CellToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_CellToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00428">WorkloadData.hpp:428</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_queue_descriptor.xhtml">armnn::TransposeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00552">WorkloadData.hpp:552</a></div></div>
<div class="ttc" id="structarmnn_1_1_debug_queue_descriptor_xhtml_a04f1026633579df1913f80db2877ce8c"><div class="ttname"><a href="structarmnn_1_1_debug_queue_descriptor.xhtml#a04f1026633579df1913f80db2877ce8c">armnn::DebugQueueDescriptor::m_Guid</a></div><div class="ttdeci">LayerGuid m_Guid</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00492">WorkloadData.hpp:492</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a6abd491bb99ffe88bd472c1ae5a1ed1a"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">armnn::QueueDescriptor::m_Outputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Outputs</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00031">WorkloadData.hpp:31</a></div></div>
<div class="ttc" id="structarmnn_1_1_strided_slice_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_strided_slice_queue_descriptor.xhtml">armnn::StridedSliceQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00469">WorkloadData.hpp:469</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">armnn::QLstmQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00557">WorkloadData.hpp:557</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml_a96ee5ab4a7d2d8a4634b77d4eb9a949f"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a96ee5ab4a7d2d8a4634b77d4eb9a949f">armnn::BatchNormalizationQueueDescriptor::m_Gamma</a></div><div class="ttdeci">const ConstTensorHandle * m_Gamma</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00311">WorkloadData.hpp:311</a></div></div>
<div class="ttc" id="_descriptors_8hpp_xhtml"><div class="ttname"><a href="_descriptors_8hpp.xhtml">Descriptors.hpp</a></div></div>
<div class="ttc" id="_exceptions_8hpp_xhtml"><div class="ttname"><a href="_exceptions_8hpp.xhtml">Exceptions.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_arg_min_max_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_arg_min_max_queue_descriptor.xhtml">armnn::ArgMinMaxQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00153">WorkloadData.hpp:153</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_ac18c8b8b2039267d8282e91b4162d8aa"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">armnn::QLstmQueueDescriptor::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00590">WorkloadData.hpp:590</a></div></div>
<div class="ttc" id="src_2backends_2backends_common_2_workload_info_8hpp_xhtml"><div class="ttname"><a href="src_2backends_2backends_common_2_workload_info_8hpp.xhtml">WorkloadInfo.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a44eb7524badcca9b2073359e3814c98b"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">armnn::QLstmQueueDescriptor::m_InputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00595">WorkloadData.hpp:595</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml">armnn::BatchNormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00298">WorkloadData.hpp:298</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_ab160eba2493d5fe52185c0986dcb190c"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">armnn::QuantizedLstmQueueDescriptor::m_InputToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00628">WorkloadData.hpp:628</a></div></div>
<div class="ttc" id="structarmnn_1_1_mem_import_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mem_import_queue_descriptor.xhtml">armnn::MemImportQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00084">WorkloadData.hpp:84</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a6e9593869b82984de198fed27f72cdcf"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">armnn::QuantizedLstmQueueDescriptor::m_CellBias</a></div><div class="ttdeci">const ConstTensorHandle * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00640">WorkloadData.hpp:640</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_ac668b31de6fb0f19d4c793d5ed3c3316"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#ac668b31de6fb0f19d4c793d5ed3c3316">armnn::LstmQueueDescriptor::m_ProjectionBias</a></div><div class="ttdeci">const ConstTensorHandle * m_ProjectionBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00435">WorkloadData.hpp:435</a></div></div>
<div class="ttc" id="structarmnn_1_1_convert_fp32_to_bf16_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convert_fp32_to_bf16_queue_descriptor.xhtml">armnn::ConvertFp32ToBf16QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00449">WorkloadData.hpp:449</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_ad9442e26aa79f896da5f404ab825a9c8"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#ad9442e26aa79f896da5f404ab825a9c8">armnn::LstmQueueDescriptor::m_ForgetLayerNormWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_ForgetLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00437">WorkloadData.hpp:437</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about inputs and outputs to a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="structarmnn_1_1_switch_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_switch_queue_descriptor.xhtml">armnn::SwitchQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00529">WorkloadData.hpp:529</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a1dbad32cad5c0437e1272f59fedf52ea"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a1dbad32cad5c0437e1272f59fedf52ea">armnn::LstmQueueDescriptor::m_InputLayerNormWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00436">WorkloadData.hpp:436</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_convolution2d_queue_descriptor_xhtml_a9a8a6e0c6074b895eb2ff9a16e5003a5"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">armnn::TransposeConvolution2dQueueDescriptor::m_Weight</a></div><div class="ttdeci">const ConstTensorHandle * m_Weight</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00546">WorkloadData.hpp:546</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_queue_descriptor_xhtml_aeb542471c225031a9922db3433f40b56"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml#aeb542471c225031a9922db3433f40b56">armnn::DetectionPostProcessQueueDescriptor::m_Anchors</a></div><div class="ttdeci">const ConstTensorHandle * m_Anchors</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00233">WorkloadData.hpp:233</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a5ff4158b1b363b898d0da04c42d37ce0"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">armnn::QLstmQueueDescriptor::m_OutputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00598">WorkloadData.hpp:598</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a4b50e46a6810018f3edecfb68b2a76b3"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">armnn::QueueDescriptor::m_Inputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Inputs</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00030">WorkloadData.hpp:30</a></div></div>
<div class="ttc" id="structarmnn_1_1_pre_compiled_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml">armnn::PreCompiledQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00507">WorkloadData.hpp:507</a></div></div>
<div class="ttc" id="structarmnn_1_1_dequantize_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_dequantize_queue_descriptor.xhtml">armnn::DequantizeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00519">WorkloadData.hpp:519</a></div></div>
<div class="ttc" id="structarmnn_1_1_pooling2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_queue_descriptor.xhtml">armnn::Pooling2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00191">WorkloadData.hpp:191</a></div></div>
<div class="ttc" id="structarmnn_1_1_debug_queue_descriptor_xhtml_ab53d42063d018ffebfceb019b26bf65a"><div class="ttname"><a href="structarmnn_1_1_debug_queue_descriptor.xhtml#ab53d42063d018ffebfceb019b26bf65a">armnn::DebugQueueDescriptor::m_SlotIndex</a></div><div class="ttdeci">unsigned int m_SlotIndex</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00494">WorkloadData.hpp:494</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml_a0ae7224f556b0d008d060f847c8f8901"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#a0ae7224f556b0d008d060f847c8f8901">armnn::BatchNormalizationQueueDescriptor::m_Mean</a></div><div class="ttdeci">const ConstTensorHandle * m_Mean</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00308">WorkloadData.hpp:308</a></div></div>
<div class="ttc" id="structarmnn_1_1_mem_sync_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mem_sync_queue_descriptor.xhtml">armnn::MemSyncQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00089">WorkloadData.hpp:89</a></div></div>
<div class="ttc" id="structarmnn_1_1_mean_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mean_queue_descriptor.xhtml">armnn::MeanQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00275">WorkloadData.hpp:275</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a0e0f66bd03c88f3d2dc666f581d3cf12"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a0e0f66bd03c88f3d2dc666f581d3cf12">armnn::QLstmQueueDescriptor::m_OutputLayerNormWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_OutputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00604">WorkloadData.hpp:604</a></div></div>
<div class="ttc" id="structarmnn_1_1_log_softmax_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_log_softmax_queue_descriptor.xhtml">armnn::LogSoftmaxQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00355">WorkloadData.hpp:355</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_convolution2d_queue_descriptor_xhtml_a1f3f6acdd5436ccf488d5ee3e9e60c02"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">armnn::TransposeConvolution2dQueueDescriptor::m_Bias</a></div><div class="ttdeci">const ConstTensorHandle * m_Bias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00547">WorkloadData.hpp:547</a></div></div>
<div class="ttc" id="include_2armnn_2backends_2_i_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_2backends_2_i_tensor_handle_8hpp.xhtml">ITensorHandle.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a841439e3b8dc157a7368b19c9ecb7d03"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">armnn::QuantizedLstmQueueDescriptor::m_InputToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00630">WorkloadData.hpp:630</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a951b7c90b862138071a298065f16be61"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a951b7c90b862138071a298065f16be61">armnn::LstmQueueDescriptor::m_CellToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_CellToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00427">WorkloadData.hpp:427</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml_addb90eb7f4baa493fce64fdb7f140018"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml#addb90eb7f4baa493fce64fdb7f140018">armnn::BatchNormalizationQueueDescriptor::m_Beta</a></div><div class="ttdeci">const ConstTensorHandle * m_Beta</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00310">WorkloadData.hpp:310</a></div></div>
<div class="ttc" id="structarmnn_1_1_reshape_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reshape_queue_descriptor.xhtml">armnn::ReshapeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00372">WorkloadData.hpp:372</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_ab160eba2493d5fe52185c0986dcb190c"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">armnn::LstmQueueDescriptor::m_InputToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00419">WorkloadData.hpp:419</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a4c27716f61bb68e8ea0bd4e8389ba01a"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">armnn::QLstmQueueDescriptor::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00591">WorkloadData.hpp:591</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a299587d4f3fca029492700f3e2585bd8"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">armnn::QLstmQueueDescriptor::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00588">WorkloadData.hpp:588</a></div></div>
<div class="ttc" id="structarmnn_1_1_debug_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_debug_queue_descriptor.xhtml">armnn::DebugQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00486">WorkloadData.hpp:486</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_unary_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_queue_descriptor.xhtml">armnn::ElementwiseUnaryQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00666">WorkloadData.hpp:666</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml">armnn::DepthwiseConvolution2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00212">WorkloadData.hpp:212</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_queue_descriptor.xhtml">armnn::ActivationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00148">WorkloadData.hpp:148</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_adf8571dd1867ee91082bd005f94f2610"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">armnn::QLstmQueueDescriptor::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00589">WorkloadData.hpp:589</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_ae632fa69e135c7871fcecf4658a0a634"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ae632fa69e135c7871fcecf4658a0a634">armnn::QLstmQueueDescriptor::QLstmQueueDescriptor</a></div><div class="ttdeci">QLstmQueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00559">WorkloadData.hpp:559</a></div></div>
<div class="ttc" id="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin_xhtml_af2f0a8c9eb32861711c0ce30b7986c44"><div class="ttname"><a href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml#af2f0a8c9eb32861711c0ce30b7986c44">armnn::SplitterQueueDescriptor::ViewOrigin::m_Origin</a></div><div class="ttdeci">std::vector&lt; unsigned int &gt; m_Origin</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00109">WorkloadData.hpp:109</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_ab088ef357662bcea45cbd49674ad0ff7"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#ab088ef357662bcea45cbd49674ad0ff7">armnn::QueueDescriptor::QueueDescriptor</a></div><div class="ttdeci">QueueDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00046">WorkloadData.hpp:46</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">armnn::QueueDescriptorWithParameters</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00055">WorkloadData.hpp:55</a></div></div>
<div class="ttc" id="structarmnn_1_1_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_queue_descriptor.xhtml">armnn::NormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00239">WorkloadData.hpp:239</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml_a4c27716f61bb68e8ea0bd4e8389ba01a"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">armnn::LstmQueueDescriptor::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00426">WorkloadData.hpp:426</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="_workload_data_8hpp.xhtml">WorkloadData.hpp</a></li>
    <li class="footer">Generated on Mon May 10 2021 16:39:47 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
