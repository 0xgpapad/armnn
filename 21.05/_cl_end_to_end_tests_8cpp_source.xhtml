<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/cl/test/ClEndToEndTests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">21.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_end_to_end_tests_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClEndToEndTests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_end_to_end_tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/EndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_activation_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/ActivationEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_arg_min_max_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/ArgMinMaxEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_comparison_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/ComparisonEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_concat_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/ConcatEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_depth_to_space_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/DepthToSpaceEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_dequantize_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/DequantizeEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_elementwise_unary_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/ElementwiseUnaryEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_fill_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/FillEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_instance_normalization_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/InstanceNormalizationEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_prelu_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/PreluEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_q_lstm_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/QLstmEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_quantized_lstm_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/QuantizedLstmEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_space_to_depth_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/SpaceToDepthEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_splitter_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/SplitterEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_transpose_convolution2d_end_to_end_test_impl_8hpp.xhtml">backendsCommon/test/TransposeConvolution2dEndToEndTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;boost/test/unit_test.hpp&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<a class="code" href="_output_shape_of_squeeze_8cpp.xhtml#ae3a6cb217a792718f2bd0e8f45e3ca9e">BOOST_AUTO_TEST_SUITE</a>(ClEndToEnd)</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">   28</a></span>&#160;<a class="code" href="namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="namespacearmnn.xhtml">armnn</a>::<a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&gt; <a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a> = {<a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeafaa4524e3df19ada32643ce9a222362b">armnn::Compute::GpuAcc</a>};</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">// Abs</span></div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">   31</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClAbsEndToEndTestFloat32)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    std::vector&lt;float&gt; expectedOutput =</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        1.f, 1.f, 1.f, 1.f, 5.f, 5.f, 5.f, 5.f,</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        3.f, 3.f, 3.f, 3.f, 4.f, 4.f, 4.f, 4.f</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    };</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    ElementwiseUnarySimpleEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                                                             UnaryOperation::Abs,</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                                                             expectedOutput);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">// Constant</span></div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#af9e4a550c50fa5464e9e700195afb59b">   45</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ConstantUsage_Cl_Float32)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    ConstantUsageFloat32Test(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#adadf21486513d1d910c443d8e98930a8">   50</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClConcatEndToEndDim0Test)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    ConcatDim0EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ac881a2e921c709b07d3689db132c3752">   55</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClConcatEndToEndDim0Uint8Test)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    ConcatDim0EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ab94713c52148108fc0dbdfc716b2e89b">   60</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClConcatEndToEndDim1Test)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    ConcatDim1EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#adbe1885d242aa5caa38a2c7db4a30ba7">   65</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClConcatEndToEndDim1Uint8Test)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    ConcatDim1EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a7eabbfb9bc3a3687422d74b1f765ab79">   70</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClConcatEndToEndDim3Test)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    ConcatDim3EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#af4195c5bae75871b500708d050485fec">   75</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClConcatEndToEndDim3Uint8Test)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    ConcatDim3EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">// DepthToSpace</span></div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a27a746f7bc22538b810be0d5e945b26a">   81</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(DephtToSpaceEndToEndNchwFloat32)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a7cf4601d23d9558a0c8b9a5a330ae854">   86</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(DephtToSpaceEndToEndNchwFloat16)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::Float16&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#aca41e6b9e1bda61b09b635c5857aee91">   91</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(DephtToSpaceEndToEndNchwUint8)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a66bf08ef789c18b8a63d0fceaefbeea1">   96</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(DephtToSpaceEndToEndNchwInt16)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::QSymmS16&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a138933084e2ddb38faaa03ea6c435365">  101</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(DephtToSpaceEndToEndNhwcFloat32)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ae15bf71385d1355cc0d85af4d61a008e">  106</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(DephtToSpaceEndToEndNhwcFloat16)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::Float16&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a015b7b281e1718199b6ad08352840823">  111</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(DephtToSpaceEndToEndNhwcUint8)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a756295623f8ac16a2beb184a3030e3aa">  116</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(DephtToSpaceEndToEndNhwcInt16)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    DepthToSpaceEndToEnd&lt;armnn::DataType::QSymmS16&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">// Dequantize</span></div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a3cd60c9b4ecad211eecbf7804799ae95">  122</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(DequantizeEndToEndSimpleTest)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    DequantizeEndToEndSimple&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ad3804af7f4121ef26a388c1c9f81e06b">  127</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(DequantizeEndToEndOffsetTest)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;{</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    DequantizeEndToEndOffset&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#aa1e5fcb835a51b26dbdee6fa3cbf6789">  132</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClStridedSliceInvalidSliceEndToEndTest)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    StridedSliceInvalidSliceEndToEndTest(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a82e56e64a0c132cb9341525e6545a549">  137</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClEluEndToEndTestFloat32)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    EluEndToEndTest&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a9cf5e1abb0549954108a91a7680f7bb5">  142</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClEluEndToEndTestFloat16)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    EluEndToEndTest&lt;armnn::DataType::Float16&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;}</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ad16ec64feb922265cc2d2d5184b4caf3">  147</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClGreaterSimpleEndToEndTest)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;{</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keyword">const</span> std::vector&lt;uint8_t&gt; expectedOutput({ 0, 0, 0, 0,  1, 1, 1, 1,</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                                0, 0, 0, 0,  0, 0, 0, 0 });</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    ComparisonSimpleEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>,</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                                       ComparisonOperation::Greater,</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                                       expectedOutput);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;}</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a66a148d5d9b2fe98e40bb6923e3628d6">  157</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClGreaterSimpleEndToEndUint8Test)</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;{</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keyword">const</span> std::vector&lt;uint8_t&gt; expectedOutput({ 0, 0, 0, 0,  1, 1, 1, 1,</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                                                0, 0, 0, 0,  0, 0, 0, 0 });</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    ComparisonSimpleEndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>,</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                                                               ComparisonOperation::Greater,</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                                               expectedOutput);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#afd9dd28afbd66a741454266cc5ac34de">  167</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClGreaterBroadcastEndToEndTest)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;{</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keyword">const</span> std::vector&lt;uint8_t&gt; expectedOutput({ 0, 1, 0, 0, 0, 1,</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                                1, 1, 1, 1, 1, 1 });</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    ComparisonBroadcastEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>,</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                                                          ComparisonOperation::Greater,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                                          expectedOutput);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a384032e5f87f8b6f6c6a355667777511">  177</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClGreaterBroadcastEndToEndUint8Test)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;{</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keyword">const</span> std::vector&lt;uint8_t&gt; expectedOutput({ 0, 1, 0, 0, 0, 1,</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                                1, 1, 1, 1, 1, 1 });</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    ComparisonBroadcastEndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                                                  ComparisonOperation::Greater,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                                                  expectedOutput);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">// HardSwish</span></div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a7bb11517128956fa999beedbc8092895">  188</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClHardSwishEndToEndTestFloat32)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;{</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    HardSwishEndToEndTest&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a6a060ef4f05affed45d05d865b4510e9">  193</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClHardSwishEndToEndTestFloat16)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;{</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    HardSwishEndToEndTest&lt;armnn::DataType::Float16&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a230c60039e77b3eb54453776cabbba3c">  198</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClHardSwishEndToEndTestQAsymmS8)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;{</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    HardSwishEndToEndTest&lt;armnn::DataType::QAsymmS8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ab06d332da21ba903495870e68f5ab36e">  203</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClHardSwishEndToEndTestQAsymmU8)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;{</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    HardSwishEndToEndTest&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;}</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a05c86b93f8dc6ff6910a7104ccf60bf7">  208</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClHardSwishEndToEndTestQSymmS16)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;{</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    HardSwishEndToEndTest&lt;armnn::DataType::QSymmS16&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;}</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">// InstanceNormalization</span></div><div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a30e1869a83c32625ae058bcc4079044f">  214</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClInstanceNormalizationNhwcEndToEndTest1)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;{</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <a class="code" href="_instance_normalization_end_to_end_test_impl_8cpp.xhtml#ae0bf53a96bad08ac5218f3c3747e5bed">InstanceNormalizationNhwcEndToEndTest1</a>(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a121a9bc9b9006698538565bbad4bd182">  219</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClInstanceNormalizationNchwEndToEndTest1)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;{</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <a class="code" href="_instance_normalization_end_to_end_test_impl_8cpp.xhtml#a120f2896c50cfa77409d16ef6b1628eb">InstanceNormalizationNchwEndToEndTest1</a>(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a5934c7bba06a759d6e3c547f52bcd715">  224</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClInstanceNormalizationNhwcEndToEndTest2)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;{</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <a class="code" href="_instance_normalization_end_to_end_test_impl_8cpp.xhtml#a891c49c919ac2d170b7aa99e23e8871b">InstanceNormalizationNhwcEndToEndTest2</a>(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;}</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a4d77e929e010bdec579b6961e80f101d">  229</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClInstanceNormalizationNchwEndToEndTest2)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;{</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="_instance_normalization_end_to_end_test_impl_8cpp.xhtml#a3e262db2d488773b8824f73c4f6ab145">InstanceNormalizationNchwEndToEndTest2</a>(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;}</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">// Fill</span></div><div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ac85f1870c53f4bb8e550753cd94cbace">  235</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClFillEndToEndTest)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;{</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    FillEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;}</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#acf95ac60128d5ef796ca10235ec4202c">  240</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(RefFillEndToEndTestFloat16)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;{</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    FillEndToEnd&lt;armnn::DataType::Float16&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;}</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a5bb7057999c5044e2ef5a00ded8d170e">  245</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClFillEndToEndTestInt32)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;{</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    FillEndToEnd&lt;armnn::DataType::Signed32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">// Prelu</span></div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#abeb3085ed2748ff60fa81d280433cdac">  251</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClPreluEndToEndFloat32Test)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;{</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    PreluEndToEndNegativeTest&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;}</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ae7b66b7713d999add1781a0bff46213d">  256</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClPreluEndToEndTestUint8)</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;{</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    PreluEndToEndPositiveTest&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;}</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a9bac061b969582ac4b07a5a844f43970">  261</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSpaceToDepthNhwcEndToEndTest1)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;{</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <a class="code" href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#ae2aeba7e1195292ca5a000a81c145629">SpaceToDepthNhwcEndToEndTest1</a>(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;}</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#aa8d891d30e18864f906bce7e04d63632">  266</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSpaceToDepthNchwEndToEndTest1)</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;{</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <a class="code" href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#aa539d7b30c0a8064ab301a61c5a90fed">SpaceToDepthNchwEndToEndTest1</a>(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;}</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a317bb91d45a36d1988d66ae6bbac5654">  271</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSpaceToDepthNhwcEndToEndTest2)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;{</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <a class="code" href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#a2da64f8783ac838e5c4aa76c0d2de8cb">SpaceToDepthNhwcEndToEndTest2</a>(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;}</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a4a95e062480887debcc3f68b1b37de95">  276</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSpaceToDepthNchwEndToEndTest2)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;{</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <a class="code" href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#a00fc587ab0be7b4d988fcc1a9bdf5355">SpaceToDepthNchwEndToEndTest2</a>(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;}</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ae66c69f9e2c1c9aa53733dac2f45db84">  281</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter1dEndToEndTest)</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;{</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    Splitter1dEndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;}</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a773d97486f53ce72f68b1f36b3427cae">  286</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter1dEndToEndUint8Test)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;{</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    Splitter1dEndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;}</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#aa96faae8ee32eb015bd8884c77f2f1b8">  291</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter2dDim0EndToEndTest)</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;{</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    Splitter2dDim0EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;}</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a8ec2ec17071c7ab76f8fdf218a690716">  296</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter2dDim1EndToEndTest)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;{</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    Splitter2dDim1EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;}</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a9f7c738288eae9770122cf27007b717d">  301</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter2dDim0EndToEndUint8Test)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;{</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    Splitter2dDim0EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;}</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a13732509010082fbddcb5d9a5b5cde79">  306</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter2dDim1EndToEndUint8Test)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;{</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    Splitter2dDim1EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;}</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a84201697f24396c15bd8ba1cecdb92de">  311</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter3dDim0EndToEndTest)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;{</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    Splitter3dDim0EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;}</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ab878170ec2078f1aee19a7492b79288e">  316</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter3dDim1EndToEndTest)</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;{</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    Splitter3dDim1EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;}</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a348af5c26bd7034ef2cbe23c1b427a09">  321</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter3dDim2EndToEndTest)</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;{</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    Splitter3dDim2EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;}</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a9e23570667449f13ff9b0d73b4eddb9c">  326</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter3dDim0EndToEndUint8Test)</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;{</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    Splitter3dDim0EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;}</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a2b083bca2753c9d7b66d96e12075da65">  331</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter3dDim1EndToEndUint8Test)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;{</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    Splitter3dDim1EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;}</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ae5ca5b5ee9429f0472607db8964a339a">  336</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter3dDim2EndToEndUint8Test)</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;{</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    Splitter3dDim2EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;}</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#af8068721602d1532d73bb6223ea8d5f8">  341</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter4dDim0EndToEndTest)</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;{</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    Splitter4dDim0EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;}</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a7e8947c74be284d5dd74a289c58af68d">  346</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter4dDim1EndToEndTest)</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;{</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    Splitter4dDim1EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;}</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ae4c3225e6d8b8f5f578d2d9a2d36a348">  351</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter4dDim2EndToEndTest)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;{</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    Splitter4dDim2EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;}</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a4bd21d248c9f2e833c5be91ecdecf4f3">  356</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter4dDim3EndToEndTest)</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;{</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    Splitter4dDim3EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;}</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a07d17c450f7c3bb2b94d6a6fa13a5005">  361</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter4dDim0EndToEndUint8Test)</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;{</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    Splitter4dDim0EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;}</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ac6d678437fd107f0f0f63849b7f01a8f">  366</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter4dDim1EndToEndUint8Test)</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;{</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    Splitter4dDim1EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;}</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ad56d5b9cd3886bb1738fcec93da4065f">  371</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter4dDim2EndToEndUint8Test)</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;{</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    Splitter4dDim2EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;}</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a7a3032266602e55d768c336995ff9cd3">  376</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClSplitter4dDim3EndToEndUint8Test)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;{</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    Splitter4dDim3EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;}</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">// TransposeConvolution2d</span></div><div class="line"><a name="l00382"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a0871efa4c42d94a241b1517d2dbbb054">  382</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClTransposeConvolution2dEndToEndFloatNchwTest)</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;{</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    TransposeConvolution2dEndToEnd&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;}</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ac351d356a15e530ca682637821549b9e">  388</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClTransposeConvolution2dEndToEndUint8NchwTest)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;{</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    TransposeConvolution2dEndToEnd&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;}</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#aae129cfeea362a4b84720f1d0d218644">  394</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClTransposeConvolution2dEndToEndFloatNhwcTest)</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;{</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    TransposeConvolution2dEndToEnd&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;}</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a3437daa786ee269b1be5ae42808b2964">  400</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClTransposeConvolution2dEndToEndUint8NhwcTest)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;{</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    TransposeConvolution2dEndToEnd&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>, <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;}</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ab4a7fa5e31652c09d615183e66290207">  406</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClQuantizedLstmEndToEndTest)</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;{</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <a class="code" href="_quantized_lstm_end_to_end_test_impl_8cpp.xhtml#a81b5bf2355bdbac79af06c1bc97adb52">QuantizedLstmEndToEnd</a>(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;}</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="comment">// ArgMinMax</span></div><div class="line"><a name="l00412"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a36b4329be6b7b321e938088fe6c67ffa">  412</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMaxSimpleTest)</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;{</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    ArgMaxEndToEndSimple&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;}</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ae23b252df6b49de357a243039064b64b">  417</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMinSimpleTest)</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;{</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    ArgMinEndToEndSimple&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;}</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a8974367da1a8cefe5fb6981f7671573a">  422</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMaxAxis0Test)</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;{</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    ArgMaxAxis0EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;}</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a47746b44435e34f0cf74e1f67b465310">  427</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMinAxis0Test)</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;{</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    ArgMinAxis0EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;}</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a4490bb8dd53dceeec1c9d04ecc09e866">  432</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMaxAxis1Test)</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;{</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    ArgMaxAxis1EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;}</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#af673daec4f9080a376a7fb4cacee23c6">  437</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMinAxis1Test)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;{</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    ArgMinAxis1EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;}</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a6f8bf6f18d4cdd5a6b0c95eef38ee070">  442</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMaxAxis2Test)</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;{</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    ArgMaxAxis2EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;}</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a75be8f1698ad21866ffda8e6db8d2568">  447</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMinAxis2Test)</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;{</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    ArgMinAxis2EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;}</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a6475f5d80ca1c414a120bc7c7885aefe">  452</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMaxAxis3Test)</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;{</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    ArgMaxAxis3EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;}</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a465b79ef1049aa10566a402094c21db0">  457</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMinAxis3Test)</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;{</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    ArgMinAxis3EndToEnd&lt;armnn::DataType::Float32&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;}</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a4d1adbf93ddb3034627c3ddbac6c5c6d">  462</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMaxSimpleTestQAsymmU8)</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;{</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    ArgMaxEndToEndSimple&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;}</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a3ae8af8e2bd8b2c2c9b608a068951a9f">  467</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMinSimpleTestQAsymmU8)</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;{</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    ArgMinEndToEndSimple&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;}</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a6b8dd70a34fc32d891b110f0b65b82aa">  472</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMaxAxis0TestQAsymmU8)</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;{</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    ArgMaxAxis0EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;}</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a6214fca8b293f47938dd17df19c88e4f">  477</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMinAxis0TestQAsymmU8)</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;{</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    ArgMinAxis0EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;}</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#aaed9cc32e90ffbcd1b2e980e028a4e15">  482</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMaxAxis1TestQAsymmU8)</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;{</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    ArgMaxAxis1EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;}</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ae44905590838aee67830dac93bc2a3a4">  487</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMinAxis1TestQAsymmU8)</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;{</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    ArgMinAxis1EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;}</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a3f2b1edbec90ec08c4eaa360964ba0c7">  492</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMaxAxis2TestQAsymmU8)</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;{</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    ArgMaxAxis2EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;}</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#a57b3a52fa851913f936087133b52290c">  497</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMinAxis2TestQAsymmU8)</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;{</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    ArgMinAxis2EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;}</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div><div class="line"><a name="l00502"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#ae69d879ffb369f62923e739db3d3a136">  502</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMaxAxis3TestQAsymmU8)</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;{</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    ArgMaxAxis3EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;}</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div><div class="line"><a name="l00507"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#acc4510fd3144b5c26a9ff5893de4078c">  507</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClArgMinAxis3TestQAsymmU8)</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;{</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    ArgMinAxis3EndToEnd&lt;armnn::DataType::QAsymmU8&gt;(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;}</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno"><a class="line" href="_cl_end_to_end_tests_8cpp.xhtml#aae41877f51d38b1ff36f235799ac3216">  512</a></span>&#160;<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a>(ClQLstmEndToEndTest)</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;{</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <a class="code" href="_q_lstm_end_to_end_test_impl_8cpp.xhtml#a171b68282d4a922144ae3a6b0a27db17">QLstmEndToEnd</a>(<a class="code" href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a>);</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;}</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<a class="code" href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END</a>()</div><div class="ttc" id="_output_shape_of_squeeze_8cpp_xhtml_ae3a6cb217a792718f2bd0e8f45e3ca9e"><div class="ttname"><a href="_output_shape_of_squeeze_8cpp.xhtml#ae3a6cb217a792718f2bd0e8f45e3ca9e">BOOST_AUTO_TEST_SUITE</a></div><div class="ttdeci">BOOST_AUTO_TEST_SUITE(TensorflowLiteParser)</div></div>
<div class="ttc" id="_space_to_depth_end_to_end_test_impl_8cpp_xhtml_aa539d7b30c0a8064ab301a61c5a90fed"><div class="ttname"><a href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#aa539d7b30c0a8064ab301a61c5a90fed">SpaceToDepthNchwEndToEndTest1</a></div><div class="ttdeci">void SpaceToDepthNchwEndToEndTest1(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_space_to_depth_end_to_end_test_impl_8cpp_source.xhtml#l00129">SpaceToDepthEndToEndTestImpl.cpp:129</a></div></div>
<div class="ttc" id="_elementwise_unary_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_elementwise_unary_end_to_end_test_impl_8hpp.xhtml">ElementwiseUnaryEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="_instance_normalization_end_to_end_test_impl_8cpp_xhtml_ae0bf53a96bad08ac5218f3c3747e5bed"><div class="ttname"><a href="_instance_normalization_end_to_end_test_impl_8cpp.xhtml#ae0bf53a96bad08ac5218f3c3747e5bed">InstanceNormalizationNhwcEndToEndTest1</a></div><div class="ttdeci">void InstanceNormalizationNhwcEndToEndTest1(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_instance_normalization_end_to_end_test_impl_8cpp_source.xhtml#l00098">InstanceNormalizationEndToEndTestImpl.cpp:98</a></div></div>
<div class="ttc" id="_instance_normalization_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_instance_normalization_end_to_end_test_impl_8hpp.xhtml">InstanceNormalizationEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="_dequantize_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_dequantize_end_to_end_test_impl_8hpp.xhtml">DequantizeEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="_instance_normalization_end_to_end_test_impl_8cpp_xhtml_a120f2896c50cfa77409d16ef6b1628eb"><div class="ttname"><a href="_instance_normalization_end_to_end_test_impl_8cpp.xhtml#a120f2896c50cfa77409d16ef6b1628eb">InstanceNormalizationNchwEndToEndTest1</a></div><div class="ttdeci">void InstanceNormalizationNchwEndToEndTest1(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_instance_normalization_end_to_end_test_impl_8cpp_source.xhtml#l00168">InstanceNormalizationEndToEndTestImpl.cpp:168</a></div></div>
<div class="ttc" id="_prelu_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_prelu_end_to_end_test_impl_8hpp.xhtml">PreluEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_end_to_end_test_impl_8hpp.xhtml">EndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__software__tools_8dox_source.xhtml#l00006">01_00_software_tools.dox:6</a></div></div>
<div class="ttc" id="_q_lstm_end_to_end_test_impl_8cpp_xhtml_a171b68282d4a922144ae3a6b0a27db17"><div class="ttname"><a href="_q_lstm_end_to_end_test_impl_8cpp.xhtml#a171b68282d4a922144ae3a6b0a27db17">QLstmEndToEnd</a></div><div class="ttdeci">void QLstmEndToEnd(const std::vector&lt; armnn::BackendId &gt; &amp;backends)</div><div class="ttdef"><b>Definition:</b> <a href="_q_lstm_end_to_end_test_impl_8cpp_source.xhtml#l00036">QLstmEndToEndTestImpl.cpp:36</a></div></div>
<div class="ttc" id="_arg_min_max_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_arg_min_max_end_to_end_test_impl_8hpp.xhtml">ArgMinMaxEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="_space_to_depth_end_to_end_test_impl_8cpp_xhtml_a2da64f8783ac838e5c4aa76c0d2de8cb"><div class="ttname"><a href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#a2da64f8783ac838e5c4aa76c0d2de8cb">SpaceToDepthNhwcEndToEndTest2</a></div><div class="ttdeci">void SpaceToDepthNhwcEndToEndTest2(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_space_to_depth_end_to_end_test_impl_8cpp_source.xhtml#l00160">SpaceToDepthEndToEndTestImpl.cpp:160</a></div></div>
<div class="ttc" id="_space_to_depth_end_to_end_test_impl_8cpp_xhtml_ae2aeba7e1195292ca5a000a81c145629"><div class="ttname"><a href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#ae2aeba7e1195292ca5a000a81c145629">SpaceToDepthNhwcEndToEndTest1</a></div><div class="ttdeci">void SpaceToDepthNhwcEndToEndTest1(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_space_to_depth_end_to_end_test_impl_8cpp_source.xhtml#l00098">SpaceToDepthEndToEndTestImpl.cpp:98</a></div></div>
<div class="ttc" id="_space_to_depth_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_space_to_depth_end_to_end_test_impl_8hpp.xhtml">SpaceToDepthEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00147">BackendId.hpp:147</a></div></div>
<div class="ttc" id="_space_to_depth_end_to_end_test_impl_8cpp_xhtml_a00fc587ab0be7b4d988fcc1a9bdf5355"><div class="ttname"><a href="_space_to_depth_end_to_end_test_impl_8cpp.xhtml#a00fc587ab0be7b4d988fcc1a9bdf5355">SpaceToDepthNchwEndToEndTest2</a></div><div class="ttdeci">void SpaceToDepthNchwEndToEndTest2(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_space_to_depth_end_to_end_test_impl_8cpp_source.xhtml#l00191">SpaceToDepthEndToEndTestImpl.cpp:191</a></div></div>
<div class="ttc" id="_quantized_lstm_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_quantized_lstm_end_to_end_test_impl_8hpp.xhtml">QuantizedLstmEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="_fill_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_fill_end_to_end_test_impl_8hpp.xhtml">FillEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="_concat_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_concat_end_to_end_test_impl_8hpp.xhtml">ConcatEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae2f04a162585c0a5222a537efd5456aeafaa4524e3df19ada32643ce9a222362b"><div class="ttname"><a href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeafaa4524e3df19ada32643ce9a222362b">armnn::Compute::GpuAcc</a></div><div class="ttdoc">GPU Execution: OpenCL: ArmCompute. </div></div>
<div class="ttc" id="_profiler_tests_8cpp_xhtml_af7f71af5c6c124222dd1c42c5df892f4"><div class="ttname"><a href="_profiler_tests_8cpp.xhtml#af7f71af5c6c124222dd1c42c5df892f4">BOOST_AUTO_TEST_SUITE_END</a></div><div class="ttdeci">BOOST_AUTO_TEST_SUITE_END()</div></div>
<div class="ttc" id="_quantized_lstm_end_to_end_test_impl_8cpp_xhtml_a81b5bf2355bdbac79af06c1bc97adb52"><div class="ttname"><a href="_quantized_lstm_end_to_end_test_impl_8cpp.xhtml#a81b5bf2355bdbac79af06c1bc97adb52">QuantizedLstmEndToEnd</a></div><div class="ttdeci">void QuantizedLstmEndToEnd(const std::vector&lt; armnn::BackendId &gt; &amp;backends)</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_end_to_end_test_impl_8cpp_source.xhtml#l00181">QuantizedLstmEndToEndTestImpl.cpp:181</a></div></div>
<div class="ttc" id="_splitter_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_splitter_end_to_end_test_impl_8hpp.xhtml">SplitterEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="_q_lstm_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_q_lstm_end_to_end_test_impl_8hpp.xhtml">QLstmEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="_comparison_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_comparison_end_to_end_test_impl_8hpp.xhtml">ComparisonEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="_cl_end_to_end_tests_8cpp_xhtml_ab59caffe2ee6be46c08766c055420f17"><div class="ttname"><a href="_cl_end_to_end_tests_8cpp.xhtml#ab59caffe2ee6be46c08766c055420f17">defaultBackends</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; defaultBackends</div><div class="ttdef"><b>Definition:</b> <a href="_cl_end_to_end_tests_8cpp_source.xhtml#l00028">ClEndToEndTests.cpp:28</a></div></div>
<div class="ttc" id="_activation_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_activation_end_to_end_test_impl_8hpp.xhtml">ActivationEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="_depth_to_space_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_depth_to_space_end_to_end_test_impl_8hpp.xhtml">DepthToSpaceEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="_cl_end_to_end_tests_8cpp_xhtml_a6594740810a9a6fc5781649bec99784b"><div class="ttname"><a href="_cl_end_to_end_tests_8cpp.xhtml#a6594740810a9a6fc5781649bec99784b">BOOST_AUTO_TEST_CASE</a></div><div class="ttdeci">BOOST_AUTO_TEST_CASE(ClAbsEndToEndTestFloat32)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_end_to_end_tests_8cpp_source.xhtml#l00031">ClEndToEndTests.cpp:31</a></div></div>
<div class="ttc" id="_instance_normalization_end_to_end_test_impl_8cpp_xhtml_a891c49c919ac2d170b7aa99e23e8871b"><div class="ttname"><a href="_instance_normalization_end_to_end_test_impl_8cpp.xhtml#a891c49c919ac2d170b7aa99e23e8871b">InstanceNormalizationNhwcEndToEndTest2</a></div><div class="ttdeci">void InstanceNormalizationNhwcEndToEndTest2(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_instance_normalization_end_to_end_test_impl_8cpp_source.xhtml#l00239">InstanceNormalizationEndToEndTestImpl.cpp:239</a></div></div>
<div class="ttc" id="_transpose_convolution2d_end_to_end_test_impl_8hpp_xhtml"><div class="ttname"><a href="_transpose_convolution2d_end_to_end_test_impl_8hpp.xhtml">TransposeConvolution2dEndToEndTestImpl.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a></div></div>
<div class="ttc" id="_instance_normalization_end_to_end_test_impl_8cpp_xhtml_a3e262db2d488773b8824f73c4f6ab145"><div class="ttname"><a href="_instance_normalization_end_to_end_test_impl_8cpp.xhtml#a3e262db2d488773b8824f73c4f6ab145">InstanceNormalizationNchwEndToEndTest2</a></div><div class="ttdeci">void InstanceNormalizationNchwEndToEndTest2(const std::vector&lt; armnn::BackendId &gt; &amp;defaultBackends)</div><div class="ttdef"><b>Definition:</b> <a href="_instance_normalization_end_to_end_test_impl_8cpp_source.xhtml#l00310">InstanceNormalizationEndToEndTestImpl.cpp:310</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_1ad86c6d39ab715a831555571b9e98a5.xhtml">cl</a></li><li class="navelem"><a class="el" href="dir_02bab2737bbb2fb3882a0be567244fbf.xhtml">test</a></li><li class="navelem"><a class="el" href="_cl_end_to_end_tests_8cpp.xhtml">ClEndToEndTests.cpp</a></li>
    <li class="footer">Generated on Mon May 10 2021 16:39:48 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
